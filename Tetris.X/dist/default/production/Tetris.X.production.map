Microchip MPLAB XC8 Compiler V1.43 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.43\dat\en_msgs.txt -cs \
  -h+dist/default/production\Tetris.X.production.sym \
  --cmf=dist/default/production\Tetris.X.production.cmf -z -Q18F4550 \
  -oC:\Users\grego\AppData\Local\Temp\scps.2 \
  -Mdist/default/production/Tetris.X.production.map -E1 -ver=XC8 \
  -ASTACK=074h-07ffh -pstack=STACK -ACODE=00h-07FFFh -ACONST=00h-07FFFh \
  -ASMALLCONST=0800h-08FFhx120 -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-07FFh -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ABANK6=0600h-06FFh -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\grego\AppData\Local\Temp\scps.obj \
  dist/default/production\Tetris.X.production.obj 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\grego\AppData\Local\Temp\scps.obj
                init                                  E        E        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\Tetris.X.production.obj
                intcode                               8        8        6        4       0
                temp                                 43       43        1        1       1
                mediumconst                        772E     772E      8D2     3B97       0
                intcode_body                        3C8      3C8       9A        4       0
                text13                              702      702       14        4       0
                text12                              64A      64A       36        4       0
                text11                              462      462       6E        4       0
                text10                              30A      30A       BE        4       0
                text9                               57E      57E       48        4       0
                text8                               15A      15A       E4        4       0
                text7                               23E      23E       CC        4       0
                text6                               608      608       42        4       0
                text5                               6B2      6B2       20        4       0
                text4                               6D2      6D2       1C        4       0
                text3                               52C      52C       52        4       0
                text2                               5C6      5C6       42        4       0
                text1                                12       12      148        4       0
                text0                               4D0      4D0       5C        4       0
                cstackCOMRAM                          1        1       2C        1       1
                cstackBANK0                          60       60       14       60       1
                dataCOMRAM                           2D       2D       14        1       1
                bssCOMRAM                            41       41        2        1       1
                cinit                               680      680       32        4       0
                idataCOMRAM                         6EE      6EE       14        4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8        6         0
                init                                  E        E        4         0
                reset_vec                             0        0        4         0
                intcode_body                        3C8      3C8       9A         0
                text13                              702      702       14         0
                text12                              64A      64A       36         0
                text11                              462      462       6E         0
                text10                              30A      30A       BE         0
                text9                               57E      57E       48         0
                text8                               15A      15A       E4         0
                text7                               23E      23E       CC         0
                text6                               608      608       42         0
                text5                               6B2      6B2       20         0
                text4                               6D2      6D2       1C         0
                text3                               52C      52C       52         0
                text2                               5C6      5C6       42         0
                text1                                12       12      148         0
                text0                               4D0      4D0       5C         0
                cinit                               680      680       32         0
                idataCOMRAM                         6EE      6EE       14         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    
                mediumconst                        772E     772E      8D2         0

        CLASS   COMRAM         
                temp                                 43       43        1         1
                cstackCOMRAM                          1        1       2C         1
                dataCOMRAM                           2D       2D       14         1
                bssCOMRAM                            41       41        2         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       14         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000043  000044         1       1  COMRAM  
                intcode                        000008  00070E  000716         4       0  CODE    
                cstackBANK0                    000060  000014  000074        60       1  BANK0   
                mediumconst                    00772E  0008D2  008000      3B97       0  MEDIUMCO
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000074-0000FF               8C
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           000044-00005F               1C
                         000074-0007FF              78C
        CODE             000004-000007                4
                         000716-00772D             7018
        COMRAM           000044-00005F               1C
        CONST            000004-000007                4
                         000716-00772D             7018
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000800-00772D             6F2E
        RAM              000074-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000800-00772D              100
        STACK            000074-0007FF              78C

                                  Symbol Table

?_R0Value                   cstackCOMRAM 000013
?___lwdiv                   cstackCOMRAM 000013
?___lwmod                   cstackCOMRAM 00001A
?_sprintf                   cstackCOMRAM 00001F
_ADCON0                     (abs)        000FC2
_ADCON0bits                 (abs)        000FC2
_ADCON1                     (abs)        000FC1
_ADCON2bits                 (abs)        000FC0
_ADRES                      (abs)        000FC3
_Font3x6                    mediumconst  007F2F
_Font8x8                    mediumconst  00772F
_INTCONbits                 (abs)        000FF2
_ISR                        intcode      000008
_LATBbits                   (abs)        000F8A
_LATD                       (abs)        000F8C
_PIE1bits                   (abs)        000F9D
_PIR1bits                   (abs)        000F9E
_PORTA                      (abs)        000F80
_PORTB                      (abs)        000F81
_PORTD                      (abs)        000F83
_PORTEbits                  (abs)        000F84
_R0Value                    text13       000702
_TRISA                      (abs)        000F92
_TRISB                      (abs)        000F93
_TRISD                      (abs)        000F95
__CFG_FOSC$HS               (abs)        000000
__CFG_LVP$OFF               (abs)        000000
__CFG_WDT$OFF               (abs)        000000
__HRAM                      (abs)        000000
__Habs1                     abs1         000000
__Hbank0                    bank0        000000
__Hbank1                    bank1        000000
__Hbank2                    bank2        000000
__Hbank3                    bank3        000000
__Hbank4                    bank4        000000
__Hbank5                    bank5        000000
__Hbank6                    bank6        000000
__Hbank7                    bank7        000000
__Hbigbss                   bigbss       000000
__Hbigdata                  bigdata      000000
__Hbigram                   bigram       000000
__Hbss                      bss          000000
__HbssCOMRAM                bssCOMRAM    000000
__Hcinit                    cinit        000000
__Hclrtext                  clrtext      000000
__Hcomram                   comram       000000
__Hconfig                   config       30000E
__Hconst                    const        000000
__HcstackBANK0              cstackBANK0  000000
__HcstackCOMRAM             cstackCOMRAM 000000
__Hdata                     data         000000
__HdataCOMRAM               dataCOMRAM   000000
__Heeprom_data              eeprom_data  000000
__Hfarbss                   farbss       000000
__Hfardata                  fardata      000000
__Hibigdata                 ibigdata     000000
__Hidata                    idata        000000
__HidataCOMRAM              idataCOMRAM  000000
__Hidloc                    idloc        200008
__Hifardata                 ifardata     000000
__Hinit                     init         000012
__Hintcode                  intcode      00000E
__Hintcode_body             intcode_body 000000
__Hintcodelo                intcodelo    00000E
__Hintentry                 intentry     000000
__Hintret                   intret       000000
__Hintsave_regs             intsave_regs 000000
__Hirdata                   irdata       000000
__Hmediumconst              mediumconst  008000
__HnvFARRAM                 nvFARRAM     000000
__Hnvbit                    nvbit        000000
__Hnvrram                   nvrram       000000
__Hparam                    rparam       000000
__Hpowerup                  powerup      00000E
__Hram                      ram          000000
__Hramtop                   ramtop       000800
__Hrbit                     rbit         000000
__Hrbss                     rbss         000000
__Hrdata                    rdata        000000
__Hreset_vec                reset_vec    000004
__Hrparam                   rparam       000000
__Hsfr                      sfr          000000
__Hsmallconst               smallconst   000000
__Hspace_0                  (abs)        30000E
__Hspace_1                  (abs)        000074
__Hspace_2                  (abs)        000000
__Hstack                    stack        000000
__Hstruct                   struct       000000
__Htemp                     temp         000044
__Htext                     text         000000
__Htext0                    text0        000000
__Htext1                    text1        000000
__Htext10                   text10       000000
__Htext11                   text11       000000
__Htext12                   text12       000000
__Htext13                   text13       000000
__Htext2                    text2        000000
__Htext3                    text3        000000
__Htext4                    text4        000000
__Htext5                    text5        000000
__Htext6                    text6        000000
__Htext7                    text7        000000
__Htext8                    text8        000000
__Htext9                    text9        000000
__LRAM                      (abs)        000001
__Labs1                     abs1         000000
__Lbank0                    bank0        000000
__Lbank1                    bank1        000000
__Lbank2                    bank2        000000
__Lbank3                    bank3        000000
__Lbank4                    bank4        000000
__Lbank5                    bank5        000000
__Lbank6                    bank6        000000
__Lbank7                    bank7        000000
__Lbigbss                   bigbss       000000
__Lbigdata                  bigdata      000000
__Lbigram                   bigram       000000
__Lbss                      bss          000000
__LbssCOMRAM                bssCOMRAM    000000
__Lcinit                    cinit        000000
__Lclrtext                  clrtext      000000
__Lcomram                   comram       000000
__Lconfig                   config       300000
__Lconst                    const        000000
__LcstackBANK0              cstackBANK0  000000
__LcstackCOMRAM             cstackCOMRAM 000000
__Ldata                     data         000000
__LdataCOMRAM               dataCOMRAM   000000
__Leeprom_data              eeprom_data  000000
__Lfarbss                   farbss       000000
__Lfardata                  fardata      000000
__Libigdata                 ibigdata     000000
__Lidata                    idata        000000
__LidataCOMRAM              idataCOMRAM  000000
__Lidloc                    idloc        200000
__Lifardata                 ifardata     000000
__Linit                     init         00000E
__Lintcode                  intcode      000008
__Lintcode_body             intcode_body 000000
__Lintcodelo                intcodelo    00000E
__Lintentry                 intentry     000000
__Lintret                   intret       000000
__Lintsave_regs             intsave_regs 000000
__Lirdata                   irdata       000000
__Lmediumconst              mediumconst  00772E
__LnvFARRAM                 nvFARRAM     000000
__Lnvbit                    nvbit        000000
__Lnvrram                   nvrram       000000
__Lparam                    rparam       000000
__Lpowerup                  powerup      00000E
__Lram                      ram          000000
__Lramtop                   ramtop       000800
__Lrbit                     rbit         000000
__Lrbss                     rbss         000000
__Lrdata                    rdata        000000
__Lreset_vec                reset_vec    000000
__Lrparam                   rparam       000000
__Lsfr                      sfr          000000
__Lsmallconst               smallconst   000000
__Lspace_0                  (abs)        000000
__Lspace_1                  (abs)        000000
__Lspace_2                  (abs)        000000
__Lstack                    stack        000000
__Lstruct                   struct       000000
__Ltemp                     temp         000043
__Ltext                     text         000000
__Ltext0                    text0        000000
__Ltext1                    text1        000000
__Ltext10                   text10       000000
__Ltext11                   text11       000000
__Ltext12                   text12       000000
__Ltext13                   text13       000000
__Ltext2                    text2        000000
__Ltext3                    text3        000000
__Ltext4                    text4        000000
__Ltext5                    text5        000000
__Ltext6                    text6        000000
__Ltext7                    text7        000000
__Ltext8                    text8        000000
__Ltext9                    text9        000000
__S0                        (abs)        30000E
__S1                        (abs)        000074
__S2                        (abs)        000000
___inthi_sp                 stack        000000
___intlo_sp                 stack        000000
___lwdiv                    text3        00052C
___lwdiv@counter            cstackCOMRAM 000017
___lwdiv@dividend           cstackCOMRAM 000013
___lwdiv@divisor            cstackCOMRAM 000015
___lwdiv@quotient           cstackCOMRAM 000018
___lwmod                    text2        0005C6
___lwmod@counter            cstackCOMRAM 00001E
___lwmod@dividend           cstackCOMRAM 00001A
___lwmod@divisor            cstackCOMRAM 00001C
___param_bank               (abs)        000000
___rparam_used              (abs)        000001
___sp                       stack        000000
__accesstop                 (abs)        000060
__activetblptr              (abs)        000002
__end_of_Font3x6            mediumconst  007FF2
__end_of_Font8x8            mediumconst  007F2F
__end_of_ISR                intcode_body 000462
__end_of_R0Value            text13       000716
__end_of___lwdiv            text3        00057E
__end_of___lwmod            text2        000608
__end_of__initialization    cinit        0006A4
__end_of_dpowers            mediumconst  007FFC
__end_of_glcd_FillScreen    text11       0004D0
__end_of_glcd_Init          text10       0003C8
__end_of_glcd_SetCursor     text9        0005C6
__end_of_glcd_WriteByte     text12       000680
__end_of_glcd_WriteChar3x6  text8        00023E
__end_of_glcd_WriteChar8X8  text7        00030A
__end_of_glcd_WriteString   text6        00064A
__end_of_glcd_text_write    text5        0006D2
__end_of_main               text0        00052C
__end_of_setupADC           text4        0006EE
__end_of_sprintf            text1        00015A
__initialization            cinit        000680
__mediumconst               mediumconst  00772E
__pbssCOMRAM                bssCOMRAM    000041
__pcinit                    cinit        000680
__pcstackBANK0              cstackBANK0  000060
__pcstackCOMRAM             cstackCOMRAM 000001
__pdataCOMRAM               dataCOMRAM   00002D
__pidataCOMRAM              idataCOMRAM  0006EE
__pintcode                  intcode      000008
__pintcode_body             intcode_body 0003C8
__pmediumconst              mediumconst  00772E
__ptext0                    text0        0004D0
__ptext1                    text1        000012
__ptext10                   text10       00030A
__ptext11                   text11       000462
__ptext12                   text12       00064A
__ptext13                   text13       000702
__ptext2                    text2        0005C6
__ptext3                    text3        00052C
__ptext4                    text4        0006D2
__ptext5                    text5        0006B2
__ptext6                    text6        000608
__ptext7                    text7        00023E
__ptext8                    text8        00015A
__ptext9                    text9        00057E
__ramtop                    ramtop       000800
__size_of_ISR               (abs)        000000
__size_of_R0Value           (abs)        000000
__size_of___lwdiv           (abs)        000000
__size_of___lwmod           (abs)        000000
__size_of_glcd_FillScreen   (abs)        000000
__size_of_glcd_Init         (abs)        000000
__size_of_glcd_SetCursor    (abs)        000000
__size_of_glcd_WriteByte    (abs)        000000
__size_of_glcd_WriteChar3x6 (abs)        000000
__size_of_glcd_WriteChar8X8 (abs)        000000
__size_of_glcd_WriteString  (abs)        000000
__size_of_glcd_text_write   (abs)        000000
__size_of_main              (abs)        000000
__size_of_setupADC          (abs)        000000
__size_of_sprintf           (abs)        000000
__smallconst                smallconst   000000
_dpowers                    mediumconst  007FF2
_glcd_FillScreen            text11       000462
_glcd_Init                  text10       00030A
_glcd_SetCursor             text9        00057E
_glcd_WriteByte             text12       00064A
_glcd_WriteChar3x6          text8        00015A
_glcd_WriteChar8X8          text7        00023E
_glcd_WriteString           text6        000608
_glcd_text_write            text5        0006B2
_main                       text0        0004D0
_setupADC                   text4        0006D2
_sprintf                    text1        000012
_x                          bssCOMRAM    000042
_y                          bssCOMRAM    000041
btemp                       temp         000043
end_of_initialization       cinit        0006A4
glcd_FillScreen@color       cstackCOMRAM 000015
glcd_FillScreen@i           cstackCOMRAM 000017
glcd_FillScreen@j           cstackCOMRAM 000016
glcd_Init@mode              cstackCOMRAM 000019
glcd_SetCursor@side         cstackCOMRAM 000016
glcd_SetCursor@xpos         cstackCOMRAM 000017
glcd_SetCursor@ypos         cstackCOMRAM 000015
glcd_WriteByte@data         cstackCOMRAM 000013
glcd_WriteByte@side         cstackCOMRAM 000014
glcd_WriteChar3x6@ch        cstackCOMRAM 000019
glcd_WriteChar3x6@color     cstackCOMRAM 000015
glcd_WriteChar3x6@i         cstackCOMRAM 00001A
glcd_WriteChar3x6@side      cstackCOMRAM 00001B
glcd_WriteChar3x6@xpos      cstackCOMRAM 000018
glcd_WriteChar8X8@ch        cstackCOMRAM 000018
glcd_WriteChar8X8@chr       cstackCOMRAM 000019
glcd_WriteChar8X8@color     cstackCOMRAM 000015
glcd_WriteChar8X8@i         cstackCOMRAM 00001C
glcd_WriteChar8X8@side      cstackCOMRAM 00001D
glcd_WriteChar8X8@xpos      cstackCOMRAM 00001B
glcd_WriteString@color      cstackCOMRAM 000021
glcd_WriteString@font       cstackCOMRAM 000020
glcd_WriteString@str        cstackCOMRAM 00001E
glcd_text_write@str         cstackCOMRAM 000022
glcd_text_write@x           cstackCOMRAM 000024
glcd_text_write@y           cstackCOMRAM 000025
int$flags                   temp         000043
int_func                    intcode_body 0003C8
intlevel0                   text         000000
intlevel1                   text         000000
intlevel2                   text         000000
intlevel3                   text         000000
main@F4119                  dataCOMRAM   00002D
main@str                    cstackBANK0  000060
sprintf@ap                  cstackCOMRAM 000026
sprintf@c                   cstackCOMRAM 00002C
sprintf@f                   cstackCOMRAM 000021
sprintf@flag                cstackCOMRAM 000028
sprintf@prec                cstackCOMRAM 000029
sprintf@sp                  cstackCOMRAM 00001F
sprintf@val                 cstackCOMRAM 00002A
stackhi                     (abs)        0007FF
stacklo                     (abs)        000074
start                       init         00000E
start_initialization        cinit        000680
wtemp6                      temp         000044


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 50 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  str            20    0[BANK0 ] unsigned char [20]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0      20       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0      20       0       0       0       0       0       0       0
Total ram usage:       20 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_R0Value
		_glcd_Init
		_glcd_SetCursor
		_glcd_text_write
		_setupADC
		_sprintf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              2   30[COMRAM] PTR unsigned char 
		 -> main@str(20), 
  f               2   32[COMRAM] PTR const unsigned char 
		 -> STR_1(3), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  val             2   41[COMRAM] unsigned int 
  ap              2   37[COMRAM] PTR void [1]
		 -> ?_sprintf(2), 
  len             2    0        unsigned int 
  c               1   43[COMRAM] char 
  prec            1   40[COMRAM] char 
  flag            1   39[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   30[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         7       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lwdiv
		___lwmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
 Parameters:    Size  Location     Type
  dividend        2   25[COMRAM] unsigned int 
  divisor         2   27[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1   29[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   25[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   18[COMRAM] unsigned int 
  divisor         2   20[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2   23[COMRAM] unsigned int 
  counter         1   22[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   18[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _setupADC *****************
 Defined at:
		line 21 in file "glcd_library/TS.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _glcd_text_write *****************
 Defined at:
		line 684 in file "glcd_library/glcd.c"
 Parameters:    Size  Location     Type
  str             2   33[COMRAM] PTR const unsigned char 
		 -> main@str(20), 
  x               1   35[COMRAM] unsigned char 
  y               1   36[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_glcd_SetCursor
		_glcd_WriteString
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _glcd_WriteString *****************
 Defined at:
		line 672 in file "glcd_library/glcd.c"
 Parameters:    Size  Location     Type
  str             2   29[COMRAM] PTR const unsigned char 
		 -> main@str(20), 
  font            1   31[COMRAM] unsigned char 
  color           1   32[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_WriteChar3x6
		_glcd_WriteChar8X8
 This function is called by:
		_glcd_text_write
 This function uses a non-reentrant model


 *************** function _glcd_WriteChar8X8 *****************
 Defined at:
		line 578 in file "glcd_library/glcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
  color           1   20[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  ch              1   23[COMRAM] unsigned char 
  chr             2   24[COMRAM] unsigned int 
  side            1   28[COMRAM] unsigned char 
  i               1   27[COMRAM] unsigned char 
  xpos            1   26[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_glcd_WriteString
 This function uses a non-reentrant model


 *************** function _glcd_WriteChar3x6 *****************
 Defined at:
		line 626 in file "glcd_library/glcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
  color           1   20[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  ch              1   24[COMRAM] unsigned char 
  side            1   26[COMRAM] unsigned char 
  i               1   25[COMRAM] unsigned char 
  xpos            1   23[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_glcd_WriteString
 This function uses a non-reentrant model


 *************** function _glcd_SetCursor *****************
 Defined at:
		line 553 in file "glcd_library/glcd.c"
 Parameters:    Size  Location     Type
  xpos            1    wreg     unsigned char 
  ypos            1   20[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  xpos            1   22[COMRAM] unsigned char 
  side            1   21[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_main
		_glcd_text_write
 This function uses a non-reentrant model


 *************** function _glcd_Init *****************
 Defined at:
		line 339 in file "glcd_library/glcd.c"
 Parameters:    Size  Location     Type
  mode            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  mode            1   24[COMRAM] unsigned char 
  k               1    0        unsigned char 
  j               1    0        unsigned char 
  i               1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_FillScreen
		_glcd_WriteByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _glcd_FillScreen *****************
 Defined at:
		line 529 in file "glcd_library/glcd.c"
 Parameters:    Size  Location     Type
  color           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  color           1   20[COMRAM] unsigned char 
  i               1   22[COMRAM] unsigned char 
  j               1   21[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_glcd_Init
 This function uses a non-reentrant model


 *************** function _glcd_WriteByte *****************
 Defined at:
		line 394 in file "glcd_library/glcd.c"
 Parameters:    Size  Location     Type
  side            1    wreg     unsigned char 
  data            1   18[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  side            1   19[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_glcd_Init
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteChar8X8
		_glcd_WriteChar3x6
		_glcd_PlotPixel
		_glcd_Image
 This function uses a non-reentrant model


 *************** function _R0Value *****************
 Defined at:
		line 43 in file "glcd_library/TS.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   18[COMRAM] int 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_readX
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 11 in file "glcd_library/TS.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:         18       0       0       0       0       0       0       0       0
      Totals:        18       0       0       0       0       0       0       0       0
Total ram usage:       18 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c
		___lwdiv       		CODE           	052C	0000	83

C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c estimated size: 83

C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c
		_sprintf       		CODE           	0012	0000	329

C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c estimated size: 329

glcd_library/TS.c
		_ISR           		CODE           	0008	0000	161
		_R0Value       		CODE           	0702	0000	21
		_setupADC      		CODE           	06D2	0000	29

glcd_library/TS.c estimated size: 211

shared
		_Font3x6       		MEDIUMCONST    	7F2F	0000	196
		_dpowers       		MEDIUMCONST    	7FF2	0000	11
		_Font8x8       		MEDIUMCONST    	772F	0000	2049
		__initialization		CODE           	0680	0000	37

shared estimated size: 2293

C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c
		___lwmod       		CODE           	05C6	0000	67

C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c estimated size: 67

main.c
		_main          		CODE           	04D0	0000	93

main.c estimated size: 93

glcd_library/glcd.c
		_glcd_SetCursor		CODE           	057E	0000	73
		_glcd_WriteString		CODE           	0608	0000	67
		_glcd_WriteByte		CODE           	064A	0000	55
		_glcd_Init     		CODE           	030A	0000	191
		_glcd_WriteChar8X8		CODE           	023E	0000	205
		_glcd_FillScreen		CODE           	0462	0000	111
		_glcd_text_write		CODE           	06B2	0000	33
		_glcd_WriteChar3x6		CODE           	015A	0000	229

glcd_library/glcd.c estimated size: 964

