

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Fri Nov 26 10:20:07 2021

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53  0000                     
    54                           ; Version 1.43
    55                           ; Generated 25/07/2017 GMT
    56                           ; 
    57                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4550 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89                           	psect	idataCOMRAM
    90  003A5E                     __pidataCOMRAM:
    91                           	opt stack 0
    92                           
    93                           ;initializer for _randx
    94  003A5E  0001               	dw	1
    95  003A60  0000               	dw	0
    96                           
    97                           	psect	mediumconst
    98  0072FA                     __pmediumconst:
    99                           	opt stack 0
   100  0072FA  00                 	db	0
   101  0072FB                     _Font8x8:
   102                           	opt stack 0
   103  0072FB  00                 	db	0
   104  0072FC  00                 	db	0
   105  0072FD  00                 	db	0
   106  0072FE  00                 	db	0
   107  0072FF  00                 	db	0
   108  007300  00                 	db	0
   109  007301  00                 	db	0
   110  007302  00                 	db	0
   111  007303  00                 	db	0
   112  007304  00                 	db	0
   113  007305  00                 	db	0
   114  007306  00                 	db	0
   115  007307  00                 	db	0
   116  007308  00                 	db	0
   117  007309  00                 	db	0
   118  00730A  00                 	db	0
   119  00730B  00                 	db	0
   120  00730C  00                 	db	0
   121  00730D  00                 	db	0
   122  00730E  00                 	db	0
   123  00730F  00                 	db	0
   124  007310  00                 	db	0
   125  007311  00                 	db	0
   126  007312  00                 	db	0
   127  007313  00                 	db	0
   128  007314  00                 	db	0
   129  007315  00                 	db	0
   130  007316  00                 	db	0
   131  007317  00                 	db	0
   132  007318  00                 	db	0
   133  007319  00                 	db	0
   134  00731A  00                 	db	0
   135  00731B  00                 	db	0
   136  00731C  00                 	db	0
   137  00731D  00                 	db	0
   138  00731E  00                 	db	0
   139  00731F  00                 	db	0
   140  007320  00                 	db	0
   141  007321  00                 	db	0
   142  007322  00                 	db	0
   143  007323  00                 	db	0
   144  007324  00                 	db	0
   145  007325  00                 	db	0
   146  007326  00                 	db	0
   147  007327  00                 	db	0
   148  007328  00                 	db	0
   149  007329  00                 	db	0
   150  00732A  00                 	db	0
   151  00732B  00                 	db	0
   152  00732C  00                 	db	0
   153  00732D  00                 	db	0
   154  00732E  00                 	db	0
   155  00732F  00                 	db	0
   156  007330  00                 	db	0
   157  007331  00                 	db	0
   158  007332  00                 	db	0
   159  007333  00                 	db	0
   160  007334  00                 	db	0
   161  007335  00                 	db	0
   162  007336  00                 	db	0
   163  007337  00                 	db	0
   164  007338  00                 	db	0
   165  007339  00                 	db	0
   166  00733A  00                 	db	0
   167  00733B  00                 	db	0
   168  00733C  00                 	db	0
   169  00733D  00                 	db	0
   170  00733E  00                 	db	0
   171  00733F  00                 	db	0
   172  007340  00                 	db	0
   173  007341  00                 	db	0
   174  007342  00                 	db	0
   175  007343  00                 	db	0
   176  007344  00                 	db	0
   177  007345  00                 	db	0
   178  007346  00                 	db	0
   179  007347  00                 	db	0
   180  007348  00                 	db	0
   181  007349  00                 	db	0
   182  00734A  00                 	db	0
   183  00734B  00                 	db	0
   184  00734C  00                 	db	0
   185  00734D  00                 	db	0
   186  00734E  00                 	db	0
   187  00734F  00                 	db	0
   188  007350  00                 	db	0
   189  007351  00                 	db	0
   190  007352  00                 	db	0
   191  007353  00                 	db	0
   192  007354  00                 	db	0
   193  007355  00                 	db	0
   194  007356  00                 	db	0
   195  007357  00                 	db	0
   196  007358  00                 	db	0
   197  007359  00                 	db	0
   198  00735A  00                 	db	0
   199  00735B  00                 	db	0
   200  00735C  00                 	db	0
   201  00735D  00                 	db	0
   202  00735E  00                 	db	0
   203  00735F  00                 	db	0
   204  007360  00                 	db	0
   205  007361  00                 	db	0
   206  007362  00                 	db	0
   207  007363  00                 	db	0
   208  007364  00                 	db	0
   209  007365  00                 	db	0
   210  007366  00                 	db	0
   211  007367  00                 	db	0
   212  007368  00                 	db	0
   213  007369  00                 	db	0
   214  00736A  00                 	db	0
   215  00736B  00                 	db	0
   216  00736C  00                 	db	0
   217  00736D  00                 	db	0
   218  00736E  00                 	db	0
   219  00736F  00                 	db	0
   220  007370  00                 	db	0
   221  007371  00                 	db	0
   222  007372  00                 	db	0
   223  007373  00                 	db	0
   224  007374  00                 	db	0
   225  007375  00                 	db	0
   226  007376  00                 	db	0
   227  007377  00                 	db	0
   228  007378  00                 	db	0
   229  007379  00                 	db	0
   230  00737A  00                 	db	0
   231  00737B  00                 	db	0
   232  00737C  00                 	db	0
   233  00737D  00                 	db	0
   234  00737E  00                 	db	0
   235  00737F  00                 	db	0
   236  007380  00                 	db	0
   237  007381  00                 	db	0
   238  007382  00                 	db	0
   239  007383  00                 	db	0
   240  007384  00                 	db	0
   241  007385  00                 	db	0
   242  007386  00                 	db	0
   243  007387  00                 	db	0
   244  007388  00                 	db	0
   245  007389  00                 	db	0
   246  00738A  00                 	db	0
   247  00738B  00                 	db	0
   248  00738C  00                 	db	0
   249  00738D  00                 	db	0
   250  00738E  00                 	db	0
   251  00738F  00                 	db	0
   252  007390  00                 	db	0
   253  007391  00                 	db	0
   254  007392  00                 	db	0
   255  007393  00                 	db	0
   256  007394  00                 	db	0
   257  007395  00                 	db	0
   258  007396  00                 	db	0
   259  007397  00                 	db	0
   260  007398  00                 	db	0
   261  007399  00                 	db	0
   262  00739A  00                 	db	0
   263  00739B  00                 	db	0
   264  00739C  00                 	db	0
   265  00739D  00                 	db	0
   266  00739E  00                 	db	0
   267  00739F  00                 	db	0
   268  0073A0  00                 	db	0
   269  0073A1  00                 	db	0
   270  0073A2  00                 	db	0
   271  0073A3  00                 	db	0
   272  0073A4  00                 	db	0
   273  0073A5  00                 	db	0
   274  0073A6  00                 	db	0
   275  0073A7  00                 	db	0
   276  0073A8  00                 	db	0
   277  0073A9  00                 	db	0
   278  0073AA  00                 	db	0
   279  0073AB  00                 	db	0
   280  0073AC  00                 	db	0
   281  0073AD  00                 	db	0
   282  0073AE  00                 	db	0
   283  0073AF  00                 	db	0
   284  0073B0  00                 	db	0
   285  0073B1  00                 	db	0
   286  0073B2  00                 	db	0
   287  0073B3  00                 	db	0
   288  0073B4  00                 	db	0
   289  0073B5  00                 	db	0
   290  0073B6  00                 	db	0
   291  0073B7  00                 	db	0
   292  0073B8  00                 	db	0
   293  0073B9  00                 	db	0
   294  0073BA  00                 	db	0
   295  0073BB  00                 	db	0
   296  0073BC  00                 	db	0
   297  0073BD  00                 	db	0
   298  0073BE  00                 	db	0
   299  0073BF  00                 	db	0
   300  0073C0  00                 	db	0
   301  0073C1  00                 	db	0
   302  0073C2  00                 	db	0
   303  0073C3  00                 	db	0
   304  0073C4  00                 	db	0
   305  0073C5  00                 	db	0
   306  0073C6  00                 	db	0
   307  0073C7  00                 	db	0
   308  0073C8  00                 	db	0
   309  0073C9  00                 	db	0
   310  0073CA  00                 	db	0
   311  0073CB  00                 	db	0
   312  0073CC  00                 	db	0
   313  0073CD  00                 	db	0
   314  0073CE  00                 	db	0
   315  0073CF  00                 	db	0
   316  0073D0  00                 	db	0
   317  0073D1  00                 	db	0
   318  0073D2  00                 	db	0
   319  0073D3  00                 	db	0
   320  0073D4  00                 	db	0
   321  0073D5  00                 	db	0
   322  0073D6  00                 	db	0
   323  0073D7  00                 	db	0
   324  0073D8  00                 	db	0
   325  0073D9  00                 	db	0
   326  0073DA  00                 	db	0
   327  0073DB  00                 	db	0
   328  0073DC  00                 	db	0
   329  0073DD  00                 	db	0
   330  0073DE  00                 	db	0
   331  0073DF  00                 	db	0
   332  0073E0  00                 	db	0
   333  0073E1  00                 	db	0
   334  0073E2  00                 	db	0
   335  0073E3  00                 	db	0
   336  0073E4  00                 	db	0
   337  0073E5  00                 	db	0
   338  0073E6  00                 	db	0
   339  0073E7  00                 	db	0
   340  0073E8  00                 	db	0
   341  0073E9  00                 	db	0
   342  0073EA  00                 	db	0
   343  0073EB  00                 	db	0
   344  0073EC  00                 	db	0
   345  0073ED  00                 	db	0
   346  0073EE  00                 	db	0
   347  0073EF  00                 	db	0
   348  0073F0  00                 	db	0
   349  0073F1  00                 	db	0
   350  0073F2  00                 	db	0
   351  0073F3  00                 	db	0
   352  0073F4  00                 	db	0
   353  0073F5  00                 	db	0
   354  0073F6  00                 	db	0
   355  0073F7  00                 	db	0
   356  0073F8  00                 	db	0
   357  0073F9  00                 	db	0
   358  0073FA  00                 	db	0
   359  0073FB  00                 	db	0
   360  0073FC  00                 	db	0
   361  0073FD  00                 	db	0
   362  0073FE  00                 	db	0
   363  0073FF  00                 	db	0
   364  007400  00                 	db	0
   365  007401  00                 	db	0
   366  007402  00                 	db	0
   367  007403  00                 	db	0
   368  007404  06                 	db	6
   369  007405  5F                 	db	95
   370  007406  5F                 	db	95
   371  007407  06                 	db	6
   372  007408  00                 	db	0
   373  007409  00                 	db	0
   374  00740A  00                 	db	0
   375  00740B  00                 	db	0
   376  00740C  07                 	db	7
   377  00740D  07                 	db	7
   378  00740E  00                 	db	0
   379  00740F  07                 	db	7
   380  007410  07                 	db	7
   381  007411  00                 	db	0
   382  007412  00                 	db	0
   383  007413  14                 	db	20
   384  007414  7F                 	db	127
   385  007415  7F                 	db	127
   386  007416  14                 	db	20
   387  007417  7F                 	db	127
   388  007418  7F                 	db	127
   389  007419  14                 	db	20
   390  00741A  00                 	db	0
   391  00741B  24                 	db	36
   392  00741C  2E                 	db	46
   393  00741D  6B                 	db	107
   394  00741E  6B                 	db	107
   395  00741F  3A                 	db	58
   396  007420  12                 	db	18
   397  007421  00                 	db	0
   398  007422  00                 	db	0
   399  007423  46                 	db	70
   400  007424  66                 	db	102
   401  007425  30                 	db	48
   402  007426  18                 	db	24
   403  007427  0C                 	db	12
   404  007428  66                 	db	102
   405  007429  62                 	db	98
   406  00742A  00                 	db	0
   407  00742B  30                 	db	48
   408  00742C  7A                 	db	122
   409  00742D  4F                 	db	79
   410  00742E  5D                 	db	93
   411  00742F  37                 	db	55
   412  007430  7A                 	db	122
   413  007431  48                 	db	72
   414  007432  00                 	db	0
   415  007433  04                 	db	4
   416  007434  07                 	db	7
   417  007435  03                 	db	3
   418  007436  00                 	db	0
   419  007437  00                 	db	0
   420  007438  00                 	db	0
   421  007439  00                 	db	0
   422  00743A  00                 	db	0
   423  00743B  00                 	db	0
   424  00743C  1C                 	db	28
   425  00743D  3E                 	db	62
   426  00743E  63                 	db	99
   427  00743F  41                 	db	65
   428  007440  00                 	db	0
   429  007441  00                 	db	0
   430  007442  00                 	db	0
   431  007443  00                 	db	0
   432  007444  41                 	db	65
   433  007445  63                 	db	99
   434  007446  3E                 	db	62
   435  007447  1C                 	db	28
   436  007448  00                 	db	0
   437  007449  00                 	db	0
   438  00744A  00                 	db	0
   439  00744B  08                 	db	8
   440  00744C  2A                 	db	42
   441  00744D  3E                 	db	62
   442  00744E  1C                 	db	28
   443  00744F  1C                 	db	28
   444  007450  3E                 	db	62
   445  007451  2A                 	db	42
   446  007452  08                 	db	8
   447  007453  08                 	db	8
   448  007454  08                 	db	8
   449  007455  3E                 	db	62
   450  007456  3E                 	db	62
   451  007457  08                 	db	8
   452  007458  08                 	db	8
   453  007459  00                 	db	0
   454  00745A  00                 	db	0
   455  00745B  00                 	db	0
   456  00745C  80                 	db	128
   457  00745D  E0                 	db	224
   458  00745E  60                 	db	96
   459  00745F  00                 	db	0
   460  007460  00                 	db	0
   461  007461  00                 	db	0
   462  007462  00                 	db	0
   463  007463  08                 	db	8
   464  007464  08                 	db	8
   465  007465  08                 	db	8
   466  007466  08                 	db	8
   467  007467  08                 	db	8
   468  007468  08                 	db	8
   469  007469  00                 	db	0
   470  00746A  00                 	db	0
   471  00746B  00                 	db	0
   472  00746C  00                 	db	0
   473  00746D  60                 	db	96
   474  00746E  60                 	db	96
   475  00746F  00                 	db	0
   476  007470  00                 	db	0
   477  007471  00                 	db	0
   478  007472  00                 	db	0
   479  007473  60                 	db	96
   480  007474  30                 	db	48
   481  007475  18                 	db	24
   482  007476  0C                 	db	12
   483  007477  06                 	db	6
   484  007478  03                 	db	3
   485  007479  01                 	db	1
   486  00747A  00                 	db	0
   487  00747B  3E                 	db	62
   488  00747C  7F                 	db	127
   489  00747D  71                 	db	113
   490  00747E  59                 	db	89
   491  00747F  4D                 	db	77
   492  007480  7F                 	db	127
   493  007481  3E                 	db	62
   494  007482  00                 	db	0
   495  007483  40                 	db	64
   496  007484  42                 	db	66
   497  007485  7F                 	db	127
   498  007486  7F                 	db	127
   499  007487  40                 	db	64
   500  007488  40                 	db	64
   501  007489  00                 	db	0
   502  00748A  00                 	db	0
   503  00748B  62                 	db	98
   504  00748C  73                 	db	115
   505  00748D  59                 	db	89
   506  00748E  49                 	db	73
   507  00748F  6F                 	db	111
   508  007490  66                 	db	102
   509  007491  00                 	db	0
   510  007492  00                 	db	0
   511  007493  22                 	db	34
   512  007494  63                 	db	99
   513  007495  49                 	db	73
   514  007496  49                 	db	73
   515  007497  7F                 	db	127
   516  007498  36                 	db	54
   517  007499  00                 	db	0
   518  00749A  00                 	db	0
   519  00749B  18                 	db	24
   520  00749C  1C                 	db	28
   521  00749D  16                 	db	22
   522  00749E  53                 	db	83
   523  00749F  7F                 	db	127
   524  0074A0  7F                 	db	127
   525  0074A1  50                 	db	80
   526  0074A2  00                 	db	0
   527  0074A3  27                 	db	39
   528  0074A4  67                 	db	103
   529  0074A5  45                 	db	69
   530  0074A6  45                 	db	69
   531  0074A7  7D                 	db	125
   532  0074A8  39                 	db	57
   533  0074A9  00                 	db	0
   534  0074AA  00                 	db	0
   535  0074AB  3C                 	db	60
   536  0074AC  7E                 	db	126
   537  0074AD  4B                 	db	75
   538  0074AE  49                 	db	73
   539  0074AF  79                 	db	121
   540  0074B0  30                 	db	48
   541  0074B1  00                 	db	0
   542  0074B2  00                 	db	0
   543  0074B3  03                 	db	3
   544  0074B4  03                 	db	3
   545  0074B5  71                 	db	113
   546  0074B6  79                 	db	121
   547  0074B7  0F                 	db	15
   548  0074B8  07                 	db	7
   549  0074B9  00                 	db	0
   550  0074BA  00                 	db	0
   551  0074BB  36                 	db	54
   552  0074BC  7F                 	db	127
   553  0074BD  49                 	db	73
   554  0074BE  49                 	db	73
   555  0074BF  7F                 	db	127
   556  0074C0  36                 	db	54
   557  0074C1  00                 	db	0
   558  0074C2  00                 	db	0
   559  0074C3  06                 	db	6
   560  0074C4  4F                 	db	79
   561  0074C5  49                 	db	73
   562  0074C6  69                 	db	105
   563  0074C7  3F                 	db	63
   564  0074C8  1E                 	db	30
   565  0074C9  00                 	db	0
   566  0074CA  00                 	db	0
   567  0074CB  00                 	db	0
   568  0074CC  00                 	db	0
   569  0074CD  66                 	db	102
   570  0074CE  66                 	db	102
   571  0074CF  00                 	db	0
   572  0074D0  00                 	db	0
   573  0074D1  00                 	db	0
   574  0074D2  00                 	db	0
   575  0074D3  00                 	db	0
   576  0074D4  80                 	db	128
   577  0074D5  E6                 	db	230
   578  0074D6  66                 	db	102
   579  0074D7  00                 	db	0
   580  0074D8  00                 	db	0
   581  0074D9  00                 	db	0
   582  0074DA  00                 	db	0
   583  0074DB  08                 	db	8
   584  0074DC  1C                 	db	28
   585  0074DD  36                 	db	54
   586  0074DE  63                 	db	99
   587  0074DF  41                 	db	65
   588  0074E0  00                 	db	0
   589  0074E1  00                 	db	0
   590  0074E2  00                 	db	0
   591  0074E3  24                 	db	36
   592  0074E4  24                 	db	36
   593  0074E5  24                 	db	36
   594  0074E6  24                 	db	36
   595  0074E7  24                 	db	36
   596  0074E8  24                 	db	36
   597  0074E9  00                 	db	0
   598  0074EA  00                 	db	0
   599  0074EB  00                 	db	0
   600  0074EC  41                 	db	65
   601  0074ED  63                 	db	99
   602  0074EE  36                 	db	54
   603  0074EF  1C                 	db	28
   604  0074F0  08                 	db	8
   605  0074F1  00                 	db	0
   606  0074F2  00                 	db	0
   607  0074F3  02                 	db	2
   608  0074F4  03                 	db	3
   609  0074F5  51                 	db	81
   610  0074F6  59                 	db	89
   611  0074F7  0F                 	db	15
   612  0074F8  06                 	db	6
   613  0074F9  00                 	db	0
   614  0074FA  00                 	db	0
   615  0074FB  3E                 	db	62
   616  0074FC  7F                 	db	127
   617  0074FD  41                 	db	65
   618  0074FE  5D                 	db	93
   619  0074FF  5D                 	db	93
   620  007500  1F                 	db	31
   621  007501  1E                 	db	30
   622  007502  00                 	db	0
   623  007503  7C                 	db	124
   624  007504  7E                 	db	126
   625  007505  13                 	db	19
   626  007506  13                 	db	19
   627  007507  7E                 	db	126
   628  007508  7C                 	db	124
   629  007509  00                 	db	0
   630  00750A  00                 	db	0
   631  00750B  41                 	db	65
   632  00750C  7F                 	db	127
   633  00750D  7F                 	db	127
   634  00750E  49                 	db	73
   635  00750F  49                 	db	73
   636  007510  7F                 	db	127
   637  007511  36                 	db	54
   638  007512  00                 	db	0
   639  007513  1C                 	db	28
   640  007514  3E                 	db	62
   641  007515  63                 	db	99
   642  007516  41                 	db	65
   643  007517  41                 	db	65
   644  007518  63                 	db	99
   645  007519  22                 	db	34
   646  00751A  00                 	db	0
   647  00751B  41                 	db	65
   648  00751C  7F                 	db	127
   649  00751D  7F                 	db	127
   650  00751E  41                 	db	65
   651  00751F  63                 	db	99
   652  007520  3E                 	db	62
   653  007521  1C                 	db	28
   654  007522  00                 	db	0
   655  007523  41                 	db	65
   656  007524  7F                 	db	127
   657  007525  7F                 	db	127
   658  007526  49                 	db	73
   659  007527  5D                 	db	93
   660  007528  41                 	db	65
   661  007529  63                 	db	99
   662  00752A  00                 	db	0
   663  00752B  41                 	db	65
   664  00752C  7F                 	db	127
   665  00752D  7F                 	db	127
   666  00752E  49                 	db	73
   667  00752F  1D                 	db	29
   668  007530  01                 	db	1
   669  007531  03                 	db	3
   670  007532  00                 	db	0
   671  007533  1C                 	db	28
   672  007534  3E                 	db	62
   673  007535  63                 	db	99
   674  007536  41                 	db	65
   675  007537  51                 	db	81
   676  007538  73                 	db	115
   677  007539  72                 	db	114
   678  00753A  00                 	db	0
   679  00753B  7F                 	db	127
   680  00753C  7F                 	db	127
   681  00753D  08                 	db	8
   682  00753E  08                 	db	8
   683  00753F  7F                 	db	127
   684  007540  7F                 	db	127
   685  007541  00                 	db	0
   686  007542  00                 	db	0
   687  007543  00                 	db	0
   688  007544  41                 	db	65
   689  007545  7F                 	db	127
   690  007546  7F                 	db	127
   691  007547  41                 	db	65
   692  007548  00                 	db	0
   693  007549  00                 	db	0
   694  00754A  00                 	db	0
   695  00754B  30                 	db	48
   696  00754C  70                 	db	112
   697  00754D  40                 	db	64
   698  00754E  41                 	db	65
   699  00754F  7F                 	db	127
   700  007550  3F                 	db	63
   701  007551  01                 	db	1
   702  007552  00                 	db	0
   703  007553  41                 	db	65
   704  007554  7F                 	db	127
   705  007555  7F                 	db	127
   706  007556  08                 	db	8
   707  007557  1C                 	db	28
   708  007558  77                 	db	119
   709  007559  63                 	db	99
   710  00755A  00                 	db	0
   711  00755B  41                 	db	65
   712  00755C  7F                 	db	127
   713  00755D  7F                 	db	127
   714  00755E  41                 	db	65
   715  00755F  40                 	db	64
   716  007560  60                 	db	96
   717  007561  70                 	db	112
   718  007562  00                 	db	0
   719  007563  7F                 	db	127
   720  007564  7F                 	db	127
   721  007565  0E                 	db	14
   722  007566  1C                 	db	28
   723  007567  0E                 	db	14
   724  007568  7F                 	db	127
   725  007569  7F                 	db	127
   726  00756A  00                 	db	0
   727  00756B  7F                 	db	127
   728  00756C  7F                 	db	127
   729  00756D  06                 	db	6
   730  00756E  0C                 	db	12
   731  00756F  18                 	db	24
   732  007570  7F                 	db	127
   733  007571  7F                 	db	127
   734  007572  00                 	db	0
   735  007573  1C                 	db	28
   736  007574  3E                 	db	62
   737  007575  63                 	db	99
   738  007576  41                 	db	65
   739  007577  63                 	db	99
   740  007578  3E                 	db	62
   741  007579  1C                 	db	28
   742  00757A  00                 	db	0
   743  00757B  41                 	db	65
   744  00757C  7F                 	db	127
   745  00757D  7F                 	db	127
   746  00757E  49                 	db	73
   747  00757F  09                 	db	9
   748  007580  0F                 	db	15
   749  007581  06                 	db	6
   750  007582  00                 	db	0
   751  007583  1E                 	db	30
   752  007584  3F                 	db	63
   753  007585  21                 	db	33
   754  007586  71                 	db	113
   755  007587  7F                 	db	127
   756  007588  5E                 	db	94
   757  007589  00                 	db	0
   758  00758A  00                 	db	0
   759  00758B  41                 	db	65
   760  00758C  7F                 	db	127
   761  00758D  7F                 	db	127
   762  00758E  09                 	db	9
   763  00758F  19                 	db	25
   764  007590  7F                 	db	127
   765  007591  66                 	db	102
   766  007592  00                 	db	0
   767  007593  26                 	db	38
   768  007594  6F                 	db	111
   769  007595  4D                 	db	77
   770  007596  59                 	db	89
   771  007597  73                 	db	115
   772  007598  32                 	db	50
   773  007599  00                 	db	0
   774  00759A  00                 	db	0
   775  00759B  03                 	db	3
   776  00759C  41                 	db	65
   777  00759D  7F                 	db	127
   778  00759E  7F                 	db	127
   779  00759F  41                 	db	65
   780  0075A0  03                 	db	3
   781  0075A1  00                 	db	0
   782  0075A2  00                 	db	0
   783  0075A3  7F                 	db	127
   784  0075A4  7F                 	db	127
   785  0075A5  40                 	db	64
   786  0075A6  40                 	db	64
   787  0075A7  7F                 	db	127
   788  0075A8  7F                 	db	127
   789  0075A9  00                 	db	0
   790  0075AA  00                 	db	0
   791  0075AB  1F                 	db	31
   792  0075AC  3F                 	db	63
   793  0075AD  60                 	db	96
   794  0075AE  60                 	db	96
   795  0075AF  3F                 	db	63
   796  0075B0  1F                 	db	31
   797  0075B1  00                 	db	0
   798  0075B2  00                 	db	0
   799  0075B3  7F                 	db	127
   800  0075B4  7F                 	db	127
   801  0075B5  30                 	db	48
   802  0075B6  18                 	db	24
   803  0075B7  30                 	db	48
   804  0075B8  7F                 	db	127
   805  0075B9  7F                 	db	127
   806  0075BA  00                 	db	0
   807  0075BB  43                 	db	67
   808  0075BC  67                 	db	103
   809  0075BD  3C                 	db	60
   810  0075BE  18                 	db	24
   811  0075BF  3C                 	db	60
   812  0075C0  67                 	db	103
   813  0075C1  43                 	db	67
   814  0075C2  00                 	db	0
   815  0075C3  07                 	db	7
   816  0075C4  4F                 	db	79
   817  0075C5  78                 	db	120
   818  0075C6  78                 	db	120
   819  0075C7  4F                 	db	79
   820  0075C8  07                 	db	7
   821  0075C9  00                 	db	0
   822  0075CA  00                 	db	0
   823  0075CB  47                 	db	71
   824  0075CC  63                 	db	99
   825  0075CD  71                 	db	113
   826  0075CE  59                 	db	89
   827  0075CF  4D                 	db	77
   828  0075D0  67                 	db	103
   829  0075D1  73                 	db	115
   830  0075D2  00                 	db	0
   831  0075D3  00                 	db	0
   832  0075D4  7F                 	db	127
   833  0075D5  7F                 	db	127
   834  0075D6  41                 	db	65
   835  0075D7  41                 	db	65
   836  0075D8  00                 	db	0
   837  0075D9  00                 	db	0
   838  0075DA  00                 	db	0
   839  0075DB  01                 	db	1
   840  0075DC  03                 	db	3
   841  0075DD  06                 	db	6
   842  0075DE  0C                 	db	12
   843  0075DF  18                 	db	24
   844  0075E0  30                 	db	48
   845  0075E1  60                 	db	96
   846  0075E2  00                 	db	0
   847  0075E3  00                 	db	0
   848  0075E4  41                 	db	65
   849  0075E5  41                 	db	65
   850  0075E6  7F                 	db	127
   851  0075E7  7F                 	db	127
   852  0075E8  00                 	db	0
   853  0075E9  00                 	db	0
   854  0075EA  00                 	db	0
   855  0075EB  08                 	db	8
   856  0075EC  0C                 	db	12
   857  0075ED  06                 	db	6
   858  0075EE  03                 	db	3
   859  0075EF  06                 	db	6
   860  0075F0  0C                 	db	12
   861  0075F1  08                 	db	8
   862  0075F2  00                 	db	0
   863  0075F3  80                 	db	128
   864  0075F4  80                 	db	128
   865  0075F5  80                 	db	128
   866  0075F6  80                 	db	128
   867  0075F7  80                 	db	128
   868  0075F8  80                 	db	128
   869  0075F9  80                 	db	128
   870  0075FA  80                 	db	128
   871  0075FB  00                 	db	0
   872  0075FC  00                 	db	0
   873  0075FD  03                 	db	3
   874  0075FE  07                 	db	7
   875  0075FF  04                 	db	4
   876  007600  00                 	db	0
   877  007601  00                 	db	0
   878  007602  00                 	db	0
   879  007603  20                 	db	32
   880  007604  74                 	db	116
   881  007605  54                 	db	84
   882  007606  54                 	db	84
   883  007607  3C                 	db	60
   884  007608  78                 	db	120
   885  007609  40                 	db	64
   886  00760A  00                 	db	0
   887  00760B  41                 	db	65
   888  00760C  7F                 	db	127
   889  00760D  3F                 	db	63
   890  00760E  48                 	db	72
   891  00760F  48                 	db	72
   892  007610  78                 	db	120
   893  007611  30                 	db	48
   894  007612  00                 	db	0
   895  007613  38                 	db	56
   896  007614  7C                 	db	124
   897  007615  44                 	db	68
   898  007616  44                 	db	68
   899  007617  6C                 	db	108
   900  007618  28                 	db	40
   901  007619  00                 	db	0
   902  00761A  00                 	db	0
   903  00761B  30                 	db	48
   904  00761C  78                 	db	120
   905  00761D  48                 	db	72
   906  00761E  49                 	db	73
   907  00761F  3F                 	db	63
   908  007620  7F                 	db	127
   909  007621  40                 	db	64
   910  007622  00                 	db	0
   911  007623  38                 	db	56
   912  007624  7C                 	db	124
   913  007625  54                 	db	84
   914  007626  54                 	db	84
   915  007627  5C                 	db	92
   916  007628  18                 	db	24
   917  007629  00                 	db	0
   918  00762A  00                 	db	0
   919  00762B  48                 	db	72
   920  00762C  7E                 	db	126
   921  00762D  7F                 	db	127
   922  00762E  49                 	db	73
   923  00762F  03                 	db	3
   924  007630  02                 	db	2
   925  007631  00                 	db	0
   926  007632  00                 	db	0
   927  007633  98                 	db	152
   928  007634  BC                 	db	188
   929  007635  A4                 	db	164
   930  007636  A4                 	db	164
   931  007637  F8                 	db	248
   932  007638  7C                 	db	124
   933  007639  04                 	db	4
   934  00763A  00                 	db	0
   935  00763B  41                 	db	65
   936  00763C  7F                 	db	127
   937  00763D  7F                 	db	127
   938  00763E  08                 	db	8
   939  00763F  04                 	db	4
   940  007640  7C                 	db	124
   941  007641  78                 	db	120
   942  007642  00                 	db	0
   943  007643  00                 	db	0
   944  007644  44                 	db	68
   945  007645  7D                 	db	125
   946  007646  7D                 	db	125
   947  007647  40                 	db	64
   948  007648  00                 	db	0
   949  007649  00                 	db	0
   950  00764A  00                 	db	0
   951  00764B  60                 	db	96
   952  00764C  E0                 	db	224
   953  00764D  80                 	db	128
   954  00764E  80                 	db	128
   955  00764F  FD                 	db	253
   956  007650  7D                 	db	125
   957  007651  00                 	db	0
   958  007652  00                 	db	0
   959  007653  41                 	db	65
   960  007654  7F                 	db	127
   961  007655  7F                 	db	127
   962  007656  10                 	db	16
   963  007657  38                 	db	56
   964  007658  6C                 	db	108
   965  007659  44                 	db	68
   966  00765A  00                 	db	0
   967  00765B  00                 	db	0
   968  00765C  41                 	db	65
   969  00765D  7F                 	db	127
   970  00765E  7F                 	db	127
   971  00765F  40                 	db	64
   972  007660  00                 	db	0
   973  007661  00                 	db	0
   974  007662  00                 	db	0
   975  007663  7C                 	db	124
   976  007664  7C                 	db	124
   977  007665  18                 	db	24
   978  007666  38                 	db	56
   979  007667  1C                 	db	28
   980  007668  7C                 	db	124
   981  007669  78                 	db	120
   982  00766A  00                 	db	0
   983  00766B  7C                 	db	124
   984  00766C  7C                 	db	124
   985  00766D  04                 	db	4
   986  00766E  04                 	db	4
   987  00766F  7C                 	db	124
   988  007670  78                 	db	120
   989  007671  00                 	db	0
   990  007672  00                 	db	0
   991  007673  38                 	db	56
   992  007674  7C                 	db	124
   993  007675  44                 	db	68
   994  007676  44                 	db	68
   995  007677  7C                 	db	124
   996  007678  38                 	db	56
   997  007679  00                 	db	0
   998  00767A  00                 	db	0
   999  00767B  84                 	db	132
  1000  00767C  FC                 	db	252
  1001  00767D  F8                 	db	248
  1002  00767E  A4                 	db	164
  1003  00767F  24                 	db	36
  1004  007680  3C                 	db	60
  1005  007681  18                 	db	24
  1006  007682  00                 	db	0
  1007  007683  18                 	db	24
  1008  007684  3C                 	db	60
  1009  007685  24                 	db	36
  1010  007686  A4                 	db	164
  1011  007687  F8                 	db	248
  1012  007688  FC                 	db	252
  1013  007689  84                 	db	132
  1014  00768A  00                 	db	0
  1015  00768B  44                 	db	68
  1016  00768C  7C                 	db	124
  1017  00768D  78                 	db	120
  1018  00768E  4C                 	db	76
  1019  00768F  04                 	db	4
  1020  007690  1C                 	db	28
  1021  007691  18                 	db	24
  1022  007692  00                 	db	0
  1023  007693  48                 	db	72
  1024  007694  5C                 	db	92
  1025  007695  54                 	db	84
  1026  007696  54                 	db	84
  1027  007697  74                 	db	116
  1028  007698  24                 	db	36
  1029  007699  00                 	db	0
  1030  00769A  00                 	db	0
  1031  00769B  00                 	db	0
  1032  00769C  04                 	db	4
  1033  00769D  3E                 	db	62
  1034  00769E  7F                 	db	127
  1035  00769F  44                 	db	68
  1036  0076A0  24                 	db	36
  1037  0076A1  00                 	db	0
  1038  0076A2  00                 	db	0
  1039  0076A3  3C                 	db	60
  1040  0076A4  7C                 	db	124
  1041  0076A5  40                 	db	64
  1042  0076A6  40                 	db	64
  1043  0076A7  3C                 	db	60
  1044  0076A8  7C                 	db	124
  1045  0076A9  40                 	db	64
  1046  0076AA  00                 	db	0
  1047  0076AB  1C                 	db	28
  1048  0076AC  3C                 	db	60
  1049  0076AD  60                 	db	96
  1050  0076AE  60                 	db	96
  1051  0076AF  3C                 	db	60
  1052  0076B0  1C                 	db	28
  1053  0076B1  00                 	db	0
  1054  0076B2  00                 	db	0
  1055  0076B3  3C                 	db	60
  1056  0076B4  7C                 	db	124
  1057  0076B5  70                 	db	112
  1058  0076B6  38                 	db	56
  1059  0076B7  70                 	db	112
  1060  0076B8  7C                 	db	124
  1061  0076B9  3C                 	db	60
  1062  0076BA  00                 	db	0
  1063  0076BB  44                 	db	68
  1064  0076BC  6C                 	db	108
  1065  0076BD  38                 	db	56
  1066  0076BE  10                 	db	16
  1067  0076BF  38                 	db	56
  1068  0076C0  6C                 	db	108
  1069  0076C1  44                 	db	68
  1070  0076C2  00                 	db	0
  1071  0076C3  9C                 	db	156
  1072  0076C4  BC                 	db	188
  1073  0076C5  A0                 	db	160
  1074  0076C6  A0                 	db	160
  1075  0076C7  FC                 	db	252
  1076  0076C8  7C                 	db	124
  1077  0076C9  00                 	db	0
  1078  0076CA  00                 	db	0
  1079  0076CB  4C                 	db	76
  1080  0076CC  64                 	db	100
  1081  0076CD  74                 	db	116
  1082  0076CE  5C                 	db	92
  1083  0076CF  4C                 	db	76
  1084  0076D0  64                 	db	100
  1085  0076D1  00                 	db	0
  1086  0076D2  00                 	db	0
  1087  0076D3  08                 	db	8
  1088  0076D4  08                 	db	8
  1089  0076D5  3E                 	db	62
  1090  0076D6  77                 	db	119
  1091  0076D7  41                 	db	65
  1092  0076D8  41                 	db	65
  1093  0076D9  00                 	db	0
  1094  0076DA  00                 	db	0
  1095  0076DB  00                 	db	0
  1096  0076DC  00                 	db	0
  1097  0076DD  00                 	db	0
  1098  0076DE  77                 	db	119
  1099  0076DF  77                 	db	119
  1100  0076E0  00                 	db	0
  1101  0076E1  00                 	db	0
  1102  0076E2  00                 	db	0
  1103  0076E3  41                 	db	65
  1104  0076E4  41                 	db	65
  1105  0076E5  77                 	db	119
  1106  0076E6  3E                 	db	62
  1107  0076E7  08                 	db	8
  1108  0076E8  08                 	db	8
  1109  0076E9  00                 	db	0
  1110  0076EA  00                 	db	0
  1111  0076EB  02                 	db	2
  1112  0076EC  03                 	db	3
  1113  0076ED  01                 	db	1
  1114  0076EE  03                 	db	3
  1115  0076EF  02                 	db	2
  1116  0076F0  03                 	db	3
  1117  0076F1  01                 	db	1
  1118  0076F2  00                 	db	0
  1119  0076F3  70                 	db	112
  1120  0076F4  78                 	db	120
  1121  0076F5  4C                 	db	76
  1122  0076F6  46                 	db	70
  1123  0076F7  4C                 	db	76
  1124  0076F8  78                 	db	120
  1125  0076F9  70                 	db	112
  1126  0076FA  00                 	db	0
  1127  0076FB  0E                 	db	14
  1128  0076FC  9F                 	db	159
  1129  0076FD  91                 	db	145
  1130  0076FE  B1                 	db	177
  1131  0076FF  FB                 	db	251
  1132  007700  4A                 	db	74
  1133  007701  00                 	db	0
  1134  007702  00                 	db	0
  1135  007703  3A                 	db	58
  1136  007704  7A                 	db	122
  1137  007705  40                 	db	64
  1138  007706  40                 	db	64
  1139  007707  7A                 	db	122
  1140  007708  7A                 	db	122
  1141  007709  40                 	db	64
  1142  00770A  00                 	db	0
  1143  00770B  38                 	db	56
  1144  00770C  7C                 	db	124
  1145  00770D  54                 	db	84
  1146  00770E  55                 	db	85
  1147  00770F  5D                 	db	93
  1148  007710  19                 	db	25
  1149  007711  00                 	db	0
  1150  007712  00                 	db	0
  1151  007713  02                 	db	2
  1152  007714  23                 	db	35
  1153  007715  75                 	db	117
  1154  007716  55                 	db	85
  1155  007717  55                 	db	85
  1156  007718  7D                 	db	125
  1157  007719  7B                 	db	123
  1158  00771A  42                 	db	66
  1159  00771B  21                 	db	33
  1160  00771C  75                 	db	117
  1161  00771D  54                 	db	84
  1162  00771E  54                 	db	84
  1163  00771F  7D                 	db	125
  1164  007720  79                 	db	121
  1165  007721  40                 	db	64
  1166  007722  00                 	db	0
  1167  007723  21                 	db	33
  1168  007724  75                 	db	117
  1169  007725  55                 	db	85
  1170  007726  54                 	db	84
  1171  007727  7C                 	db	124
  1172  007728  78                 	db	120
  1173  007729  40                 	db	64
  1174  00772A  00                 	db	0
  1175  00772B  20                 	db	32
  1176  00772C  74                 	db	116
  1177  00772D  57                 	db	87
  1178  00772E  57                 	db	87
  1179  00772F  7C                 	db	124
  1180  007730  78                 	db	120
  1181  007731  40                 	db	64
  1182  007732  00                 	db	0
  1183  007733  18                 	db	24
  1184  007734  3C                 	db	60
  1185  007735  A4                 	db	164
  1186  007736  A4                 	db	164
  1187  007737  E4                 	db	228
  1188  007738  40                 	db	64
  1189  007739  00                 	db	0
  1190  00773A  00                 	db	0
  1191  00773B  02                 	db	2
  1192  00773C  3B                 	db	59
  1193  00773D  7D                 	db	125
  1194  00773E  55                 	db	85
  1195  00773F  55                 	db	85
  1196  007740  5D                 	db	93
  1197  007741  1B                 	db	27
  1198  007742  02                 	db	2
  1199  007743  39                 	db	57
  1200  007744  7D                 	db	125
  1201  007745  54                 	db	84
  1202  007746  54                 	db	84
  1203  007747  5D                 	db	93
  1204  007748  19                 	db	25
  1205  007749  00                 	db	0
  1206  00774A  00                 	db	0
  1207  00774B  39                 	db	57
  1208  00774C  7D                 	db	125
  1209  00774D  55                 	db	85
  1210  00774E  54                 	db	84
  1211  00774F  5C                 	db	92
  1212  007750  18                 	db	24
  1213  007751  00                 	db	0
  1214  007752  00                 	db	0
  1215  007753  01                 	db	1
  1216  007754  45                 	db	69
  1217  007755  7C                 	db	124
  1218  007756  7C                 	db	124
  1219  007757  41                 	db	65
  1220  007758  01                 	db	1
  1221  007759  00                 	db	0
  1222  00775A  00                 	db	0
  1223  00775B  02                 	db	2
  1224  00775C  03                 	db	3
  1225  00775D  45                 	db	69
  1226  00775E  7D                 	db	125
  1227  00775F  7D                 	db	125
  1228  007760  43                 	db	67
  1229  007761  02                 	db	2
  1230  007762  00                 	db	0
  1231  007763  01                 	db	1
  1232  007764  45                 	db	69
  1233  007765  7D                 	db	125
  1234  007766  7C                 	db	124
  1235  007767  40                 	db	64
  1236  007768  00                 	db	0
  1237  007769  00                 	db	0
  1238  00776A  00                 	db	0
  1239  00776B  79                 	db	121
  1240  00776C  7D                 	db	125
  1241  00776D  16                 	db	22
  1242  00776E  12                 	db	18
  1243  00776F  16                 	db	22
  1244  007770  7D                 	db	125
  1245  007771  79                 	db	121
  1246  007772  00                 	db	0
  1247  007773  70                 	db	112
  1248  007774  78                 	db	120
  1249  007775  2B                 	db	43
  1250  007776  2B                 	db	43
  1251  007777  78                 	db	120
  1252  007778  70                 	db	112
  1253  007779  00                 	db	0
  1254  00777A  00                 	db	0
  1255  00777B  44                 	db	68
  1256  00777C  7C                 	db	124
  1257  00777D  7C                 	db	124
  1258  00777E  55                 	db	85
  1259  00777F  55                 	db	85
  1260  007780  45                 	db	69
  1261  007781  00                 	db	0
  1262  007782  00                 	db	0
  1263  007783  20                 	db	32
  1264  007784  74                 	db	116
  1265  007785  54                 	db	84
  1266  007786  54                 	db	84
  1267  007787  7C                 	db	124
  1268  007788  7C                 	db	124
  1269  007789  54                 	db	84
  1270  00778A  54                 	db	84
  1271  00778B  7C                 	db	124
  1272  00778C  7E                 	db	126
  1273  00778D  0B                 	db	11
  1274  00778E  09                 	db	9
  1275  00778F  7F                 	db	127
  1276  007790  7F                 	db	127
  1277  007791  49                 	db	73
  1278  007792  00                 	db	0
  1279  007793  32                 	db	50
  1280  007794  7B                 	db	123
  1281  007795  49                 	db	73
  1282  007796  49                 	db	73
  1283  007797  7B                 	db	123
  1284  007798  32                 	db	50
  1285  007799  00                 	db	0
  1286  00779A  00                 	db	0
  1287  00779B  32                 	db	50
  1288  00779C  7A                 	db	122
  1289  00779D  48                 	db	72
  1290  00779E  48                 	db	72
  1291  00779F  7A                 	db	122
  1292  0077A0  32                 	db	50
  1293  0077A1  00                 	db	0
  1294  0077A2  00                 	db	0
  1295  0077A3  32                 	db	50
  1296  0077A4  7A                 	db	122
  1297  0077A5  4A                 	db	74
  1298  0077A6  48                 	db	72
  1299  0077A7  78                 	db	120
  1300  0077A8  30                 	db	48
  1301  0077A9  00                 	db	0
  1302  0077AA  00                 	db	0
  1303  0077AB  3A                 	db	58
  1304  0077AC  7B                 	db	123
  1305  0077AD  41                 	db	65
  1306  0077AE  41                 	db	65
  1307  0077AF  7B                 	db	123
  1308  0077B0  7A                 	db	122
  1309  0077B1  40                 	db	64
  1310  0077B2  00                 	db	0
  1311  0077B3  3A                 	db	58
  1312  0077B4  7A                 	db	122
  1313  0077B5  42                 	db	66
  1314  0077B6  40                 	db	64
  1315  0077B7  78                 	db	120
  1316  0077B8  78                 	db	120
  1317  0077B9  40                 	db	64
  1318  0077BA  00                 	db	0
  1319  0077BB  9A                 	db	154
  1320  0077BC  BA                 	db	186
  1321  0077BD  A0                 	db	160
  1322  0077BE  A0                 	db	160
  1323  0077BF  FA                 	db	250
  1324  0077C0  7A                 	db	122
  1325  0077C1  00                 	db	0
  1326  0077C2  00                 	db	0
  1327  0077C3  01                 	db	1
  1328  0077C4  19                 	db	25
  1329  0077C5  3C                 	db	60
  1330  0077C6  66                 	db	102
  1331  0077C7  66                 	db	102
  1332  0077C8  3C                 	db	60
  1333  0077C9  19                 	db	25
  1334  0077CA  01                 	db	1
  1335  0077CB  3D                 	db	61
  1336  0077CC  7D                 	db	125
  1337  0077CD  40                 	db	64
  1338  0077CE  40                 	db	64
  1339  0077CF  7D                 	db	125
  1340  0077D0  3D                 	db	61
  1341  0077D1  00                 	db	0
  1342  0077D2  00                 	db	0
  1343  0077D3  18                 	db	24
  1344  0077D4  3C                 	db	60
  1345  0077D5  24                 	db	36
  1346  0077D6  E7                 	db	231
  1347  0077D7  E7                 	db	231
  1348  0077D8  24                 	db	36
  1349  0077D9  24                 	db	36
  1350  0077DA  00                 	db	0
  1351  0077DB  68                 	db	104
  1352  0077DC  7E                 	db	126
  1353  0077DD  7F                 	db	127
  1354  0077DE  49                 	db	73
  1355  0077DF  43                 	db	67
  1356  0077E0  66                 	db	102
  1357  0077E1  20                 	db	32
  1358  0077E2  00                 	db	0
  1359  0077E3  2B                 	db	43
  1360  0077E4  2F                 	db	47
  1361  0077E5  FC                 	db	252
  1362  0077E6  FC                 	db	252
  1363  0077E7  2F                 	db	47
  1364  0077E8  2B                 	db	43
  1365  0077E9  00                 	db	0
  1366  0077EA  00                 	db	0
  1367  0077EB  FF                 	db	255
  1368  0077EC  FF                 	db	255
  1369  0077ED  09                 	db	9
  1370  0077EE  09                 	db	9
  1371  0077EF  2F                 	db	47
  1372  0077F0  F6                 	db	246
  1373  0077F1  F8                 	db	248
  1374  0077F2  A0                 	db	160
  1375  0077F3  40                 	db	64
  1376  0077F4  C0                 	db	192
  1377  0077F5  88                 	db	136
  1378  0077F6  FE                 	db	254
  1379  0077F7  7F                 	db	127
  1380  0077F8  09                 	db	9
  1381  0077F9  03                 	db	3
  1382  0077FA  02                 	db	2
  1383  0077FB  20                 	db	32
  1384  0077FC  74                 	db	116
  1385  0077FD  54                 	db	84
  1386  0077FE  55                 	db	85
  1387  0077FF  7D                 	db	125
  1388  007800  79                 	db	121
  1389  007801  40                 	db	64
  1390  007802  00                 	db	0
  1391  007803  00                 	db	0
  1392  007804  44                 	db	68
  1393  007805  7D                 	db	125
  1394  007806  7D                 	db	125
  1395  007807  41                 	db	65
  1396  007808  00                 	db	0
  1397  007809  00                 	db	0
  1398  00780A  00                 	db	0
  1399  00780B  30                 	db	48
  1400  00780C  78                 	db	120
  1401  00780D  48                 	db	72
  1402  00780E  4A                 	db	74
  1403  00780F  7A                 	db	122
  1404  007810  32                 	db	50
  1405  007811  00                 	db	0
  1406  007812  00                 	db	0
  1407  007813  38                 	db	56
  1408  007814  78                 	db	120
  1409  007815  40                 	db	64
  1410  007816  42                 	db	66
  1411  007817  7A                 	db	122
  1412  007818  7A                 	db	122
  1413  007819  40                 	db	64
  1414  00781A  00                 	db	0
  1415  00781B  7A                 	db	122
  1416  00781C  7A                 	db	122
  1417  00781D  0A                 	db	10
  1418  00781E  0A                 	db	10
  1419  00781F  7A                 	db	122
  1420  007820  70                 	db	112
  1421  007821  00                 	db	0
  1422  007822  00                 	db	0
  1423  007823  7D                 	db	125
  1424  007824  7D                 	db	125
  1425  007825  19                 	db	25
  1426  007826  31                 	db	49
  1427  007827  7D                 	db	125
  1428  007828  7D                 	db	125
  1429  007829  00                 	db	0
  1430  00782A  00                 	db	0
  1431  00782B  00                 	db	0
  1432  00782C  26                 	db	38
  1433  00782D  2F                 	db	47
  1434  00782E  29                 	db	41
  1435  00782F  2F                 	db	47
  1436  007830  2F                 	db	47
  1437  007831  28                 	db	40
  1438  007832  00                 	db	0
  1439  007833  00                 	db	0
  1440  007834  26                 	db	38
  1441  007835  2F                 	db	47
  1442  007836  29                 	db	41
  1443  007837  2F                 	db	47
  1444  007838  26                 	db	38
  1445  007839  00                 	db	0
  1446  00783A  00                 	db	0
  1447  00783B  30                 	db	48
  1448  00783C  78                 	db	120
  1449  00783D  4D                 	db	77
  1450  00783E  45                 	db	69
  1451  00783F  60                 	db	96
  1452  007840  20                 	db	32
  1453  007841  00                 	db	0
  1454  007842  00                 	db	0
  1455  007843  38                 	db	56
  1456  007844  38                 	db	56
  1457  007845  08                 	db	8
  1458  007846  08                 	db	8
  1459  007847  08                 	db	8
  1460  007848  08                 	db	8
  1461  007849  00                 	db	0
  1462  00784A  00                 	db	0
  1463  00784B  08                 	db	8
  1464  00784C  08                 	db	8
  1465  00784D  08                 	db	8
  1466  00784E  08                 	db	8
  1467  00784F  38                 	db	56
  1468  007850  38                 	db	56
  1469  007851  00                 	db	0
  1470  007852  00                 	db	0
  1471  007853  4F                 	db	79
  1472  007854  6F                 	db	111
  1473  007855  30                 	db	48
  1474  007856  18                 	db	24
  1475  007857  CC                 	db	204
  1476  007858  EE                 	db	238
  1477  007859  BB                 	db	187
  1478  00785A  91                 	db	145
  1479  00785B  4F                 	db	79
  1480  00785C  6F                 	db	111
  1481  00785D  30                 	db	48
  1482  00785E  18                 	db	24
  1483  00785F  6C                 	db	108
  1484  007860  76                 	db	118
  1485  007861  FB                 	db	251
  1486  007862  F9                 	db	249
  1487  007863  00                 	db	0
  1488  007864  00                 	db	0
  1489  007865  00                 	db	0
  1490  007866  7B                 	db	123
  1491  007867  7B                 	db	123
  1492  007868  00                 	db	0
  1493  007869  00                 	db	0
  1494  00786A  00                 	db	0
  1495  00786B  08                 	db	8
  1496  00786C  1C                 	db	28
  1497  00786D  36                 	db	54
  1498  00786E  22                 	db	34
  1499  00786F  08                 	db	8
  1500  007870  1C                 	db	28
  1501  007871  36                 	db	54
  1502  007872  22                 	db	34
  1503  007873  22                 	db	34
  1504  007874  36                 	db	54
  1505  007875  1C                 	db	28
  1506  007876  08                 	db	8
  1507  007877  22                 	db	34
  1508  007878  36                 	db	54
  1509  007879  1C                 	db	28
  1510  00787A  08                 	db	8
  1511  00787B  AA                 	db	170
  1512  00787C  00                 	db	0
  1513  00787D  55                 	db	85
  1514  00787E  00                 	db	0
  1515  00787F  AA                 	db	170
  1516  007880  00                 	db	0
  1517  007881  55                 	db	85
  1518  007882  00                 	db	0
  1519  007883  AA                 	db	170
  1520  007884  55                 	db	85
  1521  007885  AA                 	db	170
  1522  007886  55                 	db	85
  1523  007887  AA                 	db	170
  1524  007888  55                 	db	85
  1525  007889  AA                 	db	170
  1526  00788A  55                 	db	85
  1527  00788B  DD                 	db	221
  1528  00788C  FF                 	db	255
  1529  00788D  AA                 	db	170
  1530  00788E  77                 	db	119
  1531  00788F  DD                 	db	221
  1532  007890  AA                 	db	170
  1533  007891  FF                 	db	255
  1534  007892  77                 	db	119
  1535  007893  00                 	db	0
  1536  007894  00                 	db	0
  1537  007895  00                 	db	0
  1538  007896  FF                 	db	255
  1539  007897  FF                 	db	255
  1540  007898  00                 	db	0
  1541  007899  00                 	db	0
  1542  00789A  00                 	db	0
  1543  00789B  10                 	db	16
  1544  00789C  10                 	db	16
  1545  00789D  10                 	db	16
  1546  00789E  FF                 	db	255
  1547  00789F  FF                 	db	255
  1548  0078A0  00                 	db	0
  1549  0078A1  00                 	db	0
  1550  0078A2  00                 	db	0
  1551  0078A3  14                 	db	20
  1552  0078A4  14                 	db	20
  1553  0078A5  14                 	db	20
  1554  0078A6  FF                 	db	255
  1555  0078A7  FF                 	db	255
  1556  0078A8  00                 	db	0
  1557  0078A9  00                 	db	0
  1558  0078AA  00                 	db	0
  1559  0078AB  10                 	db	16
  1560  0078AC  10                 	db	16
  1561  0078AD  FF                 	db	255
  1562  0078AE  FF                 	db	255
  1563  0078AF  00                 	db	0
  1564  0078B0  FF                 	db	255
  1565  0078B1  FF                 	db	255
  1566  0078B2  00                 	db	0
  1567  0078B3  10                 	db	16
  1568  0078B4  10                 	db	16
  1569  0078B5  F0                 	db	240
  1570  0078B6  F0                 	db	240
  1571  0078B7  10                 	db	16
  1572  0078B8  F0                 	db	240
  1573  0078B9  F0                 	db	240
  1574  0078BA  00                 	db	0
  1575  0078BB  14                 	db	20
  1576  0078BC  14                 	db	20
  1577  0078BD  14                 	db	20
  1578  0078BE  FC                 	db	252
  1579  0078BF  FC                 	db	252
  1580  0078C0  00                 	db	0
  1581  0078C1  00                 	db	0
  1582  0078C2  00                 	db	0
  1583  0078C3  14                 	db	20
  1584  0078C4  14                 	db	20
  1585  0078C5  F7                 	db	247
  1586  0078C6  F7                 	db	247
  1587  0078C7  00                 	db	0
  1588  0078C8  FF                 	db	255
  1589  0078C9  FF                 	db	255
  1590  0078CA  00                 	db	0
  1591  0078CB  00                 	db	0
  1592  0078CC  00                 	db	0
  1593  0078CD  FF                 	db	255
  1594  0078CE  FF                 	db	255
  1595  0078CF  00                 	db	0
  1596  0078D0  FF                 	db	255
  1597  0078D1  FF                 	db	255
  1598  0078D2  00                 	db	0
  1599  0078D3  14                 	db	20
  1600  0078D4  14                 	db	20
  1601  0078D5  F4                 	db	244
  1602  0078D6  F4                 	db	244
  1603  0078D7  04                 	db	4
  1604  0078D8  FC                 	db	252
  1605  0078D9  FC                 	db	252
  1606  0078DA  00                 	db	0
  1607  0078DB  14                 	db	20
  1608  0078DC  14                 	db	20
  1609  0078DD  17                 	db	23
  1610  0078DE  17                 	db	23
  1611  0078DF  10                 	db	16
  1612  0078E0  1F                 	db	31
  1613  0078E1  1F                 	db	31
  1614  0078E2  00                 	db	0
  1615  0078E3  10                 	db	16
  1616  0078E4  10                 	db	16
  1617  0078E5  1F                 	db	31
  1618  0078E6  1F                 	db	31
  1619  0078E7  10                 	db	16
  1620  0078E8  1F                 	db	31
  1621  0078E9  1F                 	db	31
  1622  0078EA  00                 	db	0
  1623  0078EB  14                 	db	20
  1624  0078EC  14                 	db	20
  1625  0078ED  14                 	db	20
  1626  0078EE  1F                 	db	31
  1627  0078EF  1F                 	db	31
  1628  0078F0  00                 	db	0
  1629  0078F1  00                 	db	0
  1630  0078F2  00                 	db	0
  1631  0078F3  10                 	db	16
  1632  0078F4  10                 	db	16
  1633  0078F5  10                 	db	16
  1634  0078F6  F0                 	db	240
  1635  0078F7  F0                 	db	240
  1636  0078F8  00                 	db	0
  1637  0078F9  00                 	db	0
  1638  0078FA  00                 	db	0
  1639  0078FB  00                 	db	0
  1640  0078FC  00                 	db	0
  1641  0078FD  00                 	db	0
  1642  0078FE  1F                 	db	31
  1643  0078FF  1F                 	db	31
  1644  007900  10                 	db	16
  1645  007901  10                 	db	16
  1646  007902  10                 	db	16
  1647  007903  10                 	db	16
  1648  007904  10                 	db	16
  1649  007905  10                 	db	16
  1650  007906  1F                 	db	31
  1651  007907  1F                 	db	31
  1652  007908  10                 	db	16
  1653  007909  10                 	db	16
  1654  00790A  10                 	db	16
  1655  00790B  10                 	db	16
  1656  00790C  10                 	db	16
  1657  00790D  10                 	db	16
  1658  00790E  F0                 	db	240
  1659  00790F  F0                 	db	240
  1660  007910  10                 	db	16
  1661  007911  10                 	db	16
  1662  007912  10                 	db	16
  1663  007913  00                 	db	0
  1664  007914  00                 	db	0
  1665  007915  00                 	db	0
  1666  007916  FF                 	db	255
  1667  007917  FF                 	db	255
  1668  007918  10                 	db	16
  1669  007919  10                 	db	16
  1670  00791A  10                 	db	16
  1671  00791B  10                 	db	16
  1672  00791C  10                 	db	16
  1673  00791D  10                 	db	16
  1674  00791E  10                 	db	16
  1675  00791F  10                 	db	16
  1676  007920  10                 	db	16
  1677  007921  10                 	db	16
  1678  007922  10                 	db	16
  1679  007923  10                 	db	16
  1680  007924  10                 	db	16
  1681  007925  10                 	db	16
  1682  007926  FF                 	db	255
  1683  007927  FF                 	db	255
  1684  007928  10                 	db	16
  1685  007929  10                 	db	16
  1686  00792A  10                 	db	16
  1687  00792B  00                 	db	0
  1688  00792C  00                 	db	0
  1689  00792D  00                 	db	0
  1690  00792E  FF                 	db	255
  1691  00792F  FF                 	db	255
  1692  007930  14                 	db	20
  1693  007931  14                 	db	20
  1694  007932  14                 	db	20
  1695  007933  00                 	db	0
  1696  007934  00                 	db	0
  1697  007935  FF                 	db	255
  1698  007936  FF                 	db	255
  1699  007937  00                 	db	0
  1700  007938  FF                 	db	255
  1701  007939  FF                 	db	255
  1702  00793A  10                 	db	16
  1703  00793B  00                 	db	0
  1704  00793C  00                 	db	0
  1705  00793D  1F                 	db	31
  1706  00793E  1F                 	db	31
  1707  00793F  10                 	db	16
  1708  007940  17                 	db	23
  1709  007941  17                 	db	23
  1710  007942  14                 	db	20
  1711  007943  00                 	db	0
  1712  007944  00                 	db	0
  1713  007945  FC                 	db	252
  1714  007946  FC                 	db	252
  1715  007947  04                 	db	4
  1716  007948  F4                 	db	244
  1717  007949  F4                 	db	244
  1718  00794A  14                 	db	20
  1719  00794B  14                 	db	20
  1720  00794C  14                 	db	20
  1721  00794D  17                 	db	23
  1722  00794E  17                 	db	23
  1723  00794F  10                 	db	16
  1724  007950  17                 	db	23
  1725  007951  17                 	db	23
  1726  007952  14                 	db	20
  1727  007953  14                 	db	20
  1728  007954  14                 	db	20
  1729  007955  F4                 	db	244
  1730  007956  F4                 	db	244
  1731  007957  04                 	db	4
  1732  007958  F4                 	db	244
  1733  007959  F4                 	db	244
  1734  00795A  14                 	db	20
  1735  00795B  00                 	db	0
  1736  00795C  00                 	db	0
  1737  00795D  FF                 	db	255
  1738  00795E  FF                 	db	255
  1739  00795F  00                 	db	0
  1740  007960  F7                 	db	247
  1741  007961  F7                 	db	247
  1742  007962  14                 	db	20
  1743  007963  14                 	db	20
  1744  007964  14                 	db	20
  1745  007965  14                 	db	20
  1746  007966  14                 	db	20
  1747  007967  14                 	db	20
  1748  007968  14                 	db	20
  1749  007969  14                 	db	20
  1750  00796A  14                 	db	20
  1751  00796B  14                 	db	20
  1752  00796C  14                 	db	20
  1753  00796D  F7                 	db	247
  1754  00796E  F7                 	db	247
  1755  00796F  00                 	db	0
  1756  007970  F7                 	db	247
  1757  007971  F7                 	db	247
  1758  007972  14                 	db	20
  1759  007973  14                 	db	20
  1760  007974  14                 	db	20
  1761  007975  14                 	db	20
  1762  007976  17                 	db	23
  1763  007977  17                 	db	23
  1764  007978  14                 	db	20
  1765  007979  14                 	db	20
  1766  00797A  14                 	db	20
  1767  00797B  10                 	db	16
  1768  00797C  10                 	db	16
  1769  00797D  1F                 	db	31
  1770  00797E  1F                 	db	31
  1771  00797F  10                 	db	16
  1772  007980  1F                 	db	31
  1773  007981  1F                 	db	31
  1774  007982  10                 	db	16
  1775  007983  14                 	db	20
  1776  007984  14                 	db	20
  1777  007985  14                 	db	20
  1778  007986  F4                 	db	244
  1779  007987  F4                 	db	244
  1780  007988  14                 	db	20
  1781  007989  14                 	db	20
  1782  00798A  14                 	db	20
  1783  00798B  10                 	db	16
  1784  00798C  10                 	db	16
  1785  00798D  F0                 	db	240
  1786  00798E  F0                 	db	240
  1787  00798F  10                 	db	16
  1788  007990  F0                 	db	240
  1789  007991  F0                 	db	240
  1790  007992  10                 	db	16
  1791  007993  00                 	db	0
  1792  007994  00                 	db	0
  1793  007995  1F                 	db	31
  1794  007996  1F                 	db	31
  1795  007997  10                 	db	16
  1796  007998  1F                 	db	31
  1797  007999  1F                 	db	31
  1798  00799A  10                 	db	16
  1799  00799B  00                 	db	0
  1800  00799C  00                 	db	0
  1801  00799D  00                 	db	0
  1802  00799E  1F                 	db	31
  1803  00799F  1F                 	db	31
  1804  0079A0  14                 	db	20
  1805  0079A1  14                 	db	20
  1806  0079A2  14                 	db	20
  1807  0079A3  00                 	db	0
  1808  0079A4  00                 	db	0
  1809  0079A5  00                 	db	0
  1810  0079A6  FC                 	db	252
  1811  0079A7  FC                 	db	252
  1812  0079A8  14                 	db	20
  1813  0079A9  14                 	db	20
  1814  0079AA  14                 	db	20
  1815  0079AB  00                 	db	0
  1816  0079AC  00                 	db	0
  1817  0079AD  F0                 	db	240
  1818  0079AE  F0                 	db	240
  1819  0079AF  10                 	db	16
  1820  0079B0  F0                 	db	240
  1821  0079B1  F0                 	db	240
  1822  0079B2  10                 	db	16
  1823  0079B3  10                 	db	16
  1824  0079B4  10                 	db	16
  1825  0079B5  FF                 	db	255
  1826  0079B6  FF                 	db	255
  1827  0079B7  10                 	db	16
  1828  0079B8  FF                 	db	255
  1829  0079B9  FF                 	db	255
  1830  0079BA  10                 	db	16
  1831  0079BB  14                 	db	20
  1832  0079BC  14                 	db	20
  1833  0079BD  14                 	db	20
  1834  0079BE  FF                 	db	255
  1835  0079BF  FF                 	db	255
  1836  0079C0  14                 	db	20
  1837  0079C1  14                 	db	20
  1838  0079C2  14                 	db	20
  1839  0079C3  10                 	db	16
  1840  0079C4  10                 	db	16
  1841  0079C5  10                 	db	16
  1842  0079C6  1F                 	db	31
  1843  0079C7  1F                 	db	31
  1844  0079C8  00                 	db	0
  1845  0079C9  00                 	db	0
  1846  0079CA  00                 	db	0
  1847  0079CB  00                 	db	0
  1848  0079CC  00                 	db	0
  1849  0079CD  00                 	db	0
  1850  0079CE  F0                 	db	240
  1851  0079CF  F0                 	db	240
  1852  0079D0  10                 	db	16
  1853  0079D1  10                 	db	16
  1854  0079D2  10                 	db	16
  1855  0079D3  FF                 	db	255
  1856  0079D4  FF                 	db	255
  1857  0079D5  FF                 	db	255
  1858  0079D6  FF                 	db	255
  1859  0079D7  FF                 	db	255
  1860  0079D8  FF                 	db	255
  1861  0079D9  FF                 	db	255
  1862  0079DA  FF                 	db	255
  1863  0079DB  F0                 	db	240
  1864  0079DC  F0                 	db	240
  1865  0079DD  F0                 	db	240
  1866  0079DE  F0                 	db	240
  1867  0079DF  F0                 	db	240
  1868  0079E0  F0                 	db	240
  1869  0079E1  F0                 	db	240
  1870  0079E2  F0                 	db	240
  1871  0079E3  FF                 	db	255
  1872  0079E4  FF                 	db	255
  1873  0079E5  FF                 	db	255
  1874  0079E6  FF                 	db	255
  1875  0079E7  00                 	db	0
  1876  0079E8  00                 	db	0
  1877  0079E9  00                 	db	0
  1878  0079EA  00                 	db	0
  1879  0079EB  00                 	db	0
  1880  0079EC  00                 	db	0
  1881  0079ED  00                 	db	0
  1882  0079EE  00                 	db	0
  1883  0079EF  FF                 	db	255
  1884  0079F0  FF                 	db	255
  1885  0079F1  FF                 	db	255
  1886  0079F2  FF                 	db	255
  1887  0079F3  0F                 	db	15
  1888  0079F4  0F                 	db	15
  1889  0079F5  0F                 	db	15
  1890  0079F6  0F                 	db	15
  1891  0079F7  0F                 	db	15
  1892  0079F8  0F                 	db	15
  1893  0079F9  0F                 	db	15
  1894  0079FA  0F                 	db	15
  1895  0079FB  38                 	db	56
  1896  0079FC  7C                 	db	124
  1897  0079FD  44                 	db	68
  1898  0079FE  6C                 	db	108
  1899  0079FF  38                 	db	56
  1900  007A00  6C                 	db	108
  1901  007A01  44                 	db	68
  1902  007A02  00                 	db	0
  1903  007A03  FC                 	db	252
  1904  007A04  FE                 	db	254
  1905  007A05  2A                 	db	42
  1906  007A06  2A                 	db	42
  1907  007A07  3E                 	db	62
  1908  007A08  14                 	db	20
  1909  007A09  00                 	db	0
  1910  007A0A  00                 	db	0
  1911  007A0B  7E                 	db	126
  1912  007A0C  7E                 	db	126
  1913  007A0D  02                 	db	2
  1914  007A0E  02                 	db	2
  1915  007A0F  06                 	db	6
  1916  007A10  06                 	db	6
  1917  007A11  00                 	db	0
  1918  007A12  00                 	db	0
  1919  007A13  02                 	db	2
  1920  007A14  7E                 	db	126
  1921  007A15  7E                 	db	126
  1922  007A16  02                 	db	2
  1923  007A17  7E                 	db	126
  1924  007A18  7E                 	db	126
  1925  007A19  02                 	db	2
  1926  007A1A  00                 	db	0
  1927  007A1B  63                 	db	99
  1928  007A1C  77                 	db	119
  1929  007A1D  5D                 	db	93
  1930  007A1E  49                 	db	73
  1931  007A1F  63                 	db	99
  1932  007A20  63                 	db	99
  1933  007A21  00                 	db	0
  1934  007A22  00                 	db	0
  1935  007A23  38                 	db	56
  1936  007A24  7C                 	db	124
  1937  007A25  44                 	db	68
  1938  007A26  7C                 	db	124
  1939  007A27  3C                 	db	60
  1940  007A28  04                 	db	4
  1941  007A29  04                 	db	4
  1942  007A2A  00                 	db	0
  1943  007A2B  80                 	db	128
  1944  007A2C  FE                 	db	254
  1945  007A2D  7E                 	db	126
  1946  007A2E  20                 	db	32
  1947  007A2F  20                 	db	32
  1948  007A30  3E                 	db	62
  1949  007A31  1E                 	db	30
  1950  007A32  00                 	db	0
  1951  007A33  04                 	db	4
  1952  007A34  06                 	db	6
  1953  007A35  02                 	db	2
  1954  007A36  7E                 	db	126
  1955  007A37  7C                 	db	124
  1956  007A38  06                 	db	6
  1957  007A39  02                 	db	2
  1958  007A3A  00                 	db	0
  1959  007A3B  99                 	db	153
  1960  007A3C  BD                 	db	189
  1961  007A3D  E7                 	db	231
  1962  007A3E  E7                 	db	231
  1963  007A3F  BD                 	db	189
  1964  007A40  99                 	db	153
  1965  007A41  00                 	db	0
  1966  007A42  00                 	db	0
  1967  007A43  1C                 	db	28
  1968  007A44  3E                 	db	62
  1969  007A45  6B                 	db	107
  1970  007A46  49                 	db	73
  1971  007A47  6B                 	db	107
  1972  007A48  3E                 	db	62
  1973  007A49  1C                 	db	28
  1974  007A4A  00                 	db	0
  1975  007A4B  4C                 	db	76
  1976  007A4C  7E                 	db	126
  1977  007A4D  73                 	db	115
  1978  007A4E  01                 	db	1
  1979  007A4F  73                 	db	115
  1980  007A50  7E                 	db	126
  1981  007A51  4C                 	db	76
  1982  007A52  00                 	db	0
  1983  007A53  30                 	db	48
  1984  007A54  78                 	db	120
  1985  007A55  4A                 	db	74
  1986  007A56  4F                 	db	79
  1987  007A57  7D                 	db	125
  1988  007A58  39                 	db	57
  1989  007A59  00                 	db	0
  1990  007A5A  00                 	db	0
  1991  007A5B  18                 	db	24
  1992  007A5C  3C                 	db	60
  1993  007A5D  24                 	db	36
  1994  007A5E  3C                 	db	60
  1995  007A5F  3C                 	db	60
  1996  007A60  24                 	db	36
  1997  007A61  3C                 	db	60
  1998  007A62  18                 	db	24
  1999  007A63  98                 	db	152
  2000  007A64  FC                 	db	252
  2001  007A65  64                 	db	100
  2002  007A66  3C                 	db	60
  2003  007A67  3E                 	db	62
  2004  007A68  27                 	db	39
  2005  007A69  3D                 	db	61
  2006  007A6A  18                 	db	24
  2007  007A6B  00                 	db	0
  2008  007A6C  00                 	db	0
  2009  007A6D  00                 	db	0
  2010  007A6E  00                 	db	0
  2011  007A6F  00                 	db	0
  2012  007A70  00                 	db	0
  2013  007A71  00                 	db	0
  2014  007A72  00                 	db	0
  2015  007A73  00                 	db	0
  2016  007A74  00                 	db	0
  2017  007A75  00                 	db	0
  2018  007A76  00                 	db	0
  2019  007A77  00                 	db	0
  2020  007A78  00                 	db	0
  2021  007A79  00                 	db	0
  2022  007A7A  00                 	db	0
  2023  007A7B  00                 	db	0
  2024  007A7C  00                 	db	0
  2025  007A7D  00                 	db	0
  2026  007A7E  00                 	db	0
  2027  007A7F  00                 	db	0
  2028  007A80  00                 	db	0
  2029  007A81  00                 	db	0
  2030  007A82  00                 	db	0
  2031  007A83  00                 	db	0
  2032  007A84  00                 	db	0
  2033  007A85  00                 	db	0
  2034  007A86  00                 	db	0
  2035  007A87  00                 	db	0
  2036  007A88  00                 	db	0
  2037  007A89  00                 	db	0
  2038  007A8A  00                 	db	0
  2039  007A8B  00                 	db	0
  2040  007A8C  00                 	db	0
  2041  007A8D  00                 	db	0
  2042  007A8E  00                 	db	0
  2043  007A8F  00                 	db	0
  2044  007A90  00                 	db	0
  2045  007A91  00                 	db	0
  2046  007A92  00                 	db	0
  2047  007A93  00                 	db	0
  2048  007A94  00                 	db	0
  2049  007A95  00                 	db	0
  2050  007A96  00                 	db	0
  2051  007A97  00                 	db	0
  2052  007A98  00                 	db	0
  2053  007A99  00                 	db	0
  2054  007A9A  00                 	db	0
  2055  007A9B  00                 	db	0
  2056  007A9C  00                 	db	0
  2057  007A9D  00                 	db	0
  2058  007A9E  00                 	db	0
  2059  007A9F  00                 	db	0
  2060  007AA0  00                 	db	0
  2061  007AA1  00                 	db	0
  2062  007AA2  00                 	db	0
  2063  007AA3  00                 	db	0
  2064  007AA4  00                 	db	0
  2065  007AA5  00                 	db	0
  2066  007AA6  00                 	db	0
  2067  007AA7  00                 	db	0
  2068  007AA8  00                 	db	0
  2069  007AA9  00                 	db	0
  2070  007AAA  00                 	db	0
  2071  007AAB  00                 	db	0
  2072  007AAC  00                 	db	0
  2073  007AAD  00                 	db	0
  2074  007AAE  00                 	db	0
  2075  007AAF  00                 	db	0
  2076  007AB0  00                 	db	0
  2077  007AB1  00                 	db	0
  2078  007AB2  00                 	db	0
  2079  007AB3  00                 	db	0
  2080  007AB4  00                 	db	0
  2081  007AB5  00                 	db	0
  2082  007AB6  00                 	db	0
  2083  007AB7  00                 	db	0
  2084  007AB8  00                 	db	0
  2085  007AB9  00                 	db	0
  2086  007ABA  00                 	db	0
  2087  007ABB  00                 	db	0
  2088  007ABC  00                 	db	0
  2089  007ABD  00                 	db	0
  2090  007ABE  00                 	db	0
  2091  007ABF  00                 	db	0
  2092  007AC0  00                 	db	0
  2093  007AC1  00                 	db	0
  2094  007AC2  00                 	db	0
  2095  007AC3  00                 	db	0
  2096  007AC4  00                 	db	0
  2097  007AC5  00                 	db	0
  2098  007AC6  00                 	db	0
  2099  007AC7  00                 	db	0
  2100  007AC8  00                 	db	0
  2101  007AC9  00                 	db	0
  2102  007ACA  00                 	db	0
  2103  007ACB  00                 	db	0
  2104  007ACC  00                 	db	0
  2105  007ACD  00                 	db	0
  2106  007ACE  00                 	db	0
  2107  007ACF  00                 	db	0
  2108  007AD0  00                 	db	0
  2109  007AD1  00                 	db	0
  2110  007AD2  00                 	db	0
  2111  007AD3  00                 	db	0
  2112  007AD4  00                 	db	0
  2113  007AD5  00                 	db	0
  2114  007AD6  00                 	db	0
  2115  007AD7  00                 	db	0
  2116  007AD8  00                 	db	0
  2117  007AD9  00                 	db	0
  2118  007ADA  00                 	db	0
  2119  007ADB  00                 	db	0
  2120  007ADC  00                 	db	0
  2121  007ADD  00                 	db	0
  2122  007ADE  00                 	db	0
  2123  007ADF  00                 	db	0
  2124  007AE0  00                 	db	0
  2125  007AE1  00                 	db	0
  2126  007AE2  00                 	db	0
  2127  007AE3  00                 	db	0
  2128  007AE4  00                 	db	0
  2129  007AE5  00                 	db	0
  2130  007AE6  00                 	db	0
  2131  007AE7  00                 	db	0
  2132  007AE8  00                 	db	0
  2133  007AE9  00                 	db	0
  2134  007AEA  00                 	db	0
  2135  007AEB  00                 	db	0
  2136  007AEC  00                 	db	0
  2137  007AED  00                 	db	0
  2138  007AEE  00                 	db	0
  2139  007AEF  00                 	db	0
  2140  007AF0  00                 	db	0
  2141  007AF1  00                 	db	0
  2142  007AF2  00                 	db	0
  2143  007AF3  00                 	db	0
  2144  007AF4  00                 	db	0
  2145  007AF5  00                 	db	0
  2146  007AF6  00                 	db	0
  2147  007AF7  00                 	db	0
  2148  007AF8  00                 	db	0
  2149  007AF9  00                 	db	0
  2150  007AFA  00                 	db	0
  2151  007AFB                     __end_of_Font8x8:
  2152                           	opt stack 0
  2153  007AFB                     _accueil:
  2154                           	opt stack 0
  2155  007AFB  FF                 	db	255
  2156  007AFC  FF                 	db	255
  2157  007AFD  FF                 	db	255
  2158  007AFE  FF                 	db	255
  2159  007AFF  FF                 	db	255
  2160  007B00  FF                 	db	255
  2161  007B01  FF                 	db	255
  2162  007B02  FF                 	db	255
  2163  007B03  FF                 	db	255
  2164  007B04  FF                 	db	255
  2165  007B05  FF                 	db	255
  2166  007B06  FF                 	db	255
  2167  007B07  FF                 	db	255
  2168  007B08  FF                 	db	255
  2169  007B09  FF                 	db	255
  2170  007B0A  FF                 	db	255
  2171  007B0B  FF                 	db	255
  2172  007B0C  FF                 	db	255
  2173  007B0D  FF                 	db	255
  2174  007B0E  FF                 	db	255
  2175  007B0F  FF                 	db	255
  2176  007B10  FF                 	db	255
  2177  007B11  FF                 	db	255
  2178  007B12  FF                 	db	255
  2179  007B13  FF                 	db	255
  2180  007B14  FF                 	db	255
  2181  007B15  FF                 	db	255
  2182  007B16  FF                 	db	255
  2183  007B17  FF                 	db	255
  2184  007B18  FF                 	db	255
  2185  007B19  FF                 	db	255
  2186  007B1A  FF                 	db	255
  2187  007B1B  FF                 	db	255
  2188  007B1C  FF                 	db	255
  2189  007B1D  FF                 	db	255
  2190  007B1E  FF                 	db	255
  2191  007B1F  FF                 	db	255
  2192  007B20  FF                 	db	255
  2193  007B21  FF                 	db	255
  2194  007B22  FF                 	db	255
  2195  007B23  FF                 	db	255
  2196  007B24  FF                 	db	255
  2197  007B25  FF                 	db	255
  2198  007B26  FF                 	db	255
  2199  007B27  FF                 	db	255
  2200  007B28  FF                 	db	255
  2201  007B29  FF                 	db	255
  2202  007B2A  FF                 	db	255
  2203  007B2B  FF                 	db	255
  2204  007B2C  FF                 	db	255
  2205  007B2D  FF                 	db	255
  2206  007B2E  FF                 	db	255
  2207  007B2F  FF                 	db	255
  2208  007B30  FF                 	db	255
  2209  007B31  FF                 	db	255
  2210  007B32  FF                 	db	255
  2211  007B33  FF                 	db	255
  2212  007B34  FF                 	db	255
  2213  007B35  FF                 	db	255
  2214  007B36  FF                 	db	255
  2215  007B37  FF                 	db	255
  2216  007B38  FF                 	db	255
  2217  007B39  FF                 	db	255
  2218  007B3A  FF                 	db	255
  2219  007B3B  FF                 	db	255
  2220  007B3C  FF                 	db	255
  2221  007B3D  FF                 	db	255
  2222  007B3E  FF                 	db	255
  2223  007B3F  FF                 	db	255
  2224  007B40  FF                 	db	255
  2225  007B41  FF                 	db	255
  2226  007B42  FF                 	db	255
  2227  007B43  FF                 	db	255
  2228  007B44  FF                 	db	255
  2229  007B45  FF                 	db	255
  2230  007B46  FF                 	db	255
  2231  007B47  FF                 	db	255
  2232  007B48  FF                 	db	255
  2233  007B49  FF                 	db	255
  2234  007B4A  FF                 	db	255
  2235  007B4B  FF                 	db	255
  2236  007B4C  FF                 	db	255
  2237  007B4D  FF                 	db	255
  2238  007B4E  FF                 	db	255
  2239  007B4F  FF                 	db	255
  2240  007B50  FF                 	db	255
  2241  007B51  FF                 	db	255
  2242  007B52  FF                 	db	255
  2243  007B53  FF                 	db	255
  2244  007B54  FF                 	db	255
  2245  007B55  FF                 	db	255
  2246  007B56  FF                 	db	255
  2247  007B57  FF                 	db	255
  2248  007B58  FF                 	db	255
  2249  007B59  FF                 	db	255
  2250  007B5A  FF                 	db	255
  2251  007B5B  FF                 	db	255
  2252  007B5C  FF                 	db	255
  2253  007B5D  FF                 	db	255
  2254  007B5E  FF                 	db	255
  2255  007B5F  FF                 	db	255
  2256  007B60  FF                 	db	255
  2257  007B61  FF                 	db	255
  2258  007B62  FF                 	db	255
  2259  007B63  FF                 	db	255
  2260  007B64  FF                 	db	255
  2261  007B65  FF                 	db	255
  2262  007B66  FF                 	db	255
  2263  007B67  FF                 	db	255
  2264  007B68  FF                 	db	255
  2265  007B69  FF                 	db	255
  2266  007B6A  FF                 	db	255
  2267  007B6B  FF                 	db	255
  2268  007B6C  FF                 	db	255
  2269  007B6D  FF                 	db	255
  2270  007B6E  FF                 	db	255
  2271  007B6F  FF                 	db	255
  2272  007B70  FF                 	db	255
  2273  007B71  FF                 	db	255
  2274  007B72  FF                 	db	255
  2275  007B73  FF                 	db	255
  2276  007B74  FF                 	db	255
  2277  007B75  FF                 	db	255
  2278  007B76  FF                 	db	255
  2279  007B77  FF                 	db	255
  2280  007B78  FF                 	db	255
  2281  007B79  FF                 	db	255
  2282  007B7A  FF                 	db	255
  2283  007B7B  FF                 	db	255
  2284  007B7C  FF                 	db	255
  2285  007B7D  FF                 	db	255
  2286  007B7E  FF                 	db	255
  2287  007B7F  FF                 	db	255
  2288  007B80  FF                 	db	255
  2289  007B81  FF                 	db	255
  2290  007B82  FF                 	db	255
  2291  007B83  FF                 	db	255
  2292  007B84  FF                 	db	255
  2293  007B85  FF                 	db	255
  2294  007B86  FF                 	db	255
  2295  007B87  FF                 	db	255
  2296  007B88  FF                 	db	255
  2297  007B89  FF                 	db	255
  2298  007B8A  FF                 	db	255
  2299  007B8B  FF                 	db	255
  2300  007B8C  FF                 	db	255
  2301  007B8D  FF                 	db	255
  2302  007B8E  FF                 	db	255
  2303  007B8F  FF                 	db	255
  2304  007B90  FF                 	db	255
  2305  007B91  FF                 	db	255
  2306  007B92  FF                 	db	255
  2307  007B93  FF                 	db	255
  2308  007B94  FF                 	db	255
  2309  007B95  FF                 	db	255
  2310  007B96  FF                 	db	255
  2311  007B97  FF                 	db	255
  2312  007B98  07                 	db	7
  2313  007B99  FB                 	db	251
  2314  007B9A  0B                 	db	11
  2315  007B9B  0B                 	db	11
  2316  007B9C  0B                 	db	11
  2317  007B9D  0B                 	db	11
  2318  007B9E  0B                 	db	11
  2319  007B9F  0B                 	db	11
  2320  007BA0  0B                 	db	11
  2321  007BA1  0B                 	db	11
  2322  007BA2  0B                 	db	11
  2323  007BA3  0B                 	db	11
  2324  007BA4  0B                 	db	11
  2325  007BA5  0B                 	db	11
  2326  007BA6  0B                 	db	11
  2327  007BA7  0B                 	db	11
  2328  007BA8  0B                 	db	11
  2329  007BA9  0B                 	db	11
  2330  007BAA  0B                 	db	11
  2331  007BAB  0B                 	db	11
  2332  007BAC  0B                 	db	11
  2333  007BAD  0B                 	db	11
  2334  007BAE  0B                 	db	11
  2335  007BAF  8B                 	db	139
  2336  007BB0  E3                 	db	227
  2337  007BB1  FB                 	db	251
  2338  007BB2  0B                 	db	11
  2339  007BB3  0B                 	db	11
  2340  007BB4  0B                 	db	11
  2341  007BB5  0B                 	db	11
  2342  007BB6  0B                 	db	11
  2343  007BB7  0B                 	db	11
  2344  007BB8  0B                 	db	11
  2345  007BB9  0B                 	db	11
  2346  007BBA  0B                 	db	11
  2347  007BBB  0B                 	db	11
  2348  007BBC  0B                 	db	11
  2349  007BBD  FB                 	db	251
  2350  007BBE  0B                 	db	11
  2351  007BBF  0B                 	db	11
  2352  007BC0  0B                 	db	11
  2353  007BC1  0B                 	db	11
  2354  007BC2  0B                 	db	11
  2355  007BC3  8B                 	db	139
  2356  007BC4  8B                 	db	139
  2357  007BC5  0B                 	db	11
  2358  007BC6  0B                 	db	11
  2359  007BC7  0B                 	db	11
  2360  007BC8  CB                 	db	203
  2361  007BC9  E3                 	db	227
  2362  007BCA  FB                 	db	251
  2363  007BCB  FB                 	db	251
  2364  007BCC  03                 	db	3
  2365  007BCD  03                 	db	3
  2366  007BCE  03                 	db	3
  2367  007BCF  03                 	db	3
  2368  007BD0  0B                 	db	11
  2369  007BD1  0B                 	db	11
  2370  007BD2  03                 	db	3
  2371  007BD3  03                 	db	3
  2372  007BD4  03                 	db	3
  2373  007BD5  03                 	db	3
  2374  007BD6  83                 	db	131
  2375  007BD7  83                 	db	131
  2376  007BD8  83                 	db	131
  2377  007BD9  83                 	db	131
  2378  007BDA  03                 	db	3
  2379  007BDB  C3                 	db	195
  2380  007BDC  FB                 	db	251
  2381  007BDD  07                 	db	7
  2382  007BDE  FF                 	db	255
  2383  007BDF  FF                 	db	255
  2384  007BE0  8F                 	db	143
  2385  007BE1  77                 	db	119
  2386  007BE2  0F                 	db	15
  2387  007BE3  DB                 	db	219
  2388  007BE4  8B                 	db	139
  2389  007BE5  77                 	db	119
  2390  007BE6  0F                 	db	15
  2391  007BE7  FF                 	db	255
  2392  007BE8  FF                 	db	255
  2393  007BE9  FF                 	db	255
  2394  007BEA  FF                 	db	255
  2395  007BEB  FF                 	db	255
  2396  007BEC  FF                 	db	255
  2397  007BED  FF                 	db	255
  2398  007BEE  FF                 	db	255
  2399  007BEF  FF                 	db	255
  2400  007BF0  FF                 	db	255
  2401  007BF1  FF                 	db	255
  2402  007BF2  FF                 	db	255
  2403  007BF3  FF                 	db	255
  2404  007BF4  FF                 	db	255
  2405  007BF5  FF                 	db	255
  2406  007BF6  FF                 	db	255
  2407  007BF7  FF                 	db	255
  2408  007BF8  FF                 	db	255
  2409  007BF9  FF                 	db	255
  2410  007BFA  FF                 	db	255
  2411  007BFB  FF                 	db	255
  2412  007BFC  FF                 	db	255
  2413  007BFD  FF                 	db	255
  2414  007BFE  FF                 	db	255
  2415  007BFF  FF                 	db	255
  2416  007C00  FF                 	db	255
  2417  007C01  FF                 	db	255
  2418  007C02  FF                 	db	255
  2419  007C03  FF                 	db	255
  2420  007C04  FF                 	db	255
  2421  007C05  FF                 	db	255
  2422  007C06  FF                 	db	255
  2423  007C07  FF                 	db	255
  2424  007C08  FF                 	db	255
  2425  007C09  FF                 	db	255
  2426  007C0A  FF                 	db	255
  2427  007C0B  FF                 	db	255
  2428  007C0C  FF                 	db	255
  2429  007C0D  FF                 	db	255
  2430  007C0E  FF                 	db	255
  2431  007C0F  FF                 	db	255
  2432  007C10  FF                 	db	255
  2433  007C11  FF                 	db	255
  2434  007C12  FF                 	db	255
  2435  007C13  FF                 	db	255
  2436  007C14  FF                 	db	255
  2437  007C15  FF                 	db	255
  2438  007C16  FF                 	db	255
  2439  007C17  FF                 	db	255
  2440  007C18  00                 	db	0
  2441  007C19  FF                 	db	255
  2442  007C1A  FF                 	db	255
  2443  007C1B  FF                 	db	255
  2444  007C1C  FF                 	db	255
  2445  007C1D  30                 	db	48
  2446  007C1E  00                 	db	0
  2447  007C1F  00                 	db	0
  2448  007C20  00                 	db	0
  2449  007C21  00                 	db	0
  2450  007C22  FF                 	db	255
  2451  007C23  FF                 	db	255
  2452  007C24  FF                 	db	255
  2453  007C25  FF                 	db	255
  2454  007C26  00                 	db	0
  2455  007C27  00                 	db	0
  2456  007C28  00                 	db	0
  2457  007C29  00                 	db	0
  2458  007C2A  00                 	db	0
  2459  007C2B  E3                 	db	227
  2460  007C2C  E3                 	db	227
  2461  007C2D  E3                 	db	227
  2462  007C2E  FB                 	db	251
  2463  007C2F  FF                 	db	255
  2464  007C30  FF                 	db	255
  2465  007C31  FF                 	db	255
  2466  007C32  FF                 	db	255
  2467  007C33  FF                 	db	255
  2468  007C34  FF                 	db	255
  2469  007C35  00                 	db	0
  2470  007C36  00                 	db	0
  2471  007C37  00                 	db	0
  2472  007C38  00                 	db	0
  2473  007C39  00                 	db	0
  2474  007C3A  FF                 	db	255
  2475  007C3B  FF                 	db	255
  2476  007C3C  FF                 	db	255
  2477  007C3D  FF                 	db	255
  2478  007C3E  00                 	db	0
  2479  007C3F  00                 	db	0
  2480  007C40  00                 	db	0
  2481  007C41  00                 	db	0
  2482  007C42  00                 	db	0
  2483  007C43  F1                 	db	241
  2484  007C44  E0                 	db	224
  2485  007C45  80                 	db	128
  2486  007C46  02                 	db	2
  2487  007C47  03                 	db	3
  2488  007C48  07                 	db	7
  2489  007C49  0F                 	db	15
  2490  007C4A  3F                 	db	63
  2491  007C4B  FF                 	db	255
  2492  007C4C  01                 	db	1
  2493  007C4D  01                 	db	1
  2494  007C4E  01                 	db	1
  2495  007C4F  01                 	db	1
  2496  007C50  01                 	db	1
  2497  007C51  FF                 	db	255
  2498  007C52  FC                 	db	252
  2499  007C53  F0                 	db	240
  2500  007C54  C0                 	db	192
  2501  007C55  00                 	db	0
  2502  007C56  00                 	db	0
  2503  007C57  03                 	db	3
  2504  007C58  0F                 	db	15
  2505  007C59  3F                 	db	63
  2506  007C5A  7F                 	db	127
  2507  007C5B  FF                 	db	255
  2508  007C5C  FF                 	db	255
  2509  007C5D  00                 	db	0
  2510  007C5E  FF                 	db	255
  2511  007C5F  FF                 	db	255
  2512  007C60  FF                 	db	255
  2513  007C61  FF                 	db	255
  2514  007C62  FE                 	db	254
  2515  007C63  FE                 	db	254
  2516  007C64  FE                 	db	254
  2517  007C65  FE                 	db	254
  2518  007C66  FF                 	db	255
  2519  007C67  FF                 	db	255
  2520  007C68  FF                 	db	255
  2521  007C69  FF                 	db	255
  2522  007C6A  FF                 	db	255
  2523  007C6B  FF                 	db	255
  2524  007C6C  FF                 	db	255
  2525  007C6D  FF                 	db	255
  2526  007C6E  FF                 	db	255
  2527  007C6F  FF                 	db	255
  2528  007C70  FF                 	db	255
  2529  007C71  FF                 	db	255
  2530  007C72  FF                 	db	255
  2531  007C73  FF                 	db	255
  2532  007C74  FF                 	db	255
  2533  007C75  FF                 	db	255
  2534  007C76  FF                 	db	255
  2535  007C77  FF                 	db	255
  2536  007C78  FF                 	db	255
  2537  007C79  FF                 	db	255
  2538  007C7A  FF                 	db	255
  2539  007C7B  FF                 	db	255
  2540  007C7C  FF                 	db	255
  2541  007C7D  FF                 	db	255
  2542  007C7E  FF                 	db	255
  2543  007C7F  FF                 	db	255
  2544  007C80  FF                 	db	255
  2545  007C81  FF                 	db	255
  2546  007C82  FF                 	db	255
  2547  007C83  FF                 	db	255
  2548  007C84  FF                 	db	255
  2549  007C85  FF                 	db	255
  2550  007C86  FF                 	db	255
  2551  007C87  FF                 	db	255
  2552  007C88  FF                 	db	255
  2553  007C89  FF                 	db	255
  2554  007C8A  FF                 	db	255
  2555  007C8B  FF                 	db	255
  2556  007C8C  FF                 	db	255
  2557  007C8D  FF                 	db	255
  2558  007C8E  FF                 	db	255
  2559  007C8F  FF                 	db	255
  2560  007C90  FF                 	db	255
  2561  007C91  FF                 	db	255
  2562  007C92  FF                 	db	255
  2563  007C93  FF                 	db	255
  2564  007C94  FF                 	db	255
  2565  007C95  FF                 	db	255
  2566  007C96  FF                 	db	255
  2567  007C97  FF                 	db	255
  2568  007C98  00                 	db	0
  2569  007C99  FF                 	db	255
  2570  007C9A  FF                 	db	255
  2571  007C9B  FF                 	db	255
  2572  007C9C  FF                 	db	255
  2573  007C9D  00                 	db	0
  2574  007C9E  00                 	db	0
  2575  007C9F  00                 	db	0
  2576  007CA0  00                 	db	0
  2577  007CA1  00                 	db	0
  2578  007CA2  FF                 	db	255
  2579  007CA3  FF                 	db	255
  2580  007CA4  FF                 	db	255
  2581  007CA5  FF                 	db	255
  2582  007CA6  00                 	db	0
  2583  007CA7  00                 	db	0
  2584  007CA8  00                 	db	0
  2585  007CA9  00                 	db	0
  2586  007CAA  00                 	db	0
  2587  007CAB  0F                 	db	15
  2588  007CAC  0F                 	db	15
  2589  007CAD  0F                 	db	15
  2590  007CAE  0F                 	db	15
  2591  007CAF  0F                 	db	15
  2592  007CB0  0F                 	db	15
  2593  007CB1  0F                 	db	15
  2594  007CB2  1F                 	db	31
  2595  007CB3  7F                 	db	127
  2596  007CB4  FF                 	db	255
  2597  007CB5  00                 	db	0
  2598  007CB6  00                 	db	0
  2599  007CB7  00                 	db	0
  2600  007CB8  00                 	db	0
  2601  007CB9  00                 	db	0
  2602  007CBA  FF                 	db	255
  2603  007CBB  FF                 	db	255
  2604  007CBC  FF                 	db	255
  2605  007CBD  FF                 	db	255
  2606  007CBE  00                 	db	0
  2607  007CBF  00                 	db	0
  2608  007CC0  00                 	db	0
  2609  007CC1  00                 	db	0
  2610  007CC2  00                 	db	0
  2611  007CC3  FF                 	db	255
  2612  007CC4  FF                 	db	255
  2613  007CC5  FF                 	db	255
  2614  007CC6  FE                 	db	254
  2615  007CC7  F8                 	db	248
  2616  007CC8  E0                 	db	224
  2617  007CC9  80                 	db	128
  2618  007CCA  00                 	db	0
  2619  007CCB  00                 	db	0
  2620  007CCC  02                 	db	2
  2621  007CCD  08                 	db	8
  2622  007CCE  20                 	db	32
  2623  007CCF  80                 	db	128
  2624  007CD0  00                 	db	0
  2625  007CD1  0F                 	db	15
  2626  007CD2  0F                 	db	15
  2627  007CD3  0F                 	db	15
  2628  007CD4  0F                 	db	15
  2629  007CD5  0F                 	db	15
  2630  007CD6  0C                 	db	12
  2631  007CD7  00                 	db	0
  2632  007CD8  00                 	db	0
  2633  007CD9  00                 	db	0
  2634  007CDA  00                 	db	0
  2635  007CDB  01                 	db	1
  2636  007CDC  FF                 	db	255
  2637  007CDD  00                 	db	0
  2638  007CDE  FF                 	db	255
  2639  007CDF  BF                 	db	191
  2640  007CE0  FF                 	db	255
  2641  007CE1  FF                 	db	255
  2642  007CE2  FF                 	db	255
  2643  007CE3  FF                 	db	255
  2644  007CE4  FF                 	db	255
  2645  007CE5  FF                 	db	255
  2646  007CE6  FF                 	db	255
  2647  007CE7  FF                 	db	255
  2648  007CE8  FF                 	db	255
  2649  007CE9  FF                 	db	255
  2650  007CEA  FF                 	db	255
  2651  007CEB  FF                 	db	255
  2652  007CEC  FF                 	db	255
  2653  007CED  FF                 	db	255
  2654  007CEE  FF                 	db	255
  2655  007CEF  FF                 	db	255
  2656  007CF0  FF                 	db	255
  2657  007CF1  FF                 	db	255
  2658  007CF2  FF                 	db	255
  2659  007CF3  FF                 	db	255
  2660  007CF4  FF                 	db	255
  2661  007CF5  FF                 	db	255
  2662  007CF6  FF                 	db	255
  2663  007CF7  FF                 	db	255
  2664  007CF8  FF                 	db	255
  2665  007CF9  FF                 	db	255
  2666  007CFA  FF                 	db	255
  2667  007CFB  0F                 	db	15
  2668  007CFC  09                 	db	9
  2669  007CFD  0B                 	db	11
  2670  007CFE  0F                 	db	15
  2671  007CFF  07                 	db	7
  2672  007D00  07                 	db	7
  2673  007D01  17                 	db	23
  2674  007D02  17                 	db	23
  2675  007D03  17                 	db	23
  2676  007D04  07                 	db	7
  2677  007D05  07                 	db	7
  2678  007D06  07                 	db	7
  2679  007D07  27                 	db	39
  2680  007D08  27                 	db	39
  2681  007D09  07                 	db	7
  2682  007D0A  07                 	db	7
  2683  007D0B  07                 	db	7
  2684  007D0C  07                 	db	7
  2685  007D0D  07                 	db	7
  2686  007D0E  07                 	db	7
  2687  007D0F  07                 	db	7
  2688  007D10  07                 	db	7
  2689  007D11  07                 	db	7
  2690  007D12  07                 	db	7
  2691  007D13  F7                 	db	247
  2692  007D14  83                 	db	131
  2693  007D15  C3                 	db	195
  2694  007D16  D0                 	db	208
  2695  007D17  D3                 	db	211
  2696  007D18  F6                 	db	246
  2697  007D19  1D                 	db	29
  2698  007D1A  1D                 	db	29
  2699  007D1B  1D                 	db	29
  2700  007D1C  1D                 	db	29
  2701  007D1D  1D                 	db	29
  2702  007D1E  1C                 	db	28
  2703  007D1F  1C                 	db	28
  2704  007D20  1C                 	db	28
  2705  007D21  1C                 	db	28
  2706  007D22  1D                 	db	29
  2707  007D23  1D                 	db	29
  2708  007D24  1D                 	db	29
  2709  007D25  1D                 	db	29
  2710  007D26  1D                 	db	29
  2711  007D27  1C                 	db	28
  2712  007D28  1C                 	db	28
  2713  007D29  1C                 	db	28
  2714  007D2A  1C                 	db	28
  2715  007D2B  1C                 	db	28
  2716  007D2C  1C                 	db	28
  2717  007D2D  FC                 	db	252
  2718  007D2E  FC                 	db	252
  2719  007D2F  02                 	db	2
  2720  007D30  FE                 	db	254
  2721  007D31  FE                 	db	254
  2722  007D32  FE                 	db	254
  2723  007D33  FE                 	db	254
  2724  007D34  FF                 	db	255
  2725  007D35  FE                 	db	254
  2726  007D36  FE                 	db	254
  2727  007D37  FE                 	db	254
  2728  007D38  FE                 	db	254
  2729  007D39  FE                 	db	254
  2730  007D3A  FF                 	db	255
  2731  007D3B  FF                 	db	255
  2732  007D3C  FF                 	db	255
  2733  007D3D  FF                 	db	255
  2734  007D3E  FE                 	db	254
  2735  007D3F  FE                 	db	254
  2736  007D40  FE                 	db	254
  2737  007D41  FE                 	db	254
  2738  007D42  FE                 	db	254
  2739  007D43  FF                 	db	255
  2740  007D44  FF                 	db	255
  2741  007D45  FF                 	db	255
  2742  007D46  FF                 	db	255
  2743  007D47  01                 	db	1
  2744  007D48  FD                 	db	253
  2745  007D49  1D                 	db	29
  2746  007D4A  1D                 	db	29
  2747  007D4B  1C                 	db	28
  2748  007D4C  1C                 	db	28
  2749  007D4D  1C                 	db	28
  2750  007D4E  1C                 	db	28
  2751  007D4F  1C                 	db	28
  2752  007D50  1D                 	db	29
  2753  007D51  1D                 	db	29
  2754  007D52  1C                 	db	28
  2755  007D53  1C                 	db	28
  2756  007D54  1C                 	db	28
  2757  007D55  1C                 	db	28
  2758  007D56  1C                 	db	28
  2759  007D57  1C                 	db	28
  2760  007D58  1C                 	db	28
  2761  007D59  1C                 	db	28
  2762  007D5A  1C                 	db	28
  2763  007D5B  1C                 	db	28
  2764  007D5C  0D                 	db	13
  2765  007D5D  04                 	db	4
  2766  007D5E  03                 	db	3
  2767  007D5F  00                 	db	0
  2768  007D60  00                 	db	0
  2769  007D61  00                 	db	0
  2770  007D62  00                 	db	0
  2771  007D63  00                 	db	0
  2772  007D64  00                 	db	0
  2773  007D65  00                 	db	0
  2774  007D66  00                 	db	0
  2775  007D67  00                 	db	0
  2776  007D68  00                 	db	0
  2777  007D69  01                 	db	1
  2778  007D6A  01                 	db	1
  2779  007D6B  01                 	db	1
  2780  007D6C  C1                 	db	193
  2781  007D6D  C1                 	db	193
  2782  007D6E  C1                 	db	193
  2783  007D6F  C1                 	db	193
  2784  007D70  D1                 	db	209
  2785  007D71  E1                 	db	225
  2786  007D72  03                 	db	3
  2787  007D73  03                 	db	3
  2788  007D74  03                 	db	3
  2789  007D75  03                 	db	3
  2790  007D76  83                 	db	131
  2791  007D77  03                 	db	3
  2792  007D78  05                 	db	5
  2793  007D79  07                 	db	7
  2794  007D7A  07                 	db	7
  2795  007D7B  3B                 	db	59
  2796  007D7C  21                 	db	33
  2797  007D7D  21                 	db	33
  2798  007D7E  21                 	db	33
  2799  007D7F  BA                 	db	186
  2800  007D80  30                 	db	48
  2801  007D81  21                 	db	33
  2802  007D82  21                 	db	33
  2803  007D83  21                 	db	33
  2804  007D84  BB                 	db	187
  2805  007D85  FC                 	db	252
  2806  007D86  E0                 	db	224
  2807  007D87  E0                 	db	224
  2808  007D88  E0                 	db	224
  2809  007D89  E0                 	db	224
  2810  007D8A  E0                 	db	224
  2811  007D8B  E0                 	db	224
  2812  007D8C  E0                 	db	224
  2813  007D8D  C0                 	db	192
  2814  007D8E  FE                 	db	254
  2815  007D8F  39                 	db	57
  2816  007D90  BD                 	db	189
  2817  007D91  BD                 	db	189
  2818  007D92  B8                 	db	184
  2819  007D93  FF                 	db	255
  2820  007D94  39                 	db	57
  2821  007D95  BD                 	db	189
  2822  007D96  BD                 	db	189
  2823  007D97  39                 	db	57
  2824  007D98  FF                 	db	255
  2825  007D99  20                 	db	32
  2826  007D9A  A9                 	db	169
  2827  007D9B  A9                 	db	169
  2828  007D9C  21                 	db	33
  2829  007D9D  FE                 	db	254
  2830  007D9E  20                 	db	32
  2831  007D9F  A0                 	db	160
  2832  007DA0  A0                 	db	160
  2833  007DA1  20                 	db	32
  2834  007DA2  FE                 	db	254
  2835  007DA3  21                 	db	33
  2836  007DA4  A9                 	db	169
  2837  007DA5  29                 	db	41
  2838  007DA6  39                 	db	57
  2839  007DA7  FE                 	db	254
  2840  007DA8  21                 	db	33
  2841  007DA9  A9                 	db	169
  2842  007DAA  A9                 	db	169
  2843  007DAB  39                 	db	57
  2844  007DAC  FE                 	db	254
  2845  007DAD  BF                 	db	191
  2846  007DAE  FF                 	db	255
  2847  007DAF  00                 	db	0
  2848  007DB0  FF                 	db	255
  2849  007DB1  FF                 	db	255
  2850  007DB2  FF                 	db	255
  2851  007DB3  FF                 	db	255
  2852  007DB4  FF                 	db	255
  2853  007DB5  FF                 	db	255
  2854  007DB6  FF                 	db	255
  2855  007DB7  FF                 	db	255
  2856  007DB8  FF                 	db	255
  2857  007DB9  FF                 	db	255
  2858  007DBA  FF                 	db	255
  2859  007DBB  FF                 	db	255
  2860  007DBC  FF                 	db	255
  2861  007DBD  FF                 	db	255
  2862  007DBE  FF                 	db	255
  2863  007DBF  FF                 	db	255
  2864  007DC0  FF                 	db	255
  2865  007DC1  FF                 	db	255
  2866  007DC2  FF                 	db	255
  2867  007DC3  FF                 	db	255
  2868  007DC4  FF                 	db	255
  2869  007DC5  FF                 	db	255
  2870  007DC6  FF                 	db	255
  2871  007DC7  1C                 	db	28
  2872  007DC8  FF                 	db	255
  2873  007DC9  E0                 	db	224
  2874  007DCA  A0                 	db	160
  2875  007DCB  A0                 	db	160
  2876  007DCC  A0                 	db	160
  2877  007DCD  A0                 	db	160
  2878  007DCE  FE                 	db	254
  2879  007DCF  21                 	db	33
  2880  007DD0  21                 	db	33
  2881  007DD1  A1                 	db	161
  2882  007DD2  21                 	db	33
  2883  007DD3  FE                 	db	254
  2884  007DD4  21                 	db	33
  2885  007DD5  21                 	db	33
  2886  007DD6  21                 	db	33
  2887  007DD7  21                 	db	33
  2888  007DD8  FE                 	db	254
  2889  007DD9  20                 	db	32
  2890  007DDA  B0                 	db	176
  2891  007DDB  A0                 	db	160
  2892  007DDC  20                 	db	32
  2893  007DDD  FE                 	db	254
  2894  007DDE  31                 	db	49
  2895  007DDF  A9                 	db	169
  2896  007DE0  A8                 	db	168
  2897  007DE1  20                 	db	32
  2898  007DE2  FE                 	db	254
  2899  007DE3  20                 	db	32
  2900  007DE4  A0                 	db	160
  2901  007DE5  A0                 	db	160
  2902  007DE6  20                 	db	32
  2903  007DE7  FE                 	db	254
  2904  007DE8  39                 	db	57
  2905  007DE9  BD                 	db	189
  2906  007DEA  BD                 	db	189
  2907  007DEB  B8                 	db	184
  2908  007DEC  FF                 	db	255
  2909  007DED  39                 	db	57
  2910  007DEE  BD                 	db	189
  2911  007DEF  BD                 	db	189
  2912  007DF0  39                 	db	57
  2913  007DF1  FF                 	db	255
  2914  007DF2  20                 	db	32
  2915  007DF3  A9                 	db	169
  2916  007DF4  A9                 	db	169
  2917  007DF5  38                 	db	56
  2918  007DF6  FF                 	db	255
  2919  007DF7  21                 	db	33
  2920  007DF8  21                 	db	33
  2921  007DF9  21                 	db	33
  2922  007DFA  31                 	db	49
  2923  007DFB  77                 	db	119
  2924  007DFC  44                 	db	68
  2925  007DFD  54                 	db	84
  2926  007DFE  54                 	db	84
  2927  007DFF  FF                 	db	255
  2928  007E00  76                 	db	118
  2929  007E01  54                 	db	84
  2930  007E02  54                 	db	84
  2931  007E03  54                 	db	84
  2932  007E04  FF                 	db	255
  2933  007E05  67                 	db	103
  2934  007E06  53                 	db	83
  2935  007E07  53                 	db	83
  2936  007E08  47                 	db	71
  2937  007E09  FF                 	db	255
  2938  007E0A  73                 	db	115
  2939  007E0B  73                 	db	115
  2940  007E0C  77                 	db	119
  2941  007E0D  77                 	db	119
  2942  007E0E  FF                 	db	255
  2943  007E0F  47                 	db	71
  2944  007E10  47                 	db	71
  2945  007E11  47                 	db	71
  2946  007E12  47                 	db	71
  2947  007E13  FF                 	db	255
  2948  007E14  46                 	db	70
  2949  007E15  57                 	db	87
  2950  007E16  47                 	db	71
  2951  007E17  46                 	db	70
  2952  007E18  FF                 	db	255
  2953  007E19  42                 	db	66
  2954  007E1A  57                 	db	87
  2955  007E1B  57                 	db	87
  2956  007E1C  46                 	db	70
  2957  007E1D  FF                 	db	255
  2958  007E1E  44                 	db	68
  2959  007E1F  55                 	db	85
  2960  007E20  44                 	db	68
  2961  007E21  44                 	db	68
  2962  007E22  FF                 	db	255
  2963  007E23  44                 	db	68
  2964  007E24  55                 	db	85
  2965  007E25  44                 	db	68
  2966  007E26  44                 	db	68
  2967  007E27  FF                 	db	255
  2968  007E28  46                 	db	70
  2969  007E29  77                 	db	119
  2970  007E2A  57                 	db	87
  2971  007E2B  56                 	db	86
  2972  007E2C  FF                 	db	255
  2973  007E2D  77                 	db	119
  2974  007E2E  FF                 	db	255
  2975  007E2F  00                 	db	0
  2976  007E30  0F                 	db	15
  2977  007E31  03                 	db	3
  2978  007E32  03                 	db	3
  2979  007E33  03                 	db	3
  2980  007E34  03                 	db	3
  2981  007E35  03                 	db	3
  2982  007E36  03                 	db	3
  2983  007E37  03                 	db	3
  2984  007E38  03                 	db	3
  2985  007E39  03                 	db	3
  2986  007E3A  03                 	db	3
  2987  007E3B  03                 	db	3
  2988  007E3C  03                 	db	3
  2989  007E3D  03                 	db	3
  2990  007E3E  03                 	db	3
  2991  007E3F  03                 	db	3
  2992  007E40  03                 	db	3
  2993  007E41  03                 	db	3
  2994  007E42  03                 	db	3
  2995  007E43  03                 	db	3
  2996  007E44  03                 	db	3
  2997  007E45  03                 	db	3
  2998  007E46  00                 	db	0
  2999  007E47  80                 	db	128
  3000  007E48  FF                 	db	255
  3001  007E49  FF                 	db	255
  3002  007E4A  77                 	db	119
  3003  007E4B  77                 	db	119
  3004  007E4C  77                 	db	119
  3005  007E4D  77                 	db	119
  3006  007E4E  FF                 	db	255
  3007  007E4F  74                 	db	116
  3008  007E50  74                 	db	116
  3009  007E51  74                 	db	116
  3010  007E52  74                 	db	116
  3011  007E53  FF                 	db	255
  3012  007E54  64                 	db	100
  3013  007E55  54                 	db	84
  3014  007E56  54                 	db	84
  3015  007E57  44                 	db	68
  3016  007E58  FF                 	db	255
  3017  007E59  46                 	db	70
  3018  007E5A  77                 	db	119
  3019  007E5B  55                 	db	85
  3020  007E5C  46                 	db	70
  3021  007E5D  FF                 	db	255
  3022  007E5E  46                 	db	70
  3023  007E5F  77                 	db	119
  3024  007E60  77                 	db	119
  3025  007E61  46                 	db	70
  3026  007E62  FF                 	db	255
  3027  007E63  66                 	db	102
  3028  007E64  77                 	db	119
  3029  007E65  75                 	db	117
  3030  007E66  76                 	db	118
  3031  007E67  FF                 	db	255
  3032  007E68  47                 	db	71
  3033  007E69  57                 	db	87
  3034  007E6A  47                 	db	71
  3035  007E6B  47                 	db	71
  3036  007E6C  FF                 	db	255
  3037  007E6D  46                 	db	70
  3038  007E6E  57                 	db	87
  3039  007E6F  47                 	db	71
  3040  007E70  46                 	db	70
  3041  007E71  FF                 	db	255
  3042  007E72  46                 	db	70
  3043  007E73  57                 	db	87
  3044  007E74  57                 	db	87
  3045  007E75  77                 	db	119
  3046  007E76  FF                 	db	255
  3047  007E77  C2                 	db	194
  3048  007E78  C0                 	db	192
  3049  007E79  C4                 	db	196
  3050  007E7A  C6                 	db	198
  3051  007E7B  EF                 	db	239
  3052  007E7C  CA                 	db	202
  3053  007E7D  EB                 	db	235
  3054  007E7E  EA                 	db	234
  3055  007E7F  FF                 	db	255
  3056  007E80  EF                 	db	239
  3057  007E81  EE                 	db	238
  3058  007E82  EF                 	db	239
  3059  007E83  EE                 	db	238
  3060  007E84  FF                 	db	255
  3061  007E85  EE                 	db	238
  3062  007E86  EE                 	db	238
  3063  007E87  EF                 	db	239
  3064  007E88  AE                 	db	174
  3065  007E89  FF                 	db	255
  3066  007E8A  CE                 	db	206
  3067  007E8B  EE                 	db	238
  3068  007E8C  EF                 	db	239
  3069  007E8D  EE                 	db	238
  3070  007E8E  FF                 	db	255
  3071  007E8F  C8                 	db	200
  3072  007E90  E8                 	db	232
  3073  007E91  E8                 	db	232
  3074  007E92  88                 	db	136
  3075  007E93  FF                 	db	255
  3076  007E94  88                 	db	136
  3077  007E95  EA                 	db	234
  3078  007E96  E8                 	db	232
  3079  007E97  88                 	db	136
  3080  007E98  FF                 	db	255
  3081  007E99  8C                 	db	140
  3082  007E9A  EA                 	db	234
  3083  007E9B  EB                 	db	235
  3084  007E9C  88                 	db	136
  3085  007E9D  FF                 	db	255
  3086  007E9E  CE                 	db	206
  3087  007E9F  EF                 	db	239
  3088  007EA0  EF                 	db	239
  3089  007EA1  EE                 	db	238
  3090  007EA2  FF                 	db	255
  3091  007EA3  C8                 	db	200
  3092  007EA4  E8                 	db	232
  3093  007EA5  E8                 	db	232
  3094  007EA6  E8                 	db	232
  3095  007EA7  FF                 	db	255
  3096  007EA8  C8                 	db	200
  3097  007EA9  E8                 	db	232
  3098  007EAA  E8                 	db	232
  3099  007EAB  E8                 	db	232
  3100  007EAC  FF                 	db	255
  3101  007EAD  88                 	db	136
  3102  007EAE  E9                 	db	233
  3103  007EAF  E9                 	db	233
  3104  007EB0  CD                 	db	205
  3105  007EB1  FF                 	db	255
  3106  007EB2  8B                 	db	139
  3107  007EB3  EF                 	db	239
  3108  007EB4  EF                 	db	239
  3109  007EB5  EF                 	db	239
  3110  007EB6  FF                 	db	255
  3111  007EB7  8F                 	db	143
  3112  007EB8  EF                 	db	239
  3113  007EB9  EF                 	db	239
  3114  007EBA  EF                 	db	239
  3115  007EBB  EF                 	db	239
  3116  007EBC  8F                 	db	143
  3117  007EBD  EF                 	db	239
  3118  007EBE  8F                 	db	143
  3119  007EBF  EF                 	db	239
  3120  007EC0  EF                 	db	239
  3121  007EC1  8F                 	db	143
  3122  007EC2  AF                 	db	175
  3123  007EC3  8B                 	db	139
  3124  007EC4  EF                 	db	239
  3125  007EC5  CF                 	db	207
  3126  007EC6  8F                 	db	143
  3127  007EC7  EF                 	db	239
  3128  007EC8  8E                 	db	142
  3129  007EC9  FF                 	db	255
  3130  007ECA  88                 	db	136
  3131  007ECB  08                 	db	8
  3132  007ECC  08                 	db	8
  3133  007ECD  08                 	db	8
  3134  007ECE  FF                 	db	255
  3135  007ECF  88                 	db	136
  3136  007ED0  08                 	db	8
  3137  007ED1  08                 	db	8
  3138  007ED2  08                 	db	8
  3139  007ED3  FF                 	db	255
  3140  007ED4  CC                 	db	204
  3141  007ED5  EA                 	db	234
  3142  007ED6  EB                 	db	235
  3143  007ED7  E8                 	db	232
  3144  007ED8  FF                 	db	255
  3145  007ED9  CE                 	db	206
  3146  007EDA  EE                 	db	238
  3147  007EDB  EF                 	db	239
  3148  007EDC  EE                 	db	238
  3149  007EDD  FF                 	db	255
  3150  007EDE  CE                 	db	206
  3151  007EDF  EF                 	db	239
  3152  007EE0  EF                 	db	239
  3153  007EE1  EE                 	db	238
  3154  007EE2  FF                 	db	255
  3155  007EE3  CE                 	db	206
  3156  007EE4  EF                 	db	239
  3157  007EE5  EF                 	db	239
  3158  007EE6  EE                 	db	238
  3159  007EE7  FF                 	db	255
  3160  007EE8  88                 	db	136
  3161  007EE9  EA                 	db	234
  3162  007EEA  E8                 	db	232
  3163  007EEB  88                 	db	136
  3164  007EEC  FF                 	db	255
  3165  007EED  88                 	db	136
  3166  007EEE  EA                 	db	234
  3167  007EEF  E8                 	db	232
  3168  007EF0  C8                 	db	200
  3169  007EF1  FF                 	db	255
  3170  007EF2  8C                 	db	140
  3171  007EF3  EB                 	db	235
  3172  007EF4  EA                 	db	234
  3173  007EF5  CE                 	db	206
  3174  007EF6  FF                 	db	255
  3175  007EF7  FF                 	db	255
  3176  007EF8  FF                 	db	255
  3177  007EF9  FF                 	db	255
  3178  007EFA  FF                 	db	255
  3179  007EFB                     __end_of_accueil:
  3180                           	opt stack 0
  3181  007EFB                     _Font3x6:
  3182                           	opt stack 0
  3183  007EFB  00                 	db	0
  3184  007EFC  00                 	db	0
  3185  007EFD  00                 	db	0
  3186  007EFE  00                 	db	0
  3187  007EFF  5C                 	db	92
  3188  007F00  00                 	db	0
  3189  007F01  0C                 	db	12
  3190  007F02  00                 	db	0
  3191  007F03  0C                 	db	12
  3192  007F04  7C                 	db	124
  3193  007F05  28                 	db	40
  3194  007F06  7C                 	db	124
  3195  007F07  7C                 	db	124
  3196  007F08  44                 	db	68
  3197  007F09  7C                 	db	124
  3198  007F0A  24                 	db	36
  3199  007F0B  10                 	db	16
  3200  007F0C  48                 	db	72
  3201  007F0D  28                 	db	40
  3202  007F0E  54                 	db	84
  3203  007F0F  08                 	db	8
  3204  007F10  00                 	db	0
  3205  007F11  0C                 	db	12
  3206  007F12  00                 	db	0
  3207  007F13  38                 	db	56
  3208  007F14  44                 	db	68
  3209  007F15  00                 	db	0
  3210  007F16  44                 	db	68
  3211  007F17  38                 	db	56
  3212  007F18  00                 	db	0
  3213  007F19  20                 	db	32
  3214  007F1A  10                 	db	16
  3215  007F1B  08                 	db	8
  3216  007F1C  10                 	db	16
  3217  007F1D  38                 	db	56
  3218  007F1E  10                 	db	16
  3219  007F1F  80                 	db	128
  3220  007F20  40                 	db	64
  3221  007F21  00                 	db	0
  3222  007F22  10                 	db	16
  3223  007F23  10                 	db	16
  3224  007F24  10                 	db	16
  3225  007F25  00                 	db	0
  3226  007F26  40                 	db	64
  3227  007F27  00                 	db	0
  3228  007F28  20                 	db	32
  3229  007F29  10                 	db	16
  3230  007F2A  08                 	db	8
  3231  007F2B  38                 	db	56
  3232  007F2C  44                 	db	68
  3233  007F2D  38                 	db	56
  3234  007F2E  00                 	db	0
  3235  007F2F  7C                 	db	124
  3236  007F30  00                 	db	0
  3237  007F31  64                 	db	100
  3238  007F32  54                 	db	84
  3239  007F33  48                 	db	72
  3240  007F34  44                 	db	68
  3241  007F35  54                 	db	84
  3242  007F36  28                 	db	40
  3243  007F37  1C                 	db	28
  3244  007F38  10                 	db	16
  3245  007F39  7C                 	db	124
  3246  007F3A  4C                 	db	76
  3247  007F3B  54                 	db	84
  3248  007F3C  24                 	db	36
  3249  007F3D  38                 	db	56
  3250  007F3E  54                 	db	84
  3251  007F3F  20                 	db	32
  3252  007F40  04                 	db	4
  3253  007F41  74                 	db	116
  3254  007F42  0C                 	db	12
  3255  007F43  28                 	db	40
  3256  007F44  54                 	db	84
  3257  007F45  28                 	db	40
  3258  007F46  08                 	db	8
  3259  007F47  54                 	db	84
  3260  007F48  38                 	db	56
  3261  007F49  00                 	db	0
  3262  007F4A  50                 	db	80
  3263  007F4B  00                 	db	0
  3264  007F4C  80                 	db	128
  3265  007F4D  50                 	db	80
  3266  007F4E  00                 	db	0
  3267  007F4F  10                 	db	16
  3268  007F50  28                 	db	40
  3269  007F51  44                 	db	68
  3270  007F52  28                 	db	40
  3271  007F53  28                 	db	40
  3272  007F54  28                 	db	40
  3273  007F55  44                 	db	68
  3274  007F56  28                 	db	40
  3275  007F57  10                 	db	16
  3276  007F58  04                 	db	4
  3277  007F59  54                 	db	84
  3278  007F5A  08                 	db	8
  3279  007F5B  38                 	db	56
  3280  007F5C  4C                 	db	76
  3281  007F5D  5C                 	db	92
  3282  007F5E  78                 	db	120
  3283  007F5F  14                 	db	20
  3284  007F60  78                 	db	120
  3285  007F61  7C                 	db	124
  3286  007F62  54                 	db	84
  3287  007F63  28                 	db	40
  3288  007F64  38                 	db	56
  3289  007F65  44                 	db	68
  3290  007F66  44                 	db	68
  3291  007F67  7C                 	db	124
  3292  007F68  44                 	db	68
  3293  007F69  38                 	db	56
  3294  007F6A  7C                 	db	124
  3295  007F6B  54                 	db	84
  3296  007F6C  44                 	db	68
  3297  007F6D  7C                 	db	124
  3298  007F6E  14                 	db	20
  3299  007F6F  04                 	db	4
  3300  007F70  38                 	db	56
  3301  007F71  44                 	db	68
  3302  007F72  34                 	db	52
  3303  007F73  7C                 	db	124
  3304  007F74  10                 	db	16
  3305  007F75  7C                 	db	124
  3306  007F76  00                 	db	0
  3307  007F77  7C                 	db	124
  3308  007F78  00                 	db	0
  3309  007F79  20                 	db	32
  3310  007F7A  40                 	db	64
  3311  007F7B  3C                 	db	60
  3312  007F7C  7C                 	db	124
  3313  007F7D  10                 	db	16
  3314  007F7E  6C                 	db	108
  3315  007F7F  7C                 	db	124
  3316  007F80  40                 	db	64
  3317  007F81  40                 	db	64
  3318  007F82  7C                 	db	124
  3319  007F83  08                 	db	8
  3320  007F84  7C                 	db	124
  3321  007F85  7C                 	db	124
  3322  007F86  04                 	db	4
  3323  007F87  7C                 	db	124
  3324  007F88  7C                 	db	124
  3325  007F89  44                 	db	68
  3326  007F8A  7C                 	db	124
  3327  007F8B  7C                 	db	124
  3328  007F8C  14                 	db	20
  3329  007F8D  08                 	db	8
  3330  007F8E  38                 	db	56
  3331  007F8F  44                 	db	68
  3332  007F90  78                 	db	120
  3333  007F91  7C                 	db	124
  3334  007F92  14                 	db	20
  3335  007F93  68                 	db	104
  3336  007F94  48                 	db	72
  3337  007F95  54                 	db	84
  3338  007F96  24                 	db	36
  3339  007F97  04                 	db	4
  3340  007F98  7C                 	db	124
  3341  007F99  04                 	db	4
  3342  007F9A  7C                 	db	124
  3343  007F9B  40                 	db	64
  3344  007F9C  7C                 	db	124
  3345  007F9D  3C                 	db	60
  3346  007F9E  40                 	db	64
  3347  007F9F  3C                 	db	60
  3348  007FA0  7C                 	db	124
  3349  007FA1  20                 	db	32
  3350  007FA2  7C                 	db	124
  3351  007FA3  6C                 	db	108
  3352  007FA4  10                 	db	16
  3353  007FA5  6C                 	db	108
  3354  007FA6  1C                 	db	28
  3355  007FA7  60                 	db	96
  3356  007FA8  1C                 	db	28
  3357  007FA9  64                 	db	100
  3358  007FAA  54                 	db	84
  3359  007FAB  4C                 	db	76
  3360  007FAC  7C                 	db	124
  3361  007FAD  44                 	db	68
  3362  007FAE  00                 	db	0
  3363  007FAF  08                 	db	8
  3364  007FB0  10                 	db	16
  3365  007FB1  20                 	db	32
  3366  007FB2  44                 	db	68
  3367  007FB3  7C                 	db	124
  3368  007FB4  00                 	db	0
  3369  007FB5  08                 	db	8
  3370  007FB6  04                 	db	4
  3371  007FB7  08                 	db	8
  3372  007FB8  80                 	db	128
  3373  007FB9  80                 	db	128
  3374  007FBA  80                 	db	128
  3375  007FBB  04                 	db	4
  3376  007FBC  08                 	db	8
  3377  007FBD  00                 	db	0
  3378  007FBE                     __end_of_Font3x6:
  3379                           	opt stack 0
  3380  007FBE                     _dpowers:
  3381                           	opt stack 0
  3382  007FBE  0001               	dw	1
  3383  007FC0  000A               	dw	10
  3384  007FC2  0064               	dw	100
  3385  007FC4  03E8               	dw	1000
  3386  007FC6  2710               	dw	10000
  3387  007FC8                     __end_of_dpowers:
  3388                           	opt stack 0
  3389  0000                     _CCPR1L	set	4030
  3390  0000                     _PR2	set	4043
  3391  0000                     _PIR1bits	set	3998
  3392  0000                     _PIE1bits	set	3997
  3393  0000                     _TMR2	set	4044
  3394  0000                     _CCP1CONbits	set	4029
  3395  0000                     _TRISCbits	set	3988
  3396  0000                     _PIR2bits	set	4001
  3397  0000                     _EECON2	set	4007
  3398  0000                     _INTCONbits	set	4082
  3399  0000                     _EEDATA	set	4008
  3400  0000                     _EECON1bits	set	4006
  3401  0000                     _EEADR	set	4009
  3402  0000                     _LATD	set	3980
  3403  0000                     _LATBbits	set	3978
  3404  0000                     _PORTD	set	3971
  3405  0000                     _TRISD	set	3989
  3406  0000                     _PORTB	set	3969
  3407  0000                     _TRISB	set	3987
  3408  0000                     _ADCON1	set	4033
  3409  0000                     _PORTA	set	3968
  3410  0000                     _TRISA	set	3986
  3411  0000                     _T2CONbits	set	4042
  3412  0000                     _PORTEbits	set	3972
  3413  0000                     _PORTE	set	3972
  3414  0000                     _TRISE	set	3990
  3415  007FC8                     STR_3:
  3416  007FC8  79                 	db	121	;'y'
  3417  007FC9  6F                 	db	111	;'o'
  3418  007FCA  75                 	db	117	;'u'
  3419  007FCB  20                 	db	32
  3420  007FCC  62                 	db	98	;'b'
  3421  007FCD  65                 	db	101	;'e'
  3422  007FCE  61                 	db	97	;'a'
  3423  007FCF  74                 	db	116	;'t'
  3424  007FD0  20                 	db	32
  3425  007FD1  79                 	db	121	;'y'
  3426  007FD2  6F                 	db	111	;'o'
  3427  007FD3  75                 	db	117	;'u'
  3428  007FD4  72                 	db	114	;'r'
  3429  007FD5  20                 	db	32
  3430  007FD6  62                 	db	98	;'b'
  3431  007FD7  65                 	db	101	;'e'
  3432  007FD8  73                 	db	115	;'s'
  3433  007FD9  74                 	db	116	;'t'
  3434  007FDA  20                 	db	32
  3435  007FDB  73                 	db	115	;'s'
  3436  007FDC  63                 	db	99	;'c'
  3437  007FDD  6F                 	db	111	;'o'
  3438  007FDE  72                 	db	114	;'r'
  3439  007FDF  65                 	db	101	;'e'
  3440  007FE0  20                 	db	32
  3441  007FE1  21                 	db	33
  3442  007FE2  00                 	db	0
  3443  007FE3                     STR_2:
  3444  007FE3  62                 	db	98	;'b'
  3445  007FE4  65                 	db	101	;'e'
  3446  007FE5  73                 	db	115	;'s'
  3447  007FE6  74                 	db	116	;'t'
  3448  007FE7  20                 	db	32
  3449  007FE8  73                 	db	115	;'s'
  3450  007FE9  63                 	db	99	;'c'
  3451  007FEA  6F                 	db	111	;'o'
  3452  007FEB  72                 	db	114	;'r'
  3453  007FEC  65                 	db	101	;'e'
  3454  007FED  20                 	db	32
  3455  007FEE  3A                 	db	58	;':'
  3456  007FEF  20                 	db	32
  3457  007FF0  00                 	db	0
  3458  007FF1                     STR_4:
  3459  007FF1  47                 	db	71	;'G'
  3460  007FF2  61                 	db	97	;'a'
  3461  007FF3  6D                 	db	109	;'m'
  3462  007FF4  65                 	db	101	;'e'
  3463  007FF5  20                 	db	32
  3464  007FF6  4F                 	db	79	;'O'
  3465  007FF7  76                 	db	118	;'v'
  3466  007FF8  65                 	db	101	;'e'
  3467  007FF9  72                 	db	114	;'r'
  3468  007FFA  00                 	db	0
  3469  007FFB                     STR_1:
  3470  007FFB  25                 	db	37
  3471  007FFC  64                 	db	100	;'d'
  3472  007FFD  00                 	db	0
  3473                           
  3474                           ; #config settings
  3475  007FFE  00                 	db	0	; dummy byte at the end
  3476  0000                     
  3477                           	psect	cinit
  3478  003C42                     __pcinit:
  3479                           	opt stack 0
  3480  003C42                     start_initialization:
  3481                           	opt stack 0
  3482  003C42                     __initialization:
  3483                           	opt stack 0
  3484                           
  3485                           ; Initialize objects allocated to COMRAM (4 bytes)
  3486                           ; load TBLPTR registers with __pidataCOMRAM
  3487  003C42  0E5E               	movlw	low __pidataCOMRAM
  3488  003C44  6EF6               	movwf	tblptrl,c
  3489  003C46  0E3A               	movlw	high __pidataCOMRAM
  3490  003C48  6EF7               	movwf	tblptrh,c
  3491  003C4A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3492  003C4C  6EF8               	movwf	tblptru,c
  3493  003C4E  EE00  F055         	lfsr	0,__pdataCOMRAM
  3494  003C52  EE10 F004          	lfsr	1,4
  3495  003C56                     copy_data0:
  3496  003C56  0009               	tblrd		*+
  3497  003C58  CFF5 FFEE          	movff	tablat,postinc0
  3498  003C5C  50E5               	movf	postdec1,w,c
  3499  003C5E  50E1               	movf	fsr1l,w,c
  3500  003C60  E1FA               	bnz	copy_data0
  3501                           
  3502                           ; Clear objects allocated to BANK2 (216 bytes)
  3503  003C62  EE02  F000         	lfsr	0,__pbssBANK2
  3504  003C66  0ED8               	movlw	216
  3505  003C68                     clear_0:
  3506  003C68  6AEE               	clrf	postinc0,c
  3507  003C6A  06E8               	decf	wreg,f,c
  3508  003C6C  E1FD               	bnz	clear_0
  3509                           
  3510                           ; Clear objects allocated to BANK1 (180 bytes)
  3511  003C6E  EE01  F000         	lfsr	0,__pbssBANK1
  3512  003C72  0EB4               	movlw	180
  3513  003C74                     clear_1:
  3514  003C74  6AEE               	clrf	postinc0,c
  3515  003C76  06E8               	decf	wreg,f,c
  3516  003C78  E1FD               	bnz	clear_1
  3517                           
  3518                           ; Clear objects allocated to COMRAM (23 bytes)
  3519  003C7A  EE00  F03E         	lfsr	0,__pbssCOMRAM
  3520  003C7E  0E17               	movlw	23
  3521  003C80                     clear_2:
  3522  003C80  6AEE               	clrf	postinc0,c
  3523  003C82  06E8               	decf	wreg,f,c
  3524  003C84  E1FD               	bnz	clear_2
  3525  003C86                     end_of_initialization:
  3526                           	opt stack 0
  3527  003C86                     __end_of__initialization:
  3528                           	opt stack 0
  3529  003C86  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3530  003C88  6EF8               	movwf	tblptru,c
  3531  003C8A  0100               	movlb	0
  3532  003C8C  EF87  F024         	goto	_main	;jump to C main() function
  3533                           tblptru	equ	0xFF8
  3534                           tblptrh	equ	0xFF7
  3535                           tblptrl	equ	0xFF6
  3536                           tablat	equ	0xFF5
  3537                           postinc0	equ	0xFEE
  3538                           wreg	equ	0xFE8
  3539                           postdec1	equ	0xFE5
  3540                           fsr1l	equ	0xFE1
  3541                           
  3542                           	psect	bssCOMRAM
  3543  00003E                     __pbssCOMRAM:
  3544                           	opt stack 0
  3545  00003E                     displayStartScore@F4364:
  3546                           	opt stack 0
  3547  00003E                     	ds	20
  3548  000052                     _y:
  3549                           	opt stack 0
  3550  000052                     	ds	1
  3551  000053                     _x:
  3552                           	opt stack 0
  3553  000053                     	ds	1
  3554  000054                     _score:
  3555                           	opt stack 0
  3556  000054                     	ds	1
  3557                           tblptru	equ	0xFF8
  3558                           tblptrh	equ	0xFF7
  3559                           tblptrl	equ	0xFF6
  3560                           tablat	equ	0xFF5
  3561                           postinc0	equ	0xFEE
  3562                           wreg	equ	0xFE8
  3563                           postdec1	equ	0xFE5
  3564                           fsr1l	equ	0xFE1
  3565                           
  3566                           	psect	dataCOMRAM
  3567  000055                     __pdataCOMRAM:
  3568                           	opt stack 0
  3569  000055                     _randx:
  3570                           	opt stack 0
  3571  000055                     	ds	4
  3572                           tblptru	equ	0xFF8
  3573                           tblptrh	equ	0xFF7
  3574                           tblptrl	equ	0xFF6
  3575                           tablat	equ	0xFF5
  3576                           postinc0	equ	0xFEE
  3577                           wreg	equ	0xFE8
  3578                           postdec1	equ	0xFE5
  3579                           fsr1l	equ	0xFE1
  3580                           
  3581                           	psect	bssBANK1
  3582  000100                     __pbssBANK1:
  3583                           	opt stack 0
  3584  000100                     _all_shapes:
  3585                           	opt stack 0
  3586  000100                     	ds	180
  3587                           tblptru	equ	0xFF8
  3588                           tblptrh	equ	0xFF7
  3589                           tblptrl	equ	0xFF6
  3590                           tablat	equ	0xFF5
  3591                           postinc0	equ	0xFEE
  3592                           wreg	equ	0xFE8
  3593                           postdec1	equ	0xFE5
  3594                           fsr1l	equ	0xFE1
  3595                           
  3596                           	psect	bssBANK2
  3597  000200                     __pbssBANK2:
  3598                           	opt stack 0
  3599  000200                     _array_data:
  3600                           	opt stack 0
  3601  000200                     	ds	216
  3602                           tblptru	equ	0xFF8
  3603                           tblptrh	equ	0xFF7
  3604                           tblptrl	equ	0xFF6
  3605                           tablat	equ	0xFF5
  3606                           postinc0	equ	0xFEE
  3607                           wreg	equ	0xFE8
  3608                           postdec1	equ	0xFE5
  3609                           fsr1l	equ	0xFE1
  3610                           
  3611                           	psect	cstackCOMRAM
  3612  000001                     __pcstackCOMRAM:
  3613                           	opt stack 0
  3614  000001                     ?___wmul:
  3615                           	opt stack 0
  3616  000001                     ?___awdiv:
  3617                           	opt stack 0
  3618  000001                     ?___lwdiv:
  3619                           	opt stack 0
  3620  000001                     ?___lmul:
  3621                           	opt stack 0
  3622  000001                     dontBelong2Shape@x:
  3623                           	opt stack 0
  3624  000001                     glcd_ReadByte@side:
  3625                           	opt stack 0
  3626  000001                     delay@c:
  3627                           	opt stack 0
  3628  000001                     delayHomeScreen@c:
  3629                           	opt stack 0
  3630  000001                     EEPROM_Read@address:
  3631                           	opt stack 0
  3632  000001                     EEPROM_Write@address:
  3633                           	opt stack 0
  3634  000001                     setupPWM@PR2value:
  3635                           	opt stack 0
  3636  000001                     ___wmul@multiplier:
  3637                           	opt stack 0
  3638  000001                     ___awdiv@dividend:
  3639                           	opt stack 0
  3640  000001                     ___lwdiv@dividend:
  3641                           	opt stack 0
  3642  000001                     ___lmul@multiplier:
  3643                           	opt stack 0
  3644                           
  3645                           ; 4 bytes @ 0x0
  3646  000001                     	ds	1
  3647  000002                     dontBelong2Shape@y:
  3648                           	opt stack 0
  3649  000002                     glcd_ReadByte@data:
  3650                           	opt stack 0
  3651                           
  3652                           ; 1 bytes @ 0x1
  3653  000002                     	ds	1
  3654  000003                     ??_dontBelong2Shape:
  3655  000003                     EEPROM_Write@data:
  3656                           	opt stack 0
  3657  000003                     delayHomeScreen@d:
  3658                           	opt stack 0
  3659  000003                     ___wmul@multiplicand:
  3660                           	opt stack 0
  3661  000003                     ___awdiv@divisor:
  3662                           	opt stack 0
  3663  000003                     ___lwdiv@divisor:
  3664                           	opt stack 0
  3665                           
  3666                           ; 2 bytes @ 0x2
  3667  000003                     	ds	1
  3668  000004                     
  3669                           ; 1 bytes @ 0x3
  3670  000004                     	ds	1
  3671  000005                     ___awdiv@counter:
  3672                           	opt stack 0
  3673  000005                     ___wmul@product:
  3674                           	opt stack 0
  3675  000005                     ___lwdiv@quotient:
  3676                           	opt stack 0
  3677  000005                     ___lmul@multiplicand:
  3678                           	opt stack 0
  3679                           
  3680                           ; 4 bytes @ 0x4
  3681  000005                     	ds	1
  3682  000006                     dontBelong2Shape@index:
  3683                           	opt stack 0
  3684  000006                     ___awdiv@sign:
  3685                           	opt stack 0
  3686                           
  3687                           ; 1 bytes @ 0x5
  3688  000006                     	ds	1
  3689  000007                     dontBelong2Shape@k:
  3690                           	opt stack 0
  3691  000007                     ___lwdiv@counter:
  3692                           	opt stack 0
  3693  000007                     ___awdiv@quotient:
  3694                           	opt stack 0
  3695                           
  3696                           ; 2 bytes @ 0x6
  3697  000007                     	ds	1
  3698  000008                     ??_gravity:
  3699  000008                     ??_moveRight:
  3700  000008                     ??_moveLeft:
  3701  000008                     ??_rotate:
  3702  000008                     ?___lwmod:
  3703                           	opt stack 0
  3704  000008                     ___lwmod@dividend:
  3705                           	opt stack 0
  3706                           
  3707                           ; 2 bytes @ 0x7
  3708  000008                     	ds	1
  3709  000009                     glcd_WriteByte@data:
  3710                           	opt stack 0
  3711  000009                     ___lmul@product:
  3712                           	opt stack 0
  3713                           
  3714                           ; 4 bytes @ 0x8
  3715  000009                     	ds	1
  3716  00000A                     glcd_WriteByte@side:
  3717                           	opt stack 0
  3718  00000A                     ___lwmod@divisor:
  3719                           	opt stack 0
  3720                           
  3721                           ; 2 bytes @ 0x9
  3722  00000A                     	ds	1
  3723  00000B                     glcd_PlotPixel@ypos:
  3724                           	opt stack 0
  3725  00000B                     glcd_FillScreen@color:
  3726                           	opt stack 0
  3727  00000B                     glcd_SetCursor@ypos:
  3728                           	opt stack 0
  3729  00000B                     glcd_WriteChar8X8@color:
  3730                           	opt stack 0
  3731  00000B                     glcd_WriteChar3x6@color:
  3732                           	opt stack 0
  3733  00000B                     glcd_Image@ptr:
  3734                           	opt stack 0
  3735                           
  3736                           ; 2 bytes @ 0xA
  3737  00000B                     	ds	1
  3738  00000C                     ??_glcd_WriteChar8X8:
  3739  00000C                     ??_glcd_WriteChar3x6:
  3740  00000C                     glcd_PlotPixel@color:
  3741                           	opt stack 0
  3742  00000C                     glcd_FillScreen@j:
  3743                           	opt stack 0
  3744  00000C                     glcd_SetCursor@side:
  3745                           	opt stack 0
  3746  00000C                     ___lwmod@counter:
  3747                           	opt stack 0
  3748                           
  3749                           ; 1 bytes @ 0xB
  3750  00000C                     	ds	1
  3751  00000D                     ??_glcd_PlotPixel:
  3752  00000D                     ?_rand:
  3753                           	opt stack 0
  3754  00000D                     ?_sprintf:
  3755                           	opt stack 0
  3756  00000D                     glcd_FillScreen@i:
  3757                           	opt stack 0
  3758  00000D                     glcd_SetCursor@xpos:
  3759                           	opt stack 0
  3760  00000D                     glcd_Image@j:
  3761                           	opt stack 0
  3762  00000D                     sprintf@sp:
  3763                           	opt stack 0
  3764                           
  3765                           ; 2 bytes @ 0xC
  3766  00000D                     	ds	1
  3767  00000E                     ??_glcd_Init:
  3768  00000E                     glcd_WriteChar3x6@xpos:
  3769                           	opt stack 0
  3770  00000E                     glcd_Image@i:
  3771                           	opt stack 0
  3772  00000E                     glcd_WriteChar8X8@chr:
  3773                           	opt stack 0
  3774                           
  3775                           ; 2 bytes @ 0xD
  3776  00000E                     	ds	1
  3777  00000F                     ?___awmod:
  3778                           	opt stack 0
  3779  00000F                     glcd_Init@mode:
  3780                           	opt stack 0
  3781  00000F                     glcd_PlotPixel@xpos:
  3782                           	opt stack 0
  3783  00000F                     glcd_WriteChar3x6@ch:
  3784                           	opt stack 0
  3785  00000F                     glcd_Image@cs:
  3786                           	opt stack 0
  3787  00000F                     sprintf@f:
  3788                           	opt stack 0
  3789  00000F                     ___awmod@dividend:
  3790                           	opt stack 0
  3791                           
  3792                           ; 2 bytes @ 0xE
  3793  00000F                     	ds	1
  3794  000010                     glcd_PlotPixel@data:
  3795                           	opt stack 0
  3796  000010                     glcd_WriteChar8X8@ch:
  3797                           	opt stack 0
  3798  000010                     glcd_WriteChar3x6@i:
  3799                           	opt stack 0
  3800  000010                     rotate@new_coord:
  3801                           	opt stack 0
  3802                           
  3803                           ; 8 bytes @ 0xF
  3804  000010                     	ds	1
  3805  000011                     moveRight@a:
  3806                           	opt stack 0
  3807  000011                     moveLeft@a:
  3808                           	opt stack 0
  3809  000011                     glcd_PlotPixel@side:
  3810                           	opt stack 0
  3811  000011                     glcd_WriteChar8X8@xpos:
  3812                           	opt stack 0
  3813  000011                     glcd_WriteChar3x6@side:
  3814                           	opt stack 0
  3815  000011                     ___awmod@divisor:
  3816                           	opt stack 0
  3817                           
  3818                           ; 2 bytes @ 0x10
  3819  000011                     	ds	1
  3820  000012                     ??_update_display_shapes:
  3821  000012                     display_grid@j:
  3822                           	opt stack 0
  3823  000012                     gravity@a:
  3824                           	opt stack 0
  3825  000012                     moveRight@b:
  3826                           	opt stack 0
  3827  000012                     moveLeft@b:
  3828                           	opt stack 0
  3829  000012                     glcd_WriteChar8X8@i:
  3830                           	opt stack 0
  3831                           
  3832                           ; 1 bytes @ 0x11
  3833  000012                     	ds	1
  3834  000013                     ??_sprintf:
  3835  000013                     display_grid@i:
  3836                           	opt stack 0
  3837  000013                     gravity@b:
  3838                           	opt stack 0
  3839  000013                     moveRight@ok:
  3840                           	opt stack 0
  3841  000013                     moveLeft@ok:
  3842                           	opt stack 0
  3843  000013                     glcd_WriteChar8X8@side:
  3844                           	opt stack 0
  3845  000013                     ___awmod@counter:
  3846                           	opt stack 0
  3847                           
  3848                           ; 1 bytes @ 0x12
  3849  000013                     	ds	1
  3850  000014                     gravity@ok:
  3851                           	opt stack 0
  3852  000014                     moveRight@j:
  3853                           	opt stack 0
  3854  000014                     moveLeft@j:
  3855                           	opt stack 0
  3856  000014                     ___awmod@sign:
  3857                           	opt stack 0
  3858  000014                     glcd_WriteString@str:
  3859                           	opt stack 0
  3860  000014                     sprintf@ap:
  3861                           	opt stack 0
  3862                           
  3863                           ; 2 bytes @ 0x13
  3864  000014                     	ds	1
  3865  000015                     ??_createRandomShape:
  3866  000015                     gravity@j_247:
  3867                           	opt stack 0
  3868  000015                     moveRight@j_255:
  3869                           	opt stack 0
  3870  000015                     moveLeft@j_264:
  3871                           	opt stack 0
  3872                           
  3873                           ; 1 bytes @ 0x14
  3874  000015                     	ds	1
  3875  000016                     gravity@j:
  3876                           	opt stack 0
  3877  000016                     moveRight@j_256:
  3878                           	opt stack 0
  3879  000016                     moveLeft@j_265:
  3880                           	opt stack 0
  3881  000016                     glcd_WriteString@font:
  3882                           	opt stack 0
  3883  000016                     sprintf@flag:
  3884                           	opt stack 0
  3885                           
  3886                           ; 1 bytes @ 0x15
  3887  000016                     	ds	1
  3888  000017                     update_display_shapes@operation:
  3889                           	opt stack 0
  3890  000017                     gravity@j_244:
  3891                           	opt stack 0
  3892  000017                     moveRight@i:
  3893                           	opt stack 0
  3894  000017                     moveLeft@i:
  3895                           	opt stack 0
  3896  000017                     glcd_WriteString@color:
  3897                           	opt stack 0
  3898  000017                     sprintf@prec:
  3899                           	opt stack 0
  3900                           
  3901                           ; 1 bytes @ 0x16
  3902  000017                     	ds	1
  3903  000018                     update_display_shapes@m:
  3904                           	opt stack 0
  3905  000018                     gravity@j_246:
  3906                           	opt stack 0
  3907  000018                     moveRight@index:
  3908                           	opt stack 0
  3909  000018                     moveLeft@index:
  3910                           	opt stack 0
  3911  000018                     rotate@temp_x:
  3912                           	opt stack 0
  3913  000018                     glcd_text_write@str:
  3914                           	opt stack 0
  3915  000018                     sprintf@val:
  3916                           	opt stack 0
  3917                           
  3918                           ; 2 bytes @ 0x17
  3919  000018                     	ds	1
  3920  000019                     update_display_shapes@n:
  3921                           	opt stack 0
  3922  000019                     gravity@i:
  3923                           	opt stack 0
  3924  000019                     rotate@temp_y:
  3925                           	opt stack 0
  3926                           
  3927                           ; 1 bytes @ 0x18
  3928  000019                     	ds	1
  3929  00001A                     update_display_shapes@m_230:
  3930                           	opt stack 0
  3931  00001A                     gravity@index:
  3932                           	opt stack 0
  3933  00001A                     rotate@ok:
  3934                           	opt stack 0
  3935  00001A                     glcd_text_write@x:
  3936                           	opt stack 0
  3937  00001A                     sprintf@c:
  3938                           	opt stack 0
  3939                           
  3940                           ; 1 bytes @ 0x19
  3941  00001A                     	ds	1
  3942  00001B                     update_display_shapes@n_231:
  3943                           	opt stack 0
  3944  00001B                     rotate@pivot_x:
  3945                           	opt stack 0
  3946  00001B                     glcd_text_write@y:
  3947                           	opt stack 0
  3948  00001B                     displayStartScore@string:
  3949                           	opt stack 0
  3950                           
  3951                           ; 20 bytes @ 0x1A
  3952  00001B                     	ds	1
  3953  00001C                     update_display_shapes@i:
  3954                           	opt stack 0
  3955  00001C                     rotate@pivot_y:
  3956                           	opt stack 0
  3957                           
  3958                           ; 1 bytes @ 0x1B
  3959  00001C                     	ds	1
  3960  00001D                     update_display_shapes@j:
  3961                           	opt stack 0
  3962  00001D                     createRandomShape@type:
  3963                           	opt stack 0
  3964  00001D                     rotate@k_319:
  3965                           	opt stack 0
  3966                           
  3967                           ; 1 bytes @ 0x1C
  3968  00001D                     	ds	1
  3969  00001E                     update_display_shapes@y:
  3970                           	opt stack 0
  3971  00001E                     createRandomShape@k:
  3972                           	opt stack 0
  3973  00001E                     rotate@index:
  3974                           	opt stack 0
  3975                           
  3976                           ; 1 bytes @ 0x1D
  3977  00001E                     	ds	1
  3978  00001F                     update_display_shapes@x:
  3979                           	opt stack 0
  3980  00001F                     createRandomShape@k_278:
  3981                           	opt stack 0
  3982  00001F                     rotate@k:
  3983                           	opt stack 0
  3984                           
  3985                           ; 1 bytes @ 0x1E
  3986  00001F                     	ds	1
  3987  000020                     ??_completedUpdate:
  3988  000020                     createRandomShape@k_279:
  3989                           	opt stack 0
  3990                           
  3991                           ; 1 bytes @ 0x1F
  3992  000020                     	ds	1
  3993  000021                     createRandomShape@k_280:
  3994                           	opt stack 0
  3995                           
  3996                           ; 1 bytes @ 0x20
  3997  000021                     	ds	1
  3998  000022                     createRandomShape@k_282:
  3999                           	opt stack 0
  4000                           
  4001                           ; 1 bytes @ 0x21
  4002  000022                     	ds	1
  4003  000023                     createRandomShape@k_283:
  4004                           	opt stack 0
  4005                           
  4006                           ; 1 bytes @ 0x22
  4007  000023                     	ds	1
  4008  000024                     createRandomShape@k_284:
  4009                           	opt stack 0
  4010                           
  4011                           ; 1 bytes @ 0x23
  4012  000024                     	ds	1
  4013  000025                     createRandomShape@k_285:
  4014                           	opt stack 0
  4015                           
  4016                           ; 1 bytes @ 0x24
  4017  000025                     	ds	1
  4018  000026                     createRandomShape@k_287:
  4019                           	opt stack 0
  4020                           
  4021                           ; 1 bytes @ 0x25
  4022  000026                     	ds	1
  4023  000027                     createRandomShape@k_288:
  4024                           	opt stack 0
  4025                           
  4026                           ; 1 bytes @ 0x26
  4027  000027                     	ds	1
  4028  000028                     createRandomShape@k_289:
  4029                           	opt stack 0
  4030  000028                     completedUpdate@line:
  4031                           	opt stack 0
  4032                           
  4033                           ; 1 bytes @ 0x27
  4034  000028                     	ds	1
  4035  000029                     createRandomShape@k_290:
  4036                           	opt stack 0
  4037  000029                     completedUpdate@j_301:
  4038                           	opt stack 0
  4039                           
  4040                           ; 1 bytes @ 0x28
  4041  000029                     	ds	1
  4042  00002A                     createRandomShape@k_292:
  4043                           	opt stack 0
  4044  00002A                     completedUpdate@j_302:
  4045                           	opt stack 0
  4046                           
  4047                           ; 1 bytes @ 0x29
  4048  00002A                     	ds	1
  4049  00002B                     createRandomShape@k_293:
  4050                           	opt stack 0
  4051  00002B                     completedUpdate@i_303:
  4052                           	opt stack 0
  4053                           
  4054                           ; 1 bytes @ 0x2A
  4055  00002B                     	ds	1
  4056  00002C                     createRandomShape@k_294:
  4057                           	opt stack 0
  4058  00002C                     completedUpdate@j:
  4059                           	opt stack 0
  4060                           
  4061                           ; 1 bytes @ 0x2B
  4062  00002C                     	ds	1
  4063  00002D                     createRandomShape@k_295:
  4064                           	opt stack 0
  4065  00002D                     completedUpdate@i:
  4066                           	opt stack 0
  4067                           
  4068                           ; 1 bytes @ 0x2C
  4069  00002D                     	ds	1
  4070  00002E                     ??_lineCompletedTest:
  4071  00002E                     createRandomShape@k_296:
  4072                           	opt stack 0
  4073                           
  4074                           ; 1 bytes @ 0x2D
  4075  00002E                     	ds	1
  4076  00002F                     createRandomShape@start:
  4077                           	opt stack 0
  4078  00002F                     displayStartScore@bestScore:
  4079                           	opt stack 0
  4080                           
  4081                           ; 1 bytes @ 0x2E
  4082  00002F                     	ds	1
  4083  000030                     createRandomShape@start_281:
  4084                           	opt stack 0
  4085                           
  4086                           ; 1 bytes @ 0x2F
  4087  000030                     	ds	1
  4088  000031                     createRandomShape@start_286:
  4089                           	opt stack 0
  4090  000031                     lineCompletedTest@completed:
  4091                           	opt stack 0
  4092                           
  4093                           ; 1 bytes @ 0x30
  4094  000031                     	ds	1
  4095  000032                     createRandomShape@start_291:
  4096                           	opt stack 0
  4097  000032                     lineCompletedTest@i:
  4098                           	opt stack 0
  4099                           
  4100                           ; 1 bytes @ 0x31
  4101  000032                     	ds	1
  4102  000033                     createRandomShape@orientation:
  4103                           	opt stack 0
  4104  000033                     lineCompletedTest@j:
  4105                           	opt stack 0
  4106                           
  4107                           ; 1 bytes @ 0x32
  4108  000033                     	ds	1
  4109  000034                     createRandomShape@i:
  4110                           	opt stack 0
  4111                           
  4112                           ; 1 bytes @ 0x33
  4113  000034                     	ds	1
  4114  000035                     ??_main:
  4115                           
  4116                           ; 1 bytes @ 0x34
  4117  000035                     	ds	2
  4118  000037                     main@bestScore:
  4119                           	opt stack 0
  4120                           
  4121                           ; 1 bytes @ 0x36
  4122  000037                     	ds	1
  4123  000038                     main@next:
  4124                           	opt stack 0
  4125                           
  4126                           ; 1 bytes @ 0x37
  4127  000038                     	ds	1
  4128  000039                     main@i_339:
  4129                           	opt stack 0
  4130                           
  4131                           ; 1 bytes @ 0x38
  4132  000039                     	ds	1
  4133  00003A                     main@y_340:
  4134                           	opt stack 0
  4135                           
  4136                           ; 1 bytes @ 0x39
  4137  00003A                     	ds	1
  4138  00003B                     main@i:
  4139                           	opt stack 0
  4140                           
  4141                           ; 1 bytes @ 0x3A
  4142  00003B                     	ds	1
  4143  00003C                     main@y:
  4144                           	opt stack 0
  4145                           
  4146                           ; 1 bytes @ 0x3B
  4147  00003C                     	ds	1
  4148  00003D                     main@index:
  4149                           	opt stack 0
  4150                           
  4151                           ; 1 bytes @ 0x3C
  4152  00003D                     	ds	1
  4153                           tblptru	equ	0xFF8
  4154                           tblptrh	equ	0xFF7
  4155                           tblptrl	equ	0xFF6
  4156                           tablat	equ	0xFF5
  4157                           postinc0	equ	0xFEE
  4158                           wreg	equ	0xFE8
  4159                           postdec1	equ	0xFE5
  4160                           fsr1l	equ	0xFE1
  4161                           
  4162 ;;
  4163 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4164 ;;
  4165 ;; *************** function _main *****************
  4166 ;; Defined at:
  4167 ;;		line 960 in file "main.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;		None
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  y               1   57[COMRAM] unsigned char 
  4172 ;;  y               1   59[COMRAM] unsigned char 
  4173 ;;  i               1   56[COMRAM] unsigned char 
  4174 ;;  i               1   58[COMRAM] unsigned char 
  4175 ;;  index           1   60[COMRAM] unsigned char 
  4176 ;;  next            1   55[COMRAM] char 
  4177 ;;  bestScore       1   54[COMRAM] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4187 ;;      Params:         0       0       0       0       0       0       0       0       0
  4188 ;;      Locals:         7       0       0       0       0       0       0       0       0
  4189 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4190 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4191 ;;Total ram usage:        9 bytes
  4192 ;; Hardware stack levels required when called:    5
  4193 ;; This function calls:
  4194 ;;		_EEPROM_Read
  4195 ;;		_EEPROM_Write
  4196 ;;		_createRandomShape
  4197 ;;		_delay
  4198 ;;		_delayHomeScreen
  4199 ;;		_displayStartScore
  4200 ;;		_display_grid
  4201 ;;		_glcd_FillScreen
  4202 ;;		_glcd_Image
  4203 ;;		_glcd_Init
  4204 ;;		_glcd_text_write
  4205 ;;		_gravity
  4206 ;;		_lineCompletedTest
  4207 ;;		_moveLeft
  4208 ;;		_moveRight
  4209 ;;		_pwmStart
  4210 ;;		_pwmStop
  4211 ;;		_rotate
  4212 ;;		_setupPWM
  4213 ;;		_update_display_shapes
  4214 ;; This function is called by:
  4215 ;;		Startup code after reset
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text0
  4220  00490E                     __ptext0:
  4221                           	opt stack 0
  4222  00490E                     _main:
  4223                           	opt stack 26
  4224                           
  4225                           ;main.c: 962: uint8_t index=-1;
  4226                           
  4227                           ;incstack = 0
  4228  00490E  683D               	setf	main@index,c
  4229                           
  4230                           ;main.c: 963: int8_t next=1;
  4231  004910  0E01               	movlw	1
  4232  004912  6E38               	movwf	main@next,c
  4233                           
  4234                           ;main.c: 964: TRISE = 0xFF;
  4235  004914  6896               	setf	3990,c	;volatile
  4236                           
  4237                           ;main.c: 965: PORTE = 0x00;
  4238  004916  0E00               	movlw	0
  4239  004918  6E84               	movwf	3972,c	;volatile
  4240                           
  4241                           ;main.c: 966: char bestScore = EEPROM_Read(0x00);
  4242  00491A  0E00               	movlw	0
  4243  00491C  6E02               	movwf	EEPROM_Read@address+1,c
  4244  00491E  0E00               	movlw	0
  4245  004920  6E01               	movwf	EEPROM_Read@address,c
  4246  004922  EC31  F01D         	call	_EEPROM_Read	;wreg free
  4247  004926  6E37               	movwf	main@bestScore,c
  4248                           
  4249                           ;main.c: 968: glcd_Init(1);
  4250  004928  0E01               	movlw	1
  4251  00492A  ECF5  F020         	call	_glcd_Init
  4252                           
  4253                           ;main.c: 969: glcd_Image();
  4254  00492E  ECA0  F01F         	call	_glcd_Image	;wreg free
  4255                           
  4256                           ;main.c: 970: delayHomeScreen();
  4257  004932  EC8C  F01D         	call	_delayHomeScreen	;wreg free
  4258                           
  4259                           ;main.c: 971: glcd_FillScreen(0);
  4260  004936  0E00               	movlw	0
  4261  004938  EC31  F01F         	call	_glcd_FillScreen
  4262                           
  4263                           ;main.c: 972: displayStartScore(bestScore);
  4264  00493C  5037               	movf	main@bestScore,w,c
  4265  00493E  ECC5  F01E         	call	_displayStartScore
  4266                           
  4267                           ;main.c: 973: display_grid();
  4268  004942  ECD0  F022         	call	_display_grid	;wreg free
  4269                           
  4270                           ;main.c: 974: setupPWM(131);
  4271  004946  0E00               	movlw	0
  4272  004948  6E02               	movwf	setupPWM@PR2value+1,c
  4273  00494A  0E83               	movlw	131
  4274  00494C  6E01               	movwf	setupPWM@PR2value,c
  4275  00494E  EC67  F01D         	call	_setupPWM	;wreg free
  4276                           
  4277                           ;main.c: 976: for(uint8_t i=0;i<20;i++){
  4278  004952  0E00               	movlw	0
  4279  004954  6E3B               	movwf	main@i,c
  4280  004956                     l4616:
  4281  004956  0E13               	movlw	19
  4282  004958  643B               	cpfsgt	main@i,c
  4283  00495A  D001               	goto	l344
  4284  00495C  D036               	goto	u5000
  4285  00495E                     l344:
  4286                           
  4287                           ;main.c: 977: for(uint8_t y=0;y<4;y++){
  4288  00495E  0E00               	movlw	0
  4289  004960  6E3C               	movwf	main@y,c
  4290  004962                     l4622:
  4291  004962  0E03               	movlw	3
  4292  004964  643C               	cpfsgt	main@y,c
  4293  004966  D001               	goto	l346
  4294  004968  D02E               	goto	u4990
  4295  00496A                     l346:
  4296                           
  4297                           ;main.c: 978: all_shapes[i].index[y].x=99;
  4298  00496A  503B               	movf	main@i,w,c
  4299  00496C  0D09               	mullw	9
  4300  00496E  0E00               	movlw	low _all_shapes
  4301  004970  6E35               	movwf	??_main& (0+255),c
  4302  004972  0E01               	movlw	high _all_shapes
  4303  004974  6E36               	movwf	(??_main+1)& (0+255),c
  4304  004976  50F3               	movf	prodl,w,c
  4305  004978  2635               	addwf	??_main,f,c
  4306  00497A  50F4               	movf	prodh,w,c
  4307  00497C  2236               	addwfc	??_main+1,f,c
  4308  00497E  503C               	movf	main@y,w,c
  4309  004980  0D02               	mullw	2
  4310  004982  50F3               	movf	prodl,w,c
  4311  004984  2435               	addwf	??_main,w,c
  4312  004986  6ED9               	movwf	fsr2l,c
  4313  004988  50F4               	movf	prodh,w,c
  4314  00498A  2036               	addwfc	??_main+1,w,c
  4315  00498C  6EDA               	movwf	fsr2h,c
  4316  00498E  0E63               	movlw	99
  4317  004990  6EDF               	movwf	indf2,c
  4318                           
  4319                           ;main.c: 979: all_shapes[i].index[y].y=99;
  4320  004992  503B               	movf	main@i,w,c
  4321  004994  0D09               	mullw	9
  4322  004996  0E00               	movlw	low _all_shapes
  4323  004998  6E35               	movwf	??_main& (0+255),c
  4324  00499A  0E01               	movlw	high _all_shapes
  4325  00499C  6E36               	movwf	(??_main+1)& (0+255),c
  4326  00499E  50F3               	movf	prodl,w,c
  4327  0049A0  2635               	addwf	??_main,f,c
  4328  0049A2  50F4               	movf	prodh,w,c
  4329  0049A4  2236               	addwfc	??_main+1,f,c
  4330  0049A6  503C               	movf	main@y,w,c
  4331  0049A8  0D02               	mullw	2
  4332  0049AA  50F3               	movf	prodl,w,c
  4333  0049AC  2635               	addwf	??_main,f,c
  4334  0049AE  50F4               	movf	prodh,w,c
  4335  0049B0  2236               	addwfc	??_main+1,f,c
  4336  0049B2  0E01               	movlw	1
  4337  0049B4  2435               	addwf	??_main,w,c
  4338  0049B6  6ED9               	movwf	fsr2l,c
  4339  0049B8  0E00               	movlw	0
  4340  0049BA  2036               	addwfc	??_main+1,w,c
  4341  0049BC  6EDA               	movwf	fsr2h,c
  4342  0049BE  0E63               	movlw	99
  4343  0049C0  6EDF               	movwf	indf2,c
  4344  0049C2  2A3C               	incf	main@y,f,c
  4345  0049C4  D7CE               	goto	l4622
  4346  0049C6                     u4990:
  4347  0049C6  2A3B               	incf	main@i,f,c
  4348  0049C8  D7C6               	goto	l4616
  4349  0049CA                     u5000:
  4350                           
  4351                           ;main.c: 980: }
  4352                           ;main.c: 981: }
  4353                           ;main.c: 983: for(uint8_t i=0;i<18;i++){
  4354  0049CA  0E00               	movlw	0
  4355  0049CC  6E39               	movwf	main@i_339,c
  4356  0049CE                     l4638:
  4357  0049CE  0E11               	movlw	17
  4358  0049D0  6439               	cpfsgt	main@i_339,c
  4359  0049D2  D001               	goto	l348
  4360  0049D4  D01E               	goto	u5040
  4361  0049D6                     l348:
  4362                           
  4363                           ;main.c: 984: for(uint8_t y=0;y<12;y++){
  4364  0049D6  0E00               	movlw	0
  4365  0049D8  6E3A               	movwf	main@y_340,c
  4366  0049DA                     l4644:
  4367  0049DA  0E0B               	movlw	11
  4368  0049DC  643A               	cpfsgt	main@y_340,c
  4369  0049DE  D001               	goto	l350
  4370  0049E0  D016               	goto	u5030
  4371  0049E2                     l350:
  4372                           
  4373                           ;main.c: 985: array_data[i][y]='0';
  4374  0049E2  5039               	movf	main@i_339,w,c
  4375  0049E4  0D0C               	mullw	12
  4376  0049E6  0E00               	movlw	low _array_data
  4377  0049E8  6E35               	movwf	??_main& (0+255),c
  4378  0049EA  0E02               	movlw	high _array_data
  4379  0049EC  6E36               	movwf	(??_main+1)& (0+255),c
  4380  0049EE  50F3               	movf	prodl,w,c
  4381  0049F0  2635               	addwf	??_main,f,c
  4382  0049F2  50F4               	movf	prodh,w,c
  4383  0049F4  2236               	addwfc	??_main+1,f,c
  4384  0049F6  503A               	movf	main@y_340,w,c
  4385  0049F8  0D01               	mullw	1
  4386  0049FA  50F3               	movf	prodl,w,c
  4387  0049FC  2435               	addwf	??_main,w,c
  4388  0049FE  6ED9               	movwf	fsr2l,c
  4389  004A00  50F4               	movf	prodh,w,c
  4390  004A02  2036               	addwfc	??_main+1,w,c
  4391  004A04  6EDA               	movwf	fsr2h,c
  4392  004A06  0E30               	movlw	48
  4393  004A08  6EDF               	movwf	indf2,c
  4394  004A0A  2A3A               	incf	main@y_340,f,c
  4395  004A0C  D7E6               	goto	l4644
  4396  004A0E                     u5030:
  4397  004A0E  2A39               	incf	main@i_339,f,c
  4398  004A10  D7DE               	goto	l4638
  4399  004A12                     u5040:
  4400                           
  4401                           ;main.c: 990: if(next==-1){
  4402                           
  4403                           ;main.c: 986: }
  4404                           ;main.c: 987: }
  4405                           ;main.c: 989: while (1){
  4406  004A12  2838               	incf	main@next,w,c
  4407  004A14  B4D8               	btfsc	status,2,c
  4408  004A16  D046               	goto	l354
  4409                           
  4410                           ;main.c: 992: }
  4411                           ;main.c: 993: if (next){
  4412                           
  4413                           ;main.c: 991: break;
  4414  004A18  5038               	movf	main@next,w,c
  4415  004A1A  B4D8               	btfsc	status,2,c
  4416  004A1C  D007               	goto	l355
  4417                           
  4418                           ;main.c: 994: index++;
  4419  004A1E  2A3D               	incf	main@index,f,c
  4420                           
  4421                           ;main.c: 995: createRandomShape(index);
  4422  004A20  503D               	movf	main@index,w,c
  4423  004A22  EC2D  F02F         	call	_createRandomShape
  4424                           
  4425                           ;main.c: 996: next=0;
  4426  004A26  0E00               	movlw	0
  4427  004A28  6E38               	movwf	main@next,c
  4428                           
  4429                           ;main.c: 997: score++;
  4430  004A2A  2A54               	incf	_score,f,c
  4431  004A2C                     l355:
  4432                           
  4433                           ;main.c: 998: }
  4434                           ;main.c: 1000: if(PORTEbits.RE0 ==1){
  4435  004A2C  A084               	btfss	3972,0,c	;volatile
  4436  004A2E  D003               	goto	l356
  4437                           
  4438                           ;main.c: 1001: moveRight(index);
  4439  004A30  503D               	movf	main@index,w,c
  4440  004A32  ECB1  F02A         	call	_moveRight
  4441  004A36                     l356:
  4442                           
  4443                           ;main.c: 1002: }
  4444                           ;main.c: 1004: if(PORTEbits.RE1 ==1){
  4445  004A36  A284               	btfss	3972,1,c	;volatile
  4446  004A38  D003               	goto	l357
  4447                           
  4448                           ;main.c: 1005: moveLeft(index);
  4449  004A3A  503D               	movf	main@index,w,c
  4450  004A3C  EC8B  F028         	call	_moveLeft
  4451  004A40                     l357:
  4452                           
  4453                           ;main.c: 1006: }
  4454                           ;main.c: 1008: if(PORTEbits.RE2 ==1){
  4455  004A40  A484               	btfss	3972,2,c	;volatile
  4456  004A42  D003               	goto	l358
  4457                           
  4458                           ;main.c: 1009: rotate(index);
  4459  004A44  503D               	movf	main@index,w,c
  4460  004A46  ECD1  F026         	call	_rotate
  4461  004A4A                     l358:
  4462                           
  4463                           ;main.c: 1010: }
  4464                           ;main.c: 1012: update_display_shapes('1');
  4465  004A4A  0E31               	movlw	49
  4466  004A4C  EC7C  F025         	call	_update_display_shapes
  4467                           
  4468                           ;main.c: 1013: delay();
  4469  004A50  EC38  F01D         	call	_delay	;wreg free
  4470                           
  4471                           ;main.c: 1014: update_display_shapes('0');
  4472  004A54  0E30               	movlw	48
  4473  004A56  EC7C  F025         	call	_update_display_shapes
  4474                           
  4475                           ;main.c: 1017: if(PORTEbits.RE0 ==1){
  4476  004A5A  A084               	btfss	3972,0,c	;volatile
  4477  004A5C  D006               	goto	l360
  4478                           
  4479                           ;main.c: 1018: moveRight(index);
  4480  004A5E  503D               	movf	main@index,w,c
  4481  004A60  ECB1  F02A         	call	_moveRight
  4482                           
  4483                           ;main.c: 1019: if(T2CONbits.TMR2ON == 0)
  4484  004A64  A4CA               	btfss	4042,2,c	;volatile
  4485                           
  4486                           ;main.c: 1020: {
  4487                           ;main.c: 1021: pwmStart();
  4488  004A66  EC2B  F01D         	call	_pwmStart	;wreg free
  4489  004A6A                     l360:
  4490                           
  4491                           ;main.c: 1022: }
  4492                           ;main.c: 1024: }
  4493                           ;main.c: 1026: if(PORTEbits.RE1 ==1){
  4494  004A6A  A284               	btfss	3972,1,c	;volatile
  4495  004A6C  D006               	goto	l362
  4496                           
  4497                           ;main.c: 1027: moveLeft(index);
  4498  004A6E  503D               	movf	main@index,w,c
  4499  004A70  EC8B  F028         	call	_moveLeft
  4500                           
  4501                           ;main.c: 1028: if(T2CONbits.TMR2ON == 0)
  4502  004A74  A4CA               	btfss	4042,2,c	;volatile
  4503                           
  4504                           ;main.c: 1029: {
  4505                           ;main.c: 1030: pwmStart();
  4506  004A76  EC2B  F01D         	call	_pwmStart	;wreg free
  4507  004A7A                     l362:
  4508                           
  4509                           ;main.c: 1031: }
  4510                           ;main.c: 1032: }
  4511                           ;main.c: 1034: if(PORTEbits.RE2 ==1){
  4512  004A7A  A484               	btfss	3972,2,c	;volatile
  4513  004A7C  D006               	goto	l364
  4514                           
  4515                           ;main.c: 1035: rotate(index);
  4516  004A7E  503D               	movf	main@index,w,c
  4517  004A80  ECD1  F026         	call	_rotate
  4518                           
  4519                           ;main.c: 1036: if(T2CONbits.TMR2ON == 0)
  4520  004A84  A4CA               	btfss	4042,2,c	;volatile
  4521                           
  4522                           ;main.c: 1037: {
  4523                           ;main.c: 1038: pwmStart();
  4524  004A86  EC2B  F01D         	call	_pwmStart	;wreg free
  4525  004A8A                     l364:
  4526                           
  4527                           ;main.c: 1039: }
  4528                           ;main.c: 1040: }
  4529                           ;main.c: 1041: if( (PORTEbits.RE0 != 1) && (PORTEbits.RE1 != 1) && (PORTEbits.RE2 != 1) 
      +                          )
  4530  004A8A  A084               	btfss	3972,0,c	;volatile
  4531  004A8C  B284               	btfsc	3972,1,c	;volatile
  4532  004A8E  D003               	goto	l365
  4533  004A90  A484               	btfss	3972,2,c	;volatile
  4534                           
  4535                           ;main.c: 1042: {
  4536                           ;main.c: 1043: pwmStop();
  4537  004A92  EC2D  F01D         	call	_pwmStop	;wreg free
  4538  004A96                     l365:
  4539                           
  4540                           ;main.c: 1044: }
  4541                           ;main.c: 1046: next=gravity(index);
  4542  004A96  503D               	movf	main@index,w,c
  4543  004A98  ECD7  F02C         	call	_gravity
  4544  004A9C  6E38               	movwf	main@next,c
  4545                           
  4546                           ;main.c: 1047: lineCompletedTest();
  4547  004A9E  ECFB  F01E         	call	_lineCompletedTest	;wreg free
  4548  004AA2  D7B7               	goto	u5040
  4549  004AA4                     l354:
  4550                           
  4551                           ;main.c: 1049: }
  4552                           ;main.c: 1052: glcd_FillScreen(0);
  4553  004AA4  0E00               	movlw	0
  4554  004AA6  EC31  F01F         	call	_glcd_FillScreen
  4555                           
  4556                           ;main.c: 1053: if(score >= bestScore )
  4557  004AAA  5037               	movf	main@bestScore,w,c
  4558  004AAC  5C54               	subwf	_score,w,c
  4559  004AAE  A0D8               	btfss	status,0,c
  4560  004AB0  D00D               	goto	l367
  4561                           
  4562                           ;main.c: 1054: {
  4563                           ;main.c: 1055: glcd_text_write("you beat your best score !",1,1);
  4564  004AB2  0EC8               	movlw	low STR_3
  4565  004AB4  6E18               	movwf	glcd_text_write@str,c
  4566  004AB6  0E7F               	movlw	high STR_3
  4567  004AB8  6E19               	movwf	glcd_text_write@str+1,c
  4568  004ABA  0E01               	movlw	1
  4569  004ABC  6E1A               	movwf	glcd_text_write@x,c
  4570  004ABE  0E01               	movlw	1
  4571  004AC0  6E1B               	movwf	glcd_text_write@y,c
  4572  004AC2  EC45  F01D         	call	_glcd_text_write	;wreg free
  4573                           
  4574                           ;main.c: 1056: delayHomeScreen();
  4575  004AC6  EC8C  F01D         	call	_delayHomeScreen	;wreg free
  4576                           
  4577                           ;main.c: 1057: }
  4578  004ACA  D00C               	goto	l368
  4579  004ACC                     l367:
  4580                           
  4581                           ;main.c: 1058: else
  4582                           ;main.c: 1059: {
  4583                           ;main.c: 1060: glcd_text_write("Game Over",1,1);
  4584  004ACC  0EF1               	movlw	low STR_4
  4585  004ACE  6E18               	movwf	glcd_text_write@str,c
  4586  004AD0  0E7F               	movlw	high STR_4
  4587  004AD2  6E19               	movwf	glcd_text_write@str+1,c
  4588  004AD4  0E01               	movlw	1
  4589  004AD6  6E1A               	movwf	glcd_text_write@x,c
  4590  004AD8  0E01               	movlw	1
  4591  004ADA  6E1B               	movwf	glcd_text_write@y,c
  4592  004ADC  EC45  F01D         	call	_glcd_text_write	;wreg free
  4593                           
  4594                           ;main.c: 1061: delayHomeScreen();
  4595  004AE0  EC8C  F01D         	call	_delayHomeScreen	;wreg free
  4596  004AE4                     l368:
  4597                           
  4598                           ;main.c: 1062: }
  4599                           ;main.c: 1063: EEPROM_Write(0x00, score);
  4600  004AE4  0E00               	movlw	0
  4601  004AE6  6E02               	movwf	EEPROM_Write@address+1,c
  4602  004AE8  0E00               	movlw	0
  4603  004AEA  6E01               	movwf	EEPROM_Write@address,c
  4604  004AEC  C054  F003         	movff	_score,EEPROM_Write@data
  4605  004AF0  EC55  F01D         	call	_EEPROM_Write	;wreg free
  4606                           
  4607                           ;main.c: 1065: return;
  4608  004AF4  EF00  F000         	goto	start
  4609  004AF8                     __end_of_main:
  4610                           	opt stack 0
  4611                           tblptru	equ	0xFF8
  4612                           tblptrh	equ	0xFF7
  4613                           tblptrl	equ	0xFF6
  4614                           tablat	equ	0xFF5
  4615                           prodh	equ	0xFF4
  4616                           prodl	equ	0xFF3
  4617                           postinc0	equ	0xFEE
  4618                           wreg	equ	0xFE8
  4619                           postdec1	equ	0xFE5
  4620                           fsr1l	equ	0xFE1
  4621                           indf2	equ	0xFDF
  4622                           fsr2h	equ	0xFDA
  4623                           fsr2l	equ	0xFD9
  4624                           status	equ	0xFD8
  4625                           
  4626 ;; *************** function _setupPWM *****************
  4627 ;; Defined at:
  4628 ;;		line 38 in file "glcd_library/mcu.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  PR2value        2    0[COMRAM] int 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, status,2
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4642 ;;      Params:         2       0       0       0       0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4645 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4646 ;;Total ram usage:        2 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_main
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text1
  4656  003ACE                     __ptext1:
  4657                           	opt stack 0
  4658  003ACE                     _setupPWM:
  4659                           	opt stack 30
  4660                           
  4661                           ;mcu.c: 40: TRISCbits.RC2 = 0;
  4662                           
  4663                           ;incstack = 0
  4664  003ACE  9494               	bcf	3988,2,c	;volatile
  4665                           
  4666                           ;mcu.c: 43: CCP1CONbits.CCP1M3 = 1;
  4667  003AD0  86BD               	bsf	4029,3,c	;volatile
  4668                           
  4669                           ;mcu.c: 44: CCP1CONbits.CCP1M2 = 1;
  4670  003AD2  84BD               	bsf	4029,2,c	;volatile
  4671                           
  4672                           ;mcu.c: 48: INTCONbits.GIE = 1;
  4673  003AD4  8EF2               	bsf	intcon,7,c	;volatile
  4674                           
  4675                           ;mcu.c: 49: INTCONbits.PEIE = 1;
  4676  003AD6  8CF2               	bsf	intcon,6,c	;volatile
  4677                           
  4678                           ;mcu.c: 52: TMR2 = 0;
  4679  003AD8  0E00               	movlw	0
  4680  003ADA  6ECC               	movwf	4044,c	;volatile
  4681                           
  4682                           ;mcu.c: 53: PIE1bits.TMR2IE = 1;
  4683  003ADC  829D               	bsf	3997,1,c	;volatile
  4684                           
  4685                           ;mcu.c: 54: PIR1bits.TMR2IF = 0;
  4686  003ADE  929E               	bcf	3998,1,c	;volatile
  4687                           
  4688                           ;mcu.c: 56: T2CONbits.T2CKPS1 = 0;
  4689  003AE0  92CA               	bcf	4042,1,c	;volatile
  4690                           
  4691                           ;mcu.c: 57: T2CONbits.T2CKPS0 = 1;
  4692  003AE2  80CA               	bsf	4042,0,c	;volatile
  4693                           
  4694                           ;mcu.c: 59: PR2 = PR2value;
  4695  003AE4  C001  FFCB         	movff	setupPWM@PR2value,4043	;volatile
  4696                           
  4697                           ;mcu.c: 62: CCPR1L = 0b00000000;
  4698  003AE8  0E00               	movlw	0
  4699  003AEA  6EBE               	movwf	4030,c	;volatile
  4700                           
  4701                           ;mcu.c: 63: CCP1CONbits.DC1B1 = 0;
  4702  003AEC  9ABD               	bcf	4029,5,c	;volatile
  4703                           
  4704                           ;mcu.c: 64: CCP1CONbits.DC1B0 = 1;
  4705  003AEE  88BD               	bsf	4029,4,c	;volatile
  4706  003AF0  0012               	return		;funcret
  4707  003AF2                     __end_of_setupPWM:
  4708                           	opt stack 0
  4709                           tblptru	equ	0xFF8
  4710                           tblptrh	equ	0xFF7
  4711                           tblptrl	equ	0xFF6
  4712                           tablat	equ	0xFF5
  4713                           prodh	equ	0xFF4
  4714                           prodl	equ	0xFF3
  4715                           intcon	equ	0xFF2
  4716                           postinc0	equ	0xFEE
  4717                           wreg	equ	0xFE8
  4718                           postdec1	equ	0xFE5
  4719                           fsr1l	equ	0xFE1
  4720                           indf2	equ	0xFDF
  4721                           fsr2h	equ	0xFDA
  4722                           fsr2l	equ	0xFD9
  4723                           status	equ	0xFD8
  4724                           
  4725 ;; *************** function _rotate *****************
  4726 ;; Defined at:
  4727 ;;		line 907 in file "main.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  index           1    wreg     unsigned char 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  index           1   29[COMRAM] unsigned char 
  4732 ;;  k               1   28[COMRAM] unsigned char 
  4733 ;;  k               1   30[COMRAM] unsigned char 
  4734 ;;  new_coord       8   15[COMRAM] unsigned char [8]
  4735 ;;  pivot_y         1   27[COMRAM] unsigned char 
  4736 ;;  pivot_x         1   26[COMRAM] unsigned char 
  4737 ;;  ok              1   25[COMRAM] unsigned char 
  4738 ;;  temp_y          1   24[COMRAM] unsigned char 
  4739 ;;  temp_x          1   23[COMRAM] unsigned char 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      void 
  4742 ;; Registers used:
  4743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4749 ;;      Params:         0       0       0       0       0       0       0       0       0
  4750 ;;      Locals:        16       0       0       0       0       0       0       0       0
  4751 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4752 ;;      Totals:        24       0       0       0       0       0       0       0       0
  4753 ;;Total ram usage:       24 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; Hardware stack levels required when called:    1
  4756 ;; This function calls:
  4757 ;;		_dontBelong2Shape
  4758 ;; This function is called by:
  4759 ;;		_main
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           	psect	text2
  4764  004DA2                     __ptext2:
  4765                           	opt stack 0
  4766  004DA2                     _rotate:
  4767                           	opt stack 29
  4768                           
  4769                           ;incstack = 0
  4770                           ;rotate@index stored from wreg
  4771  004DA2  6E1E               	movwf	rotate@index,c
  4772                           
  4773                           ;main.c: 909: uint8_t temp_x,temp_y,ok;
  4774                           ;main.c: 910: uint8_t new_coord[8];
  4775                           ;main.c: 911: uint8_t pivot_x=all_shapes[index].index[1].x;
  4776  004DA4  501E               	movf	rotate@index,w,c
  4777  004DA6  0D09               	mullw	9
  4778  004DA8  0E02               	movlw	2
  4779  004DAA  26F3               	addwf	prodl,f,c
  4780  004DAC  0E00               	movlw	0
  4781  004DAE  22F4               	addwfc	prodh,f,c
  4782  004DB0  0E00               	movlw	low _all_shapes
  4783  004DB2  24F3               	addwf	prodl,w,c
  4784  004DB4  6ED9               	movwf	fsr2l,c
  4785  004DB6  0E01               	movlw	high _all_shapes
  4786  004DB8  20F4               	addwfc	prodh,w,c
  4787  004DBA  6EDA               	movwf	fsr2h,c
  4788  004DBC  50DF               	movf	indf2,w,c
  4789  004DBE  6E1B               	movwf	rotate@pivot_x,c
  4790                           
  4791                           ;main.c: 912: uint8_t pivot_y=all_shapes[index].index[1].y;
  4792  004DC0  501E               	movf	rotate@index,w,c
  4793  004DC2  0D09               	mullw	9
  4794  004DC4  0E03               	movlw	3
  4795  004DC6  26F3               	addwf	prodl,f,c
  4796  004DC8  0E00               	movlw	0
  4797  004DCA  22F4               	addwfc	prodh,f,c
  4798  004DCC  0E00               	movlw	low _all_shapes
  4799  004DCE  24F3               	addwf	prodl,w,c
  4800  004DD0  6ED9               	movwf	fsr2l,c
  4801  004DD2  0E01               	movlw	high _all_shapes
  4802  004DD4  20F4               	addwfc	prodh,w,c
  4803  004DD6  6EDA               	movwf	fsr2h,c
  4804  004DD8  50DF               	movf	indf2,w,c
  4805  004DDA  6E1C               	movwf	rotate@pivot_y,c
  4806                           
  4807                           ;main.c: 915: for (uint8_t k=0;k<4;k++){
  4808  004DDC  0E00               	movlw	0
  4809  004DDE  6E1F               	movwf	rotate@k,c
  4810  004DE0                     l4410:
  4811  004DE0  0E03               	movlw	3
  4812  004DE2  641F               	cpfsgt	rotate@k,c
  4813  004DE4  D001               	goto	l325
  4814  004DE6  D0C8               	goto	u4840
  4815  004DE8                     l325:
  4816                           
  4817                           ;main.c: 916: temp_x=all_shapes[index].index[k].x;
  4818  004DE8  501E               	movf	rotate@index,w,c
  4819  004DEA  0D09               	mullw	9
  4820  004DEC  0E00               	movlw	low _all_shapes
  4821  004DEE  6E08               	movwf	??_rotate& (0+255),c
  4822  004DF0  0E01               	movlw	high _all_shapes
  4823  004DF2  6E09               	movwf	(??_rotate+1)& (0+255),c
  4824  004DF4  50F3               	movf	prodl,w,c
  4825  004DF6  2608               	addwf	??_rotate,f,c
  4826  004DF8  50F4               	movf	prodh,w,c
  4827  004DFA  2209               	addwfc	??_rotate+1,f,c
  4828  004DFC  501F               	movf	rotate@k,w,c
  4829  004DFE  0D02               	mullw	2
  4830  004E00  50F3               	movf	prodl,w,c
  4831  004E02  2408               	addwf	??_rotate,w,c
  4832  004E04  6ED9               	movwf	fsr2l,c
  4833  004E06  50F4               	movf	prodh,w,c
  4834  004E08  2009               	addwfc	??_rotate+1,w,c
  4835  004E0A  6EDA               	movwf	fsr2h,c
  4836  004E0C  50DF               	movf	indf2,w,c
  4837  004E0E  6E18               	movwf	rotate@temp_x,c
  4838                           
  4839                           ;main.c: 917: temp_y=all_shapes[index].index[k].y;
  4840  004E10  501E               	movf	rotate@index,w,c
  4841  004E12  0D09               	mullw	9
  4842  004E14  0E00               	movlw	low _all_shapes
  4843  004E16  6E08               	movwf	??_rotate& (0+255),c
  4844  004E18  0E01               	movlw	high _all_shapes
  4845  004E1A  6E09               	movwf	(??_rotate+1)& (0+255),c
  4846  004E1C  50F3               	movf	prodl,w,c
  4847  004E1E  2608               	addwf	??_rotate,f,c
  4848  004E20  50F4               	movf	prodh,w,c
  4849  004E22  2209               	addwfc	??_rotate+1,f,c
  4850  004E24  501F               	movf	rotate@k,w,c
  4851  004E26  0D02               	mullw	2
  4852  004E28  50F3               	movf	prodl,w,c
  4853  004E2A  2608               	addwf	??_rotate,f,c
  4854  004E2C  50F4               	movf	prodh,w,c
  4855  004E2E  2209               	addwfc	??_rotate+1,f,c
  4856  004E30  0E01               	movlw	1
  4857  004E32  2408               	addwf	??_rotate,w,c
  4858  004E34  6ED9               	movwf	fsr2l,c
  4859  004E36  0E00               	movlw	0
  4860  004E38  2009               	addwfc	??_rotate+1,w,c
  4861  004E3A  6EDA               	movwf	fsr2h,c
  4862  004E3C  50DF               	movf	indf2,w,c
  4863  004E3E  6E19               	movwf	rotate@temp_y,c
  4864                           
  4865                           ;main.c: 918: new_coord[2*k]=pivot_x - pivot_y + temp_y;
  4866  004E40  501F               	movf	rotate@k,w,c
  4867  004E42  0D02               	mullw	2
  4868  004E44  0E10               	movlw	low rotate@new_coord
  4869  004E46  24F3               	addwf	prodl,w,c
  4870  004E48  6ED9               	movwf	fsr2l,c
  4871  004E4A  0E00               	movlw	high rotate@new_coord
  4872  004E4C  20F4               	addwfc	prodh,w,c
  4873  004E4E  6EDA               	movwf	fsr2h,c
  4874  004E50  501C               	movf	rotate@pivot_y,w,c
  4875  004E52  0800               	sublw	0
  4876  004E54  241B               	addwf	rotate@pivot_x,w,c
  4877  004E56  2419               	addwf	rotate@temp_y,w,c
  4878  004E58  6EDF               	movwf	indf2,c
  4879                           
  4880                           ;main.c: 919: new_coord[2*k+1]=pivot_x + pivot_y - temp_x;
  4881  004E5A  501F               	movf	rotate@k,w,c
  4882  004E5C  6E08               	movwf	??_rotate& (0+255),c
  4883  004E5E  6A09               	clrf	(??_rotate+1)& (0+255),c
  4884  004E60  90D8               	bcf	status,0,c
  4885  004E62  3608               	rlcf	??_rotate,f,c
  4886  004E64  3609               	rlcf	??_rotate+1,f,c
  4887  004E66  0E01               	movlw	1
  4888  004E68  2608               	addwf	??_rotate,f,c
  4889  004E6A  0E00               	movlw	0
  4890  004E6C  2209               	addwfc	??_rotate+1,f,c
  4891  004E6E  0E10               	movlw	low rotate@new_coord
  4892  004E70  2408               	addwf	??_rotate,w,c
  4893  004E72  6ED9               	movwf	fsr2l,c
  4894  004E74  0E00               	movlw	high rotate@new_coord
  4895  004E76  2009               	addwfc	??_rotate+1,w,c
  4896  004E78  6EDA               	movwf	fsr2h,c
  4897  004E7A  5018               	movf	rotate@temp_x,w,c
  4898  004E7C  0800               	sublw	0
  4899  004E7E  241B               	addwf	rotate@pivot_x,w,c
  4900  004E80  241C               	addwf	rotate@pivot_y,w,c
  4901  004E82  6EDF               	movwf	indf2,c
  4902                           
  4903                           ;main.c: 922: if(new_coord[2*k] >= 0 && new_coord[2*k] <=17 && new_coord[2*k+1] >= 0 && 
      +                          new_coord[2*k+1] <=11 && (array_data[new_coord[2*k]][new_coord[2*k+1]]!='1' || dontBelon
      +                          g2Shape(index,new_coord[2*k],new_coord[2*k+1]))){
  4904  004E84  501F               	movf	rotate@k,w,c
  4905  004E86  0D02               	mullw	2
  4906  004E88  0E10               	movlw	low rotate@new_coord
  4907  004E8A  24F3               	addwf	prodl,w,c
  4908  004E8C  6ED9               	movwf	fsr2l,c
  4909  004E8E  0E00               	movlw	high rotate@new_coord
  4910  004E90  20F4               	addwfc	prodh,w,c
  4911  004E92  6EDA               	movwf	fsr2h,c
  4912  004E94  0E12               	movlw	18
  4913  004E96  60DF               	cpfslt	indf2,c
  4914  004E98  D06A               	goto	l327
  4915  004E9A  501F               	movf	rotate@k,w,c
  4916  004E9C  6E08               	movwf	??_rotate& (0+255),c
  4917  004E9E  6A09               	clrf	(??_rotate+1)& (0+255),c
  4918  004EA0  90D8               	bcf	status,0,c
  4919  004EA2  3608               	rlcf	??_rotate,f,c
  4920  004EA4  3609               	rlcf	??_rotate+1,f,c
  4921  004EA6  0E01               	movlw	1
  4922  004EA8  2608               	addwf	??_rotate,f,c
  4923  004EAA  0E00               	movlw	0
  4924  004EAC  2209               	addwfc	??_rotate+1,f,c
  4925  004EAE  0E10               	movlw	low rotate@new_coord
  4926  004EB0  2408               	addwf	??_rotate,w,c
  4927  004EB2  6ED9               	movwf	fsr2l,c
  4928  004EB4  0E00               	movlw	high rotate@new_coord
  4929  004EB6  2009               	addwfc	??_rotate+1,w,c
  4930  004EB8  6EDA               	movwf	fsr2h,c
  4931  004EBA  0E0C               	movlw	12
  4932  004EBC  60DF               	cpfslt	indf2,c
  4933  004EBE  D057               	goto	l327
  4934  004EC0  501F               	movf	rotate@k,w,c
  4935  004EC2  0D02               	mullw	2
  4936  004EC4  0E10               	movlw	low rotate@new_coord
  4937  004EC6  24F3               	addwf	prodl,w,c
  4938  004EC8  6ED9               	movwf	fsr2l,c
  4939  004ECA  0E00               	movlw	high rotate@new_coord
  4940  004ECC  20F4               	addwfc	prodh,w,c
  4941  004ECE  6EDA               	movwf	fsr2h,c
  4942  004ED0  50DF               	movf	indf2,w,c
  4943  004ED2  6E08               	movwf	??_rotate& (0+255),c
  4944  004ED4  5008               	movf	??_rotate,w,c
  4945  004ED6  0D0C               	mullw	12
  4946  004ED8  0E00               	movlw	low _array_data
  4947  004EDA  6E09               	movwf	(??_rotate+1)& (0+255),c
  4948  004EDC  0E02               	movlw	high _array_data
  4949  004EDE  6E0A               	movwf	(??_rotate+2)& (0+255),c
  4950  004EE0  50F3               	movf	prodl,w,c
  4951  004EE2  2609               	addwf	??_rotate+1,f,c
  4952  004EE4  50F4               	movf	prodh,w,c
  4953  004EE6  220A               	addwfc	??_rotate+2,f,c
  4954  004EE8  501F               	movf	rotate@k,w,c
  4955  004EEA  6E0B               	movwf	(??_rotate+3)& (0+255),c
  4956  004EEC  6A0C               	clrf	(??_rotate+4)& (0+255),c
  4957  004EEE  90D8               	bcf	status,0,c
  4958  004EF0  360B               	rlcf	??_rotate+3,f,c
  4959  004EF2  360C               	rlcf	??_rotate+4,f,c
  4960  004EF4  0E01               	movlw	1
  4961  004EF6  260B               	addwf	??_rotate+3,f,c
  4962  004EF8  0E00               	movlw	0
  4963  004EFA  220C               	addwfc	??_rotate+4,f,c
  4964  004EFC  0E10               	movlw	low rotate@new_coord
  4965  004EFE  240B               	addwf	??_rotate+3,w,c
  4966  004F00  6ED9               	movwf	fsr2l,c
  4967  004F02  0E00               	movlw	high rotate@new_coord
  4968  004F04  200C               	addwfc	??_rotate+4,w,c
  4969  004F06  6EDA               	movwf	fsr2h,c
  4970  004F08  50DF               	movf	indf2,w,c
  4971  004F0A  6E0D               	movwf	(??_rotate+5)& (0+255),c
  4972  004F0C  500D               	movf	??_rotate+5,w,c
  4973  004F0E  0D01               	mullw	1
  4974  004F10  50F3               	movf	prodl,w,c
  4975  004F12  2409               	addwf	??_rotate+1,w,c
  4976  004F14  6ED9               	movwf	fsr2l,c
  4977  004F16  50F4               	movf	prodh,w,c
  4978  004F18  200A               	addwfc	??_rotate+2,w,c
  4979  004F1A  6EDA               	movwf	fsr2h,c
  4980  004F1C  0E31               	movlw	49
  4981  004F1E  18DE               	xorwf	postinc2,w,c
  4982  004F20  A4D8               	btfss	status,2,c
  4983  004F22  D022               	goto	u4830
  4984  004F24  501F               	movf	rotate@k,w,c
  4985  004F26  0D02               	mullw	2
  4986  004F28  0E10               	movlw	low rotate@new_coord
  4987  004F2A  24F3               	addwf	prodl,w,c
  4988  004F2C  6ED9               	movwf	fsr2l,c
  4989  004F2E  0E00               	movlw	high rotate@new_coord
  4990  004F30  20F4               	addwfc	prodh,w,c
  4991  004F32  6EDA               	movwf	fsr2h,c
  4992  004F34  50DF               	movf	indf2,w,c
  4993  004F36  6E01               	movwf	dontBelong2Shape@x,c
  4994  004F38  501F               	movf	rotate@k,w,c
  4995  004F3A  6E08               	movwf	??_rotate& (0+255),c
  4996  004F3C  6A09               	clrf	(??_rotate+1)& (0+255),c
  4997  004F3E  90D8               	bcf	status,0,c
  4998  004F40  3608               	rlcf	??_rotate,f,c
  4999  004F42  3609               	rlcf	??_rotate+1,f,c
  5000  004F44  0E01               	movlw	1
  5001  004F46  2608               	addwf	??_rotate,f,c
  5002  004F48  0E00               	movlw	0
  5003  004F4A  2209               	addwfc	??_rotate+1,f,c
  5004  004F4C  0E10               	movlw	low rotate@new_coord
  5005  004F4E  2408               	addwf	??_rotate,w,c
  5006  004F50  6ED9               	movwf	fsr2l,c
  5007  004F52  0E00               	movlw	high rotate@new_coord
  5008  004F54  2009               	addwfc	??_rotate+1,w,c
  5009  004F56  6EDA               	movwf	fsr2h,c
  5010  004F58  50DF               	movf	indf2,w,c
  5011  004F5A  6E02               	movwf	dontBelong2Shape@y,c
  5012  004F5C  501E               	movf	rotate@index,w,c
  5013  004F5E  ECDA  F01F         	call	_dontBelong2Shape
  5014  004F62  0900               	iorlw	0
  5015  004F64  B4D8               	btfsc	status,2,c
  5016  004F66  D003               	goto	l327
  5017  004F68                     u4830:
  5018                           
  5019                           ;main.c: 923: ok=1;
  5020  004F68  0E01               	movlw	1
  5021  004F6A  6E1A               	movwf	rotate@ok,c
  5022                           
  5023                           ;main.c: 924: }
  5024  004F6C  D003               	goto	l330
  5025  004F6E                     l327:
  5026                           
  5027                           ;main.c: 925: else {
  5028                           ;main.c: 926: ok=0;
  5029  004F6E  0E00               	movlw	0
  5030  004F70  6E1A               	movwf	rotate@ok,c
  5031                           
  5032                           ;main.c: 927: break;
  5033  004F72  D002               	goto	u4840
  5034  004F74                     l330:
  5035  004F74  2A1F               	incf	rotate@k,f,c
  5036  004F76  D734               	goto	l4410
  5037  004F78                     u4840:
  5038                           
  5039                           ;main.c: 928: }
  5040                           ;main.c: 929: }
  5041                           ;main.c: 931: if(ok){
  5042  004F78  501A               	movf	rotate@ok,w,c
  5043  004F7A  B4D8               	btfsc	status,2,c
  5044  004F7C  0012               	return	
  5045                           
  5046                           ;main.c: 933: for (uint8_t k=0;k<4;k++){
  5047  004F7E  0E00               	movlw	0
  5048  004F80  6E1D               	movwf	rotate@k_319,c
  5049  004F82                     l4438:
  5050  004F82  0E03               	movlw	3
  5051  004F84  641D               	cpfsgt	rotate@k_319,c
  5052  004F86  D001               	goto	l332
  5053  004F88  0012               	return	
  5054  004F8A                     l332:
  5055                           
  5056                           ;main.c: 934: array_data[all_shapes[index].index[k].x][all_shapes[index].index[k].y]='0'
      +                          ;
  5057  004F8A  501E               	movf	rotate@index,w,c
  5058  004F8C  0D09               	mullw	9
  5059  004F8E  0E00               	movlw	low _all_shapes
  5060  004F90  6E08               	movwf	??_rotate& (0+255),c
  5061  004F92  0E01               	movlw	high _all_shapes
  5062  004F94  6E09               	movwf	(??_rotate+1)& (0+255),c
  5063  004F96  50F3               	movf	prodl,w,c
  5064  004F98  2608               	addwf	??_rotate,f,c
  5065  004F9A  50F4               	movf	prodh,w,c
  5066  004F9C  2209               	addwfc	??_rotate+1,f,c
  5067  004F9E  501D               	movf	rotate@k_319,w,c
  5068  004FA0  0D02               	mullw	2
  5069  004FA2  50F3               	movf	prodl,w,c
  5070  004FA4  2408               	addwf	??_rotate,w,c
  5071  004FA6  6ED9               	movwf	fsr2l,c
  5072  004FA8  50F4               	movf	prodh,w,c
  5073  004FAA  2009               	addwfc	??_rotate+1,w,c
  5074  004FAC  6EDA               	movwf	fsr2h,c
  5075  004FAE  50DF               	movf	indf2,w,c
  5076  004FB0  6E0A               	movwf	(??_rotate+2)& (0+255),c
  5077  004FB2  500A               	movf	??_rotate+2,w,c
  5078  004FB4  0D0C               	mullw	12
  5079  004FB6  0E00               	movlw	low _array_data
  5080  004FB8  6E0B               	movwf	(??_rotate+3)& (0+255),c
  5081  004FBA  0E02               	movlw	high _array_data
  5082  004FBC  6E0C               	movwf	(??_rotate+4)& (0+255),c
  5083  004FBE  50F3               	movf	prodl,w,c
  5084  004FC0  260B               	addwf	??_rotate+3,f,c
  5085  004FC2  50F4               	movf	prodh,w,c
  5086  004FC4  220C               	addwfc	??_rotate+4,f,c
  5087  004FC6  501E               	movf	rotate@index,w,c
  5088  004FC8  0D09               	mullw	9
  5089  004FCA  0E00               	movlw	low _all_shapes
  5090  004FCC  6E0D               	movwf	(??_rotate+5)& (0+255),c
  5091  004FCE  0E01               	movlw	high _all_shapes
  5092  004FD0  6E0E               	movwf	(??_rotate+6)& (0+255),c
  5093  004FD2  50F3               	movf	prodl,w,c
  5094  004FD4  260D               	addwf	??_rotate+5,f,c
  5095  004FD6  50F4               	movf	prodh,w,c
  5096  004FD8  220E               	addwfc	??_rotate+6,f,c
  5097  004FDA  501D               	movf	rotate@k_319,w,c
  5098  004FDC  0D02               	mullw	2
  5099  004FDE  50F3               	movf	prodl,w,c
  5100  004FE0  260D               	addwf	??_rotate+5,f,c
  5101  004FE2  50F4               	movf	prodh,w,c
  5102  004FE4  220E               	addwfc	??_rotate+6,f,c
  5103  004FE6  0E01               	movlw	1
  5104  004FE8  240D               	addwf	??_rotate+5,w,c
  5105  004FEA  6ED9               	movwf	fsr2l,c
  5106  004FEC  0E00               	movlw	0
  5107  004FEE  200E               	addwfc	??_rotate+6,w,c
  5108  004FF0  6EDA               	movwf	fsr2h,c
  5109  004FF2  50DF               	movf	indf2,w,c
  5110  004FF4  6E0F               	movwf	(??_rotate+7)& (0+255),c
  5111  004FF6  500F               	movf	??_rotate+7,w,c
  5112  004FF8  0D01               	mullw	1
  5113  004FFA  50F3               	movf	prodl,w,c
  5114  004FFC  240B               	addwf	??_rotate+3,w,c
  5115  004FFE  6ED9               	movwf	fsr2l,c
  5116  005000  50F4               	movf	prodh,w,c
  5117  005002  200C               	addwfc	??_rotate+4,w,c
  5118  005004  6EDA               	movwf	fsr2h,c
  5119  005006  0E30               	movlw	48
  5120  005008  6EDF               	movwf	indf2,c
  5121                           
  5122                           ;main.c: 935: all_shapes[index].index[k].x=new_coord[2*k];
  5123  00500A  501D               	movf	rotate@k_319,w,c
  5124  00500C  0D02               	mullw	2
  5125  00500E  0E10               	movlw	low rotate@new_coord
  5126  005010  24F3               	addwf	prodl,w,c
  5127  005012  6ED9               	movwf	fsr2l,c
  5128  005014  0E00               	movlw	high rotate@new_coord
  5129  005016  20F4               	addwfc	prodh,w,c
  5130  005018  6EDA               	movwf	fsr2h,c
  5131  00501A  501E               	movf	rotate@index,w,c
  5132  00501C  0D09               	mullw	9
  5133  00501E  0E00               	movlw	low _all_shapes
  5134  005020  6E08               	movwf	??_rotate& (0+255),c
  5135  005022  0E01               	movlw	high _all_shapes
  5136  005024  6E09               	movwf	(??_rotate+1)& (0+255),c
  5137  005026  50F3               	movf	prodl,w,c
  5138  005028  2608               	addwf	??_rotate,f,c
  5139  00502A  50F4               	movf	prodh,w,c
  5140  00502C  2209               	addwfc	??_rotate+1,f,c
  5141  00502E  501D               	movf	rotate@k_319,w,c
  5142  005030  0D02               	mullw	2
  5143  005032  50F3               	movf	prodl,w,c
  5144  005034  2408               	addwf	??_rotate,w,c
  5145  005036  6EE1               	movwf	fsr1l,c
  5146  005038  50F4               	movf	prodh,w,c
  5147  00503A  2009               	addwfc	??_rotate+1,w,c
  5148  00503C  6EE2               	movwf	fsr1h,c
  5149  00503E  CFDF FFE7          	movff	indf2,indf1
  5150                           
  5151                           ;main.c: 936: all_shapes[index].index[k].y=new_coord[2*k+1];
  5152  005042  501D               	movf	rotate@k_319,w,c
  5153  005044  6E08               	movwf	??_rotate& (0+255),c
  5154  005046  6A09               	clrf	(??_rotate+1)& (0+255),c
  5155  005048  90D8               	bcf	status,0,c
  5156  00504A  3608               	rlcf	??_rotate,f,c
  5157  00504C  3609               	rlcf	??_rotate+1,f,c
  5158  00504E  0E01               	movlw	1
  5159  005050  2608               	addwf	??_rotate,f,c
  5160  005052  0E00               	movlw	0
  5161  005054  2209               	addwfc	??_rotate+1,f,c
  5162  005056  0E10               	movlw	low rotate@new_coord
  5163  005058  2408               	addwf	??_rotate,w,c
  5164  00505A  6ED9               	movwf	fsr2l,c
  5165  00505C  0E00               	movlw	high rotate@new_coord
  5166  00505E  2009               	addwfc	??_rotate+1,w,c
  5167  005060  6EDA               	movwf	fsr2h,c
  5168  005062  501E               	movf	rotate@index,w,c
  5169  005064  0D09               	mullw	9
  5170  005066  0E00               	movlw	low _all_shapes
  5171  005068  6E0A               	movwf	(??_rotate+2)& (0+255),c
  5172  00506A  0E01               	movlw	high _all_shapes
  5173  00506C  6E0B               	movwf	(??_rotate+3)& (0+255),c
  5174  00506E  50F3               	movf	prodl,w,c
  5175  005070  260A               	addwf	??_rotate+2,f,c
  5176  005072  50F4               	movf	prodh,w,c
  5177  005074  220B               	addwfc	??_rotate+3,f,c
  5178  005076  501D               	movf	rotate@k_319,w,c
  5179  005078  0D02               	mullw	2
  5180  00507A  50F3               	movf	prodl,w,c
  5181  00507C  260A               	addwf	??_rotate+2,f,c
  5182  00507E  50F4               	movf	prodh,w,c
  5183  005080  220B               	addwfc	??_rotate+3,f,c
  5184  005082  0E01               	movlw	1
  5185  005084  240A               	addwf	??_rotate+2,w,c
  5186  005086  6EE1               	movwf	fsr1l,c
  5187  005088  0E00               	movlw	0
  5188  00508A  200B               	addwfc	??_rotate+3,w,c
  5189  00508C  6EE2               	movwf	fsr1h,c
  5190  00508E  CFDF FFE7          	movff	indf2,indf1
  5191                           
  5192                           ;main.c: 937: array_data[all_shapes[index].index[k].x][all_shapes[index].index[k].y]='1'
      +                          ;
  5193  005092  501E               	movf	rotate@index,w,c
  5194  005094  0D09               	mullw	9
  5195  005096  0E00               	movlw	low _all_shapes
  5196  005098  6E08               	movwf	??_rotate& (0+255),c
  5197  00509A  0E01               	movlw	high _all_shapes
  5198  00509C  6E09               	movwf	(??_rotate+1)& (0+255),c
  5199  00509E  50F3               	movf	prodl,w,c
  5200  0050A0  2608               	addwf	??_rotate,f,c
  5201  0050A2  50F4               	movf	prodh,w,c
  5202  0050A4  2209               	addwfc	??_rotate+1,f,c
  5203  0050A6  501D               	movf	rotate@k_319,w,c
  5204  0050A8  0D02               	mullw	2
  5205  0050AA  50F3               	movf	prodl,w,c
  5206  0050AC  2408               	addwf	??_rotate,w,c
  5207  0050AE  6ED9               	movwf	fsr2l,c
  5208  0050B0  50F4               	movf	prodh,w,c
  5209  0050B2  2009               	addwfc	??_rotate+1,w,c
  5210  0050B4  6EDA               	movwf	fsr2h,c
  5211  0050B6  50DF               	movf	indf2,w,c
  5212  0050B8  6E0A               	movwf	(??_rotate+2)& (0+255),c
  5213  0050BA  500A               	movf	??_rotate+2,w,c
  5214  0050BC  0D0C               	mullw	12
  5215  0050BE  0E00               	movlw	low _array_data
  5216  0050C0  6E0B               	movwf	(??_rotate+3)& (0+255),c
  5217  0050C2  0E02               	movlw	high _array_data
  5218  0050C4  6E0C               	movwf	(??_rotate+4)& (0+255),c
  5219  0050C6  50F3               	movf	prodl,w,c
  5220  0050C8  260B               	addwf	??_rotate+3,f,c
  5221  0050CA  50F4               	movf	prodh,w,c
  5222  0050CC  220C               	addwfc	??_rotate+4,f,c
  5223  0050CE  501E               	movf	rotate@index,w,c
  5224  0050D0  0D09               	mullw	9
  5225  0050D2  0E00               	movlw	low _all_shapes
  5226  0050D4  6E0D               	movwf	(??_rotate+5)& (0+255),c
  5227  0050D6  0E01               	movlw	high _all_shapes
  5228  0050D8  6E0E               	movwf	(??_rotate+6)& (0+255),c
  5229  0050DA  50F3               	movf	prodl,w,c
  5230  0050DC  260D               	addwf	??_rotate+5,f,c
  5231  0050DE  50F4               	movf	prodh,w,c
  5232  0050E0  220E               	addwfc	??_rotate+6,f,c
  5233  0050E2  501D               	movf	rotate@k_319,w,c
  5234  0050E4  0D02               	mullw	2
  5235  0050E6  50F3               	movf	prodl,w,c
  5236  0050E8  260D               	addwf	??_rotate+5,f,c
  5237  0050EA  50F4               	movf	prodh,w,c
  5238  0050EC  220E               	addwfc	??_rotate+6,f,c
  5239  0050EE  0E01               	movlw	1
  5240  0050F0  240D               	addwf	??_rotate+5,w,c
  5241  0050F2  6ED9               	movwf	fsr2l,c
  5242  0050F4  0E00               	movlw	0
  5243  0050F6  200E               	addwfc	??_rotate+6,w,c
  5244  0050F8  6EDA               	movwf	fsr2h,c
  5245  0050FA  50DF               	movf	indf2,w,c
  5246  0050FC  6E0F               	movwf	(??_rotate+7)& (0+255),c
  5247  0050FE  500F               	movf	??_rotate+7,w,c
  5248  005100  0D01               	mullw	1
  5249  005102  50F3               	movf	prodl,w,c
  5250  005104  240B               	addwf	??_rotate+3,w,c
  5251  005106  6ED9               	movwf	fsr2l,c
  5252  005108  50F4               	movf	prodh,w,c
  5253  00510A  200C               	addwfc	??_rotate+4,w,c
  5254  00510C  6EDA               	movwf	fsr2h,c
  5255  00510E  0E31               	movlw	49
  5256  005110  6EDF               	movwf	indf2,c
  5257  005112  2A1D               	incf	rotate@k_319,f,c
  5258  005114  D736               	goto	l4438
  5259  005116                     __end_of_rotate:
  5260                           	opt stack 0
  5261                           tblptru	equ	0xFF8
  5262                           tblptrh	equ	0xFF7
  5263                           tblptrl	equ	0xFF6
  5264                           tablat	equ	0xFF5
  5265                           prodh	equ	0xFF4
  5266                           prodl	equ	0xFF3
  5267                           intcon	equ	0xFF2
  5268                           postinc0	equ	0xFEE
  5269                           wreg	equ	0xFE8
  5270                           indf1	equ	0xFE7
  5271                           postdec1	equ	0xFE5
  5272                           fsr1h	equ	0xFE2
  5273                           fsr1l	equ	0xFE1
  5274                           indf2	equ	0xFDF
  5275                           postinc2	equ	0xFDE
  5276                           fsr2h	equ	0xFDA
  5277                           fsr2l	equ	0xFD9
  5278                           status	equ	0xFD8
  5279                           
  5280 ;; *************** function _pwmStop *****************
  5281 ;; Defined at:
  5282 ;;		line 77 in file "glcd_library/mcu.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;		None
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		None
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5296 ;;      Params:         0       0       0       0       0       0       0       0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5299 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5300 ;;Total ram usage:        0 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_main
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text3
  5310  003A5A                     __ptext3:
  5311                           	opt stack 0
  5312  003A5A                     _pwmStop:
  5313                           	opt stack 30
  5314                           
  5315                           ;mcu.c: 79: T2CONbits.TMR2ON = 0;
  5316                           
  5317                           ;incstack = 0
  5318  003A5A  94CA               	bcf	4042,2,c	;volatile
  5319  003A5C  0012               	return		;funcret
  5320  003A5E                     __end_of_pwmStop:
  5321                           	opt stack 0
  5322                           tblptru	equ	0xFF8
  5323                           tblptrh	equ	0xFF7
  5324                           tblptrl	equ	0xFF6
  5325                           tablat	equ	0xFF5
  5326                           prodh	equ	0xFF4
  5327                           prodl	equ	0xFF3
  5328                           intcon	equ	0xFF2
  5329                           postinc0	equ	0xFEE
  5330                           wreg	equ	0xFE8
  5331                           indf1	equ	0xFE7
  5332                           postdec1	equ	0xFE5
  5333                           fsr1h	equ	0xFE2
  5334                           fsr1l	equ	0xFE1
  5335                           indf2	equ	0xFDF
  5336                           postinc2	equ	0xFDE
  5337                           fsr2h	equ	0xFDA
  5338                           fsr2l	equ	0xFD9
  5339                           status	equ	0xFD8
  5340                           
  5341 ;; *************** function _pwmStart *****************
  5342 ;; Defined at:
  5343 ;;		line 71 in file "glcd_library/mcu.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;		None
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;		None
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  1    wreg      void 
  5350 ;; Registers used:
  5351 ;;		None
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5357 ;;      Params:         0       0       0       0       0       0       0       0       0
  5358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5360 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5361 ;;Total ram usage:        0 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; This function calls:
  5364 ;;		Nothing
  5365 ;; This function is called by:
  5366 ;;		_main
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text4
  5371  003A56                     __ptext4:
  5372                           	opt stack 0
  5373  003A56                     _pwmStart:
  5374                           	opt stack 30
  5375                           
  5376                           ;mcu.c: 73: T2CONbits.TMR2ON = 1;
  5377                           
  5378                           ;incstack = 0
  5379  003A56  84CA               	bsf	4042,2,c	;volatile
  5380  003A58  0012               	return		;funcret
  5381  003A5A                     __end_of_pwmStart:
  5382                           	opt stack 0
  5383                           tblptru	equ	0xFF8
  5384                           tblptrh	equ	0xFF7
  5385                           tblptrl	equ	0xFF6
  5386                           tablat	equ	0xFF5
  5387                           prodh	equ	0xFF4
  5388                           prodl	equ	0xFF3
  5389                           intcon	equ	0xFF2
  5390                           postinc0	equ	0xFEE
  5391                           wreg	equ	0xFE8
  5392                           indf1	equ	0xFE7
  5393                           postdec1	equ	0xFE5
  5394                           fsr1h	equ	0xFE2
  5395                           fsr1l	equ	0xFE1
  5396                           indf2	equ	0xFDF
  5397                           postinc2	equ	0xFDE
  5398                           fsr2h	equ	0xFDA
  5399                           fsr2l	equ	0xFD9
  5400                           status	equ	0xFD8
  5401                           
  5402 ;; *************** function _moveRight *****************
  5403 ;; Defined at:
  5404 ;;		line 418 in file "main.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  index           1    wreg     unsigned char 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  index           1   23[COMRAM] unsigned char 
  5409 ;;  j               1   19[COMRAM] unsigned char 
  5410 ;;  j               1   21[COMRAM] unsigned char 
  5411 ;;  j               1   20[COMRAM] unsigned char 
  5412 ;;  i               1   22[COMRAM] unsigned char 
  5413 ;;  ok              1   18[COMRAM] unsigned char 
  5414 ;;  b               1   17[COMRAM] unsigned char 
  5415 ;;  a               1   16[COMRAM] unsigned char 
  5416 ;; Return value:  Size  Location     Type
  5417 ;;                  1    wreg      void 
  5418 ;; Registers used:
  5419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5420 ;; Tracked objects:
  5421 ;;		On entry : 0/0
  5422 ;;		On exit  : 0/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5425 ;;      Params:         0       0       0       0       0       0       0       0       0
  5426 ;;      Locals:         8       0       0       0       0       0       0       0       0
  5427 ;;      Temps:          9       0       0       0       0       0       0       0       0
  5428 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5429 ;;Total ram usage:       17 bytes
  5430 ;; Hardware stack levels used:    1
  5431 ;; Hardware stack levels required when called:    1
  5432 ;; This function calls:
  5433 ;;		___wmul
  5434 ;;		_dontBelong2Shape
  5435 ;; This function is called by:
  5436 ;;		_main
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text5
  5441  005562                     __ptext5:
  5442                           	opt stack 0
  5443  005562                     _moveRight:
  5444                           	opt stack 29
  5445                           
  5446                           ;incstack = 0
  5447                           ;moveRight@index stored from wreg
  5448  005562  6E18               	movwf	moveRight@index,c
  5449                           
  5450                           ;main.c: 423: uint8_t a,b,ok;
  5451                           ;main.c: 424: for (uint8_t i = 0; i < 4; ++i){
  5452  005564  0E00               	movlw	0
  5453  005566  6E17               	movwf	moveRight@i,c
  5454  005568                     l3838:
  5455  005568  0E03               	movlw	3
  5456  00556A  6417               	cpfsgt	moveRight@i,c
  5457  00556C  D001               	goto	l154
  5458  00556E  D0DE               	goto	u4150
  5459  005570                     l154:
  5460                           
  5461                           ;main.c: 425: for (uint8_t j = i + 1; j < 4; ++j){
  5462  005570  2817               	incf	moveRight@i,w,c
  5463  005572  6E14               	movwf	moveRight@j,c
  5464  005574  0E03               	movlw	3
  5465  005576  6414               	cpfsgt	moveRight@j,c
  5466  005578  D001               	goto	l156
  5467  00557A  D0D6               	goto	u4140
  5468  00557C                     l156:
  5469                           
  5470                           ;main.c: 426: if (all_shapes[index].index[i].x < all_shapes[index].index[j].x){
  5471  00557C  5018               	movf	moveRight@index,w,c
  5472  00557E  0D09               	mullw	9
  5473  005580  0E00               	movlw	low _all_shapes
  5474  005582  6E08               	movwf	??_moveRight& (0+255),c
  5475  005584  0E01               	movlw	high _all_shapes
  5476  005586  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5477  005588  50F3               	movf	prodl,w,c
  5478  00558A  2608               	addwf	??_moveRight,f,c
  5479  00558C  50F4               	movf	prodh,w,c
  5480  00558E  2209               	addwfc	??_moveRight+1,f,c
  5481  005590  5014               	movf	moveRight@j,w,c
  5482  005592  0D02               	mullw	2
  5483  005594  50F3               	movf	prodl,w,c
  5484  005596  2408               	addwf	??_moveRight,w,c
  5485  005598  6ED9               	movwf	fsr2l,c
  5486  00559A  50F4               	movf	prodh,w,c
  5487  00559C  2009               	addwfc	??_moveRight+1,w,c
  5488  00559E  6EDA               	movwf	fsr2h,c
  5489  0055A0  5018               	movf	moveRight@index,w,c
  5490  0055A2  0D09               	mullw	9
  5491  0055A4  0E00               	movlw	low _all_shapes
  5492  0055A6  6E0B               	movwf	(??_moveRight+3)& (0+255),c
  5493  0055A8  0E01               	movlw	high _all_shapes
  5494  0055AA  6E0C               	movwf	(??_moveRight+4)& (0+255),c
  5495  0055AC  50F3               	movf	prodl,w,c
  5496  0055AE  260B               	addwf	??_moveRight+3,f,c
  5497  0055B0  50F4               	movf	prodh,w,c
  5498  0055B2  220C               	addwfc	??_moveRight+4,f,c
  5499  0055B4  5017               	movf	moveRight@i,w,c
  5500  0055B6  0D02               	mullw	2
  5501  0055B8  50F3               	movf	prodl,w,c
  5502  0055BA  240B               	addwf	??_moveRight+3,w,c
  5503  0055BC  6EE1               	movwf	fsr1l,c
  5504  0055BE  50F4               	movf	prodh,w,c
  5505  0055C0  200C               	addwfc	??_moveRight+4,w,c
  5506  0055C2  6EE2               	movwf	fsr1h,c
  5507  0055C4  50DE               	movf	postinc2,w,c
  5508  0055C6  5CE6               	subwf	postinc1,w,c
  5509  0055C8  B0D8               	btfsc	status,0,c
  5510  0055CA  D0AC               	goto	l158
  5511                           
  5512                           ;main.c: 427: a = all_shapes[index].index[i].y;
  5513  0055CC  5018               	movf	moveRight@index,w,c
  5514  0055CE  0D09               	mullw	9
  5515  0055D0  0E00               	movlw	low _all_shapes
  5516  0055D2  6E08               	movwf	??_moveRight& (0+255),c
  5517  0055D4  0E01               	movlw	high _all_shapes
  5518  0055D6  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5519  0055D8  50F3               	movf	prodl,w,c
  5520  0055DA  2608               	addwf	??_moveRight,f,c
  5521  0055DC  50F4               	movf	prodh,w,c
  5522  0055DE  2209               	addwfc	??_moveRight+1,f,c
  5523  0055E0  5017               	movf	moveRight@i,w,c
  5524  0055E2  0D02               	mullw	2
  5525  0055E4  50F3               	movf	prodl,w,c
  5526  0055E6  2608               	addwf	??_moveRight,f,c
  5527  0055E8  50F4               	movf	prodh,w,c
  5528  0055EA  2209               	addwfc	??_moveRight+1,f,c
  5529  0055EC  0E01               	movlw	1
  5530  0055EE  2408               	addwf	??_moveRight,w,c
  5531  0055F0  6ED9               	movwf	fsr2l,c
  5532  0055F2  0E00               	movlw	0
  5533  0055F4  2009               	addwfc	??_moveRight+1,w,c
  5534  0055F6  6EDA               	movwf	fsr2h,c
  5535  0055F8  50DF               	movf	indf2,w,c
  5536  0055FA  6E11               	movwf	moveRight@a,c
  5537                           
  5538                           ;main.c: 428: b = all_shapes[index].index[i].x;
  5539  0055FC  5018               	movf	moveRight@index,w,c
  5540  0055FE  0D09               	mullw	9
  5541  005600  0E00               	movlw	low _all_shapes
  5542  005602  6E08               	movwf	??_moveRight& (0+255),c
  5543  005604  0E01               	movlw	high _all_shapes
  5544  005606  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5545  005608  50F3               	movf	prodl,w,c
  5546  00560A  2608               	addwf	??_moveRight,f,c
  5547  00560C  50F4               	movf	prodh,w,c
  5548  00560E  2209               	addwfc	??_moveRight+1,f,c
  5549  005610  5017               	movf	moveRight@i,w,c
  5550  005612  0D02               	mullw	2
  5551  005614  50F3               	movf	prodl,w,c
  5552  005616  2408               	addwf	??_moveRight,w,c
  5553  005618  6ED9               	movwf	fsr2l,c
  5554  00561A  50F4               	movf	prodh,w,c
  5555  00561C  2009               	addwfc	??_moveRight+1,w,c
  5556  00561E  6EDA               	movwf	fsr2h,c
  5557  005620  50DF               	movf	indf2,w,c
  5558  005622  6E12               	movwf	moveRight@b,c
  5559                           
  5560                           ;main.c: 429: all_shapes[index].index[i].y = all_shapes[index].index[j].y;
  5561  005624  5018               	movf	moveRight@index,w,c
  5562  005626  0D09               	mullw	9
  5563  005628  0E00               	movlw	low _all_shapes
  5564  00562A  6E08               	movwf	??_moveRight& (0+255),c
  5565  00562C  0E01               	movlw	high _all_shapes
  5566  00562E  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5567  005630  50F3               	movf	prodl,w,c
  5568  005632  2608               	addwf	??_moveRight,f,c
  5569  005634  50F4               	movf	prodh,w,c
  5570  005636  2209               	addwfc	??_moveRight+1,f,c
  5571  005638  5014               	movf	moveRight@j,w,c
  5572  00563A  0D02               	mullw	2
  5573  00563C  50F3               	movf	prodl,w,c
  5574  00563E  2608               	addwf	??_moveRight,f,c
  5575  005640  50F4               	movf	prodh,w,c
  5576  005642  2209               	addwfc	??_moveRight+1,f,c
  5577  005644  0E01               	movlw	1
  5578  005646  2408               	addwf	??_moveRight,w,c
  5579  005648  6ED9               	movwf	fsr2l,c
  5580  00564A  0E00               	movlw	0
  5581  00564C  2009               	addwfc	??_moveRight+1,w,c
  5582  00564E  6EDA               	movwf	fsr2h,c
  5583  005650  5018               	movf	moveRight@index,w,c
  5584  005652  0D09               	mullw	9
  5585  005654  0E00               	movlw	low _all_shapes
  5586  005656  6E0A               	movwf	(??_moveRight+2)& (0+255),c
  5587  005658  0E01               	movlw	high _all_shapes
  5588  00565A  6E0B               	movwf	(??_moveRight+3)& (0+255),c
  5589  00565C  50F3               	movf	prodl,w,c
  5590  00565E  260A               	addwf	??_moveRight+2,f,c
  5591  005660  50F4               	movf	prodh,w,c
  5592  005662  220B               	addwfc	??_moveRight+3,f,c
  5593  005664  5017               	movf	moveRight@i,w,c
  5594  005666  0D02               	mullw	2
  5595  005668  50F3               	movf	prodl,w,c
  5596  00566A  260A               	addwf	??_moveRight+2,f,c
  5597  00566C  50F4               	movf	prodh,w,c
  5598  00566E  220B               	addwfc	??_moveRight+3,f,c
  5599  005670  0E01               	movlw	1
  5600  005672  240A               	addwf	??_moveRight+2,w,c
  5601  005674  6EE1               	movwf	fsr1l,c
  5602  005676  0E00               	movlw	0
  5603  005678  200B               	addwfc	??_moveRight+3,w,c
  5604  00567A  6EE2               	movwf	fsr1h,c
  5605  00567C  CFDF FFE7          	movff	indf2,indf1
  5606                           
  5607                           ;main.c: 430: all_shapes[index].index[i].x = all_shapes[index].index[j].x;
  5608  005680  5018               	movf	moveRight@index,w,c
  5609  005682  0D09               	mullw	9
  5610  005684  0E00               	movlw	low _all_shapes
  5611  005686  6E08               	movwf	??_moveRight& (0+255),c
  5612  005688  0E01               	movlw	high _all_shapes
  5613  00568A  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5614  00568C  50F3               	movf	prodl,w,c
  5615  00568E  2608               	addwf	??_moveRight,f,c
  5616  005690  50F4               	movf	prodh,w,c
  5617  005692  2209               	addwfc	??_moveRight+1,f,c
  5618  005694  5014               	movf	moveRight@j,w,c
  5619  005696  0D02               	mullw	2
  5620  005698  50F3               	movf	prodl,w,c
  5621  00569A  2408               	addwf	??_moveRight,w,c
  5622  00569C  6ED9               	movwf	fsr2l,c
  5623  00569E  50F4               	movf	prodh,w,c
  5624  0056A0  2009               	addwfc	??_moveRight+1,w,c
  5625  0056A2  6EDA               	movwf	fsr2h,c
  5626  0056A4  5018               	movf	moveRight@index,w,c
  5627  0056A6  0D09               	mullw	9
  5628  0056A8  0E00               	movlw	low _all_shapes
  5629  0056AA  6E0A               	movwf	(??_moveRight+2)& (0+255),c
  5630  0056AC  0E01               	movlw	high _all_shapes
  5631  0056AE  6E0B               	movwf	(??_moveRight+3)& (0+255),c
  5632  0056B0  50F3               	movf	prodl,w,c
  5633  0056B2  260A               	addwf	??_moveRight+2,f,c
  5634  0056B4  50F4               	movf	prodh,w,c
  5635  0056B6  220B               	addwfc	??_moveRight+3,f,c
  5636  0056B8  5017               	movf	moveRight@i,w,c
  5637  0056BA  0D02               	mullw	2
  5638  0056BC  50F3               	movf	prodl,w,c
  5639  0056BE  240A               	addwf	??_moveRight+2,w,c
  5640  0056C0  6EE1               	movwf	fsr1l,c
  5641  0056C2  50F4               	movf	prodh,w,c
  5642  0056C4  200B               	addwfc	??_moveRight+3,w,c
  5643  0056C6  6EE2               	movwf	fsr1h,c
  5644  0056C8  CFDF FFE7          	movff	indf2,indf1
  5645                           
  5646                           ;main.c: 431: all_shapes[index].index[j].y = a;
  5647  0056CC  5018               	movf	moveRight@index,w,c
  5648  0056CE  0D09               	mullw	9
  5649  0056D0  0E00               	movlw	low _all_shapes
  5650  0056D2  6E08               	movwf	??_moveRight& (0+255),c
  5651  0056D4  0E01               	movlw	high _all_shapes
  5652  0056D6  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5653  0056D8  50F3               	movf	prodl,w,c
  5654  0056DA  2608               	addwf	??_moveRight,f,c
  5655  0056DC  50F4               	movf	prodh,w,c
  5656  0056DE  2209               	addwfc	??_moveRight+1,f,c
  5657  0056E0  5014               	movf	moveRight@j,w,c
  5658  0056E2  0D02               	mullw	2
  5659  0056E4  50F3               	movf	prodl,w,c
  5660  0056E6  2608               	addwf	??_moveRight,f,c
  5661  0056E8  50F4               	movf	prodh,w,c
  5662  0056EA  2209               	addwfc	??_moveRight+1,f,c
  5663  0056EC  0E01               	movlw	1
  5664  0056EE  2408               	addwf	??_moveRight,w,c
  5665  0056F0  6ED9               	movwf	fsr2l,c
  5666  0056F2  0E00               	movlw	0
  5667  0056F4  2009               	addwfc	??_moveRight+1,w,c
  5668  0056F6  6EDA               	movwf	fsr2h,c
  5669  0056F8  C011  FFDF         	movff	moveRight@a,indf2
  5670                           
  5671                           ;main.c: 432: all_shapes[index].index[j].x = b;
  5672  0056FC  5018               	movf	moveRight@index,w,c
  5673  0056FE  0D09               	mullw	9
  5674  005700  0E00               	movlw	low _all_shapes
  5675  005702  6E08               	movwf	??_moveRight& (0+255),c
  5676  005704  0E01               	movlw	high _all_shapes
  5677  005706  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5678  005708  50F3               	movf	prodl,w,c
  5679  00570A  2608               	addwf	??_moveRight,f,c
  5680  00570C  50F4               	movf	prodh,w,c
  5681  00570E  2209               	addwfc	??_moveRight+1,f,c
  5682  005710  5014               	movf	moveRight@j,w,c
  5683  005712  0D02               	mullw	2
  5684  005714  50F3               	movf	prodl,w,c
  5685  005716  2408               	addwf	??_moveRight,w,c
  5686  005718  6ED9               	movwf	fsr2l,c
  5687  00571A  50F4               	movf	prodh,w,c
  5688  00571C  2009               	addwfc	??_moveRight+1,w,c
  5689  00571E  6EDA               	movwf	fsr2h,c
  5690  005720  C012  FFDF         	movff	moveRight@b,indf2
  5691  005724                     l158:
  5692  005724  2A14               	incf	moveRight@j,f,c
  5693  005726  D726               	goto	L1
  5694  005728                     u4140:
  5695  005728  2A17               	incf	moveRight@i,f,c
  5696  00572A  D71E               	goto	l3838
  5697  00572C                     u4150:
  5698                           
  5699                           ;main.c: 433: }
  5700                           ;main.c: 434: }
  5701                           ;main.c: 435: }
  5702                           ;main.c: 438: for(uint8_t j=0;j<4;j++){
  5703  00572C  0E00               	movlw	0
  5704  00572E  6E15               	movwf	moveRight@j_255,c
  5705  005730                     l3864:
  5706  005730  0E03               	movlw	3
  5707  005732  6415               	cpfsgt	moveRight@j_255,c
  5708  005734  D001               	goto	l159
  5709  005736  D09D               	goto	u4200
  5710  005738                     l159:
  5711                           
  5712                           ;main.c: 440: if(all_shapes[index].index[j].x <17 && (array_data[(all_shapes[index].inde
      +                          x[j].x)+1][all_shapes[index].index[j].y]!='1' || dontBelong2Shape(index,(all_shapes[inde
      +                          x].index[j].x)+1,all_shapes[index].index[j].y))){
  5713  005738  5018               	movf	moveRight@index,w,c
  5714  00573A  0D09               	mullw	9
  5715  00573C  0E00               	movlw	low _all_shapes
  5716  00573E  6E08               	movwf	??_moveRight& (0+255),c
  5717  005740  0E01               	movlw	high _all_shapes
  5718  005742  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5719  005744  50F3               	movf	prodl,w,c
  5720  005746  2608               	addwf	??_moveRight,f,c
  5721  005748  50F4               	movf	prodh,w,c
  5722  00574A  2209               	addwfc	??_moveRight+1,f,c
  5723  00574C  5015               	movf	moveRight@j_255,w,c
  5724  00574E  0D02               	mullw	2
  5725  005750  50F3               	movf	prodl,w,c
  5726  005752  2408               	addwf	??_moveRight,w,c
  5727  005754  6ED9               	movwf	fsr2l,c
  5728  005756  50F4               	movf	prodh,w,c
  5729  005758  2009               	addwfc	??_moveRight+1,w,c
  5730  00575A  6EDA               	movwf	fsr2h,c
  5731  00575C  0E11               	movlw	17
  5732  00575E  60DF               	cpfslt	indf2,c
  5733  005760  D083               	goto	l161
  5734  005762  5018               	movf	moveRight@index,w,c
  5735  005764  0D09               	mullw	9
  5736  005766  0E00               	movlw	low _all_shapes
  5737  005768  6E08               	movwf	??_moveRight& (0+255),c
  5738  00576A  0E01               	movlw	high _all_shapes
  5739  00576C  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5740  00576E  50F3               	movf	prodl,w,c
  5741  005770  2608               	addwf	??_moveRight,f,c
  5742  005772  50F4               	movf	prodh,w,c
  5743  005774  2209               	addwfc	??_moveRight+1,f,c
  5744  005776  5015               	movf	moveRight@j_255,w,c
  5745  005778  0D02               	mullw	2
  5746  00577A  50F3               	movf	prodl,w,c
  5747  00577C  2408               	addwf	??_moveRight,w,c
  5748  00577E  6ED9               	movwf	fsr2l,c
  5749  005780  50F4               	movf	prodh,w,c
  5750  005782  2009               	addwfc	??_moveRight+1,w,c
  5751  005784  6EDA               	movwf	fsr2h,c
  5752  005786  50DF               	movf	indf2,w,c
  5753  005788  6E0A               	movwf	(??_moveRight+2)& (0+255),c
  5754  00578A  0E01               	movlw	1
  5755  00578C  240A               	addwf	??_moveRight+2,w,c
  5756  00578E  6E01               	movwf	___wmul@multiplier,c
  5757  005790  6A02               	clrf	___wmul@multiplier+1,c
  5758  005792  0E00               	movlw	0
  5759  005794  2202               	addwfc	___wmul@multiplier+1,f,c
  5760  005796  0E00               	movlw	0
  5761  005798  6E04               	movwf	___wmul@multiplicand+1,c
  5762  00579A  0E0C               	movlw	12
  5763  00579C  6E03               	movwf	___wmul@multiplicand,c
  5764  00579E  EC79  F01D         	call	___wmul	;wreg free
  5765  0057A2  0E00               	movlw	low _array_data
  5766  0057A4  6E0B               	movwf	(??_moveRight+3)& (0+255),c
  5767  0057A6  0E02               	movlw	high _array_data
  5768  0057A8  6E0C               	movwf	(??_moveRight+4)& (0+255),c
  5769  0057AA  5001               	movf	?___wmul,w,c
  5770  0057AC  260B               	addwf	??_moveRight+3,f,c
  5771  0057AE  5002               	movf	?___wmul+1,w,c
  5772  0057B0  220C               	addwfc	??_moveRight+4,f,c
  5773  0057B2  5018               	movf	moveRight@index,w,c
  5774  0057B4  0D09               	mullw	9
  5775  0057B6  0E00               	movlw	low _all_shapes
  5776  0057B8  6E0D               	movwf	(??_moveRight+5)& (0+255),c
  5777  0057BA  0E01               	movlw	high _all_shapes
  5778  0057BC  6E0E               	movwf	(??_moveRight+6)& (0+255),c
  5779  0057BE  50F3               	movf	prodl,w,c
  5780  0057C0  260D               	addwf	??_moveRight+5,f,c
  5781  0057C2  50F4               	movf	prodh,w,c
  5782  0057C4  220E               	addwfc	??_moveRight+6,f,c
  5783  0057C6  5015               	movf	moveRight@j_255,w,c
  5784  0057C8  0D02               	mullw	2
  5785  0057CA  50F3               	movf	prodl,w,c
  5786  0057CC  260D               	addwf	??_moveRight+5,f,c
  5787  0057CE  50F4               	movf	prodh,w,c
  5788  0057D0  220E               	addwfc	??_moveRight+6,f,c
  5789  0057D2  0E01               	movlw	1
  5790  0057D4  240D               	addwf	??_moveRight+5,w,c
  5791  0057D6  6ED9               	movwf	fsr2l,c
  5792  0057D8  0E00               	movlw	0
  5793  0057DA  200E               	addwfc	??_moveRight+6,w,c
  5794  0057DC  6EDA               	movwf	fsr2h,c
  5795  0057DE  50DF               	movf	indf2,w,c
  5796  0057E0  6E0F               	movwf	(??_moveRight+7)& (0+255),c
  5797  0057E2  500F               	movf	??_moveRight+7,w,c
  5798  0057E4  0D01               	mullw	1
  5799  0057E6  50F3               	movf	prodl,w,c
  5800  0057E8  240B               	addwf	??_moveRight+3,w,c
  5801  0057EA  6ED9               	movwf	fsr2l,c
  5802  0057EC  50F4               	movf	prodh,w,c
  5803  0057EE  200C               	addwfc	??_moveRight+4,w,c
  5804  0057F0  6EDA               	movwf	fsr2h,c
  5805  0057F2  0E31               	movlw	49
  5806  0057F4  18DE               	xorwf	postinc2,w,c
  5807  0057F6  A4D8               	btfss	status,2,c
  5808  0057F8  D034               	goto	u4190
  5809  0057FA  5018               	movf	moveRight@index,w,c
  5810  0057FC  0D09               	mullw	9
  5811  0057FE  0E00               	movlw	low _all_shapes
  5812  005800  6E08               	movwf	??_moveRight& (0+255),c
  5813  005802  0E01               	movlw	high _all_shapes
  5814  005804  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5815  005806  50F3               	movf	prodl,w,c
  5816  005808  2608               	addwf	??_moveRight,f,c
  5817  00580A  50F4               	movf	prodh,w,c
  5818  00580C  2209               	addwfc	??_moveRight+1,f,c
  5819  00580E  5015               	movf	moveRight@j_255,w,c
  5820  005810  0D02               	mullw	2
  5821  005812  50F3               	movf	prodl,w,c
  5822  005814  2408               	addwf	??_moveRight,w,c
  5823  005816  6ED9               	movwf	fsr2l,c
  5824  005818  50F4               	movf	prodh,w,c
  5825  00581A  2009               	addwfc	??_moveRight+1,w,c
  5826  00581C  6EDA               	movwf	fsr2h,c
  5827  00581E  50DF               	movf	indf2,w,c
  5828  005820  6E0A               	movwf	(??_moveRight+2)& (0+255),c
  5829  005822  280A               	incf	??_moveRight+2,w,c
  5830  005824  6E01               	movwf	dontBelong2Shape@x,c
  5831  005826  5018               	movf	moveRight@index,w,c
  5832  005828  0D09               	mullw	9
  5833  00582A  0E00               	movlw	low _all_shapes
  5834  00582C  6E0B               	movwf	(??_moveRight+3)& (0+255),c
  5835  00582E  0E01               	movlw	high _all_shapes
  5836  005830  6E0C               	movwf	(??_moveRight+4)& (0+255),c
  5837  005832  50F3               	movf	prodl,w,c
  5838  005834  260B               	addwf	??_moveRight+3,f,c
  5839  005836  50F4               	movf	prodh,w,c
  5840  005838  220C               	addwfc	??_moveRight+4,f,c
  5841  00583A  5015               	movf	moveRight@j_255,w,c
  5842  00583C  0D02               	mullw	2
  5843  00583E  50F3               	movf	prodl,w,c
  5844  005840  260B               	addwf	??_moveRight+3,f,c
  5845  005842  50F4               	movf	prodh,w,c
  5846  005844  220C               	addwfc	??_moveRight+4,f,c
  5847  005846  0E01               	movlw	1
  5848  005848  240B               	addwf	??_moveRight+3,w,c
  5849  00584A  6ED9               	movwf	fsr2l,c
  5850  00584C  0E00               	movlw	0
  5851  00584E  200C               	addwfc	??_moveRight+4,w,c
  5852  005850  6EDA               	movwf	fsr2h,c
  5853  005852  50DF               	movf	indf2,w,c
  5854  005854  6E02               	movwf	dontBelong2Shape@y,c
  5855  005856  5018               	movf	moveRight@index,w,c
  5856  005858  ECDA  F01F         	call	_dontBelong2Shape
  5857  00585C  0900               	iorlw	0
  5858  00585E  B4D8               	btfsc	status,2,c
  5859  005860  D003               	goto	l161
  5860  005862                     u4190:
  5861                           
  5862                           ;main.c: 441: ok=1;
  5863  005862  0E01               	movlw	1
  5864  005864  6E13               	movwf	moveRight@ok,c
  5865                           
  5866                           ;main.c: 442: }
  5867  005866  D003               	goto	l164
  5868  005868                     l161:
  5869                           
  5870                           ;main.c: 443: else {
  5871                           ;main.c: 444: ok=0;
  5872  005868  0E00               	movlw	0
  5873  00586A  6E13               	movwf	moveRight@ok,c
  5874                           
  5875                           ;main.c: 445: break;
  5876  00586C  D002               	goto	u4200
  5877  00586E                     l164:
  5878  00586E  2A15               	incf	moveRight@j_255,f,c
  5879  005870  D75F               	goto	l3864
  5880  005872                     u4200:
  5881                           
  5882                           ;main.c: 446: }
  5883                           ;main.c: 447: }
  5884                           ;main.c: 448: if(ok==1){
  5885  005872  0413               	decf	moveRight@ok,w,c
  5886  005874  A4D8               	btfss	status,2,c
  5887  005876  0012               	return	
  5888                           
  5889                           ;main.c: 449: for(uint8_t j=0;j<4;j++){
  5890  005878  0E00               	movlw	0
  5891  00587A  6E16               	movwf	moveRight@j_256,c
  5892  00587C                     l3886:
  5893  00587C  0E03               	movlw	3
  5894  00587E  6416               	cpfsgt	moveRight@j_256,c
  5895  005880  D001               	goto	l166
  5896  005882  0012               	return	
  5897  005884                     l166:
  5898                           
  5899                           ;main.c: 450: array_data[all_shapes[index].index[j].x][all_shapes[index].index[j].y]='0'
      +                          ;
  5900  005884  5018               	movf	moveRight@index,w,c
  5901  005886  0D09               	mullw	9
  5902  005888  0E00               	movlw	low _all_shapes
  5903  00588A  6E08               	movwf	??_moveRight& (0+255),c
  5904  00588C  0E01               	movlw	high _all_shapes
  5905  00588E  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5906  005890  50F3               	movf	prodl,w,c
  5907  005892  2608               	addwf	??_moveRight,f,c
  5908  005894  50F4               	movf	prodh,w,c
  5909  005896  2209               	addwfc	??_moveRight+1,f,c
  5910  005898  5016               	movf	moveRight@j_256,w,c
  5911  00589A  0D02               	mullw	2
  5912  00589C  50F3               	movf	prodl,w,c
  5913  00589E  2408               	addwf	??_moveRight,w,c
  5914  0058A0  6ED9               	movwf	fsr2l,c
  5915  0058A2  50F4               	movf	prodh,w,c
  5916  0058A4  2009               	addwfc	??_moveRight+1,w,c
  5917  0058A6  6EDA               	movwf	fsr2h,c
  5918  0058A8  50DF               	movf	indf2,w,c
  5919  0058AA  6E0A               	movwf	(??_moveRight+2)& (0+255),c
  5920  0058AC  500A               	movf	??_moveRight+2,w,c
  5921  0058AE  0D0C               	mullw	12
  5922  0058B0  0E00               	movlw	low _array_data
  5923  0058B2  6E0B               	movwf	(??_moveRight+3)& (0+255),c
  5924  0058B4  0E02               	movlw	high _array_data
  5925  0058B6  6E0C               	movwf	(??_moveRight+4)& (0+255),c
  5926  0058B8  50F3               	movf	prodl,w,c
  5927  0058BA  260B               	addwf	??_moveRight+3,f,c
  5928  0058BC  50F4               	movf	prodh,w,c
  5929  0058BE  220C               	addwfc	??_moveRight+4,f,c
  5930  0058C0  5018               	movf	moveRight@index,w,c
  5931  0058C2  0D09               	mullw	9
  5932  0058C4  0E00               	movlw	low _all_shapes
  5933  0058C6  6E0D               	movwf	(??_moveRight+5)& (0+255),c
  5934  0058C8  0E01               	movlw	high _all_shapes
  5935  0058CA  6E0E               	movwf	(??_moveRight+6)& (0+255),c
  5936  0058CC  50F3               	movf	prodl,w,c
  5937  0058CE  260D               	addwf	??_moveRight+5,f,c
  5938  0058D0  50F4               	movf	prodh,w,c
  5939  0058D2  220E               	addwfc	??_moveRight+6,f,c
  5940  0058D4  5016               	movf	moveRight@j_256,w,c
  5941  0058D6  0D02               	mullw	2
  5942  0058D8  50F3               	movf	prodl,w,c
  5943  0058DA  260D               	addwf	??_moveRight+5,f,c
  5944  0058DC  50F4               	movf	prodh,w,c
  5945  0058DE  220E               	addwfc	??_moveRight+6,f,c
  5946  0058E0  0E01               	movlw	1
  5947  0058E2  240D               	addwf	??_moveRight+5,w,c
  5948  0058E4  6ED9               	movwf	fsr2l,c
  5949  0058E6  0E00               	movlw	0
  5950  0058E8  200E               	addwfc	??_moveRight+6,w,c
  5951  0058EA  6EDA               	movwf	fsr2h,c
  5952  0058EC  50DF               	movf	indf2,w,c
  5953  0058EE  6E0F               	movwf	(??_moveRight+7)& (0+255),c
  5954  0058F0  500F               	movf	??_moveRight+7,w,c
  5955  0058F2  0D01               	mullw	1
  5956  0058F4  50F3               	movf	prodl,w,c
  5957  0058F6  240B               	addwf	??_moveRight+3,w,c
  5958  0058F8  6ED9               	movwf	fsr2l,c
  5959  0058FA  50F4               	movf	prodh,w,c
  5960  0058FC  200C               	addwfc	??_moveRight+4,w,c
  5961  0058FE  6EDA               	movwf	fsr2h,c
  5962  005900  0E30               	movlw	48
  5963  005902  6EDF               	movwf	indf2,c
  5964                           
  5965                           ;main.c: 451: all_shapes[index].index[j].x +=1;
  5966  005904  5018               	movf	moveRight@index,w,c
  5967  005906  0D09               	mullw	9
  5968  005908  0E00               	movlw	low _all_shapes
  5969  00590A  6E08               	movwf	??_moveRight& (0+255),c
  5970  00590C  0E01               	movlw	high _all_shapes
  5971  00590E  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5972  005910  50F3               	movf	prodl,w,c
  5973  005912  2608               	addwf	??_moveRight,f,c
  5974  005914  50F4               	movf	prodh,w,c
  5975  005916  2209               	addwfc	??_moveRight+1,f,c
  5976  005918  5016               	movf	moveRight@j_256,w,c
  5977  00591A  0D02               	mullw	2
  5978  00591C  50F3               	movf	prodl,w,c
  5979  00591E  2408               	addwf	??_moveRight,w,c
  5980  005920  6ED9               	movwf	fsr2l,c
  5981  005922  50F4               	movf	prodh,w,c
  5982  005924  2009               	addwfc	??_moveRight+1,w,c
  5983  005926  6EDA               	movwf	fsr2h,c
  5984  005928  2ADF               	incf	indf2,f,c
  5985                           
  5986                           ;main.c: 452: array_data[all_shapes[index].index[j].x][all_shapes[index].index[j].y]='1'
      +                          ;
  5987  00592A  5018               	movf	moveRight@index,w,c
  5988  00592C  0D09               	mullw	9
  5989  00592E  0E00               	movlw	low _all_shapes
  5990  005930  6E08               	movwf	??_moveRight& (0+255),c
  5991  005932  0E01               	movlw	high _all_shapes
  5992  005934  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5993  005936  50F3               	movf	prodl,w,c
  5994  005938  2608               	addwf	??_moveRight,f,c
  5995  00593A  50F4               	movf	prodh,w,c
  5996  00593C  2209               	addwfc	??_moveRight+1,f,c
  5997  00593E  5016               	movf	moveRight@j_256,w,c
  5998  005940  0D02               	mullw	2
  5999  005942  50F3               	movf	prodl,w,c
  6000  005944  2408               	addwf	??_moveRight,w,c
  6001  005946  6ED9               	movwf	fsr2l,c
  6002  005948  50F4               	movf	prodh,w,c
  6003  00594A  2009               	addwfc	??_moveRight+1,w,c
  6004  00594C  6EDA               	movwf	fsr2h,c
  6005  00594E  50DF               	movf	indf2,w,c
  6006  005950  6E0A               	movwf	(??_moveRight+2)& (0+255),c
  6007  005952  500A               	movf	??_moveRight+2,w,c
  6008  005954  0D0C               	mullw	12
  6009  005956  0E00               	movlw	low _array_data
  6010  005958  6E0B               	movwf	(??_moveRight+3)& (0+255),c
  6011  00595A  0E02               	movlw	high _array_data
  6012  00595C  6E0C               	movwf	(??_moveRight+4)& (0+255),c
  6013  00595E  50F3               	movf	prodl,w,c
  6014  005960  260B               	addwf	??_moveRight+3,f,c
  6015  005962  50F4               	movf	prodh,w,c
  6016  005964  220C               	addwfc	??_moveRight+4,f,c
  6017  005966  5018               	movf	moveRight@index,w,c
  6018  005968  0D09               	mullw	9
  6019  00596A  0E00               	movlw	low _all_shapes
  6020  00596C  6E0D               	movwf	(??_moveRight+5)& (0+255),c
  6021  00596E  0E01               	movlw	high _all_shapes
  6022  005970  6E0E               	movwf	(??_moveRight+6)& (0+255),c
  6023  005972  50F3               	movf	prodl,w,c
  6024  005974  260D               	addwf	??_moveRight+5,f,c
  6025  005976  50F4               	movf	prodh,w,c
  6026  005978  220E               	addwfc	??_moveRight+6,f,c
  6027  00597A  5016               	movf	moveRight@j_256,w,c
  6028  00597C  0D02               	mullw	2
  6029  00597E  50F3               	movf	prodl,w,c
  6030  005980  260D               	addwf	??_moveRight+5,f,c
  6031  005982  50F4               	movf	prodh,w,c
  6032  005984  220E               	addwfc	??_moveRight+6,f,c
  6033  005986  0E01               	movlw	1
  6034  005988  240D               	addwf	??_moveRight+5,w,c
  6035  00598A  6ED9               	movwf	fsr2l,c
  6036  00598C  0E00               	movlw	0
  6037  00598E  200E               	addwfc	??_moveRight+6,w,c
  6038  005990  6EDA               	movwf	fsr2h,c
  6039  005992  50DF               	movf	indf2,w,c
  6040  005994  6E0F               	movwf	(??_moveRight+7)& (0+255),c
  6041  005996  500F               	movf	??_moveRight+7,w,c
  6042  005998  0D01               	mullw	1
  6043  00599A  50F3               	movf	prodl,w,c
  6044  00599C  240B               	addwf	??_moveRight+3,w,c
  6045  00599E  6ED9               	movwf	fsr2l,c
  6046  0059A0  50F4               	movf	prodh,w,c
  6047  0059A2  200C               	addwfc	??_moveRight+4,w,c
  6048  0059A4  6EDA               	movwf	fsr2h,c
  6049  0059A6  0E31               	movlw	49
  6050  0059A8  6EDF               	movwf	indf2,c
  6051  0059AA  2A16               	incf	moveRight@j_256,f,c
  6052  0059AC  D767               	goto	l3886
  6053  0059AE                     __end_of_moveRight:
  6054                           	opt stack 0
  6055                           tblptru	equ	0xFF8
  6056                           tblptrh	equ	0xFF7
  6057                           tblptrl	equ	0xFF6
  6058                           tablat	equ	0xFF5
  6059                           prodh	equ	0xFF4
  6060                           prodl	equ	0xFF3
  6061                           intcon	equ	0xFF2
  6062                           postinc0	equ	0xFEE
  6063                           wreg	equ	0xFE8
  6064                           indf1	equ	0xFE7
  6065                           postinc1	equ	0xFE6
  6066                           postdec1	equ	0xFE5
  6067                           fsr1h	equ	0xFE2
  6068                           fsr1l	equ	0xFE1
  6069                           indf2	equ	0xFDF
  6070                           postinc2	equ	0xFDE
  6071                           fsr2h	equ	0xFDA
  6072                           fsr2l	equ	0xFD9
  6073                           status	equ	0xFD8
  6074                           
  6075 ;; *************** function _moveLeft *****************
  6076 ;; Defined at:
  6077 ;;		line 457 in file "main.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;  index           1    wreg     unsigned char 
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;  index           1   23[COMRAM] unsigned char 
  6082 ;;  j               1   19[COMRAM] unsigned char 
  6083 ;;  j               1   21[COMRAM] unsigned char 
  6084 ;;  j               1   20[COMRAM] unsigned char 
  6085 ;;  i               1   22[COMRAM] unsigned char 
  6086 ;;  ok              1   18[COMRAM] unsigned char 
  6087 ;;  b               1   17[COMRAM] unsigned char 
  6088 ;;  a               1   16[COMRAM] unsigned char 
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  1    wreg      void 
  6091 ;; Registers used:
  6092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6098 ;;      Params:         0       0       0       0       0       0       0       0       0
  6099 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6100 ;;      Temps:          9       0       0       0       0       0       0       0       0
  6101 ;;      Totals:        17       0       0       0       0       0       0       0       0
  6102 ;;Total ram usage:       17 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    1
  6105 ;; This function calls:
  6106 ;;		___wmul
  6107 ;;		_dontBelong2Shape
  6108 ;; This function is called by:
  6109 ;;		_main
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text6
  6114  005116                     __ptext6:
  6115                           	opt stack 0
  6116  005116                     _moveLeft:
  6117                           	opt stack 29
  6118                           
  6119                           ;incstack = 0
  6120                           ;moveLeft@index stored from wreg
  6121  005116  6E18               	movwf	moveLeft@index,c
  6122                           
  6123                           ;main.c: 462: uint8_t a,b,ok;
  6124                           ;main.c: 463: for (uint8_t i = 0; i < 4; ++i){
  6125  005118  0E00               	movlw	0
  6126  00511A  6E17               	movwf	moveLeft@i,c
  6127  00511C                     l3898:
  6128  00511C  0E03               	movlw	3
  6129  00511E  6417               	cpfsgt	moveLeft@i,c
  6130  005120  D001               	goto	l171
  6131  005122  D0DE               	goto	u4280
  6132  005124                     l171:
  6133                           
  6134                           ;main.c: 464: for (uint8_t j = i + 1; j < 4; ++j){
  6135  005124  2817               	incf	moveLeft@i,w,c
  6136  005126  6E14               	movwf	moveLeft@j,c
  6137  005128  0E03               	movlw	3
  6138  00512A  6414               	cpfsgt	moveLeft@j,c
  6139  00512C  D001               	goto	l173
  6140  00512E  D0D6               	goto	u4270
  6141  005130                     l173:
  6142                           
  6143                           ;main.c: 465: if (all_shapes[index].index[i].x > all_shapes[index].index[j].x){
  6144  005130  5018               	movf	moveLeft@index,w,c
  6145  005132  0D09               	mullw	9
  6146  005134  0E00               	movlw	low _all_shapes
  6147  005136  6E08               	movwf	??_moveLeft& (0+255),c
  6148  005138  0E01               	movlw	high _all_shapes
  6149  00513A  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6150  00513C  50F3               	movf	prodl,w,c
  6151  00513E  2608               	addwf	??_moveLeft,f,c
  6152  005140  50F4               	movf	prodh,w,c
  6153  005142  2209               	addwfc	??_moveLeft+1,f,c
  6154  005144  5017               	movf	moveLeft@i,w,c
  6155  005146  0D02               	mullw	2
  6156  005148  50F3               	movf	prodl,w,c
  6157  00514A  2408               	addwf	??_moveLeft,w,c
  6158  00514C  6ED9               	movwf	fsr2l,c
  6159  00514E  50F4               	movf	prodh,w,c
  6160  005150  2009               	addwfc	??_moveLeft+1,w,c
  6161  005152  6EDA               	movwf	fsr2h,c
  6162  005154  5018               	movf	moveLeft@index,w,c
  6163  005156  0D09               	mullw	9
  6164  005158  0E00               	movlw	low _all_shapes
  6165  00515A  6E0B               	movwf	(??_moveLeft+3)& (0+255),c
  6166  00515C  0E01               	movlw	high _all_shapes
  6167  00515E  6E0C               	movwf	(??_moveLeft+4)& (0+255),c
  6168  005160  50F3               	movf	prodl,w,c
  6169  005162  260B               	addwf	??_moveLeft+3,f,c
  6170  005164  50F4               	movf	prodh,w,c
  6171  005166  220C               	addwfc	??_moveLeft+4,f,c
  6172  005168  5014               	movf	moveLeft@j,w,c
  6173  00516A  0D02               	mullw	2
  6174  00516C  50F3               	movf	prodl,w,c
  6175  00516E  240B               	addwf	??_moveLeft+3,w,c
  6176  005170  6EE1               	movwf	fsr1l,c
  6177  005172  50F4               	movf	prodh,w,c
  6178  005174  200C               	addwfc	??_moveLeft+4,w,c
  6179  005176  6EE2               	movwf	fsr1h,c
  6180  005178  50DE               	movf	postinc2,w,c
  6181  00517A  5CE6               	subwf	postinc1,w,c
  6182  00517C  B0D8               	btfsc	status,0,c
  6183  00517E  D0AC               	goto	l175
  6184                           
  6185                           ;main.c: 466: a = all_shapes[index].index[i].y;
  6186  005180  5018               	movf	moveLeft@index,w,c
  6187  005182  0D09               	mullw	9
  6188  005184  0E00               	movlw	low _all_shapes
  6189  005186  6E08               	movwf	??_moveLeft& (0+255),c
  6190  005188  0E01               	movlw	high _all_shapes
  6191  00518A  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6192  00518C  50F3               	movf	prodl,w,c
  6193  00518E  2608               	addwf	??_moveLeft,f,c
  6194  005190  50F4               	movf	prodh,w,c
  6195  005192  2209               	addwfc	??_moveLeft+1,f,c
  6196  005194  5017               	movf	moveLeft@i,w,c
  6197  005196  0D02               	mullw	2
  6198  005198  50F3               	movf	prodl,w,c
  6199  00519A  2608               	addwf	??_moveLeft,f,c
  6200  00519C  50F4               	movf	prodh,w,c
  6201  00519E  2209               	addwfc	??_moveLeft+1,f,c
  6202  0051A0  0E01               	movlw	1
  6203  0051A2  2408               	addwf	??_moveLeft,w,c
  6204  0051A4  6ED9               	movwf	fsr2l,c
  6205  0051A6  0E00               	movlw	0
  6206  0051A8  2009               	addwfc	??_moveLeft+1,w,c
  6207  0051AA  6EDA               	movwf	fsr2h,c
  6208  0051AC  50DF               	movf	indf2,w,c
  6209  0051AE  6E11               	movwf	moveLeft@a,c
  6210                           
  6211                           ;main.c: 467: b = all_shapes[index].index[i].x;
  6212  0051B0  5018               	movf	moveLeft@index,w,c
  6213  0051B2  0D09               	mullw	9
  6214  0051B4  0E00               	movlw	low _all_shapes
  6215  0051B6  6E08               	movwf	??_moveLeft& (0+255),c
  6216  0051B8  0E01               	movlw	high _all_shapes
  6217  0051BA  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6218  0051BC  50F3               	movf	prodl,w,c
  6219  0051BE  2608               	addwf	??_moveLeft,f,c
  6220  0051C0  50F4               	movf	prodh,w,c
  6221  0051C2  2209               	addwfc	??_moveLeft+1,f,c
  6222  0051C4  5017               	movf	moveLeft@i,w,c
  6223  0051C6  0D02               	mullw	2
  6224  0051C8  50F3               	movf	prodl,w,c
  6225  0051CA  2408               	addwf	??_moveLeft,w,c
  6226  0051CC  6ED9               	movwf	fsr2l,c
  6227  0051CE  50F4               	movf	prodh,w,c
  6228  0051D0  2009               	addwfc	??_moveLeft+1,w,c
  6229  0051D2  6EDA               	movwf	fsr2h,c
  6230  0051D4  50DF               	movf	indf2,w,c
  6231  0051D6  6E12               	movwf	moveLeft@b,c
  6232                           
  6233                           ;main.c: 468: all_shapes[index].index[i].y = all_shapes[index].index[j].y;
  6234  0051D8  5018               	movf	moveLeft@index,w,c
  6235  0051DA  0D09               	mullw	9
  6236  0051DC  0E00               	movlw	low _all_shapes
  6237  0051DE  6E08               	movwf	??_moveLeft& (0+255),c
  6238  0051E0  0E01               	movlw	high _all_shapes
  6239  0051E2  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6240  0051E4  50F3               	movf	prodl,w,c
  6241  0051E6  2608               	addwf	??_moveLeft,f,c
  6242  0051E8  50F4               	movf	prodh,w,c
  6243  0051EA  2209               	addwfc	??_moveLeft+1,f,c
  6244  0051EC  5014               	movf	moveLeft@j,w,c
  6245  0051EE  0D02               	mullw	2
  6246  0051F0  50F3               	movf	prodl,w,c
  6247  0051F2  2608               	addwf	??_moveLeft,f,c
  6248  0051F4  50F4               	movf	prodh,w,c
  6249  0051F6  2209               	addwfc	??_moveLeft+1,f,c
  6250  0051F8  0E01               	movlw	1
  6251  0051FA  2408               	addwf	??_moveLeft,w,c
  6252  0051FC  6ED9               	movwf	fsr2l,c
  6253  0051FE  0E00               	movlw	0
  6254  005200  2009               	addwfc	??_moveLeft+1,w,c
  6255  005202  6EDA               	movwf	fsr2h,c
  6256  005204  5018               	movf	moveLeft@index,w,c
  6257  005206  0D09               	mullw	9
  6258  005208  0E00               	movlw	low _all_shapes
  6259  00520A  6E0A               	movwf	(??_moveLeft+2)& (0+255),c
  6260  00520C  0E01               	movlw	high _all_shapes
  6261  00520E  6E0B               	movwf	(??_moveLeft+3)& (0+255),c
  6262  005210  50F3               	movf	prodl,w,c
  6263  005212  260A               	addwf	??_moveLeft+2,f,c
  6264  005214  50F4               	movf	prodh,w,c
  6265  005216  220B               	addwfc	??_moveLeft+3,f,c
  6266  005218  5017               	movf	moveLeft@i,w,c
  6267  00521A  0D02               	mullw	2
  6268  00521C  50F3               	movf	prodl,w,c
  6269  00521E  260A               	addwf	??_moveLeft+2,f,c
  6270  005220  50F4               	movf	prodh,w,c
  6271  005222  220B               	addwfc	??_moveLeft+3,f,c
  6272  005224  0E01               	movlw	1
  6273  005226  240A               	addwf	??_moveLeft+2,w,c
  6274  005228  6EE1               	movwf	fsr1l,c
  6275  00522A  0E00               	movlw	0
  6276  00522C  200B               	addwfc	??_moveLeft+3,w,c
  6277  00522E  6EE2               	movwf	fsr1h,c
  6278  005230  CFDF FFE7          	movff	indf2,indf1
  6279                           
  6280                           ;main.c: 469: all_shapes[index].index[i].x = all_shapes[index].index[j].x;
  6281  005234  5018               	movf	moveLeft@index,w,c
  6282  005236  0D09               	mullw	9
  6283  005238  0E00               	movlw	low _all_shapes
  6284  00523A  6E08               	movwf	??_moveLeft& (0+255),c
  6285  00523C  0E01               	movlw	high _all_shapes
  6286  00523E  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6287  005240  50F3               	movf	prodl,w,c
  6288  005242  2608               	addwf	??_moveLeft,f,c
  6289  005244  50F4               	movf	prodh,w,c
  6290  005246  2209               	addwfc	??_moveLeft+1,f,c
  6291  005248  5014               	movf	moveLeft@j,w,c
  6292  00524A  0D02               	mullw	2
  6293  00524C  50F3               	movf	prodl,w,c
  6294  00524E  2408               	addwf	??_moveLeft,w,c
  6295  005250  6ED9               	movwf	fsr2l,c
  6296  005252  50F4               	movf	prodh,w,c
  6297  005254  2009               	addwfc	??_moveLeft+1,w,c
  6298  005256  6EDA               	movwf	fsr2h,c
  6299  005258  5018               	movf	moveLeft@index,w,c
  6300  00525A  0D09               	mullw	9
  6301  00525C  0E00               	movlw	low _all_shapes
  6302  00525E  6E0A               	movwf	(??_moveLeft+2)& (0+255),c
  6303  005260  0E01               	movlw	high _all_shapes
  6304  005262  6E0B               	movwf	(??_moveLeft+3)& (0+255),c
  6305  005264  50F3               	movf	prodl,w,c
  6306  005266  260A               	addwf	??_moveLeft+2,f,c
  6307  005268  50F4               	movf	prodh,w,c
  6308  00526A  220B               	addwfc	??_moveLeft+3,f,c
  6309  00526C  5017               	movf	moveLeft@i,w,c
  6310  00526E  0D02               	mullw	2
  6311  005270  50F3               	movf	prodl,w,c
  6312  005272  240A               	addwf	??_moveLeft+2,w,c
  6313  005274  6EE1               	movwf	fsr1l,c
  6314  005276  50F4               	movf	prodh,w,c
  6315  005278  200B               	addwfc	??_moveLeft+3,w,c
  6316  00527A  6EE2               	movwf	fsr1h,c
  6317  00527C  CFDF FFE7          	movff	indf2,indf1
  6318                           
  6319                           ;main.c: 470: all_shapes[index].index[j].y = a;
  6320  005280  5018               	movf	moveLeft@index,w,c
  6321  005282  0D09               	mullw	9
  6322  005284  0E00               	movlw	low _all_shapes
  6323  005286  6E08               	movwf	??_moveLeft& (0+255),c
  6324  005288  0E01               	movlw	high _all_shapes
  6325  00528A  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6326  00528C  50F3               	movf	prodl,w,c
  6327  00528E  2608               	addwf	??_moveLeft,f,c
  6328  005290  50F4               	movf	prodh,w,c
  6329  005292  2209               	addwfc	??_moveLeft+1,f,c
  6330  005294  5014               	movf	moveLeft@j,w,c
  6331  005296  0D02               	mullw	2
  6332  005298  50F3               	movf	prodl,w,c
  6333  00529A  2608               	addwf	??_moveLeft,f,c
  6334  00529C  50F4               	movf	prodh,w,c
  6335  00529E  2209               	addwfc	??_moveLeft+1,f,c
  6336  0052A0  0E01               	movlw	1
  6337  0052A2  2408               	addwf	??_moveLeft,w,c
  6338  0052A4  6ED9               	movwf	fsr2l,c
  6339  0052A6  0E00               	movlw	0
  6340  0052A8  2009               	addwfc	??_moveLeft+1,w,c
  6341  0052AA  6EDA               	movwf	fsr2h,c
  6342  0052AC  C011  FFDF         	movff	moveLeft@a,indf2
  6343                           
  6344                           ;main.c: 471: all_shapes[index].index[j].x = b;
  6345  0052B0  5018               	movf	moveLeft@index,w,c
  6346  0052B2  0D09               	mullw	9
  6347  0052B4  0E00               	movlw	low _all_shapes
  6348  0052B6  6E08               	movwf	??_moveLeft& (0+255),c
  6349  0052B8  0E01               	movlw	high _all_shapes
  6350  0052BA  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6351  0052BC  50F3               	movf	prodl,w,c
  6352  0052BE  2608               	addwf	??_moveLeft,f,c
  6353  0052C0  50F4               	movf	prodh,w,c
  6354  0052C2  2209               	addwfc	??_moveLeft+1,f,c
  6355  0052C4  5014               	movf	moveLeft@j,w,c
  6356  0052C6  0D02               	mullw	2
  6357  0052C8  50F3               	movf	prodl,w,c
  6358  0052CA  2408               	addwf	??_moveLeft,w,c
  6359  0052CC  6ED9               	movwf	fsr2l,c
  6360  0052CE  50F4               	movf	prodh,w,c
  6361  0052D0  2009               	addwfc	??_moveLeft+1,w,c
  6362  0052D2  6EDA               	movwf	fsr2h,c
  6363  0052D4  C012  FFDF         	movff	moveLeft@b,indf2
  6364  0052D8                     l175:
  6365  0052D8  2A14               	incf	moveLeft@j,f,c
  6366  0052DA  D726               	goto	L2
  6367  0052DC                     u4270:
  6368  0052DC  2A17               	incf	moveLeft@i,f,c
  6369  0052DE  D71E               	goto	l3898
  6370  0052E0                     u4280:
  6371                           
  6372                           ;main.c: 472: }
  6373                           ;main.c: 473: }
  6374                           ;main.c: 474: }
  6375                           ;main.c: 477: for(uint8_t j=0;j<4;j++){
  6376  0052E0  0E00               	movlw	0
  6377  0052E2  6E15               	movwf	moveLeft@j_264,c
  6378  0052E4                     l3924:
  6379  0052E4  0E03               	movlw	3
  6380  0052E6  6415               	cpfsgt	moveLeft@j_264,c
  6381  0052E8  D001               	goto	l176
  6382  0052EA  D09D               	goto	u4330
  6383  0052EC                     l176:
  6384                           
  6385                           ;main.c: 479: if(all_shapes[index].index[j].x >0 && (array_data[(all_shapes[index].index
      +                          [j].x)-1][all_shapes[index].index[j].y]!='1' || dontBelong2Shape(index,(all_shapes[index
      +                          ].index[j].x)-1,all_shapes[index].index[j].y))){
  6386  0052EC  5018               	movf	moveLeft@index,w,c
  6387  0052EE  0D09               	mullw	9
  6388  0052F0  0E00               	movlw	low _all_shapes
  6389  0052F2  6E08               	movwf	??_moveLeft& (0+255),c
  6390  0052F4  0E01               	movlw	high _all_shapes
  6391  0052F6  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6392  0052F8  50F3               	movf	prodl,w,c
  6393  0052FA  2608               	addwf	??_moveLeft,f,c
  6394  0052FC  50F4               	movf	prodh,w,c
  6395  0052FE  2209               	addwfc	??_moveLeft+1,f,c
  6396  005300  5015               	movf	moveLeft@j_264,w,c
  6397  005302  0D02               	mullw	2
  6398  005304  50F3               	movf	prodl,w,c
  6399  005306  2408               	addwf	??_moveLeft,w,c
  6400  005308  6ED9               	movwf	fsr2l,c
  6401  00530A  50F4               	movf	prodh,w,c
  6402  00530C  2009               	addwfc	??_moveLeft+1,w,c
  6403  00530E  6EDA               	movwf	fsr2h,c
  6404  005310  50DF               	movf	indf2,w,c
  6405  005312  B4D8               	btfsc	status,2,c
  6406  005314  D083               	goto	l178
  6407  005316  5018               	movf	moveLeft@index,w,c
  6408  005318  0D09               	mullw	9
  6409  00531A  0E00               	movlw	low _all_shapes
  6410  00531C  6E08               	movwf	??_moveLeft& (0+255),c
  6411  00531E  0E01               	movlw	high _all_shapes
  6412  005320  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6413  005322  50F3               	movf	prodl,w,c
  6414  005324  2608               	addwf	??_moveLeft,f,c
  6415  005326  50F4               	movf	prodh,w,c
  6416  005328  2209               	addwfc	??_moveLeft+1,f,c
  6417  00532A  5015               	movf	moveLeft@j_264,w,c
  6418  00532C  0D02               	mullw	2
  6419  00532E  50F3               	movf	prodl,w,c
  6420  005330  2408               	addwf	??_moveLeft,w,c
  6421  005332  6ED9               	movwf	fsr2l,c
  6422  005334  50F4               	movf	prodh,w,c
  6423  005336  2009               	addwfc	??_moveLeft+1,w,c
  6424  005338  6EDA               	movwf	fsr2h,c
  6425  00533A  50DF               	movf	indf2,w,c
  6426  00533C  6E0A               	movwf	(??_moveLeft+2)& (0+255),c
  6427  00533E  0EFF               	movlw	255
  6428  005340  240A               	addwf	??_moveLeft+2,w,c
  6429  005342  6E01               	movwf	___wmul@multiplier,c
  6430  005344  6A02               	clrf	___wmul@multiplier+1,c
  6431  005346  0EFF               	movlw	255
  6432  005348  2202               	addwfc	___wmul@multiplier+1,f,c
  6433  00534A  0E00               	movlw	0
  6434  00534C  6E04               	movwf	___wmul@multiplicand+1,c
  6435  00534E  0E0C               	movlw	12
  6436  005350  6E03               	movwf	___wmul@multiplicand,c
  6437  005352  EC79  F01D         	call	___wmul	;wreg free
  6438  005356  0E00               	movlw	low _array_data
  6439  005358  6E0B               	movwf	(??_moveLeft+3)& (0+255),c
  6440  00535A  0E02               	movlw	high _array_data
  6441  00535C  6E0C               	movwf	(??_moveLeft+4)& (0+255),c
  6442  00535E  5001               	movf	?___wmul,w,c
  6443  005360  260B               	addwf	??_moveLeft+3,f,c
  6444  005362  5002               	movf	?___wmul+1,w,c
  6445  005364  220C               	addwfc	??_moveLeft+4,f,c
  6446  005366  5018               	movf	moveLeft@index,w,c
  6447  005368  0D09               	mullw	9
  6448  00536A  0E00               	movlw	low _all_shapes
  6449  00536C  6E0D               	movwf	(??_moveLeft+5)& (0+255),c
  6450  00536E  0E01               	movlw	high _all_shapes
  6451  005370  6E0E               	movwf	(??_moveLeft+6)& (0+255),c
  6452  005372  50F3               	movf	prodl,w,c
  6453  005374  260D               	addwf	??_moveLeft+5,f,c
  6454  005376  50F4               	movf	prodh,w,c
  6455  005378  220E               	addwfc	??_moveLeft+6,f,c
  6456  00537A  5015               	movf	moveLeft@j_264,w,c
  6457  00537C  0D02               	mullw	2
  6458  00537E  50F3               	movf	prodl,w,c
  6459  005380  260D               	addwf	??_moveLeft+5,f,c
  6460  005382  50F4               	movf	prodh,w,c
  6461  005384  220E               	addwfc	??_moveLeft+6,f,c
  6462  005386  0E01               	movlw	1
  6463  005388  240D               	addwf	??_moveLeft+5,w,c
  6464  00538A  6ED9               	movwf	fsr2l,c
  6465  00538C  0E00               	movlw	0
  6466  00538E  200E               	addwfc	??_moveLeft+6,w,c
  6467  005390  6EDA               	movwf	fsr2h,c
  6468  005392  50DF               	movf	indf2,w,c
  6469  005394  6E0F               	movwf	(??_moveLeft+7)& (0+255),c
  6470  005396  500F               	movf	??_moveLeft+7,w,c
  6471  005398  0D01               	mullw	1
  6472  00539A  50F3               	movf	prodl,w,c
  6473  00539C  240B               	addwf	??_moveLeft+3,w,c
  6474  00539E  6ED9               	movwf	fsr2l,c
  6475  0053A0  50F4               	movf	prodh,w,c
  6476  0053A2  200C               	addwfc	??_moveLeft+4,w,c
  6477  0053A4  6EDA               	movwf	fsr2h,c
  6478  0053A6  0E31               	movlw	49
  6479  0053A8  18DE               	xorwf	postinc2,w,c
  6480  0053AA  A4D8               	btfss	status,2,c
  6481  0053AC  D034               	goto	u4320
  6482  0053AE  5018               	movf	moveLeft@index,w,c
  6483  0053B0  0D09               	mullw	9
  6484  0053B2  0E00               	movlw	low _all_shapes
  6485  0053B4  6E08               	movwf	??_moveLeft& (0+255),c
  6486  0053B6  0E01               	movlw	high _all_shapes
  6487  0053B8  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6488  0053BA  50F3               	movf	prodl,w,c
  6489  0053BC  2608               	addwf	??_moveLeft,f,c
  6490  0053BE  50F4               	movf	prodh,w,c
  6491  0053C0  2209               	addwfc	??_moveLeft+1,f,c
  6492  0053C2  5015               	movf	moveLeft@j_264,w,c
  6493  0053C4  0D02               	mullw	2
  6494  0053C6  50F3               	movf	prodl,w,c
  6495  0053C8  2408               	addwf	??_moveLeft,w,c
  6496  0053CA  6ED9               	movwf	fsr2l,c
  6497  0053CC  50F4               	movf	prodh,w,c
  6498  0053CE  2009               	addwfc	??_moveLeft+1,w,c
  6499  0053D0  6EDA               	movwf	fsr2h,c
  6500  0053D2  50DF               	movf	indf2,w,c
  6501  0053D4  6E0A               	movwf	(??_moveLeft+2)& (0+255),c
  6502  0053D6  040A               	decf	??_moveLeft+2,w,c
  6503  0053D8  6E01               	movwf	dontBelong2Shape@x,c
  6504  0053DA  5018               	movf	moveLeft@index,w,c
  6505  0053DC  0D09               	mullw	9
  6506  0053DE  0E00               	movlw	low _all_shapes
  6507  0053E0  6E0B               	movwf	(??_moveLeft+3)& (0+255),c
  6508  0053E2  0E01               	movlw	high _all_shapes
  6509  0053E4  6E0C               	movwf	(??_moveLeft+4)& (0+255),c
  6510  0053E6  50F3               	movf	prodl,w,c
  6511  0053E8  260B               	addwf	??_moveLeft+3,f,c
  6512  0053EA  50F4               	movf	prodh,w,c
  6513  0053EC  220C               	addwfc	??_moveLeft+4,f,c
  6514  0053EE  5015               	movf	moveLeft@j_264,w,c
  6515  0053F0  0D02               	mullw	2
  6516  0053F2  50F3               	movf	prodl,w,c
  6517  0053F4  260B               	addwf	??_moveLeft+3,f,c
  6518  0053F6  50F4               	movf	prodh,w,c
  6519  0053F8  220C               	addwfc	??_moveLeft+4,f,c
  6520  0053FA  0E01               	movlw	1
  6521  0053FC  240B               	addwf	??_moveLeft+3,w,c
  6522  0053FE  6ED9               	movwf	fsr2l,c
  6523  005400  0E00               	movlw	0
  6524  005402  200C               	addwfc	??_moveLeft+4,w,c
  6525  005404  6EDA               	movwf	fsr2h,c
  6526  005406  50DF               	movf	indf2,w,c
  6527  005408  6E02               	movwf	dontBelong2Shape@y,c
  6528  00540A  5018               	movf	moveLeft@index,w,c
  6529  00540C  ECDA  F01F         	call	_dontBelong2Shape
  6530  005410  0900               	iorlw	0
  6531  005412  B4D8               	btfsc	status,2,c
  6532  005414  D003               	goto	l178
  6533  005416                     u4320:
  6534                           
  6535                           ;main.c: 480: ok=1;
  6536  005416  0E01               	movlw	1
  6537  005418  6E13               	movwf	moveLeft@ok,c
  6538                           
  6539                           ;main.c: 481: }
  6540  00541A  D003               	goto	l181
  6541  00541C                     l178:
  6542                           
  6543                           ;main.c: 482: else {
  6544                           ;main.c: 483: ok=0;
  6545  00541C  0E00               	movlw	0
  6546  00541E  6E13               	movwf	moveLeft@ok,c
  6547                           
  6548                           ;main.c: 484: break;
  6549  005420  D002               	goto	u4330
  6550  005422                     l181:
  6551  005422  2A15               	incf	moveLeft@j_264,f,c
  6552  005424  D75F               	goto	l3924
  6553  005426                     u4330:
  6554                           
  6555                           ;main.c: 485: }
  6556                           ;main.c: 486: }
  6557                           ;main.c: 487: if(ok==1){
  6558  005426  0413               	decf	moveLeft@ok,w,c
  6559  005428  A4D8               	btfss	status,2,c
  6560  00542A  0012               	return	
  6561                           
  6562                           ;main.c: 488: for(uint8_t j=0;j<4;j++){
  6563  00542C  0E00               	movlw	0
  6564  00542E  6E16               	movwf	moveLeft@j_265,c
  6565  005430                     l3946:
  6566  005430  0E03               	movlw	3
  6567  005432  6416               	cpfsgt	moveLeft@j_265,c
  6568  005434  D001               	goto	l183
  6569  005436  0012               	return	
  6570  005438                     l183:
  6571                           
  6572                           ;main.c: 489: array_data[all_shapes[index].index[j].x][all_shapes[index].index[j].y]='0'
      +                          ;
  6573  005438  5018               	movf	moveLeft@index,w,c
  6574  00543A  0D09               	mullw	9
  6575  00543C  0E00               	movlw	low _all_shapes
  6576  00543E  6E08               	movwf	??_moveLeft& (0+255),c
  6577  005440  0E01               	movlw	high _all_shapes
  6578  005442  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6579  005444  50F3               	movf	prodl,w,c
  6580  005446  2608               	addwf	??_moveLeft,f,c
  6581  005448  50F4               	movf	prodh,w,c
  6582  00544A  2209               	addwfc	??_moveLeft+1,f,c
  6583  00544C  5016               	movf	moveLeft@j_265,w,c
  6584  00544E  0D02               	mullw	2
  6585  005450  50F3               	movf	prodl,w,c
  6586  005452  2408               	addwf	??_moveLeft,w,c
  6587  005454  6ED9               	movwf	fsr2l,c
  6588  005456  50F4               	movf	prodh,w,c
  6589  005458  2009               	addwfc	??_moveLeft+1,w,c
  6590  00545A  6EDA               	movwf	fsr2h,c
  6591  00545C  50DF               	movf	indf2,w,c
  6592  00545E  6E0A               	movwf	(??_moveLeft+2)& (0+255),c
  6593  005460  500A               	movf	??_moveLeft+2,w,c
  6594  005462  0D0C               	mullw	12
  6595  005464  0E00               	movlw	low _array_data
  6596  005466  6E0B               	movwf	(??_moveLeft+3)& (0+255),c
  6597  005468  0E02               	movlw	high _array_data
  6598  00546A  6E0C               	movwf	(??_moveLeft+4)& (0+255),c
  6599  00546C  50F3               	movf	prodl,w,c
  6600  00546E  260B               	addwf	??_moveLeft+3,f,c
  6601  005470  50F4               	movf	prodh,w,c
  6602  005472  220C               	addwfc	??_moveLeft+4,f,c
  6603  005474  5018               	movf	moveLeft@index,w,c
  6604  005476  0D09               	mullw	9
  6605  005478  0E00               	movlw	low _all_shapes
  6606  00547A  6E0D               	movwf	(??_moveLeft+5)& (0+255),c
  6607  00547C  0E01               	movlw	high _all_shapes
  6608  00547E  6E0E               	movwf	(??_moveLeft+6)& (0+255),c
  6609  005480  50F3               	movf	prodl,w,c
  6610  005482  260D               	addwf	??_moveLeft+5,f,c
  6611  005484  50F4               	movf	prodh,w,c
  6612  005486  220E               	addwfc	??_moveLeft+6,f,c
  6613  005488  5016               	movf	moveLeft@j_265,w,c
  6614  00548A  0D02               	mullw	2
  6615  00548C  50F3               	movf	prodl,w,c
  6616  00548E  260D               	addwf	??_moveLeft+5,f,c
  6617  005490  50F4               	movf	prodh,w,c
  6618  005492  220E               	addwfc	??_moveLeft+6,f,c
  6619  005494  0E01               	movlw	1
  6620  005496  240D               	addwf	??_moveLeft+5,w,c
  6621  005498  6ED9               	movwf	fsr2l,c
  6622  00549A  0E00               	movlw	0
  6623  00549C  200E               	addwfc	??_moveLeft+6,w,c
  6624  00549E  6EDA               	movwf	fsr2h,c
  6625  0054A0  50DF               	movf	indf2,w,c
  6626  0054A2  6E0F               	movwf	(??_moveLeft+7)& (0+255),c
  6627  0054A4  500F               	movf	??_moveLeft+7,w,c
  6628  0054A6  0D01               	mullw	1
  6629  0054A8  50F3               	movf	prodl,w,c
  6630  0054AA  240B               	addwf	??_moveLeft+3,w,c
  6631  0054AC  6ED9               	movwf	fsr2l,c
  6632  0054AE  50F4               	movf	prodh,w,c
  6633  0054B0  200C               	addwfc	??_moveLeft+4,w,c
  6634  0054B2  6EDA               	movwf	fsr2h,c
  6635  0054B4  0E30               	movlw	48
  6636  0054B6  6EDF               	movwf	indf2,c
  6637                           
  6638                           ;main.c: 490: all_shapes[index].index[j].x -=1;
  6639  0054B8  5018               	movf	moveLeft@index,w,c
  6640  0054BA  0D09               	mullw	9
  6641  0054BC  0E00               	movlw	low _all_shapes
  6642  0054BE  6E08               	movwf	??_moveLeft& (0+255),c
  6643  0054C0  0E01               	movlw	high _all_shapes
  6644  0054C2  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6645  0054C4  50F3               	movf	prodl,w,c
  6646  0054C6  2608               	addwf	??_moveLeft,f,c
  6647  0054C8  50F4               	movf	prodh,w,c
  6648  0054CA  2209               	addwfc	??_moveLeft+1,f,c
  6649  0054CC  5016               	movf	moveLeft@j_265,w,c
  6650  0054CE  0D02               	mullw	2
  6651  0054D0  50F3               	movf	prodl,w,c
  6652  0054D2  2408               	addwf	??_moveLeft,w,c
  6653  0054D4  6ED9               	movwf	fsr2l,c
  6654  0054D6  50F4               	movf	prodh,w,c
  6655  0054D8  2009               	addwfc	??_moveLeft+1,w,c
  6656  0054DA  6EDA               	movwf	fsr2h,c
  6657  0054DC  06DF               	decf	indf2,f,c
  6658                           
  6659                           ;main.c: 491: array_data[all_shapes[index].index[j].x][all_shapes[index].index[j].y]='1'
      +                          ;
  6660  0054DE  5018               	movf	moveLeft@index,w,c
  6661  0054E0  0D09               	mullw	9
  6662  0054E2  0E00               	movlw	low _all_shapes
  6663  0054E4  6E08               	movwf	??_moveLeft& (0+255),c
  6664  0054E6  0E01               	movlw	high _all_shapes
  6665  0054E8  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6666  0054EA  50F3               	movf	prodl,w,c
  6667  0054EC  2608               	addwf	??_moveLeft,f,c
  6668  0054EE  50F4               	movf	prodh,w,c
  6669  0054F0  2209               	addwfc	??_moveLeft+1,f,c
  6670  0054F2  5016               	movf	moveLeft@j_265,w,c
  6671  0054F4  0D02               	mullw	2
  6672  0054F6  50F3               	movf	prodl,w,c
  6673  0054F8  2408               	addwf	??_moveLeft,w,c
  6674  0054FA  6ED9               	movwf	fsr2l,c
  6675  0054FC  50F4               	movf	prodh,w,c
  6676  0054FE  2009               	addwfc	??_moveLeft+1,w,c
  6677  005500  6EDA               	movwf	fsr2h,c
  6678  005502  50DF               	movf	indf2,w,c
  6679  005504  6E0A               	movwf	(??_moveLeft+2)& (0+255),c
  6680  005506  500A               	movf	??_moveLeft+2,w,c
  6681  005508  0D0C               	mullw	12
  6682  00550A  0E00               	movlw	low _array_data
  6683  00550C  6E0B               	movwf	(??_moveLeft+3)& (0+255),c
  6684  00550E  0E02               	movlw	high _array_data
  6685  005510  6E0C               	movwf	(??_moveLeft+4)& (0+255),c
  6686  005512  50F3               	movf	prodl,w,c
  6687  005514  260B               	addwf	??_moveLeft+3,f,c
  6688  005516  50F4               	movf	prodh,w,c
  6689  005518  220C               	addwfc	??_moveLeft+4,f,c
  6690  00551A  5018               	movf	moveLeft@index,w,c
  6691  00551C  0D09               	mullw	9
  6692  00551E  0E00               	movlw	low _all_shapes
  6693  005520  6E0D               	movwf	(??_moveLeft+5)& (0+255),c
  6694  005522  0E01               	movlw	high _all_shapes
  6695  005524  6E0E               	movwf	(??_moveLeft+6)& (0+255),c
  6696  005526  50F3               	movf	prodl,w,c
  6697  005528  260D               	addwf	??_moveLeft+5,f,c
  6698  00552A  50F4               	movf	prodh,w,c
  6699  00552C  220E               	addwfc	??_moveLeft+6,f,c
  6700  00552E  5016               	movf	moveLeft@j_265,w,c
  6701  005530  0D02               	mullw	2
  6702  005532  50F3               	movf	prodl,w,c
  6703  005534  260D               	addwf	??_moveLeft+5,f,c
  6704  005536  50F4               	movf	prodh,w,c
  6705  005538  220E               	addwfc	??_moveLeft+6,f,c
  6706  00553A  0E01               	movlw	1
  6707  00553C  240D               	addwf	??_moveLeft+5,w,c
  6708  00553E  6ED9               	movwf	fsr2l,c
  6709  005540  0E00               	movlw	0
  6710  005542  200E               	addwfc	??_moveLeft+6,w,c
  6711  005544  6EDA               	movwf	fsr2h,c
  6712  005546  50DF               	movf	indf2,w,c
  6713  005548  6E0F               	movwf	(??_moveLeft+7)& (0+255),c
  6714  00554A  500F               	movf	??_moveLeft+7,w,c
  6715  00554C  0D01               	mullw	1
  6716  00554E  50F3               	movf	prodl,w,c
  6717  005550  240B               	addwf	??_moveLeft+3,w,c
  6718  005552  6ED9               	movwf	fsr2l,c
  6719  005554  50F4               	movf	prodh,w,c
  6720  005556  200C               	addwfc	??_moveLeft+4,w,c
  6721  005558  6EDA               	movwf	fsr2h,c
  6722  00555A  0E31               	movlw	49
  6723  00555C  6EDF               	movwf	indf2,c
  6724  00555E  2A16               	incf	moveLeft@j_265,f,c
  6725  005560  D767               	goto	l3946
  6726  005562                     __end_of_moveLeft:
  6727                           	opt stack 0
  6728                           tblptru	equ	0xFF8
  6729                           tblptrh	equ	0xFF7
  6730                           tblptrl	equ	0xFF6
  6731                           tablat	equ	0xFF5
  6732                           prodh	equ	0xFF4
  6733                           prodl	equ	0xFF3
  6734                           intcon	equ	0xFF2
  6735                           postinc0	equ	0xFEE
  6736                           wreg	equ	0xFE8
  6737                           indf1	equ	0xFE7
  6738                           postinc1	equ	0xFE6
  6739                           postdec1	equ	0xFE5
  6740                           fsr1h	equ	0xFE2
  6741                           fsr1l	equ	0xFE1
  6742                           indf2	equ	0xFDF
  6743                           postinc2	equ	0xFDE
  6744                           fsr2h	equ	0xFDA
  6745                           fsr2l	equ	0xFD9
  6746                           status	equ	0xFD8
  6747                           
  6748 ;; *************** function ___wmul *****************
  6749 ;; Defined at:
  6750 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  multiplier      2    0[COMRAM] unsigned int 
  6753 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;  product         2    4[COMRAM] unsigned int 
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  2    0[COMRAM] unsigned int 
  6758 ;; Registers used:
  6759 ;;		wreg, status,2, status,0, prodl, prodh
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6765 ;;      Params:         4       0       0       0       0       0       0       0       0
  6766 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6768 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6769 ;;Total ram usage:        6 bytes
  6770 ;; Hardware stack levels used:    1
  6771 ;; This function calls:
  6772 ;;		Nothing
  6773 ;; This function is called by:
  6774 ;;		_moveRight
  6775 ;;		_moveLeft
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	text7
  6780  003AF2                     __ptext7:
  6781                           	opt stack 0
  6782  003AF2                     ___wmul:
  6783                           	opt stack 29
  6784                           
  6785                           ;incstack = 0
  6786  003AF2  5001               	movf	___wmul@multiplier,w,c
  6787  003AF4  0203               	mulwf	___wmul@multiplicand,c
  6788  003AF6  CFF3 F005          	movff	prodl,___wmul@product
  6789  003AFA  CFF4 F006          	movff	prodh,___wmul@product+1
  6790  003AFE  5001               	movf	___wmul@multiplier,w,c
  6791  003B00  0204               	mulwf	___wmul@multiplicand+1,c
  6792  003B02  50F3               	movf	prodl,w,c
  6793  003B04  2606               	addwf	___wmul@product+1,f,c
  6794  003B06  5002               	movf	___wmul@multiplier+1,w,c
  6795  003B08  0203               	mulwf	___wmul@multiplicand,c
  6796  003B0A  50F3               	movf	prodl,w,c
  6797  003B0C  2606               	addwf	___wmul@product+1,f,c
  6798  003B0E  C005  F001         	movff	___wmul@product,?___wmul
  6799  003B12  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6800  003B16  0012               	return	
  6801  003B18                     __end_of___wmul:
  6802                           	opt stack 0
  6803                           tblptru	equ	0xFF8
  6804                           tblptrh	equ	0xFF7
  6805                           tblptrl	equ	0xFF6
  6806                           tablat	equ	0xFF5
  6807                           prodh	equ	0xFF4
  6808                           prodl	equ	0xFF3
  6809                           intcon	equ	0xFF2
  6810                           postinc0	equ	0xFEE
  6811                           wreg	equ	0xFE8
  6812                           indf1	equ	0xFE7
  6813                           postinc1	equ	0xFE6
  6814                           postdec1	equ	0xFE5
  6815                           fsr1h	equ	0xFE2
  6816                           fsr1l	equ	0xFE1
  6817                           indf2	equ	0xFDF
  6818                           postinc2	equ	0xFDE
  6819                           fsr2h	equ	0xFDA
  6820                           fsr2l	equ	0xFD9
  6821                           status	equ	0xFD8
  6822                           
  6823 ;; *************** function _lineCompletedTest *****************
  6824 ;; Defined at:
  6825 ;;		line 887 in file "main.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;		None
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;  i               1   49[COMRAM] unsigned char 
  6830 ;;  j               1   50[COMRAM] unsigned char 
  6831 ;;  completed       1   48[COMRAM] unsigned char 
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  1    wreg      void 
  6834 ;; Registers used:
  6835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6841 ;;      Params:         0       0       0       0       0       0       0       0       0
  6842 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6843 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6844 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6845 ;;Total ram usage:        6 bytes
  6846 ;; Hardware stack levels used:    1
  6847 ;; Hardware stack levels required when called:    4
  6848 ;; This function calls:
  6849 ;;		_completedUpdate
  6850 ;; This function is called by:
  6851 ;;		_main
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text8
  6856  003DF6                     __ptext8:
  6857                           	opt stack 0
  6858  003DF6                     _lineCompletedTest:
  6859                           	opt stack 26
  6860                           
  6861                           ;main.c: 889: uint8_t completed=0;
  6862                           
  6863                           ;incstack = 0
  6864  003DF6  0E00               	movlw	0
  6865  003DF8  6E31               	movwf	lineCompletedTest@completed,c
  6866                           
  6867                           ;main.c: 890: for(uint8_t j=0;j<11;j++){
  6868  003DFA  0E00               	movlw	0
  6869  003DFC  6E33               	movwf	lineCompletedTest@j,c
  6870  003DFE                     l4376:
  6871  003DFE  0E0A               	movlw	10
  6872  003E00  6433               	cpfsgt	lineCompletedTest@j,c
  6873  003E02  D001               	goto	l315
  6874  003E04  0012               	return	
  6875  003E06                     l315:
  6876                           
  6877                           ;main.c: 891: for(uint8_t i=0;i<17;i++){
  6878  003E06  0E00               	movlw	0
  6879  003E08  6E32               	movwf	lineCompletedTest@i,c
  6880  003E0A                     l4382:
  6881  003E0A  0E10               	movlw	16
  6882  003E0C  6432               	cpfsgt	lineCompletedTest@i,c
  6883  003E0E  D001               	goto	l317
  6884  003E10  D01E               	goto	u4760
  6885  003E12                     l317:
  6886                           
  6887                           ;main.c: 892: if(array_data[i][j]=='1')
  6888  003E12  5032               	movf	lineCompletedTest@i,w,c
  6889  003E14  0D0C               	mullw	12
  6890  003E16  0E00               	movlw	low _array_data
  6891  003E18  6E2E               	movwf	??_lineCompletedTest& (0+255),c
  6892  003E1A  0E02               	movlw	high _array_data
  6893  003E1C  6E2F               	movwf	(??_lineCompletedTest+1)& (0+255),c
  6894  003E1E  50F3               	movf	prodl,w,c
  6895  003E20  262E               	addwf	??_lineCompletedTest,f,c
  6896  003E22  50F4               	movf	prodh,w,c
  6897  003E24  222F               	addwfc	??_lineCompletedTest+1,f,c
  6898  003E26  5033               	movf	lineCompletedTest@j,w,c
  6899  003E28  0D01               	mullw	1
  6900  003E2A  50F3               	movf	prodl,w,c
  6901  003E2C  242E               	addwf	??_lineCompletedTest,w,c
  6902  003E2E  6ED9               	movwf	fsr2l,c
  6903  003E30  50F4               	movf	prodh,w,c
  6904  003E32  202F               	addwfc	??_lineCompletedTest+1,w,c
  6905  003E34  6EDA               	movwf	fsr2h,c
  6906  003E36  0E31               	movlw	49
  6907  003E38  18DE               	xorwf	postinc2,w,c
  6908  003E3A  A4D8               	btfss	status,2,c
  6909  003E3C  D003               	goto	l319
  6910                           
  6911                           ;main.c: 893: completed=1;
  6912  003E3E  0E01               	movlw	1
  6913  003E40  6E31               	movwf	lineCompletedTest@completed,c
  6914  003E42  D003               	goto	l320
  6915  003E44                     l319:
  6916                           
  6917                           ;main.c: 894: else{
  6918                           ;main.c: 895: completed=0;
  6919  003E44  0E00               	movlw	0
  6920  003E46  6E31               	movwf	lineCompletedTest@completed,c
  6921                           
  6922                           ;main.c: 896: break;
  6923  003E48  D002               	goto	u4760
  6924  003E4A                     l320:
  6925  003E4A  2A32               	incf	lineCompletedTest@i,f,c
  6926  003E4C  D7DE               	goto	l4382
  6927  003E4E                     u4760:
  6928                           
  6929                           ;main.c: 897: }
  6930                           ;main.c: 898: }
  6931                           ;main.c: 899: if(completed==1){
  6932  003E4E  0431               	decf	lineCompletedTest@completed,w,c
  6933  003E50  A4D8               	btfss	status,2,c
  6934  003E52  D005               	goto	l321
  6935                           
  6936                           ;main.c: 900: completedUpdate(j);
  6937  003E54  5033               	movf	lineCompletedTest@j,w,c
  6938  003E56  ECA1  F023         	call	_completedUpdate
  6939                           
  6940                           ;main.c: 901: score+=10;
  6941  003E5A  0E0A               	movlw	10
  6942  003E5C  2654               	addwf	_score,f,c
  6943  003E5E                     l321:
  6944  003E5E  2A33               	incf	lineCompletedTest@j,f,c
  6945  003E60  D7CE               	goto	l4376
  6946  003E62                     __end_of_lineCompletedTest:
  6947                           	opt stack 0
  6948                           tblptru	equ	0xFF8
  6949                           tblptrh	equ	0xFF7
  6950                           tblptrl	equ	0xFF6
  6951                           tablat	equ	0xFF5
  6952                           prodh	equ	0xFF4
  6953                           prodl	equ	0xFF3
  6954                           intcon	equ	0xFF2
  6955                           postinc0	equ	0xFEE
  6956                           wreg	equ	0xFE8
  6957                           indf1	equ	0xFE7
  6958                           postinc1	equ	0xFE6
  6959                           postdec1	equ	0xFE5
  6960                           fsr1h	equ	0xFE2
  6961                           fsr1l	equ	0xFE1
  6962                           indf2	equ	0xFDF
  6963                           postinc2	equ	0xFDE
  6964                           fsr2h	equ	0xFDA
  6965                           fsr2l	equ	0xFD9
  6966                           status	equ	0xFD8
  6967                           
  6968 ;; *************** function _completedUpdate *****************
  6969 ;; Defined at:
  6970 ;;		line 855 in file "main.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  line            1    wreg     unsigned char 
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;  line            1   39[COMRAM] unsigned char 
  6975 ;;  i               1   42[COMRAM] unsigned char 
  6976 ;;  j               1   40[COMRAM] unsigned char 
  6977 ;;  j               1   43[COMRAM] unsigned char 
  6978 ;;  j               1   41[COMRAM] unsigned char 
  6979 ;;  i               1   44[COMRAM] unsigned char 
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  1    wreg      void 
  6982 ;; Registers used:
  6983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6989 ;;      Params:         0       0       0       0       0       0       0       0       0
  6990 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6991 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6992 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6993 ;;Total ram usage:       14 bytes
  6994 ;; Hardware stack levels used:    1
  6995 ;; Hardware stack levels required when called:    3
  6996 ;; This function calls:
  6997 ;;		_update_display_shapes
  6998 ;; This function is called by:
  6999 ;;		_lineCompletedTest
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           	psect	text9
  7004  004742                     __ptext9:
  7005                           	opt stack 0
  7006  004742                     _completedUpdate:
  7007                           	opt stack 26
  7008                           
  7009                           ;incstack = 0
  7010                           ;completedUpdate@line stored from wreg
  7011  004742  6E28               	movwf	completedUpdate@line,c
  7012                           
  7013                           ;main.c: 857: uint8_t i=0;
  7014  004744  0E00               	movlw	0
  7015  004746  6E2D               	movwf	completedUpdate@i,c
  7016                           
  7017                           ;main.c: 858: while (all_shapes[i].index[0].x != 99){
  7018  004748  D04E               	goto	u3150
  7019  00474A                     
  7020                           ;main.c: 859: for(uint8_t j=0;j<4;j++){
  7021  00474A  0E00               	movlw	0
  7022  00474C  6E2C               	movwf	completedUpdate@j,c
  7023  00474E                     l3422:
  7024  00474E  0E03               	movlw	3
  7025  004750  642C               	cpfsgt	completedUpdate@j,c
  7026  004752  D001               	goto	l298
  7027  004754  D048               	goto	u3150
  7028  004756                     l298:
  7029                           
  7030                           ;main.c: 860: if(all_shapes[i].index[j].y==line){
  7031  004756  502D               	movf	completedUpdate@i,w,c
  7032  004758  0D09               	mullw	9
  7033  00475A  0E00               	movlw	low _all_shapes
  7034  00475C  6E20               	movwf	??_completedUpdate& (0+255),c
  7035  00475E  0E01               	movlw	high _all_shapes
  7036  004760  6E21               	movwf	(??_completedUpdate+1)& (0+255),c
  7037  004762  50F3               	movf	prodl,w,c
  7038  004764  2620               	addwf	??_completedUpdate,f,c
  7039  004766  50F4               	movf	prodh,w,c
  7040  004768  2221               	addwfc	??_completedUpdate+1,f,c
  7041  00476A  502C               	movf	completedUpdate@j,w,c
  7042  00476C  0D02               	mullw	2
  7043  00476E  50F3               	movf	prodl,w,c
  7044  004770  2620               	addwf	??_completedUpdate,f,c
  7045  004772  50F4               	movf	prodh,w,c
  7046  004774  2221               	addwfc	??_completedUpdate+1,f,c
  7047  004776  0E01               	movlw	1
  7048  004778  2420               	addwf	??_completedUpdate,w,c
  7049  00477A  6ED9               	movwf	fsr2l,c
  7050  00477C  0E00               	movlw	0
  7051  00477E  2021               	addwfc	??_completedUpdate+1,w,c
  7052  004780  6EDA               	movwf	fsr2h,c
  7053  004782  5028               	movf	completedUpdate@line,w,c
  7054  004784  18DE               	xorwf	postinc2,w,c
  7055  004786  A4D8               	btfss	status,2,c
  7056  004788  D02C               	goto	l300
  7057                           
  7058                           ;main.c: 861: all_shapes[i].index[j].x=-1;
  7059  00478A  502D               	movf	completedUpdate@i,w,c
  7060  00478C  0D09               	mullw	9
  7061  00478E  0E00               	movlw	low _all_shapes
  7062  004790  6E20               	movwf	??_completedUpdate& (0+255),c
  7063  004792  0E01               	movlw	high _all_shapes
  7064  004794  6E21               	movwf	(??_completedUpdate+1)& (0+255),c
  7065  004796  50F3               	movf	prodl,w,c
  7066  004798  2620               	addwf	??_completedUpdate,f,c
  7067  00479A  50F4               	movf	prodh,w,c
  7068  00479C  2221               	addwfc	??_completedUpdate+1,f,c
  7069  00479E  502C               	movf	completedUpdate@j,w,c
  7070  0047A0  0D02               	mullw	2
  7071  0047A2  50F3               	movf	prodl,w,c
  7072  0047A4  2420               	addwf	??_completedUpdate,w,c
  7073  0047A6  6ED9               	movwf	fsr2l,c
  7074  0047A8  50F4               	movf	prodh,w,c
  7075  0047AA  2021               	addwfc	??_completedUpdate+1,w,c
  7076  0047AC  6EDA               	movwf	fsr2h,c
  7077  0047AE  0EFF               	movlw	255
  7078  0047B0  6EDF               	movwf	indf2,c
  7079                           
  7080                           ;main.c: 862: all_shapes[i].index[j].y=-1;
  7081  0047B2  502D               	movf	completedUpdate@i,w,c
  7082  0047B4  0D09               	mullw	9
  7083  0047B6  0E00               	movlw	low _all_shapes
  7084  0047B8  6E20               	movwf	??_completedUpdate& (0+255),c
  7085  0047BA  0E01               	movlw	high _all_shapes
  7086  0047BC  6E21               	movwf	(??_completedUpdate+1)& (0+255),c
  7087  0047BE  50F3               	movf	prodl,w,c
  7088  0047C0  2620               	addwf	??_completedUpdate,f,c
  7089  0047C2  50F4               	movf	prodh,w,c
  7090  0047C4  2221               	addwfc	??_completedUpdate+1,f,c
  7091  0047C6  502C               	movf	completedUpdate@j,w,c
  7092  0047C8  0D02               	mullw	2
  7093  0047CA  50F3               	movf	prodl,w,c
  7094  0047CC  2620               	addwf	??_completedUpdate,f,c
  7095  0047CE  50F4               	movf	prodh,w,c
  7096  0047D0  2221               	addwfc	??_completedUpdate+1,f,c
  7097  0047D2  0E01               	movlw	1
  7098  0047D4  2420               	addwf	??_completedUpdate,w,c
  7099  0047D6  6ED9               	movwf	fsr2l,c
  7100  0047D8  0E00               	movlw	0
  7101  0047DA  2021               	addwfc	??_completedUpdate+1,w,c
  7102  0047DC  6EDA               	movwf	fsr2h,c
  7103  0047DE  0EFF               	movlw	255
  7104  0047E0  6EDF               	movwf	indf2,c
  7105  0047E2                     l300:
  7106  0047E2  2A2C               	incf	completedUpdate@j,f,c
  7107  0047E4  D7B4               	goto	l3422
  7108  0047E6                     u3150:
  7109  0047E6  502D               	movf	completedUpdate@i,w,c
  7110  0047E8  0D09               	mullw	9
  7111  0047EA  0E00               	movlw	low _all_shapes
  7112  0047EC  24F3               	addwf	prodl,w,c
  7113  0047EE  6ED9               	movwf	fsr2l,c
  7114  0047F0  0E01               	movlw	high _all_shapes
  7115  0047F2  20F4               	addwfc	prodh,w,c
  7116  0047F4  6EDA               	movwf	fsr2h,c
  7117  0047F6  0E63               	movlw	99
  7118  0047F8  18DE               	xorwf	postinc2,w,c
  7119  0047FA  B4D8               	btfsc	status,2,c
  7120  0047FC  D03A               	goto	u3190
  7121  0047FE  D7A5               	goto	l297
  7122  004800                     
  7123                           ;main.c: 869: for(uint8_t j=0;j<4;j++){
  7124  004800  0E00               	movlw	0
  7125  004802  6E29               	movwf	completedUpdate@j_301,c
  7126  004804                     l3438:
  7127  004804  0E03               	movlw	3
  7128  004806  6429               	cpfsgt	completedUpdate@j_301,c
  7129  004808  D001               	goto	l304
  7130  00480A  D033               	goto	u3190
  7131  00480C                     l304:
  7132                           
  7133                           ;main.c: 870: if(all_shapes[i].index[j].y < line && all_shapes[i].index[j].y!=-1){
  7134  00480C  502D               	movf	completedUpdate@i,w,c
  7135  00480E  0D09               	mullw	9
  7136  004810  0E00               	movlw	low _all_shapes
  7137  004812  6E20               	movwf	??_completedUpdate& (0+255),c
  7138  004814  0E01               	movlw	high _all_shapes
  7139  004816  6E21               	movwf	(??_completedUpdate+1)& (0+255),c
  7140  004818  50F3               	movf	prodl,w,c
  7141  00481A  2620               	addwf	??_completedUpdate,f,c
  7142  00481C  50F4               	movf	prodh,w,c
  7143  00481E  2221               	addwfc	??_completedUpdate+1,f,c
  7144  004820  5029               	movf	completedUpdate@j_301,w,c
  7145  004822  0D02               	mullw	2
  7146  004824  50F3               	movf	prodl,w,c
  7147  004826  2620               	addwf	??_completedUpdate,f,c
  7148  004828  50F4               	movf	prodh,w,c
  7149  00482A  2221               	addwfc	??_completedUpdate+1,f,c
  7150  00482C  0E01               	movlw	1
  7151  00482E  2420               	addwf	??_completedUpdate,w,c
  7152  004830  6ED9               	movwf	fsr2l,c
  7153  004832  0E00               	movlw	0
  7154  004834  2021               	addwfc	??_completedUpdate+1,w,c
  7155  004836  6EDA               	movwf	fsr2h,c
  7156  004838  5028               	movf	completedUpdate@line,w,c
  7157  00483A  5CDE               	subwf	postinc2,w,c
  7158  00483C  B0D8               	btfsc	status,0,c
  7159  00483E  D017               	goto	l306
  7160                           
  7161                           ;main.c: 871: all_shapes[i].index[j].y+=1;
  7162  004840  502D               	movf	completedUpdate@i,w,c
  7163  004842  0D09               	mullw	9
  7164  004844  0E00               	movlw	low _all_shapes
  7165  004846  6E20               	movwf	??_completedUpdate& (0+255),c
  7166  004848  0E01               	movlw	high _all_shapes
  7167  00484A  6E21               	movwf	(??_completedUpdate+1)& (0+255),c
  7168  00484C  50F3               	movf	prodl,w,c
  7169  00484E  2620               	addwf	??_completedUpdate,f,c
  7170  004850  50F4               	movf	prodh,w,c
  7171  004852  2221               	addwfc	??_completedUpdate+1,f,c
  7172  004854  5029               	movf	completedUpdate@j_301,w,c
  7173  004856  0D02               	mullw	2
  7174  004858  50F3               	movf	prodl,w,c
  7175  00485A  2620               	addwf	??_completedUpdate,f,c
  7176  00485C  50F4               	movf	prodh,w,c
  7177  00485E  2221               	addwfc	??_completedUpdate+1,f,c
  7178  004860  0E01               	movlw	1
  7179  004862  2420               	addwf	??_completedUpdate,w,c
  7180  004864  6ED9               	movwf	fsr2l,c
  7181  004866  0E00               	movlw	0
  7182  004868  2021               	addwfc	??_completedUpdate+1,w,c
  7183  00486A  6EDA               	movwf	fsr2h,c
  7184  00486C  2ADF               	incf	indf2,f,c
  7185  00486E                     l306:
  7186  00486E  2A29               	incf	completedUpdate@j_301,f,c
  7187  004870  D7C9               	goto	l3438
  7188  004872                     u3190:
  7189  004872  502D               	movf	completedUpdate@i,w,c
  7190  004874  0D09               	mullw	9
  7191  004876  0E00               	movlw	low _all_shapes
  7192  004878  24F3               	addwf	prodl,w,c
  7193  00487A  6ED9               	movwf	fsr2l,c
  7194  00487C  0E01               	movlw	high _all_shapes
  7195  00487E  20F4               	addwfc	prodh,w,c
  7196  004880  6EDA               	movwf	fsr2h,c
  7197  004882  0E63               	movlw	99
  7198  004884  18DE               	xorwf	postinc2,w,c
  7199  004886  A4D8               	btfss	status,2,c
  7200  004888  D7BB               	goto	l303
  7201                           
  7202                           ;main.c: 872: }
  7203                           ;main.c: 873: }
  7204                           ;main.c: 874: }
  7205                           ;main.c: 877: for(uint8_t j=line;j>0;j--){
  7206  00488A  C028  F02A         	movff	completedUpdate@line,completedUpdate@j_302
  7207  00488E                     l3452:
  7208  00488E  502A               	movf	completedUpdate@j_302,w,c
  7209  004890  B4D8               	btfsc	status,2,c
  7210  004892  D039               	goto	u3240
  7211                           
  7212                           ;main.c: 878: for(uint8_t i=0;i<17;i++){
  7213  004894  0E00               	movlw	0
  7214  004896  6E2B               	movwf	completedUpdate@i_303,c
  7215  004898                     l3458:
  7216  004898  0E10               	movlw	16
  7217  00489A  642B               	cpfsgt	completedUpdate@i_303,c
  7218  00489C  D001               	goto	l310
  7219  00489E  D031               	goto	u3230
  7220  0048A0                     l310:
  7221                           
  7222                           ;main.c: 879: array_data[i][j]=array_data[i][j-1];
  7223  0048A0  502B               	movf	completedUpdate@i_303,w,c
  7224  0048A2  0D0C               	mullw	12
  7225  0048A4  0EFF               	movlw	255
  7226  0048A6  6E20               	movwf	??_completedUpdate& (0+255),c
  7227  0048A8  0EFF               	movlw	255
  7228  0048AA  6E21               	movwf	(??_completedUpdate+1)& (0+255),c
  7229  0048AC  502A               	movf	completedUpdate@j_302,w,c
  7230  0048AE  6E22               	movwf	(??_completedUpdate+2)& (0+255),c
  7231  0048B0  6A23               	clrf	(??_completedUpdate+3)& (0+255),c
  7232  0048B2  5020               	movf	??_completedUpdate,w,c
  7233  0048B4  2622               	addwf	??_completedUpdate+2,f,c
  7234  0048B6  5021               	movf	??_completedUpdate+1,w,c
  7235  0048B8  2223               	addwfc	??_completedUpdate+3,f,c
  7236  0048BA  0E00               	movlw	low _array_data
  7237  0048BC  6E24               	movwf	(??_completedUpdate+4)& (0+255),c
  7238  0048BE  0E02               	movlw	high _array_data
  7239  0048C0  6E25               	movwf	(??_completedUpdate+5)& (0+255),c
  7240  0048C2  5022               	movf	??_completedUpdate+2,w,c
  7241  0048C4  2624               	addwf	??_completedUpdate+4,f,c
  7242  0048C6  5023               	movf	??_completedUpdate+3,w,c
  7243  0048C8  2225               	addwfc	??_completedUpdate+5,f,c
  7244  0048CA  50F3               	movf	prodl,w,c
  7245  0048CC  2424               	addwf	??_completedUpdate+4,w,c
  7246  0048CE  6ED9               	movwf	fsr2l,c
  7247  0048D0  50F4               	movf	prodh,w,c
  7248  0048D2  2025               	addwfc	??_completedUpdate+5,w,c
  7249  0048D4  6EDA               	movwf	fsr2h,c
  7250  0048D6  502B               	movf	completedUpdate@i_303,w,c
  7251  0048D8  0D0C               	mullw	12
  7252  0048DA  0E00               	movlw	low _array_data
  7253  0048DC  6E26               	movwf	(??_completedUpdate+6)& (0+255),c
  7254  0048DE  0E02               	movlw	high _array_data
  7255  0048E0  6E27               	movwf	(??_completedUpdate+7)& (0+255),c
  7256  0048E2  50F3               	movf	prodl,w,c
  7257  0048E4  2626               	addwf	??_completedUpdate+6,f,c
  7258  0048E6  50F4               	movf	prodh,w,c
  7259  0048E8  2227               	addwfc	??_completedUpdate+7,f,c
  7260  0048EA  502A               	movf	completedUpdate@j_302,w,c
  7261  0048EC  0D01               	mullw	1
  7262  0048EE  50F3               	movf	prodl,w,c
  7263  0048F0  2426               	addwf	??_completedUpdate+6,w,c
  7264  0048F2  6EE1               	movwf	fsr1l,c
  7265  0048F4  50F4               	movf	prodh,w,c
  7266  0048F6  2027               	addwfc	??_completedUpdate+7,w,c
  7267  0048F8  6EE2               	movwf	fsr1h,c
  7268  0048FA  CFDF FFE7          	movff	indf2,indf1
  7269  0048FE  2A2B               	incf	completedUpdate@i_303,f,c
  7270  004900  D7CB               	goto	l3458
  7271  004902                     u3230:
  7272  004902  062A               	decf	completedUpdate@j_302,f,c
  7273  004904  D7C4               	goto	l3452
  7274  004906                     u3240:
  7275                           
  7276                           ;main.c: 880: }
  7277                           ;main.c: 881: }
  7278                           ;main.c: 883: update_display_shapes('1');
  7279  004906  0E31               	movlw	49
  7280  004908  EC7C  F025         	call	_update_display_shapes
  7281  00490C  0012               	return		;funcret
  7282  00490E                     __end_of_completedUpdate:
  7283                           	opt stack 0
  7284                           tblptru	equ	0xFF8
  7285                           tblptrh	equ	0xFF7
  7286                           tblptrl	equ	0xFF6
  7287                           tablat	equ	0xFF5
  7288                           prodh	equ	0xFF4
  7289                           prodl	equ	0xFF3
  7290                           intcon	equ	0xFF2
  7291                           postinc0	equ	0xFEE
  7292                           wreg	equ	0xFE8
  7293                           indf1	equ	0xFE7
  7294                           postinc1	equ	0xFE6
  7295                           postdec1	equ	0xFE5
  7296                           fsr1h	equ	0xFE2
  7297                           fsr1l	equ	0xFE1
  7298                           indf2	equ	0xFDF
  7299                           postinc2	equ	0xFDE
  7300                           fsr2h	equ	0xFDA
  7301                           fsr2l	equ	0xFD9
  7302                           status	equ	0xFD8
  7303                           
  7304 ;; *************** function _update_display_shapes *****************
  7305 ;; Defined at:
  7306 ;;		line 216 in file "main.c"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;  operation       1    wreg     unsigned char 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  operation       1   22[COMRAM] unsigned char 
  7311 ;;  n               1   26[COMRAM] unsigned char 
  7312 ;;  n               1   24[COMRAM] unsigned char 
  7313 ;;  m               1   25[COMRAM] unsigned char 
  7314 ;;  m               1   23[COMRAM] unsigned char 
  7315 ;;  j               1   28[COMRAM] unsigned char 
  7316 ;;  x               1   30[COMRAM] unsigned char 
  7317 ;;  y               1   29[COMRAM] unsigned char 
  7318 ;;  i               1   27[COMRAM] unsigned char 
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  1    wreg      void 
  7321 ;; Registers used:
  7322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7328 ;;      Params:         0       0       0       0       0       0       0       0       0
  7329 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7330 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7331 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7332 ;;Total ram usage:       14 bytes
  7333 ;; Hardware stack levels used:    1
  7334 ;; Hardware stack levels required when called:    2
  7335 ;; This function calls:
  7336 ;;		_glcd_PlotPixel
  7337 ;; This function is called by:
  7338 ;;		_completedUpdate
  7339 ;;		_main
  7340 ;; This function uses a non-reentrant model
  7341 ;;
  7342                           
  7343                           	psect	text10
  7344  004AF8                     __ptext10:
  7345                           	opt stack 0
  7346  004AF8                     _update_display_shapes:
  7347                           	opt stack 28
  7348                           
  7349                           ;incstack = 0
  7350                           ;update_display_shapes@operation stored from wreg
  7351  004AF8  6E17               	movwf	update_display_shapes@operation,c
  7352                           
  7353                           ;main.c: 218: uint8_t x,y,i=0;
  7354  004AFA  0E00               	movlw	0
  7355  004AFC  6E1C               	movwf	update_display_shapes@i,c
  7356                           
  7357                           ;main.c: 220: while (all_shapes[i].index[0].x != 99){
  7358  004AFE  D144               	goto	l66
  7359  004B00                     
  7360                           ;main.c: 221: for(uint8_t j=0;j<4;j++){
  7361  004B00  0E00               	movlw	0
  7362  004B02  6E1D               	movwf	update_display_shapes@j,c
  7363  004B04                     l3112:
  7364  004B04  0E03               	movlw	3
  7365  004B06  641D               	cpfsgt	update_display_shapes@j,c
  7366  004B08  D028               	goto	l70
  7367  004B0A  D13D               	goto	u2830
  7368  004B0C                     
  7369                           ;main.c: 225: x=2;
  7370  004B0C  0E02               	movlw	2
  7371  004B0E  D021               	goto	L19
  7372  004B10                     
  7373                           ;main.c: 228: x=7;
  7374  004B10  0E07               	movlw	7
  7375  004B12  D01F               	goto	L19
  7376  004B14                     
  7377                           ;main.c: 231: x=12;
  7378  004B14  0E0C               	movlw	12
  7379  004B16  D01D               	goto	L19
  7380  004B18                     
  7381                           ;main.c: 234: x=17;
  7382  004B18  0E11               	movlw	17
  7383  004B1A  D01B               	goto	L19
  7384  004B1C                     
  7385                           ;main.c: 237: x=22;
  7386  004B1C  0E16               	movlw	22
  7387  004B1E  D019               	goto	L19
  7388  004B20                     
  7389                           ;main.c: 240: x=27;
  7390  004B20  0E1B               	movlw	27
  7391  004B22  D017               	goto	L19
  7392  004B24                     
  7393                           ;main.c: 243: x=32;
  7394  004B24  0E20               	movlw	32
  7395  004B26  D015               	goto	L19
  7396  004B28                     
  7397                           ;main.c: 246: x=37;
  7398  004B28  0E25               	movlw	37
  7399  004B2A  D013               	goto	L19
  7400  004B2C                     
  7401                           ;main.c: 249: x=42;
  7402  004B2C  0E2A               	movlw	42
  7403  004B2E  D011               	goto	L19
  7404  004B30                     
  7405                           ;main.c: 252: x=47;
  7406  004B30  0E2F               	movlw	47
  7407  004B32  D00F               	goto	L19
  7408  004B34                     
  7409                           ;main.c: 255: x=52;
  7410  004B34  0E34               	movlw	52
  7411  004B36  D00D               	goto	L19
  7412  004B38                     
  7413                           ;main.c: 258: x=57;
  7414  004B38  0E39               	movlw	57
  7415  004B3A  D00B               	goto	L19
  7416  004B3C                     
  7417                           ;main.c: 261: x=62;
  7418  004B3C  0E3E               	movlw	62
  7419  004B3E  D009               	goto	L19
  7420  004B40                     
  7421                           ;main.c: 264: x=67;
  7422  004B40  0E43               	movlw	67
  7423  004B42  D007               	goto	L19
  7424  004B44                     
  7425                           ;main.c: 267: x=72;
  7426  004B44  0E48               	movlw	72
  7427  004B46  D005               	goto	L19
  7428  004B48                     
  7429                           ;main.c: 270: x=77;
  7430  004B48  0E4D               	movlw	77
  7431  004B4A  D003               	goto	L19
  7432  004B4C                     
  7433                           ;main.c: 273: x=82;
  7434  004B4C  0E52               	movlw	82
  7435  004B4E  D001               	goto	L19
  7436  004B50                     
  7437                           ;main.c: 276: x=87;
  7438  004B50  0E57               	movlw	87
  7439  004B52                     L19:
  7440  004B52  6E1F               	movwf	update_display_shapes@x,c
  7441                           
  7442                           ;main.c: 277: break;
  7443  004B54  D067               	goto	l91
  7444  004B56                     l90:
  7445                           
  7446                           ;main.c: 279: x=-1;
  7447  004B56  681F               	setf	update_display_shapes@x,c
  7448                           
  7449                           ;main.c: 281: }
  7450                           
  7451                           ;main.c: 280: break;
  7452  004B58  D065               	goto	l91
  7453  004B5A                     l70:
  7454  004B5A  501C               	movf	update_display_shapes@i,w,c
  7455  004B5C  0D09               	mullw	9
  7456  004B5E  0E00               	movlw	low _all_shapes
  7457  004B60  6E12               	movwf	??_update_display_shapes& (0+255),c
  7458  004B62  0E01               	movlw	high _all_shapes
  7459  004B64  6E13               	movwf	(??_update_display_shapes+1)& (0+255),c
  7460  004B66  50F3               	movf	prodl,w,c
  7461  004B68  2612               	addwf	??_update_display_shapes,f,c
  7462  004B6A  50F4               	movf	prodh,w,c
  7463  004B6C  2213               	addwfc	??_update_display_shapes+1,f,c
  7464  004B6E  501D               	movf	update_display_shapes@j,w,c
  7465  004B70  0D02               	mullw	2
  7466  004B72  50F3               	movf	prodl,w,c
  7467  004B74  2412               	addwf	??_update_display_shapes,w,c
  7468  004B76  6ED9               	movwf	fsr2l,c
  7469  004B78  50F4               	movf	prodh,w,c
  7470  004B7A  2013               	addwfc	??_update_display_shapes+1,w,c
  7471  004B7C  6EDA               	movwf	fsr2h,c
  7472  004B7E  50DF               	movf	indf2,w,c
  7473                           
  7474                           ; Switch size 1, requested type "space"
  7475                           ; Number of cases is 18, Range of values is 0 to 17
  7476                           ; switch strategies available:
  7477                           ; Name         Instructions Cycles
  7478                           ; simple_byte           55    28 (average)
  7479                           ;	Chosen strategy is simple_byte
  7480  004B80  0A00               	xorlw	0	; case 0
  7481  004B82  B4D8               	btfsc	status,2,c
  7482  004B84  D7C3               	goto	l71
  7483  004B86  0A01               	xorlw	1	; case 1
  7484  004B88  B4D8               	btfsc	status,2,c
  7485  004B8A  D7C2               	goto	l73
  7486  004B8C  0A03               	xorlw	3	; case 2
  7487  004B8E  B4D8               	btfsc	status,2,c
  7488  004B90  D7C1               	goto	l74
  7489  004B92  0A01               	xorlw	1	; case 3
  7490  004B94  B4D8               	btfsc	status,2,c
  7491  004B96  D7C0               	goto	l75
  7492  004B98  0A07               	xorlw	7	; case 4
  7493  004B9A  B4D8               	btfsc	status,2,c
  7494  004B9C  D7BF               	goto	l76
  7495  004B9E  0A01               	xorlw	1	; case 5
  7496  004BA0  B4D8               	btfsc	status,2,c
  7497  004BA2  D7BE               	goto	l77
  7498  004BA4  0A03               	xorlw	3	; case 6
  7499  004BA6  B4D8               	btfsc	status,2,c
  7500  004BA8  D7BD               	goto	l78
  7501  004BAA  0A01               	xorlw	1	; case 7
  7502  004BAC  B4D8               	btfsc	status,2,c
  7503  004BAE  D7BC               	goto	l79
  7504  004BB0  0A0F               	xorlw	15	; case 8
  7505  004BB2  B4D8               	btfsc	status,2,c
  7506  004BB4  D7BB               	goto	l80
  7507  004BB6  0A01               	xorlw	1	; case 9
  7508  004BB8  B4D8               	btfsc	status,2,c
  7509  004BBA  D7BA               	goto	l81
  7510  004BBC  0A03               	xorlw	3	; case 10
  7511  004BBE  B4D8               	btfsc	status,2,c
  7512  004BC0  D7B9               	goto	l82
  7513  004BC2  0A01               	xorlw	1	; case 11
  7514  004BC4  B4D8               	btfsc	status,2,c
  7515  004BC6  D7B8               	goto	l83
  7516  004BC8  0A07               	xorlw	7	; case 12
  7517  004BCA  B4D8               	btfsc	status,2,c
  7518  004BCC  D7B7               	goto	l84
  7519  004BCE  0A01               	xorlw	1	; case 13
  7520  004BD0  B4D8               	btfsc	status,2,c
  7521  004BD2  D7B6               	goto	l85
  7522  004BD4  0A03               	xorlw	3	; case 14
  7523  004BD6  B4D8               	btfsc	status,2,c
  7524  004BD8  D7B5               	goto	l86
  7525  004BDA  0A01               	xorlw	1	; case 15
  7526  004BDC  B4D8               	btfsc	status,2,c
  7527  004BDE  D7B4               	goto	l87
  7528  004BE0  0A1F               	xorlw	31	; case 16
  7529  004BE2  B4D8               	btfsc	status,2,c
  7530  004BE4  D7B3               	goto	l88
  7531  004BE6  0A01               	xorlw	1	; case 17
  7532  004BE8  B4D8               	btfsc	status,2,c
  7533  004BEA  D7B2               	goto	l89
  7534  004BEC  D7B4               	goto	l90
  7535  004BEE                     
  7536                           ;main.c: 284: y=2;
  7537  004BEE  0E02               	movlw	2
  7538  004BF0  D015               	goto	L30
  7539  004BF2                     
  7540                           ;main.c: 287: y=7;
  7541  004BF2  0E07               	movlw	7
  7542  004BF4  D013               	goto	L30
  7543  004BF6                     
  7544                           ;main.c: 290: y=12;
  7545  004BF6  0E0C               	movlw	12
  7546  004BF8  D011               	goto	L30
  7547  004BFA                     
  7548                           ;main.c: 293: y=17;
  7549  004BFA  0E11               	movlw	17
  7550  004BFC  D00F               	goto	L30
  7551  004BFE                     
  7552                           ;main.c: 296: y=22;
  7553  004BFE  0E16               	movlw	22
  7554  004C00  D00D               	goto	L30
  7555  004C02                     
  7556                           ;main.c: 299: y=27;
  7557  004C02  0E1B               	movlw	27
  7558  004C04  D00B               	goto	L30
  7559  004C06                     
  7560                           ;main.c: 302: y=32;
  7561  004C06  0E20               	movlw	32
  7562  004C08  D009               	goto	L30
  7563  004C0A                     
  7564                           ;main.c: 305: y=37;
  7565  004C0A  0E25               	movlw	37
  7566  004C0C  D007               	goto	L30
  7567  004C0E                     
  7568                           ;main.c: 308: y=42;
  7569  004C0E  0E2A               	movlw	42
  7570  004C10  D005               	goto	L30
  7571  004C12                     
  7572                           ;main.c: 311: y=47;
  7573  004C12  0E2F               	movlw	47
  7574  004C14  D003               	goto	L30
  7575  004C16                     
  7576                           ;main.c: 314: y=52;
  7577  004C16  0E34               	movlw	52
  7578  004C18  D001               	goto	L30
  7579  004C1A                     
  7580                           ;main.c: 317: y=57;
  7581  004C1A  0E39               	movlw	57
  7582  004C1C                     L30:
  7583  004C1C  6E1E               	movwf	update_display_shapes@y,c
  7584                           
  7585                           ;main.c: 318: break;
  7586  004C1E  D03E               	goto	l93
  7587  004C20                     l105:
  7588                           
  7589                           ;main.c: 320: y=-1;
  7590  004C20  681E               	setf	update_display_shapes@y,c
  7591                           
  7592                           ;main.c: 322: }
  7593                           
  7594                           ;main.c: 321: break;
  7595  004C22  D03C               	goto	l93
  7596  004C24                     l91:
  7597  004C24  501C               	movf	update_display_shapes@i,w,c
  7598  004C26  0D09               	mullw	9
  7599  004C28  0E00               	movlw	low _all_shapes
  7600  004C2A  6E12               	movwf	??_update_display_shapes& (0+255),c
  7601  004C2C  0E01               	movlw	high _all_shapes
  7602  004C2E  6E13               	movwf	(??_update_display_shapes+1)& (0+255),c
  7603  004C30  50F3               	movf	prodl,w,c
  7604  004C32  2612               	addwf	??_update_display_shapes,f,c
  7605  004C34  50F4               	movf	prodh,w,c
  7606  004C36  2213               	addwfc	??_update_display_shapes+1,f,c
  7607  004C38  501D               	movf	update_display_shapes@j,w,c
  7608  004C3A  0D02               	mullw	2
  7609  004C3C  50F3               	movf	prodl,w,c
  7610  004C3E  2612               	addwf	??_update_display_shapes,f,c
  7611  004C40  50F4               	movf	prodh,w,c
  7612  004C42  2213               	addwfc	??_update_display_shapes+1,f,c
  7613  004C44  0E01               	movlw	1
  7614  004C46  2412               	addwf	??_update_display_shapes,w,c
  7615  004C48  6ED9               	movwf	fsr2l,c
  7616  004C4A  0E00               	movlw	0
  7617  004C4C  2013               	addwfc	??_update_display_shapes+1,w,c
  7618  004C4E  6EDA               	movwf	fsr2h,c
  7619  004C50  50DF               	movf	indf2,w,c
  7620                           
  7621                           ; Switch size 1, requested type "space"
  7622                           ; Number of cases is 12, Range of values is 0 to 11
  7623                           ; switch strategies available:
  7624                           ; Name         Instructions Cycles
  7625                           ; simple_byte           37    19 (average)
  7626                           ;	Chosen strategy is simple_byte
  7627  004C52  0A00               	xorlw	0	; case 0
  7628  004C54  B4D8               	btfsc	status,2,c
  7629  004C56  D7CB               	goto	l92
  7630  004C58  0A01               	xorlw	1	; case 1
  7631  004C5A  B4D8               	btfsc	status,2,c
  7632  004C5C  D7CA               	goto	l94
  7633  004C5E  0A03               	xorlw	3	; case 2
  7634  004C60  B4D8               	btfsc	status,2,c
  7635  004C62  D7C9               	goto	l95
  7636  004C64  0A01               	xorlw	1	; case 3
  7637  004C66  B4D8               	btfsc	status,2,c
  7638  004C68  D7C8               	goto	l96
  7639  004C6A  0A07               	xorlw	7	; case 4
  7640  004C6C  B4D8               	btfsc	status,2,c
  7641  004C6E  D7C7               	goto	l97
  7642  004C70  0A01               	xorlw	1	; case 5
  7643  004C72  B4D8               	btfsc	status,2,c
  7644  004C74  D7C6               	goto	l98
  7645  004C76  0A03               	xorlw	3	; case 6
  7646  004C78  B4D8               	btfsc	status,2,c
  7647  004C7A  D7C5               	goto	l99
  7648  004C7C  0A01               	xorlw	1	; case 7
  7649  004C7E  B4D8               	btfsc	status,2,c
  7650  004C80  D7C4               	goto	l100
  7651  004C82  0A0F               	xorlw	15	; case 8
  7652  004C84  B4D8               	btfsc	status,2,c
  7653  004C86  D7C3               	goto	l101
  7654  004C88  0A01               	xorlw	1	; case 9
  7655  004C8A  B4D8               	btfsc	status,2,c
  7656  004C8C  D7C2               	goto	l102
  7657  004C8E  0A03               	xorlw	3	; case 10
  7658  004C90  B4D8               	btfsc	status,2,c
  7659  004C92  D7C1               	goto	l103
  7660  004C94  0A01               	xorlw	1	; case 11
  7661  004C96  B4D8               	btfsc	status,2,c
  7662  004C98  D7C0               	goto	l104
  7663  004C9A  D7C2               	goto	l105
  7664  004C9C                     l93:
  7665                           
  7666                           ;main.c: 325: if(operation=='1'){
  7667  004C9C  0E31               	movlw	49
  7668  004C9E  1817               	xorwf	update_display_shapes@operation,w,c
  7669  004CA0  A4D8               	btfss	status,2,c
  7670  004CA2  D038               	goto	l107
  7671                           
  7672                           ;main.c: 327: for(uint8_t m=x;m<x+4;m++){
  7673  004CA4  C01F  F018         	movff	update_display_shapes@x,update_display_shapes@m
  7674  004CA8  D020               	goto	l108
  7675  004CAA                     l109:
  7676                           
  7677                           ;main.c: 328: for(uint8_t n=y;n<y+4;n++){
  7678  004CAA  C01E  F019         	movff	update_display_shapes@y,update_display_shapes@n
  7679  004CAE  D008               	goto	l110
  7680  004CB0                     
  7681                           ;main.c: 329: glcd_PlotPixel(m,n,1);
  7682  004CB0  C019  F00B         	movff	update_display_shapes@n,glcd_PlotPixel@ypos
  7683  004CB4  0E01               	movlw	1
  7684  004CB6  6E0C               	movwf	glcd_PlotPixel@color,c
  7685  004CB8  5018               	movf	update_display_shapes@m,w,c
  7686  004CBA  EC9C  F020         	call	_glcd_PlotPixel
  7687  004CBE  2A19               	incf	update_display_shapes@n,f,c
  7688  004CC0                     l110:
  7689  004CC0  501E               	movf	update_display_shapes@y,w,c
  7690  004CC2  6E12               	movwf	??_update_display_shapes& (0+255),c
  7691  004CC4  6A13               	clrf	(??_update_display_shapes+1)& (0+255),c
  7692  004CC6  0E04               	movlw	4
  7693  004CC8  2612               	addwf	??_update_display_shapes,f,c
  7694  004CCA  0E00               	movlw	0
  7695  004CCC  2213               	addwfc	??_update_display_shapes+1,f,c
  7696  004CCE  5019               	movf	update_display_shapes@n,w,c
  7697  004CD0  6E14               	movwf	(??_update_display_shapes+2)& (0+255),c
  7698  004CD2  6A15               	clrf	(??_update_display_shapes+3)& (0+255),c
  7699  004CD4  5012               	movf	??_update_display_shapes,w,c
  7700  004CD6  5C14               	subwf	??_update_display_shapes+2,w,c
  7701  004CD8  5015               	movf	??_update_display_shapes+3,w,c
  7702  004CDA  0A80               	xorlw	128
  7703  004CDC  6E16               	movwf	(??_update_display_shapes+4)& (0+255),c
  7704  004CDE  5013               	movf	??_update_display_shapes+1,w,c
  7705  004CE0  0A80               	xorlw	128
  7706  004CE2  5816               	subwfb	(??_update_display_shapes+4)& (0+255),w,c
  7707  004CE4  A0D8               	btfss	status,0,c
  7708  004CE6  D7E4               	goto	l111
  7709  004CE8  2A18               	incf	update_display_shapes@m,f,c
  7710  004CEA                     l108:
  7711  004CEA  501F               	movf	update_display_shapes@x,w,c
  7712  004CEC  6E12               	movwf	??_update_display_shapes& (0+255),c
  7713  004CEE  6A13               	clrf	(??_update_display_shapes+1)& (0+255),c
  7714  004CF0  0E04               	movlw	4
  7715  004CF2  2612               	addwf	??_update_display_shapes,f,c
  7716  004CF4  0E00               	movlw	0
  7717  004CF6  2213               	addwfc	??_update_display_shapes+1,f,c
  7718  004CF8  5018               	movf	update_display_shapes@m,w,c
  7719  004CFA  6E14               	movwf	(??_update_display_shapes+2)& (0+255),c
  7720  004CFC  6A15               	clrf	(??_update_display_shapes+3)& (0+255),c
  7721  004CFE  5012               	movf	??_update_display_shapes,w,c
  7722  004D00  5C14               	subwf	??_update_display_shapes+2,w,c
  7723  004D02  5015               	movf	??_update_display_shapes+3,w,c
  7724  004D04  0A80               	xorlw	128
  7725  004D06  6E16               	movwf	(??_update_display_shapes+4)& (0+255),c
  7726  004D08  5013               	movf	??_update_display_shapes+1,w,c
  7727  004D0A  0A80               	xorlw	128
  7728  004D0C  5816               	subwfb	(??_update_display_shapes+4)& (0+255),w,c
  7729  004D0E  B0D8               	btfsc	status,0,c
  7730  004D10  D038               	goto	u2820
  7731  004D12  D7CB               	goto	l109
  7732  004D14                     l107:
  7733                           
  7734                           ;main.c: 333: else {
  7735                           ;main.c: 335: for(uint8_t m=x;m<x+4;m++){
  7736  004D14  C01F  F01A         	movff	update_display_shapes@x,update_display_shapes@m_230
  7737  004D18  D020               	goto	l115
  7738  004D1A                     l116:
  7739                           
  7740                           ;main.c: 336: for(uint8_t n=y;n<y+4;n++){
  7741  004D1A  C01E  F01B         	movff	update_display_shapes@y,update_display_shapes@n_231
  7742  004D1E  D008               	goto	l117
  7743  004D20                     
  7744                           ;main.c: 337: glcd_PlotPixel(m,n,0);
  7745  004D20  C01B  F00B         	movff	update_display_shapes@n_231,glcd_PlotPixel@ypos
  7746  004D24  0E00               	movlw	0
  7747  004D26  6E0C               	movwf	glcd_PlotPixel@color,c
  7748  004D28  501A               	movf	update_display_shapes@m_230,w,c
  7749  004D2A  EC9C  F020         	call	_glcd_PlotPixel
  7750  004D2E  2A1B               	incf	update_display_shapes@n_231,f,c
  7751  004D30                     l117:
  7752  004D30  501E               	movf	update_display_shapes@y,w,c
  7753  004D32  6E12               	movwf	??_update_display_shapes& (0+255),c
  7754  004D34  6A13               	clrf	(??_update_display_shapes+1)& (0+255),c
  7755  004D36  0E04               	movlw	4
  7756  004D38  2612               	addwf	??_update_display_shapes,f,c
  7757  004D3A  0E00               	movlw	0
  7758  004D3C  2213               	addwfc	??_update_display_shapes+1,f,c
  7759  004D3E  501B               	movf	update_display_shapes@n_231,w,c
  7760  004D40  6E14               	movwf	(??_update_display_shapes+2)& (0+255),c
  7761  004D42  6A15               	clrf	(??_update_display_shapes+3)& (0+255),c
  7762  004D44  5012               	movf	??_update_display_shapes,w,c
  7763  004D46  5C14               	subwf	??_update_display_shapes+2,w,c
  7764  004D48  5015               	movf	??_update_display_shapes+3,w,c
  7765  004D4A  0A80               	xorlw	128
  7766  004D4C  6E16               	movwf	(??_update_display_shapes+4)& (0+255),c
  7767  004D4E  5013               	movf	??_update_display_shapes+1,w,c
  7768  004D50  0A80               	xorlw	128
  7769  004D52  5816               	subwfb	(??_update_display_shapes+4)& (0+255),w,c
  7770  004D54  A0D8               	btfss	status,0,c
  7771  004D56  D7E4               	goto	l118
  7772  004D58  2A1A               	incf	update_display_shapes@m_230,f,c
  7773  004D5A                     l115:
  7774  004D5A  501F               	movf	update_display_shapes@x,w,c
  7775  004D5C  6E12               	movwf	??_update_display_shapes& (0+255),c
  7776  004D5E  6A13               	clrf	(??_update_display_shapes+1)& (0+255),c
  7777  004D60  0E04               	movlw	4
  7778  004D62  2612               	addwf	??_update_display_shapes,f,c
  7779  004D64  0E00               	movlw	0
  7780  004D66  2213               	addwfc	??_update_display_shapes+1,f,c
  7781  004D68  501A               	movf	update_display_shapes@m_230,w,c
  7782  004D6A  6E14               	movwf	(??_update_display_shapes+2)& (0+255),c
  7783  004D6C  6A15               	clrf	(??_update_display_shapes+3)& (0+255),c
  7784  004D6E  5012               	movf	??_update_display_shapes,w,c
  7785  004D70  5C14               	subwf	??_update_display_shapes+2,w,c
  7786  004D72  5015               	movf	??_update_display_shapes+3,w,c
  7787  004D74  0A80               	xorlw	128
  7788  004D76  6E16               	movwf	(??_update_display_shapes+4)& (0+255),c
  7789  004D78  5013               	movf	??_update_display_shapes+1,w,c
  7790  004D7A  0A80               	xorlw	128
  7791  004D7C  5816               	subwfb	(??_update_display_shapes+4)& (0+255),w,c
  7792  004D7E  A0D8               	btfss	status,0,c
  7793  004D80  D7CC               	goto	l116
  7794  004D82                     u2820:
  7795  004D82  2A1D               	incf	update_display_shapes@j,f,c
  7796  004D84  D6BF               	goto	l3112
  7797  004D86                     u2830:
  7798                           
  7799                           ;main.c: 338: }
  7800                           ;main.c: 339: }
  7801                           ;main.c: 340: }
  7802                           ;main.c: 341: }
  7803                           ;main.c: 342: }
  7804                           ;main.c: 343: i++;
  7805  004D86  2A1C               	incf	update_display_shapes@i,f,c
  7806  004D88                     l66:
  7807  004D88  501C               	movf	update_display_shapes@i,w,c
  7808  004D8A  0D09               	mullw	9
  7809  004D8C  0E00               	movlw	low _all_shapes
  7810  004D8E  24F3               	addwf	prodl,w,c
  7811  004D90  6ED9               	movwf	fsr2l,c
  7812  004D92  0E01               	movlw	high _all_shapes
  7813  004D94  20F4               	addwfc	prodh,w,c
  7814  004D96  6EDA               	movwf	fsr2h,c
  7815  004D98  0E63               	movlw	99
  7816  004D9A  18DE               	xorwf	postinc2,w,c
  7817  004D9C  B4D8               	btfsc	status,2,c
  7818  004D9E  0012               	return	
  7819  004DA0  D6AF               	goto	l67
  7820  004DA2                     __end_of_update_display_shapes:
  7821                           	opt stack 0
  7822                           tblptru	equ	0xFF8
  7823                           tblptrh	equ	0xFF7
  7824                           tblptrl	equ	0xFF6
  7825                           tablat	equ	0xFF5
  7826                           prodh	equ	0xFF4
  7827                           prodl	equ	0xFF3
  7828                           intcon	equ	0xFF2
  7829                           postinc0	equ	0xFEE
  7830                           wreg	equ	0xFE8
  7831                           indf1	equ	0xFE7
  7832                           postinc1	equ	0xFE6
  7833                           postdec1	equ	0xFE5
  7834                           fsr1h	equ	0xFE2
  7835                           fsr1l	equ	0xFE1
  7836                           indf2	equ	0xFDF
  7837                           postinc2	equ	0xFDE
  7838                           fsr2h	equ	0xFDA
  7839                           fsr2l	equ	0xFD9
  7840                           status	equ	0xFD8
  7841                           
  7842 ;; *************** function _gravity *****************
  7843 ;; Defined at:
  7844 ;;		line 363 in file "main.c"
  7845 ;; Parameters:    Size  Location     Type
  7846 ;;  index           1    wreg     unsigned char 
  7847 ;; Auto vars:     Size  Location     Type
  7848 ;;  index           1   25[COMRAM] unsigned char 
  7849 ;;  j               1   21[COMRAM] unsigned char 
  7850 ;;  j               1   20[COMRAM] unsigned char 
  7851 ;;  j               1   23[COMRAM] unsigned char 
  7852 ;;  j               1   22[COMRAM] unsigned char 
  7853 ;;  i               1   24[COMRAM] unsigned char 
  7854 ;;  ok              1   19[COMRAM] unsigned char 
  7855 ;;  b               1   18[COMRAM] unsigned char 
  7856 ;;  a               1   17[COMRAM] unsigned char 
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  1    wreg      unsigned char 
  7859 ;; Registers used:
  7860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7866 ;;      Params:         0       0       0       0       0       0       0       0       0
  7867 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7868 ;;      Temps:         10       0       0       0       0       0       0       0       0
  7869 ;;      Totals:        19       0       0       0       0       0       0       0       0
  7870 ;;Total ram usage:       19 bytes
  7871 ;; Hardware stack levels used:    1
  7872 ;; Hardware stack levels required when called:    1
  7873 ;; This function calls:
  7874 ;;		_dontBelong2Shape
  7875 ;; This function is called by:
  7876 ;;		_main
  7877 ;; This function uses a non-reentrant model
  7878 ;;
  7879                           
  7880                           	psect	text11
  7881  0059AE                     __ptext11:
  7882                           	opt stack 0
  7883  0059AE                     _gravity:
  7884                           	opt stack 29
  7885                           
  7886                           ;incstack = 0
  7887                           ;gravity@index stored from wreg
  7888  0059AE  6E1A               	movwf	gravity@index,c
  7889                           
  7890                           ;main.c: 368: uint8_t a,b,ok;
  7891                           ;main.c: 369: for (uint8_t i = 0; i < 4; ++i){
  7892  0059B0  0E00               	movlw	0
  7893  0059B2  6E19               	movwf	gravity@i,c
  7894  0059B4                     l3752:
  7895  0059B4  0E03               	movlw	3
  7896  0059B6  6419               	cpfsgt	gravity@i,c
  7897  0059B8  D001               	goto	l131
  7898  0059BA  D0E6               	goto	u3990
  7899  0059BC                     l131:
  7900                           
  7901                           ;main.c: 370: for (uint8_t j = i + 1; j < 4; ++j){
  7902  0059BC  2819               	incf	gravity@i,w,c
  7903  0059BE  6E16               	movwf	gravity@j,c
  7904  0059C0  0E03               	movlw	3
  7905  0059C2  6416               	cpfsgt	gravity@j,c
  7906  0059C4  D001               	goto	l133
  7907  0059C6  D0DE               	goto	u3980
  7908  0059C8                     l133:
  7909                           
  7910                           ;main.c: 371: if (all_shapes[index].index[i].y < all_shapes[index].index[j].y){
  7911  0059C8  501A               	movf	gravity@index,w,c
  7912  0059CA  0D09               	mullw	9
  7913  0059CC  0E00               	movlw	low _all_shapes
  7914  0059CE  6E08               	movwf	??_gravity& (0+255),c
  7915  0059D0  0E01               	movlw	high _all_shapes
  7916  0059D2  6E09               	movwf	(??_gravity+1)& (0+255),c
  7917  0059D4  50F3               	movf	prodl,w,c
  7918  0059D6  2608               	addwf	??_gravity,f,c
  7919  0059D8  50F4               	movf	prodh,w,c
  7920  0059DA  2209               	addwfc	??_gravity+1,f,c
  7921  0059DC  5016               	movf	gravity@j,w,c
  7922  0059DE  0D02               	mullw	2
  7923  0059E0  50F3               	movf	prodl,w,c
  7924  0059E2  2608               	addwf	??_gravity,f,c
  7925  0059E4  50F4               	movf	prodh,w,c
  7926  0059E6  2209               	addwfc	??_gravity+1,f,c
  7927  0059E8  0E01               	movlw	1
  7928  0059EA  2408               	addwf	??_gravity,w,c
  7929  0059EC  6ED9               	movwf	fsr2l,c
  7930  0059EE  0E00               	movlw	0
  7931  0059F0  2009               	addwfc	??_gravity+1,w,c
  7932  0059F2  6EDA               	movwf	fsr2h,c
  7933  0059F4  501A               	movf	gravity@index,w,c
  7934  0059F6  0D09               	mullw	9
  7935  0059F8  0E00               	movlw	low _all_shapes
  7936  0059FA  6E0B               	movwf	(??_gravity+3)& (0+255),c
  7937  0059FC  0E01               	movlw	high _all_shapes
  7938  0059FE  6E0C               	movwf	(??_gravity+4)& (0+255),c
  7939  005A00  50F3               	movf	prodl,w,c
  7940  005A02  260B               	addwf	??_gravity+3,f,c
  7941  005A04  50F4               	movf	prodh,w,c
  7942  005A06  220C               	addwfc	??_gravity+4,f,c
  7943  005A08  5019               	movf	gravity@i,w,c
  7944  005A0A  0D02               	mullw	2
  7945  005A0C  50F3               	movf	prodl,w,c
  7946  005A0E  260B               	addwf	??_gravity+3,f,c
  7947  005A10  50F4               	movf	prodh,w,c
  7948  005A12  220C               	addwfc	??_gravity+4,f,c
  7949  005A14  0E01               	movlw	1
  7950  005A16  240B               	addwf	??_gravity+3,w,c
  7951  005A18  6EE1               	movwf	fsr1l,c
  7952  005A1A  0E00               	movlw	0
  7953  005A1C  200C               	addwfc	??_gravity+4,w,c
  7954  005A1E  6EE2               	movwf	fsr1h,c
  7955  005A20  50DE               	movf	postinc2,w,c
  7956  005A22  5CE6               	subwf	postinc1,w,c
  7957  005A24  B0D8               	btfsc	status,0,c
  7958  005A26  D0AC               	goto	l135
  7959                           
  7960                           ;main.c: 372: a = all_shapes[index].index[i].y;
  7961  005A28  501A               	movf	gravity@index,w,c
  7962  005A2A  0D09               	mullw	9
  7963  005A2C  0E00               	movlw	low _all_shapes
  7964  005A2E  6E08               	movwf	??_gravity& (0+255),c
  7965  005A30  0E01               	movlw	high _all_shapes
  7966  005A32  6E09               	movwf	(??_gravity+1)& (0+255),c
  7967  005A34  50F3               	movf	prodl,w,c
  7968  005A36  2608               	addwf	??_gravity,f,c
  7969  005A38  50F4               	movf	prodh,w,c
  7970  005A3A  2209               	addwfc	??_gravity+1,f,c
  7971  005A3C  5019               	movf	gravity@i,w,c
  7972  005A3E  0D02               	mullw	2
  7973  005A40  50F3               	movf	prodl,w,c
  7974  005A42  2608               	addwf	??_gravity,f,c
  7975  005A44  50F4               	movf	prodh,w,c
  7976  005A46  2209               	addwfc	??_gravity+1,f,c
  7977  005A48  0E01               	movlw	1
  7978  005A4A  2408               	addwf	??_gravity,w,c
  7979  005A4C  6ED9               	movwf	fsr2l,c
  7980  005A4E  0E00               	movlw	0
  7981  005A50  2009               	addwfc	??_gravity+1,w,c
  7982  005A52  6EDA               	movwf	fsr2h,c
  7983  005A54  50DF               	movf	indf2,w,c
  7984  005A56  6E12               	movwf	gravity@a,c
  7985                           
  7986                           ;main.c: 373: b = all_shapes[index].index[i].x;
  7987  005A58  501A               	movf	gravity@index,w,c
  7988  005A5A  0D09               	mullw	9
  7989  005A5C  0E00               	movlw	low _all_shapes
  7990  005A5E  6E08               	movwf	??_gravity& (0+255),c
  7991  005A60  0E01               	movlw	high _all_shapes
  7992  005A62  6E09               	movwf	(??_gravity+1)& (0+255),c
  7993  005A64  50F3               	movf	prodl,w,c
  7994  005A66  2608               	addwf	??_gravity,f,c
  7995  005A68  50F4               	movf	prodh,w,c
  7996  005A6A  2209               	addwfc	??_gravity+1,f,c
  7997  005A6C  5019               	movf	gravity@i,w,c
  7998  005A6E  0D02               	mullw	2
  7999  005A70  50F3               	movf	prodl,w,c
  8000  005A72  2408               	addwf	??_gravity,w,c
  8001  005A74  6ED9               	movwf	fsr2l,c
  8002  005A76  50F4               	movf	prodh,w,c
  8003  005A78  2009               	addwfc	??_gravity+1,w,c
  8004  005A7A  6EDA               	movwf	fsr2h,c
  8005  005A7C  50DF               	movf	indf2,w,c
  8006  005A7E  6E13               	movwf	gravity@b,c
  8007                           
  8008                           ;main.c: 374: all_shapes[index].index[i].y = all_shapes[index].index[j].y;
  8009  005A80  501A               	movf	gravity@index,w,c
  8010  005A82  0D09               	mullw	9
  8011  005A84  0E00               	movlw	low _all_shapes
  8012  005A86  6E08               	movwf	??_gravity& (0+255),c
  8013  005A88  0E01               	movlw	high _all_shapes
  8014  005A8A  6E09               	movwf	(??_gravity+1)& (0+255),c
  8015  005A8C  50F3               	movf	prodl,w,c
  8016  005A8E  2608               	addwf	??_gravity,f,c
  8017  005A90  50F4               	movf	prodh,w,c
  8018  005A92  2209               	addwfc	??_gravity+1,f,c
  8019  005A94  5016               	movf	gravity@j,w,c
  8020  005A96  0D02               	mullw	2
  8021  005A98  50F3               	movf	prodl,w,c
  8022  005A9A  2608               	addwf	??_gravity,f,c
  8023  005A9C  50F4               	movf	prodh,w,c
  8024  005A9E  2209               	addwfc	??_gravity+1,f,c
  8025  005AA0  0E01               	movlw	1
  8026  005AA2  2408               	addwf	??_gravity,w,c
  8027  005AA4  6ED9               	movwf	fsr2l,c
  8028  005AA6  0E00               	movlw	0
  8029  005AA8  2009               	addwfc	??_gravity+1,w,c
  8030  005AAA  6EDA               	movwf	fsr2h,c
  8031  005AAC  501A               	movf	gravity@index,w,c
  8032  005AAE  0D09               	mullw	9
  8033  005AB0  0E00               	movlw	low _all_shapes
  8034  005AB2  6E0A               	movwf	(??_gravity+2)& (0+255),c
  8035  005AB4  0E01               	movlw	high _all_shapes
  8036  005AB6  6E0B               	movwf	(??_gravity+3)& (0+255),c
  8037  005AB8  50F3               	movf	prodl,w,c
  8038  005ABA  260A               	addwf	??_gravity+2,f,c
  8039  005ABC  50F4               	movf	prodh,w,c
  8040  005ABE  220B               	addwfc	??_gravity+3,f,c
  8041  005AC0  5019               	movf	gravity@i,w,c
  8042  005AC2  0D02               	mullw	2
  8043  005AC4  50F3               	movf	prodl,w,c
  8044  005AC6  260A               	addwf	??_gravity+2,f,c
  8045  005AC8  50F4               	movf	prodh,w,c
  8046  005ACA  220B               	addwfc	??_gravity+3,f,c
  8047  005ACC  0E01               	movlw	1
  8048  005ACE  240A               	addwf	??_gravity+2,w,c
  8049  005AD0  6EE1               	movwf	fsr1l,c
  8050  005AD2  0E00               	movlw	0
  8051  005AD4  200B               	addwfc	??_gravity+3,w,c
  8052  005AD6  6EE2               	movwf	fsr1h,c
  8053  005AD8  CFDF FFE7          	movff	indf2,indf1
  8054                           
  8055                           ;main.c: 375: all_shapes[index].index[i].x = all_shapes[index].index[j].x;
  8056  005ADC  501A               	movf	gravity@index,w,c
  8057  005ADE  0D09               	mullw	9
  8058  005AE0  0E00               	movlw	low _all_shapes
  8059  005AE2  6E08               	movwf	??_gravity& (0+255),c
  8060  005AE4  0E01               	movlw	high _all_shapes
  8061  005AE6  6E09               	movwf	(??_gravity+1)& (0+255),c
  8062  005AE8  50F3               	movf	prodl,w,c
  8063  005AEA  2608               	addwf	??_gravity,f,c
  8064  005AEC  50F4               	movf	prodh,w,c
  8065  005AEE  2209               	addwfc	??_gravity+1,f,c
  8066  005AF0  5016               	movf	gravity@j,w,c
  8067  005AF2  0D02               	mullw	2
  8068  005AF4  50F3               	movf	prodl,w,c
  8069  005AF6  2408               	addwf	??_gravity,w,c
  8070  005AF8  6ED9               	movwf	fsr2l,c
  8071  005AFA  50F4               	movf	prodh,w,c
  8072  005AFC  2009               	addwfc	??_gravity+1,w,c
  8073  005AFE  6EDA               	movwf	fsr2h,c
  8074  005B00  501A               	movf	gravity@index,w,c
  8075  005B02  0D09               	mullw	9
  8076  005B04  0E00               	movlw	low _all_shapes
  8077  005B06  6E0A               	movwf	(??_gravity+2)& (0+255),c
  8078  005B08  0E01               	movlw	high _all_shapes
  8079  005B0A  6E0B               	movwf	(??_gravity+3)& (0+255),c
  8080  005B0C  50F3               	movf	prodl,w,c
  8081  005B0E  260A               	addwf	??_gravity+2,f,c
  8082  005B10  50F4               	movf	prodh,w,c
  8083  005B12  220B               	addwfc	??_gravity+3,f,c
  8084  005B14  5019               	movf	gravity@i,w,c
  8085  005B16  0D02               	mullw	2
  8086  005B18  50F3               	movf	prodl,w,c
  8087  005B1A  240A               	addwf	??_gravity+2,w,c
  8088  005B1C  6EE1               	movwf	fsr1l,c
  8089  005B1E  50F4               	movf	prodh,w,c
  8090  005B20  200B               	addwfc	??_gravity+3,w,c
  8091  005B22  6EE2               	movwf	fsr1h,c
  8092  005B24  CFDF FFE7          	movff	indf2,indf1
  8093                           
  8094                           ;main.c: 376: all_shapes[index].index[j].y = a;
  8095  005B28  501A               	movf	gravity@index,w,c
  8096  005B2A  0D09               	mullw	9
  8097  005B2C  0E00               	movlw	low _all_shapes
  8098  005B2E  6E08               	movwf	??_gravity& (0+255),c
  8099  005B30  0E01               	movlw	high _all_shapes
  8100  005B32  6E09               	movwf	(??_gravity+1)& (0+255),c
  8101  005B34  50F3               	movf	prodl,w,c
  8102  005B36  2608               	addwf	??_gravity,f,c
  8103  005B38  50F4               	movf	prodh,w,c
  8104  005B3A  2209               	addwfc	??_gravity+1,f,c
  8105  005B3C  5016               	movf	gravity@j,w,c
  8106  005B3E  0D02               	mullw	2
  8107  005B40  50F3               	movf	prodl,w,c
  8108  005B42  2608               	addwf	??_gravity,f,c
  8109  005B44  50F4               	movf	prodh,w,c
  8110  005B46  2209               	addwfc	??_gravity+1,f,c
  8111  005B48  0E01               	movlw	1
  8112  005B4A  2408               	addwf	??_gravity,w,c
  8113  005B4C  6ED9               	movwf	fsr2l,c
  8114  005B4E  0E00               	movlw	0
  8115  005B50  2009               	addwfc	??_gravity+1,w,c
  8116  005B52  6EDA               	movwf	fsr2h,c
  8117  005B54  C012  FFDF         	movff	gravity@a,indf2
  8118                           
  8119                           ;main.c: 377: all_shapes[index].index[j].x = b;
  8120  005B58  501A               	movf	gravity@index,w,c
  8121  005B5A  0D09               	mullw	9
  8122  005B5C  0E00               	movlw	low _all_shapes
  8123  005B5E  6E08               	movwf	??_gravity& (0+255),c
  8124  005B60  0E01               	movlw	high _all_shapes
  8125  005B62  6E09               	movwf	(??_gravity+1)& (0+255),c
  8126  005B64  50F3               	movf	prodl,w,c
  8127  005B66  2608               	addwf	??_gravity,f,c
  8128  005B68  50F4               	movf	prodh,w,c
  8129  005B6A  2209               	addwfc	??_gravity+1,f,c
  8130  005B6C  5016               	movf	gravity@j,w,c
  8131  005B6E  0D02               	mullw	2
  8132  005B70  50F3               	movf	prodl,w,c
  8133  005B72  2408               	addwf	??_gravity,w,c
  8134  005B74  6ED9               	movwf	fsr2l,c
  8135  005B76  50F4               	movf	prodh,w,c
  8136  005B78  2009               	addwfc	??_gravity+1,w,c
  8137  005B7A  6EDA               	movwf	fsr2h,c
  8138  005B7C  C013  FFDF         	movff	gravity@b,indf2
  8139  005B80                     l135:
  8140  005B80  2A16               	incf	gravity@j,f,c
  8141  005B82  D71E               	goto	L31
  8142  005B84                     u3980:
  8143  005B84  2A19               	incf	gravity@i,f,c
  8144  005B86  D716               	goto	l3752
  8145  005B88                     u3990:
  8146                           
  8147                           ;main.c: 378: }
  8148                           ;main.c: 379: }
  8149                           ;main.c: 380: }
  8150                           ;main.c: 383: for(uint8_t j=0;j<4;j++){
  8151  005B88  0E00               	movlw	0
  8152  005B8A  6E17               	movwf	gravity@j_244,c
  8153  005B8C                     l3778:
  8154  005B8C  0E03               	movlw	3
  8155  005B8E  6417               	cpfsgt	gravity@j_244,c
  8156  005B90  D001               	goto	l136
  8157  005B92  D09A               	goto	u4040
  8158  005B94                     l136:
  8159                           
  8160                           ;main.c: 387: if(all_shapes[index].index[j].y <11 && (array_data[all_shapes[index].index
      +                          [j].x][(all_shapes[index].index[j].y)+1]!='1' || dontBelong2Shape(index,all_shapes[index
      +                          ].index[j].x,(all_shapes[index].index[j].y)+1))){
  8161  005B94  501A               	movf	gravity@index,w,c
  8162  005B96  0D09               	mullw	9
  8163  005B98  0E00               	movlw	low _all_shapes
  8164  005B9A  6E08               	movwf	??_gravity& (0+255),c
  8165  005B9C  0E01               	movlw	high _all_shapes
  8166  005B9E  6E09               	movwf	(??_gravity+1)& (0+255),c
  8167  005BA0  50F3               	movf	prodl,w,c
  8168  005BA2  2608               	addwf	??_gravity,f,c
  8169  005BA4  50F4               	movf	prodh,w,c
  8170  005BA6  2209               	addwfc	??_gravity+1,f,c
  8171  005BA8  5017               	movf	gravity@j_244,w,c
  8172  005BAA  0D02               	mullw	2
  8173  005BAC  50F3               	movf	prodl,w,c
  8174  005BAE  2608               	addwf	??_gravity,f,c
  8175  005BB0  50F4               	movf	prodh,w,c
  8176  005BB2  2209               	addwfc	??_gravity+1,f,c
  8177  005BB4  0E01               	movlw	1
  8178  005BB6  2408               	addwf	??_gravity,w,c
  8179  005BB8  6ED9               	movwf	fsr2l,c
  8180  005BBA  0E00               	movlw	0
  8181  005BBC  2009               	addwfc	??_gravity+1,w,c
  8182  005BBE  6EDA               	movwf	fsr2h,c
  8183  005BC0  0E0B               	movlw	11
  8184  005BC2  60DF               	cpfslt	indf2,c
  8185  005BC4  D07C               	goto	l139
  8186  005BC6  501A               	movf	gravity@index,w,c
  8187  005BC8  0D09               	mullw	9
  8188  005BCA  0E00               	movlw	low _all_shapes
  8189  005BCC  6E08               	movwf	??_gravity& (0+255),c
  8190  005BCE  0E01               	movlw	high _all_shapes
  8191  005BD0  6E09               	movwf	(??_gravity+1)& (0+255),c
  8192  005BD2  50F3               	movf	prodl,w,c
  8193  005BD4  2608               	addwf	??_gravity,f,c
  8194  005BD6  50F4               	movf	prodh,w,c
  8195  005BD8  2209               	addwfc	??_gravity+1,f,c
  8196  005BDA  5017               	movf	gravity@j_244,w,c
  8197  005BDC  0D02               	mullw	2
  8198  005BDE  50F3               	movf	prodl,w,c
  8199  005BE0  2608               	addwf	??_gravity,f,c
  8200  005BE2  50F4               	movf	prodh,w,c
  8201  005BE4  2209               	addwfc	??_gravity+1,f,c
  8202  005BE6  0E01               	movlw	1
  8203  005BE8  2408               	addwf	??_gravity,w,c
  8204  005BEA  6ED9               	movwf	fsr2l,c
  8205  005BEC  0E00               	movlw	0
  8206  005BEE  2009               	addwfc	??_gravity+1,w,c
  8207  005BF0  6EDA               	movwf	fsr2h,c
  8208  005BF2  50DF               	movf	indf2,w,c
  8209  005BF4  6E0A               	movwf	(??_gravity+2)& (0+255),c
  8210  005BF6  6A0B               	clrf	(??_gravity+3)& (0+255),c
  8211  005BF8  0E01               	movlw	1
  8212  005BFA  260A               	addwf	??_gravity+2,f,c
  8213  005BFC  0E00               	movlw	0
  8214  005BFE  220B               	addwfc	??_gravity+3,f,c
  8215  005C00  0E00               	movlw	low _array_data
  8216  005C02  6E0C               	movwf	(??_gravity+4)& (0+255),c
  8217  005C04  0E02               	movlw	high _array_data
  8218  005C06  6E0D               	movwf	(??_gravity+5)& (0+255),c
  8219  005C08  500A               	movf	??_gravity+2,w,c
  8220  005C0A  260C               	addwf	??_gravity+4,f,c
  8221  005C0C  500B               	movf	??_gravity+3,w,c
  8222  005C0E  220D               	addwfc	??_gravity+5,f,c
  8223  005C10  501A               	movf	gravity@index,w,c
  8224  005C12  0D09               	mullw	9
  8225  005C14  0E00               	movlw	low _all_shapes
  8226  005C16  6E0E               	movwf	(??_gravity+6)& (0+255),c
  8227  005C18  0E01               	movlw	high _all_shapes
  8228  005C1A  6E0F               	movwf	(??_gravity+7)& (0+255),c
  8229  005C1C  50F3               	movf	prodl,w,c
  8230  005C1E  260E               	addwf	??_gravity+6,f,c
  8231  005C20  50F4               	movf	prodh,w,c
  8232  005C22  220F               	addwfc	??_gravity+7,f,c
  8233  005C24  5017               	movf	gravity@j_244,w,c
  8234  005C26  0D02               	mullw	2
  8235  005C28  50F3               	movf	prodl,w,c
  8236  005C2A  240E               	addwf	??_gravity+6,w,c
  8237  005C2C  6ED9               	movwf	fsr2l,c
  8238  005C2E  50F4               	movf	prodh,w,c
  8239  005C30  200F               	addwfc	??_gravity+7,w,c
  8240  005C32  6EDA               	movwf	fsr2h,c
  8241  005C34  50DF               	movf	indf2,w,c
  8242  005C36  6E10               	movwf	(??_gravity+8)& (0+255),c
  8243  005C38  5010               	movf	??_gravity+8,w,c
  8244  005C3A  0D0C               	mullw	12
  8245  005C3C  50F3               	movf	prodl,w,c
  8246  005C3E  240C               	addwf	??_gravity+4,w,c
  8247  005C40  6ED9               	movwf	fsr2l,c
  8248  005C42  50F4               	movf	prodh,w,c
  8249  005C44  200D               	addwfc	??_gravity+5,w,c
  8250  005C46  6EDA               	movwf	fsr2h,c
  8251  005C48  0E31               	movlw	49
  8252  005C4A  18DE               	xorwf	postinc2,w,c
  8253  005C4C  A4D8               	btfss	status,2,c
  8254  005C4E  D034               	goto	u4030
  8255  005C50  501A               	movf	gravity@index,w,c
  8256  005C52  0D09               	mullw	9
  8257  005C54  0E00               	movlw	low _all_shapes
  8258  005C56  6E08               	movwf	??_gravity& (0+255),c
  8259  005C58  0E01               	movlw	high _all_shapes
  8260  005C5A  6E09               	movwf	(??_gravity+1)& (0+255),c
  8261  005C5C  50F3               	movf	prodl,w,c
  8262  005C5E  2608               	addwf	??_gravity,f,c
  8263  005C60  50F4               	movf	prodh,w,c
  8264  005C62  2209               	addwfc	??_gravity+1,f,c
  8265  005C64  5017               	movf	gravity@j_244,w,c
  8266  005C66  0D02               	mullw	2
  8267  005C68  50F3               	movf	prodl,w,c
  8268  005C6A  2408               	addwf	??_gravity,w,c
  8269  005C6C  6ED9               	movwf	fsr2l,c
  8270  005C6E  50F4               	movf	prodh,w,c
  8271  005C70  2009               	addwfc	??_gravity+1,w,c
  8272  005C72  6EDA               	movwf	fsr2h,c
  8273  005C74  50DF               	movf	indf2,w,c
  8274  005C76  6E01               	movwf	dontBelong2Shape@x,c
  8275  005C78  501A               	movf	gravity@index,w,c
  8276  005C7A  0D09               	mullw	9
  8277  005C7C  0E00               	movlw	low _all_shapes
  8278  005C7E  6E0A               	movwf	(??_gravity+2)& (0+255),c
  8279  005C80  0E01               	movlw	high _all_shapes
  8280  005C82  6E0B               	movwf	(??_gravity+3)& (0+255),c
  8281  005C84  50F3               	movf	prodl,w,c
  8282  005C86  260A               	addwf	??_gravity+2,f,c
  8283  005C88  50F4               	movf	prodh,w,c
  8284  005C8A  220B               	addwfc	??_gravity+3,f,c
  8285  005C8C  5017               	movf	gravity@j_244,w,c
  8286  005C8E  0D02               	mullw	2
  8287  005C90  50F3               	movf	prodl,w,c
  8288  005C92  260A               	addwf	??_gravity+2,f,c
  8289  005C94  50F4               	movf	prodh,w,c
  8290  005C96  220B               	addwfc	??_gravity+3,f,c
  8291  005C98  0E01               	movlw	1
  8292  005C9A  240A               	addwf	??_gravity+2,w,c
  8293  005C9C  6ED9               	movwf	fsr2l,c
  8294  005C9E  0E00               	movlw	0
  8295  005CA0  200B               	addwfc	??_gravity+3,w,c
  8296  005CA2  6EDA               	movwf	fsr2h,c
  8297  005CA4  50DF               	movf	indf2,w,c
  8298  005CA6  6E0C               	movwf	(??_gravity+4)& (0+255),c
  8299  005CA8  280C               	incf	??_gravity+4,w,c
  8300  005CAA  6E02               	movwf	dontBelong2Shape@y,c
  8301  005CAC  501A               	movf	gravity@index,w,c
  8302  005CAE  ECDA  F01F         	call	_dontBelong2Shape
  8303  005CB2  0900               	iorlw	0
  8304  005CB4  B4D8               	btfsc	status,2,c
  8305  005CB6  D003               	goto	l139
  8306  005CB8                     u4030:
  8307                           
  8308                           ;main.c: 388: ok=1;
  8309  005CB8  0E01               	movlw	1
  8310  005CBA  6E14               	movwf	gravity@ok,c
  8311                           
  8312                           ;main.c: 389: }
  8313  005CBC  D003               	goto	l142
  8314  005CBE                     l139:
  8315                           
  8316                           ;main.c: 390: else {
  8317                           ;main.c: 391: ok=0;
  8318  005CBE  0E00               	movlw	0
  8319  005CC0  6E14               	movwf	gravity@ok,c
  8320                           
  8321                           ;main.c: 392: break;
  8322  005CC2  D002               	goto	u4040
  8323  005CC4                     l142:
  8324  005CC4  2A17               	incf	gravity@j_244,f,c
  8325  005CC6  D762               	goto	l3778
  8326  005CC8                     u4040:
  8327                           
  8328                           ;main.c: 393: }
  8329                           ;main.c: 394: }
  8330                           ;main.c: 396: }
  8331                           ;main.c: 397: if(ok==1){
  8332  005CC8  0414               	decf	gravity@ok,w,c
  8333  005CCA  A4D8               	btfss	status,2,c
  8334  005CCC  D0A1               	goto	l143
  8335                           
  8336                           ;main.c: 398: for(uint8_t j=0;j<4;j++){
  8337  005CCE  0E00               	movlw	0
  8338  005CD0  6E18               	movwf	gravity@j_246,c
  8339  005CD2                     l3800:
  8340  005CD2  0E03               	movlw	3
  8341  005CD4  6418               	cpfsgt	gravity@j_246,c
  8342  005CD6  D001               	goto	l144
  8343  005CD8  D099               	goto	u4070
  8344  005CDA                     l144:
  8345                           
  8346                           ;main.c: 400: array_data[all_shapes[index].index[j].x][all_shapes[index].index[j].y]='0'
      +                          ;
  8347  005CDA  501A               	movf	gravity@index,w,c
  8348  005CDC  0D09               	mullw	9
  8349  005CDE  0E00               	movlw	low _all_shapes
  8350  005CE0  6E08               	movwf	??_gravity& (0+255),c
  8351  005CE2  0E01               	movlw	high _all_shapes
  8352  005CE4  6E09               	movwf	(??_gravity+1)& (0+255),c
  8353  005CE6  50F3               	movf	prodl,w,c
  8354  005CE8  2608               	addwf	??_gravity,f,c
  8355  005CEA  50F4               	movf	prodh,w,c
  8356  005CEC  2209               	addwfc	??_gravity+1,f,c
  8357  005CEE  5018               	movf	gravity@j_246,w,c
  8358  005CF0  0D02               	mullw	2
  8359  005CF2  50F3               	movf	prodl,w,c
  8360  005CF4  2408               	addwf	??_gravity,w,c
  8361  005CF6  6ED9               	movwf	fsr2l,c
  8362  005CF8  50F4               	movf	prodh,w,c
  8363  005CFA  2009               	addwfc	??_gravity+1,w,c
  8364  005CFC  6EDA               	movwf	fsr2h,c
  8365  005CFE  50DF               	movf	indf2,w,c
  8366  005D00  6E0A               	movwf	(??_gravity+2)& (0+255),c
  8367  005D02  500A               	movf	??_gravity+2,w,c
  8368  005D04  0D0C               	mullw	12
  8369  005D06  0E00               	movlw	low _array_data
  8370  005D08  6E0B               	movwf	(??_gravity+3)& (0+255),c
  8371  005D0A  0E02               	movlw	high _array_data
  8372  005D0C  6E0C               	movwf	(??_gravity+4)& (0+255),c
  8373  005D0E  50F3               	movf	prodl,w,c
  8374  005D10  260B               	addwf	??_gravity+3,f,c
  8375  005D12  50F4               	movf	prodh,w,c
  8376  005D14  220C               	addwfc	??_gravity+4,f,c
  8377  005D16  501A               	movf	gravity@index,w,c
  8378  005D18  0D09               	mullw	9
  8379  005D1A  0E00               	movlw	low _all_shapes
  8380  005D1C  6E0D               	movwf	(??_gravity+5)& (0+255),c
  8381  005D1E  0E01               	movlw	high _all_shapes
  8382  005D20  6E0E               	movwf	(??_gravity+6)& (0+255),c
  8383  005D22  50F3               	movf	prodl,w,c
  8384  005D24  260D               	addwf	??_gravity+5,f,c
  8385  005D26  50F4               	movf	prodh,w,c
  8386  005D28  220E               	addwfc	??_gravity+6,f,c
  8387  005D2A  5018               	movf	gravity@j_246,w,c
  8388  005D2C  0D02               	mullw	2
  8389  005D2E  50F3               	movf	prodl,w,c
  8390  005D30  260D               	addwf	??_gravity+5,f,c
  8391  005D32  50F4               	movf	prodh,w,c
  8392  005D34  220E               	addwfc	??_gravity+6,f,c
  8393  005D36  0E01               	movlw	1
  8394  005D38  240D               	addwf	??_gravity+5,w,c
  8395  005D3A  6ED9               	movwf	fsr2l,c
  8396  005D3C  0E00               	movlw	0
  8397  005D3E  200E               	addwfc	??_gravity+6,w,c
  8398  005D40  6EDA               	movwf	fsr2h,c
  8399  005D42  50DF               	movf	indf2,w,c
  8400  005D44  6E0F               	movwf	(??_gravity+7)& (0+255),c
  8401  005D46  500F               	movf	??_gravity+7,w,c
  8402  005D48  0D01               	mullw	1
  8403  005D4A  50F3               	movf	prodl,w,c
  8404  005D4C  240B               	addwf	??_gravity+3,w,c
  8405  005D4E  6ED9               	movwf	fsr2l,c
  8406  005D50  50F4               	movf	prodh,w,c
  8407  005D52  200C               	addwfc	??_gravity+4,w,c
  8408  005D54  6EDA               	movwf	fsr2h,c
  8409  005D56  0E30               	movlw	48
  8410  005D58  6EDF               	movwf	indf2,c
  8411                           
  8412                           ;main.c: 401: all_shapes[index].index[j].y +=1;
  8413  005D5A  501A               	movf	gravity@index,w,c
  8414  005D5C  0D09               	mullw	9
  8415  005D5E  0E00               	movlw	low _all_shapes
  8416  005D60  6E08               	movwf	??_gravity& (0+255),c
  8417  005D62  0E01               	movlw	high _all_shapes
  8418  005D64  6E09               	movwf	(??_gravity+1)& (0+255),c
  8419  005D66  50F3               	movf	prodl,w,c
  8420  005D68  2608               	addwf	??_gravity,f,c
  8421  005D6A  50F4               	movf	prodh,w,c
  8422  005D6C  2209               	addwfc	??_gravity+1,f,c
  8423  005D6E  5018               	movf	gravity@j_246,w,c
  8424  005D70  0D02               	mullw	2
  8425  005D72  50F3               	movf	prodl,w,c
  8426  005D74  2608               	addwf	??_gravity,f,c
  8427  005D76  50F4               	movf	prodh,w,c
  8428  005D78  2209               	addwfc	??_gravity+1,f,c
  8429  005D7A  0E01               	movlw	1
  8430  005D7C  2408               	addwf	??_gravity,w,c
  8431  005D7E  6ED9               	movwf	fsr2l,c
  8432  005D80  0E00               	movlw	0
  8433  005D82  2009               	addwfc	??_gravity+1,w,c
  8434  005D84  6EDA               	movwf	fsr2h,c
  8435  005D86  2ADF               	incf	indf2,f,c
  8436                           
  8437                           ;main.c: 402: array_data[all_shapes[index].index[j].x][all_shapes[index].index[j].y]='1'
      +                          ;
  8438  005D88  501A               	movf	gravity@index,w,c
  8439  005D8A  0D09               	mullw	9
  8440  005D8C  0E00               	movlw	low _all_shapes
  8441  005D8E  6E08               	movwf	??_gravity& (0+255),c
  8442  005D90  0E01               	movlw	high _all_shapes
  8443  005D92  6E09               	movwf	(??_gravity+1)& (0+255),c
  8444  005D94  50F3               	movf	prodl,w,c
  8445  005D96  2608               	addwf	??_gravity,f,c
  8446  005D98  50F4               	movf	prodh,w,c
  8447  005D9A  2209               	addwfc	??_gravity+1,f,c
  8448  005D9C  5018               	movf	gravity@j_246,w,c
  8449  005D9E  0D02               	mullw	2
  8450  005DA0  50F3               	movf	prodl,w,c
  8451  005DA2  2408               	addwf	??_gravity,w,c
  8452  005DA4  6ED9               	movwf	fsr2l,c
  8453  005DA6  50F4               	movf	prodh,w,c
  8454  005DA8  2009               	addwfc	??_gravity+1,w,c
  8455  005DAA  6EDA               	movwf	fsr2h,c
  8456  005DAC  50DF               	movf	indf2,w,c
  8457  005DAE  6E0A               	movwf	(??_gravity+2)& (0+255),c
  8458  005DB0  500A               	movf	??_gravity+2,w,c
  8459  005DB2  0D0C               	mullw	12
  8460  005DB4  0E00               	movlw	low _array_data
  8461  005DB6  6E0B               	movwf	(??_gravity+3)& (0+255),c
  8462  005DB8  0E02               	movlw	high _array_data
  8463  005DBA  6E0C               	movwf	(??_gravity+4)& (0+255),c
  8464  005DBC  50F3               	movf	prodl,w,c
  8465  005DBE  260B               	addwf	??_gravity+3,f,c
  8466  005DC0  50F4               	movf	prodh,w,c
  8467  005DC2  220C               	addwfc	??_gravity+4,f,c
  8468  005DC4  501A               	movf	gravity@index,w,c
  8469  005DC6  0D09               	mullw	9
  8470  005DC8  0E00               	movlw	low _all_shapes
  8471  005DCA  6E0D               	movwf	(??_gravity+5)& (0+255),c
  8472  005DCC  0E01               	movlw	high _all_shapes
  8473  005DCE  6E0E               	movwf	(??_gravity+6)& (0+255),c
  8474  005DD0  50F3               	movf	prodl,w,c
  8475  005DD2  260D               	addwf	??_gravity+5,f,c
  8476  005DD4  50F4               	movf	prodh,w,c
  8477  005DD6  220E               	addwfc	??_gravity+6,f,c
  8478  005DD8  5018               	movf	gravity@j_246,w,c
  8479  005DDA  0D02               	mullw	2
  8480  005DDC  50F3               	movf	prodl,w,c
  8481  005DDE  260D               	addwf	??_gravity+5,f,c
  8482  005DE0  50F4               	movf	prodh,w,c
  8483  005DE2  220E               	addwfc	??_gravity+6,f,c
  8484  005DE4  0E01               	movlw	1
  8485  005DE6  240D               	addwf	??_gravity+5,w,c
  8486  005DE8  6ED9               	movwf	fsr2l,c
  8487  005DEA  0E00               	movlw	0
  8488  005DEC  200E               	addwfc	??_gravity+6,w,c
  8489  005DEE  6EDA               	movwf	fsr2h,c
  8490  005DF0  50DF               	movf	indf2,w,c
  8491  005DF2  6E0F               	movwf	(??_gravity+7)& (0+255),c
  8492  005DF4  500F               	movf	??_gravity+7,w,c
  8493  005DF6  0D01               	mullw	1
  8494  005DF8  50F3               	movf	prodl,w,c
  8495  005DFA  240B               	addwf	??_gravity+3,w,c
  8496  005DFC  6ED9               	movwf	fsr2l,c
  8497  005DFE  50F4               	movf	prodh,w,c
  8498  005E00  200C               	addwfc	??_gravity+4,w,c
  8499  005E02  6EDA               	movwf	fsr2h,c
  8500  005E04  0E31               	movlw	49
  8501  005E06  6EDF               	movwf	indf2,c
  8502  005E08  2A18               	incf	gravity@j_246,f,c
  8503  005E0A  D763               	goto	l3800
  8504  005E0C                     u4070:
  8505                           
  8506                           ;main.c: 403: }
  8507                           ;main.c: 404: }
  8508                           ;main.c: 405: return 0;
  8509  005E0C  0E00               	movlw	0
  8510                           
  8511                           ;main.c: 406: }
  8512  005E0E  0012               	return	
  8513  005E10                     l143:
  8514                           
  8515                           ;main.c: 407: else{
  8516                           ;main.c: 408: for(uint8_t j=0;j<4;j++){
  8517  005E10  0E00               	movlw	0
  8518  005E12  6E15               	movwf	gravity@j_247,c
  8519  005E14                     l3818:
  8520  005E14  0E03               	movlw	3
  8521  005E16  6415               	cpfsgt	gravity@j_247,c
  8522  005E18  D001               	goto	l149
  8523  005E1A  D01D               	goto	u4100
  8524  005E1C                     l149:
  8525                           
  8526                           ;main.c: 409: if(all_shapes[index].index[j].y ==0){
  8527  005E1C  501A               	movf	gravity@index,w,c
  8528  005E1E  0D09               	mullw	9
  8529  005E20  0E00               	movlw	low _all_shapes
  8530  005E22  6E08               	movwf	??_gravity& (0+255),c
  8531  005E24  0E01               	movlw	high _all_shapes
  8532  005E26  6E09               	movwf	(??_gravity+1)& (0+255),c
  8533  005E28  50F3               	movf	prodl,w,c
  8534  005E2A  2608               	addwf	??_gravity,f,c
  8535  005E2C  50F4               	movf	prodh,w,c
  8536  005E2E  2209               	addwfc	??_gravity+1,f,c
  8537  005E30  5015               	movf	gravity@j_247,w,c
  8538  005E32  0D02               	mullw	2
  8539  005E34  50F3               	movf	prodl,w,c
  8540  005E36  2608               	addwf	??_gravity,f,c
  8541  005E38  50F4               	movf	prodh,w,c
  8542  005E3A  2209               	addwfc	??_gravity+1,f,c
  8543  005E3C  0E01               	movlw	1
  8544  005E3E  2408               	addwf	??_gravity,w,c
  8545  005E40  6ED9               	movwf	fsr2l,c
  8546  005E42  0E00               	movlw	0
  8547  005E44  2009               	addwfc	??_gravity+1,w,c
  8548  005E46  6EDA               	movwf	fsr2h,c
  8549  005E48  50DF               	movf	indf2,w,c
  8550  005E4A  A4D8               	btfss	status,2,c
  8551  005E4C  D002               	goto	l151
  8552                           
  8553                           ;main.c: 410: return -1;
  8554  005E4E  0EFF               	movlw	255
  8555  005E50  0012               	return	
  8556  005E52                     l151:
  8557  005E52  2A15               	incf	gravity@j_247,f,c
  8558  005E54  D7DF               	goto	l3818
  8559  005E56                     u4100:
  8560                           
  8561                           ;main.c: 411: }
  8562                           ;main.c: 412: }
  8563                           ;main.c: 413: return 1;
  8564  005E56  0E01               	movlw	1
  8565  005E58  0012               	return	
  8566  005E5A                     __end_of_gravity:
  8567                           	opt stack 0
  8568                           tblptru	equ	0xFF8
  8569                           tblptrh	equ	0xFF7
  8570                           tblptrl	equ	0xFF6
  8571                           tablat	equ	0xFF5
  8572                           prodh	equ	0xFF4
  8573                           prodl	equ	0xFF3
  8574                           intcon	equ	0xFF2
  8575                           postinc0	equ	0xFEE
  8576                           wreg	equ	0xFE8
  8577                           indf1	equ	0xFE7
  8578                           postinc1	equ	0xFE6
  8579                           postdec1	equ	0xFE5
  8580                           fsr1h	equ	0xFE2
  8581                           fsr1l	equ	0xFE1
  8582                           indf2	equ	0xFDF
  8583                           postinc2	equ	0xFDE
  8584                           fsr2h	equ	0xFDA
  8585                           fsr2l	equ	0xFD9
  8586                           status	equ	0xFD8
  8587                           
  8588 ;; *************** function _dontBelong2Shape *****************
  8589 ;; Defined at:
  8590 ;;		line 349 in file "main.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  index           1    wreg     unsigned char 
  8593 ;;  x               1    0[COMRAM] unsigned char 
  8594 ;;  y               1    1[COMRAM] unsigned char 
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;  index           1    5[COMRAM] unsigned char 
  8597 ;;  k               1    6[COMRAM] unsigned char 
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  1    wreg      unsigned char 
  8600 ;; Registers used:
  8601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8602 ;; Tracked objects:
  8603 ;;		On entry : 0/0
  8604 ;;		On exit  : 0/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8607 ;;      Params:         2       0       0       0       0       0       0       0       0
  8608 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8609 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8610 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8611 ;;Total ram usage:        7 bytes
  8612 ;; Hardware stack levels used:    1
  8613 ;; This function calls:
  8614 ;;		Nothing
  8615 ;; This function is called by:
  8616 ;;		_gravity
  8617 ;;		_moveRight
  8618 ;;		_moveLeft
  8619 ;;		_rotate
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623                           	psect	text12
  8624  003FB4                     __ptext12:
  8625                           	opt stack 0
  8626  003FB4                     _dontBelong2Shape:
  8627                           	opt stack 29
  8628                           
  8629                           ;incstack = 0
  8630                           ;dontBelong2Shape@index stored from wreg
  8631  003FB4  6E06               	movwf	dontBelong2Shape@index,c
  8632                           
  8633                           ;main.c: 351: for(uint8_t k=0;k<4;k++){
  8634  003FB6  0E00               	movlw	0
  8635  003FB8  6E07               	movwf	dontBelong2Shape@k,c
  8636  003FBA                     l3370:
  8637  003FBA  0E03               	movlw	3
  8638  003FBC  6407               	cpfsgt	dontBelong2Shape@k,c
  8639  003FBE  D001               	goto	l125
  8640  003FC0  D034               	goto	u3080
  8641  003FC2                     l125:
  8642                           
  8643                           ;main.c: 352: if(all_shapes[index].index[k].x == x && all_shapes[index].index[k].y == y)
      +                          {
  8644  003FC2  5006               	movf	dontBelong2Shape@index,w,c
  8645  003FC4  0D09               	mullw	9
  8646  003FC6  0E00               	movlw	low _all_shapes
  8647  003FC8  6E03               	movwf	??_dontBelong2Shape& (0+255),c
  8648  003FCA  0E01               	movlw	high _all_shapes
  8649  003FCC  6E04               	movwf	(??_dontBelong2Shape+1)& (0+255),c
  8650  003FCE  50F3               	movf	prodl,w,c
  8651  003FD0  2603               	addwf	??_dontBelong2Shape,f,c
  8652  003FD2  50F4               	movf	prodh,w,c
  8653  003FD4  2204               	addwfc	??_dontBelong2Shape+1,f,c
  8654  003FD6  5007               	movf	dontBelong2Shape@k,w,c
  8655  003FD8  0D02               	mullw	2
  8656  003FDA  50F3               	movf	prodl,w,c
  8657  003FDC  2403               	addwf	??_dontBelong2Shape,w,c
  8658  003FDE  6ED9               	movwf	fsr2l,c
  8659  003FE0  50F4               	movf	prodh,w,c
  8660  003FE2  2004               	addwfc	??_dontBelong2Shape+1,w,c
  8661  003FE4  6EDA               	movwf	fsr2h,c
  8662  003FE6  5001               	movf	dontBelong2Shape@x,w,c
  8663  003FE8  18DE               	xorwf	postinc2,w,c
  8664  003FEA  A4D8               	btfss	status,2,c
  8665  003FEC  D01C               	goto	l127
  8666  003FEE  5006               	movf	dontBelong2Shape@index,w,c
  8667  003FF0  0D09               	mullw	9
  8668  003FF2  0E00               	movlw	low _all_shapes
  8669  003FF4  6E03               	movwf	??_dontBelong2Shape& (0+255),c
  8670  003FF6  0E01               	movlw	high _all_shapes
  8671  003FF8  6E04               	movwf	(??_dontBelong2Shape+1)& (0+255),c
  8672  003FFA  50F3               	movf	prodl,w,c
  8673  003FFC  2603               	addwf	??_dontBelong2Shape,f,c
  8674  003FFE  50F4               	movf	prodh,w,c
  8675  004000  2204               	addwfc	??_dontBelong2Shape+1,f,c
  8676  004002  5007               	movf	dontBelong2Shape@k,w,c
  8677  004004  0D02               	mullw	2
  8678  004006  50F3               	movf	prodl,w,c
  8679  004008  2603               	addwf	??_dontBelong2Shape,f,c
  8680  00400A  50F4               	movf	prodh,w,c
  8681  00400C  2204               	addwfc	??_dontBelong2Shape+1,f,c
  8682  00400E  0E01               	movlw	1
  8683  004010  2403               	addwf	??_dontBelong2Shape,w,c
  8684  004012  6ED9               	movwf	fsr2l,c
  8685  004014  0E00               	movlw	0
  8686  004016  2004               	addwfc	??_dontBelong2Shape+1,w,c
  8687  004018  6EDA               	movwf	fsr2h,c
  8688  00401A  5002               	movf	dontBelong2Shape@y,w,c
  8689  00401C  18DE               	xorwf	postinc2,w,c
  8690  00401E  A4D8               	btfss	status,2,c
  8691  004020  D002               	goto	l127
  8692                           
  8693                           ;main.c: 353: return 1;
  8694  004022  0E01               	movlw	1
  8695  004024  0012               	return	
  8696  004026                     l127:
  8697  004026  2A07               	incf	dontBelong2Shape@k,f,c
  8698  004028  D7C8               	goto	l3370
  8699  00402A                     u3080:
  8700                           
  8701                           ;main.c: 354: }
  8702                           ;main.c: 355: }
  8703                           ;main.c: 356: return 0;
  8704  00402A  0E00               	movlw	0
  8705  00402C  0012               	return	
  8706  00402E                     __end_of_dontBelong2Shape:
  8707                           	opt stack 0
  8708                           tblptru	equ	0xFF8
  8709                           tblptrh	equ	0xFF7
  8710                           tblptrl	equ	0xFF6
  8711                           tablat	equ	0xFF5
  8712                           prodh	equ	0xFF4
  8713                           prodl	equ	0xFF3
  8714                           intcon	equ	0xFF2
  8715                           postinc0	equ	0xFEE
  8716                           wreg	equ	0xFE8
  8717                           indf1	equ	0xFE7
  8718                           postinc1	equ	0xFE6
  8719                           postdec1	equ	0xFE5
  8720                           fsr1h	equ	0xFE2
  8721                           fsr1l	equ	0xFE1
  8722                           indf2	equ	0xFDF
  8723                           postinc2	equ	0xFDE
  8724                           fsr2h	equ	0xFDA
  8725                           fsr2l	equ	0xFD9
  8726                           status	equ	0xFD8
  8727                           
  8728 ;; *************** function _glcd_text_write *****************
  8729 ;; Defined at:
  8730 ;;		line 685 in file "glcd_library/glcd.c"
  8731 ;; Parameters:    Size  Location     Type
  8732 ;;  str             2   23[COMRAM] PTR const unsigned char 
  8733 ;;		 -> STR_4(10), STR_3(27), 
  8734 ;;  x               1   25[COMRAM] unsigned char 
  8735 ;;  y               1   26[COMRAM] unsigned char 
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;		None
  8738 ;; Return value:  Size  Location     Type
  8739 ;;                  1    wreg      void 
  8740 ;; Registers used:
  8741 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8742 ;; Tracked objects:
  8743 ;;		On entry : 0/0
  8744 ;;		On exit  : 0/0
  8745 ;;		Unchanged: 0/0
  8746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8747 ;;      Params:         4       0       0       0       0       0       0       0       0
  8748 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8749 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8750 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8751 ;;Total ram usage:        4 bytes
  8752 ;; Hardware stack levels used:    1
  8753 ;; Hardware stack levels required when called:    3
  8754 ;; This function calls:
  8755 ;;		_glcd_SetCursor
  8756 ;;		_glcd_WriteString
  8757 ;; This function is called by:
  8758 ;;		_main
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           	psect	text13
  8763  003A8A                     __ptext13:
  8764                           	opt stack 0
  8765  003A8A                     _glcd_text_write:
  8766                           	opt stack 27
  8767                           
  8768                           ;glcd.c: 688: glcd_SetCursor(x, y);
  8769                           
  8770                           ;incstack = 0
  8771  003A8A  C01B  F00B         	movff	glcd_text_write@y,glcd_SetCursor@ypos
  8772  003A8E  501A               	movf	glcd_text_write@x,w,c
  8773  003A90  ECFD  F01D         	call	_glcd_SetCursor
  8774                           
  8775                           ;glcd.c: 689: glcd_WriteString(str, 1, 1);
  8776  003A94  C018  F014         	movff	glcd_text_write@str,glcd_WriteString@str
  8777  003A98  C019  F015         	movff	glcd_text_write@str+1,glcd_WriteString@str+1
  8778  003A9C  0E01               	movlw	1
  8779  003A9E  6E16               	movwf	glcd_WriteString@font,c
  8780  003AA0  0E01               	movlw	1
  8781  003AA2  6E17               	movwf	glcd_WriteString@color,c
  8782  003AA4  EC59  F020         	call	_glcd_WriteString	;wreg free
  8783  003AA8  0012               	return		;funcret
  8784  003AAA                     __end_of_glcd_text_write:
  8785                           	opt stack 0
  8786                           tblptru	equ	0xFF8
  8787                           tblptrh	equ	0xFF7
  8788                           tblptrl	equ	0xFF6
  8789                           tablat	equ	0xFF5
  8790                           prodh	equ	0xFF4
  8791                           prodl	equ	0xFF3
  8792                           intcon	equ	0xFF2
  8793                           postinc0	equ	0xFEE
  8794                           wreg	equ	0xFE8
  8795                           indf1	equ	0xFE7
  8796                           postinc1	equ	0xFE6
  8797                           postdec1	equ	0xFE5
  8798                           fsr1h	equ	0xFE2
  8799                           fsr1l	equ	0xFE1
  8800                           indf2	equ	0xFDF
  8801                           postinc2	equ	0xFDE
  8802                           fsr2h	equ	0xFDA
  8803                           fsr2l	equ	0xFD9
  8804                           status	equ	0xFD8
  8805                           
  8806 ;; *************** function _glcd_SetCursor *****************
  8807 ;; Defined at:
  8808 ;;		line 554 in file "glcd_library/glcd.c"
  8809 ;; Parameters:    Size  Location     Type
  8810 ;;  xpos            1    wreg     unsigned char 
  8811 ;;  ypos            1   10[COMRAM] unsigned char 
  8812 ;; Auto vars:     Size  Location     Type
  8813 ;;  xpos            1   12[COMRAM] unsigned char 
  8814 ;;  side            1   11[COMRAM] unsigned char 
  8815 ;; Return value:  Size  Location     Type
  8816 ;;                  1    wreg      void 
  8817 ;; Registers used:
  8818 ;;		wreg, status,2, status,0, cstack
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/0
  8821 ;;		On exit  : 0/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8824 ;;      Params:         1       0       0       0       0       0       0       0       0
  8825 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8827 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8828 ;;Total ram usage:        3 bytes
  8829 ;; Hardware stack levels used:    1
  8830 ;; Hardware stack levels required when called:    1
  8831 ;; This function calls:
  8832 ;;		_glcd_WriteByte
  8833 ;; This function is called by:
  8834 ;;		_glcd_text_write
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text14
  8839  003BFA                     __ptext14:
  8840                           	opt stack 0
  8841  003BFA                     _glcd_SetCursor:
  8842                           	opt stack 28
  8843                           
  8844                           ;incstack = 0
  8845                           ;glcd_SetCursor@xpos stored from wreg
  8846  003BFA  6E0D               	movwf	glcd_SetCursor@xpos,c
  8847                           
  8848                           ;glcd.c: 556: unsigned char side = 0;
  8849  003BFC  0E00               	movlw	0
  8850  003BFE  6E0C               	movwf	glcd_SetCursor@side,c
  8851                           
  8852                           ;glcd.c: 558: if(xpos > 127 | ypos > 7)
  8853  003C00  0E80               	movlw	128
  8854  003C02  600D               	cpfslt	glcd_SetCursor@xpos,c
  8855  003C04  0012               	return	
  8856  003C06  0E07               	movlw	7
  8857  003C08  640B               	cpfsgt	glcd_SetCursor@ypos,c
  8858  003C0A  D001               	goto	l456
  8859  003C0C  0012               	return	
  8860  003C0E                     l456:
  8861                           
  8862                           ;glcd.c: 561: x = xpos;
  8863  003C0E  C00D  F053         	movff	glcd_SetCursor@xpos,_x
  8864                           
  8865                           ;glcd.c: 562: y = ypos;
  8866  003C12  C00B  F052         	movff	glcd_SetCursor@ypos,_y
  8867                           
  8868                           ;glcd.c: 564: if(xpos > 63)
  8869  003C16  0E3F               	movlw	63
  8870  003C18  640D               	cpfsgt	glcd_SetCursor@xpos,c
  8871  003C1A  D004               	goto	l460
  8872                           
  8873                           ;glcd.c: 565: {
  8874                           ;glcd.c: 566: xpos -= 64;
  8875  003C1C  0E40               	movlw	64
  8876  003C1E  5E0D               	subwf	glcd_SetCursor@xpos,f,c
  8877                           
  8878                           ;glcd.c: 567: side = 1;
  8879  003C20  0E01               	movlw	1
  8880  003C22  6E0C               	movwf	glcd_SetCursor@side,c
  8881  003C24                     l460:
  8882                           
  8883                           ;glcd.c: 568: }
  8884                           ;glcd.c: 570: LATBbits.LATB2=0;
  8885  003C24  948A               	bcf	3978,2,c	;volatile
  8886                           
  8887                           ;glcd.c: 571: glcd_WriteByte(side, 0x40 | xpos);
  8888  003C26  500D               	movf	glcd_SetCursor@xpos,w,c
  8889  003C28  0940               	iorlw	64
  8890  003C2A  6E09               	movwf	glcd_WriteByte@data,c
  8891  003C2C  500C               	movf	glcd_SetCursor@side,w,c
  8892  003C2E  ECA6  F01D         	call	_glcd_WriteByte
  8893                           
  8894                           ;glcd.c: 572: glcd_WriteByte(side, 0xB8 | ypos);
  8895  003C32  500B               	movf	glcd_SetCursor@ypos,w,c
  8896  003C34  09B8               	iorlw	184
  8897  003C36  6E09               	movwf	glcd_WriteByte@data,c
  8898  003C38  500C               	movf	glcd_SetCursor@side,w,c
  8899  003C3A  ECA6  F01D         	call	_glcd_WriteByte
  8900                           
  8901                           ;glcd.c: 573: LATBbits.LATB2=1;
  8902  003C3E  848A               	bsf	3978,2,c	;volatile
  8903  003C40  0012               	return		;funcret
  8904  003C42                     __end_of_glcd_SetCursor:
  8905                           	opt stack 0
  8906                           tblptru	equ	0xFF8
  8907                           tblptrh	equ	0xFF7
  8908                           tblptrl	equ	0xFF6
  8909                           tablat	equ	0xFF5
  8910                           prodh	equ	0xFF4
  8911                           prodl	equ	0xFF3
  8912                           intcon	equ	0xFF2
  8913                           postinc0	equ	0xFEE
  8914                           wreg	equ	0xFE8
  8915                           indf1	equ	0xFE7
  8916                           postinc1	equ	0xFE6
  8917                           postdec1	equ	0xFE5
  8918                           fsr1h	equ	0xFE2
  8919                           fsr1l	equ	0xFE1
  8920                           indf2	equ	0xFDF
  8921                           postinc2	equ	0xFDE
  8922                           fsr2h	equ	0xFDA
  8923                           fsr2l	equ	0xFD9
  8924                           status	equ	0xFD8
  8925                           
  8926 ;; *************** function _glcd_Init *****************
  8927 ;; Defined at:
  8928 ;;		line 340 in file "glcd_library/glcd.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;  mode            1    wreg     unsigned char 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;  mode            1   14[COMRAM] unsigned char 
  8933 ;;  k               1    0        unsigned char 
  8934 ;;  j               1    0        unsigned char 
  8935 ;;  i               1    0        unsigned char 
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  1    wreg      void 
  8938 ;; Registers used:
  8939 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8945 ;;      Params:         0       0       0       0       0       0       0       0       0
  8946 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8947 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8948 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8949 ;;Total ram usage:        2 bytes
  8950 ;; Hardware stack levels used:    1
  8951 ;; Hardware stack levels required when called:    2
  8952 ;; This function calls:
  8953 ;;		_glcd_FillScreen
  8954 ;;		_glcd_WriteByte
  8955 ;; This function is called by:
  8956 ;;		_main
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           	psect	text15
  8961  0041EA                     __ptext15:
  8962                           	opt stack 0
  8963  0041EA                     _glcd_Init:
  8964                           	opt stack 28
  8965                           
  8966                           ;incstack = 0
  8967                           ;glcd_Init@mode stored from wreg
  8968  0041EA  6E0F               	movwf	glcd_Init@mode,c
  8969                           
  8970                           ;glcd.c: 342: TRISA = 0xFF;
  8971  0041EC  6892               	setf	3986,c	;volatile
  8972                           
  8973                           ;glcd.c: 343: PORTA = 0x00;
  8974  0041EE  0E00               	movlw	0
  8975  0041F0  6E80               	movwf	3968,c	;volatile
  8976                           
  8977                           ;glcd.c: 344: ADCON1 = 0x0F;
  8978  0041F2  0E0F               	movlw	15
  8979  0041F4  6EC1               	movwf	4033,c	;volatile
  8980                           
  8981                           ;glcd.c: 346: TRISB = 0x00;
  8982  0041F6  0E00               	movlw	0
  8983  0041F8  6E93               	movwf	3987,c	;volatile
  8984                           
  8985                           ;glcd.c: 347: PORTB = 0x00;
  8986  0041FA  0E00               	movlw	0
  8987  0041FC  6E81               	movwf	3969,c	;volatile
  8988                           
  8989                           ;glcd.c: 349: TRISD = 0x00;
  8990  0041FE  0E00               	movlw	0
  8991  004200  6E95               	movwf	3989,c	;volatile
  8992                           
  8993                           ;glcd.c: 350: PORTD = 0x00;
  8994  004202  0E00               	movlw	0
  8995  004204  6E83               	movwf	3971,c	;volatile
  8996                           
  8997                           ;glcd.c: 352: unsigned char i, j, k;
  8998                           ;glcd.c: 355: PORTD = 0x00;
  8999  004206  0E00               	movlw	0
  9000  004208  6E83               	movwf	3971,c	;volatile
  9001                           
  9002                           ;glcd.c: 356: LATBbits.LATB5 = 0;
  9003  00420A  9A8A               	bcf	3978,5,c	;volatile
  9004                           
  9005                           ;glcd.c: 358: _delay((unsigned long)((1500)*(100000/4000.0)));
  9006  00420C  0E31               	movlw	49
  9007  00420E  6E0E               	movwf	??_glcd_Init& (0+255),c
  9008  004210  0EB2               	movlw	178
  9009  004212                     u5287:
  9010  004212  2EE8               	decfsz	wreg,f,c
  9011  004214  D7FE               	bra	u5287
  9012  004216  2E0E               	decfsz	??_glcd_Init& (0+255),f,c
  9013  004218  D7FC               	bra	u5287
  9014  00421A  D000               	nop2	
  9015                           
  9016                           ;glcd.c: 359: LATBbits.LATB5 = 1;
  9017  00421C  8A8A               	bsf	3978,5,c	;volatile
  9018                           
  9019                           ;glcd.c: 361: LATBbits.LATB4=0;
  9020  00421E  988A               	bcf	3978,4,c	;volatile
  9021                           
  9022                           ;glcd.c: 362: LATBbits.LATB0=0;
  9023  004220  908A               	bcf	3978,0,c	;volatile
  9024                           
  9025                           ;glcd.c: 363: LATBbits.LATB1=0;
  9026  004222  928A               	bcf	3978,1,c	;volatile
  9027                           
  9028                           ;glcd.c: 364: LATBbits.LATB2=0;
  9029  004224  948A               	bcf	3978,2,c	;volatile
  9030                           
  9031                           ;glcd.c: 367: _delay((unsigned long)((10)*(100000/4000.0)));
  9032  004226  0E53               	movlw	83
  9033  004228                     u5297:
  9034  004228  2EE8               	decfsz	wreg,f,c
  9035  00422A  D7FE               	bra	u5297
  9036  00422C  F000               	nop	
  9037                           
  9038                           ;glcd.c: 368: glcd_WriteByte(0, 0xC0);
  9039  00422E  0EC0               	movlw	192
  9040  004230  6E09               	movwf	glcd_WriteByte@data,c
  9041  004232  0E00               	movlw	0
  9042  004234  ECA6  F01D         	call	_glcd_WriteByte
  9043                           
  9044                           ;glcd.c: 369: glcd_WriteByte(1, 0xC0);
  9045  004238  0EC0               	movlw	192
  9046  00423A  6E09               	movwf	glcd_WriteByte@data,c
  9047  00423C  0E01               	movlw	1
  9048  00423E  ECA6  F01D         	call	_glcd_WriteByte
  9049                           
  9050                           ;glcd.c: 370: glcd_WriteByte(0, 0x40);
  9051  004242  0E40               	movlw	64
  9052  004244  6E09               	movwf	glcd_WriteByte@data,c
  9053  004246  0E00               	movlw	0
  9054  004248  ECA6  F01D         	call	_glcd_WriteByte
  9055                           
  9056                           ;glcd.c: 371: glcd_WriteByte(1, 0x40);
  9057  00424C  0E40               	movlw	64
  9058  00424E  6E09               	movwf	glcd_WriteByte@data,c
  9059  004250  0E01               	movlw	1
  9060  004252  ECA6  F01D         	call	_glcd_WriteByte
  9061                           
  9062                           ;glcd.c: 372: glcd_WriteByte(0, 0xB8);
  9063  004256  0EB8               	movlw	184
  9064  004258  6E09               	movwf	glcd_WriteByte@data,c
  9065  00425A  0E00               	movlw	0
  9066  00425C  ECA6  F01D         	call	_glcd_WriteByte
  9067                           
  9068                           ;glcd.c: 373: glcd_WriteByte(1, 0xB8);
  9069  004260  0EB8               	movlw	184
  9070  004262  6E09               	movwf	glcd_WriteByte@data,c
  9071  004264  0E01               	movlw	1
  9072  004266  ECA6  F01D         	call	_glcd_WriteByte
  9073                           
  9074                           ;glcd.c: 375: if(mode == 1)
  9075  00426A  040F               	decf	glcd_Init@mode,w,c
  9076  00426C  A4D8               	btfss	status,2,c
  9077  00426E  D00E               	goto	l414
  9078                           
  9079                           ;glcd.c: 376: {
  9080                           ;glcd.c: 377: TRISA = 0x00;
  9081  004270  0E00               	movlw	0
  9082  004272  6E92               	movwf	3986,c	;volatile
  9083                           
  9084                           ;glcd.c: 378: PORTA = 0xFF;
  9085  004274  6880               	setf	3968,c	;volatile
  9086                           
  9087                           ;glcd.c: 379: glcd_WriteByte(0, 0x3F);
  9088  004276  0E3F               	movlw	63
  9089  004278  6E09               	movwf	glcd_WriteByte@data,c
  9090  00427A  0E00               	movlw	0
  9091  00427C  ECA6  F01D         	call	_glcd_WriteByte
  9092                           
  9093                           ;glcd.c: 380: glcd_WriteByte(1, 0x3F);
  9094  004280  0E3F               	movlw	63
  9095  004282  6E09               	movwf	glcd_WriteByte@data,c
  9096  004284  0E01               	movlw	1
  9097  004286  ECA6  F01D         	call	_glcd_WriteByte
  9098                           
  9099                           ;glcd.c: 381: }
  9100  00428A  D00A               	goto	l415
  9101  00428C                     l414:
  9102                           
  9103                           ;glcd.c: 382: else
  9104                           ;glcd.c: 383: {
  9105                           ;glcd.c: 384: glcd_WriteByte(0, 0x3E);
  9106  00428C  0E3E               	movlw	62
  9107  00428E  6E09               	movwf	glcd_WriteByte@data,c
  9108  004290  0E00               	movlw	0
  9109  004292  ECA6  F01D         	call	_glcd_WriteByte
  9110                           
  9111                           ;glcd.c: 385: glcd_WriteByte(1, 0x3E);
  9112  004296  0E3E               	movlw	62
  9113  004298  6E09               	movwf	glcd_WriteByte@data,c
  9114  00429A  0E01               	movlw	1
  9115  00429C  ECA6  F01D         	call	_glcd_WriteByte
  9116  0042A0                     l415:
  9117                           
  9118                           ;glcd.c: 386: }
  9119                           ;glcd.c: 388: glcd_FillScreen(0);
  9120  0042A0  0E00               	movlw	0
  9121  0042A2  EC31  F01F         	call	_glcd_FillScreen
  9122  0042A6  0012               	return		;funcret
  9123  0042A8                     __end_of_glcd_Init:
  9124                           	opt stack 0
  9125                           tblptru	equ	0xFF8
  9126                           tblptrh	equ	0xFF7
  9127                           tblptrl	equ	0xFF6
  9128                           tablat	equ	0xFF5
  9129                           prodh	equ	0xFF4
  9130                           prodl	equ	0xFF3
  9131                           intcon	equ	0xFF2
  9132                           postinc0	equ	0xFEE
  9133                           wreg	equ	0xFE8
  9134                           indf1	equ	0xFE7
  9135                           postinc1	equ	0xFE6
  9136                           postdec1	equ	0xFE5
  9137                           fsr1h	equ	0xFE2
  9138                           fsr1l	equ	0xFE1
  9139                           indf2	equ	0xFDF
  9140                           postinc2	equ	0xFDE
  9141                           fsr2h	equ	0xFDA
  9142                           fsr2l	equ	0xFD9
  9143                           status	equ	0xFD8
  9144                           
  9145 ;; *************** function _glcd_Image *****************
  9146 ;; Defined at:
  9147 ;;		line 693 in file "glcd_library/glcd.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;		None
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;  ptr             2   10[COMRAM] int 
  9152 ;;  cs              1   14[COMRAM] unsigned char 
  9153 ;;  i               1   13[COMRAM] unsigned char 
  9154 ;;  j               1   12[COMRAM] unsigned char 
  9155 ;; Return value:  Size  Location     Type
  9156 ;;                  1    wreg      void 
  9157 ;; Registers used:
  9158 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9159 ;; Tracked objects:
  9160 ;;		On entry : 0/0
  9161 ;;		On exit  : 0/0
  9162 ;;		Unchanged: 0/0
  9163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9164 ;;      Params:         0       0       0       0       0       0       0       0       0
  9165 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9167 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9168 ;;Total ram usage:        5 bytes
  9169 ;; Hardware stack levels used:    1
  9170 ;; Hardware stack levels required when called:    1
  9171 ;; This function calls:
  9172 ;;		_glcd_WriteByte
  9173 ;; This function is called by:
  9174 ;;		_main
  9175 ;; This function uses a non-reentrant model
  9176 ;;
  9177                           
  9178                           	psect	text16
  9179  003F40                     __ptext16:
  9180                           	opt stack 0
  9181  003F40                     _glcd_Image:
  9182                           	opt stack 29
  9183                           
  9184                           ;glcd.c: 695: unsigned char cs;
  9185                           ;glcd.c: 696: int ptr=0;
  9186                           
  9187                           ;incstack = 0
  9188  003F40  0E00               	movlw	0
  9189  003F42  6E0C               	movwf	glcd_Image@ptr+1,c
  9190  003F44  0E00               	movlw	0
  9191  003F46  6E0B               	movwf	glcd_Image@ptr,c
  9192                           
  9193                           ;glcd.c: 698: unsigned char i, j;
  9194                           ;glcd.c: 701: for(i = 0; i < 8; ++i)
  9195  003F48  0E00               	movlw	0
  9196  003F4A  6E0E               	movwf	glcd_Image@i,c
  9197  003F4C                     l4522:
  9198  003F4C  0E07               	movlw	7
  9199  003F4E  640E               	cpfsgt	glcd_Image@i,c
  9200  003F50  D001               	goto	l496
  9201  003F52  D02D               	goto	u4950
  9202  003F54                     l496:
  9203                           
  9204                           ;glcd.c: 702: {
  9205                           ;glcd.c: 704: for(cs=0;cs<=1;cs++)
  9206  003F54  0E00               	movlw	0
  9207  003F56  6E0F               	movwf	glcd_Image@cs,c
  9208  003F58                     l4528:
  9209  003F58  0E01               	movlw	1
  9210  003F5A  640F               	cpfsgt	glcd_Image@cs,c
  9211  003F5C  D001               	goto	l498
  9212  003F5E  D025               	goto	u4940
  9213  003F60                     l498:
  9214                           
  9215                           ;glcd.c: 705: {
  9216                           ;glcd.c: 706: LATBbits.LATB2=0;
  9217  003F60  948A               	bcf	3978,2,c	;volatile
  9218                           
  9219                           ;glcd.c: 707: glcd_WriteByte(cs, 0x40);
  9220  003F62  0E40               	movlw	64
  9221  003F64  6E09               	movwf	glcd_WriteByte@data,c
  9222  003F66  500F               	movf	glcd_Image@cs,w,c
  9223  003F68  ECA6  F01D         	call	_glcd_WriteByte
  9224                           
  9225                           ;glcd.c: 708: glcd_WriteByte(cs, i | 0xB8);
  9226  003F6C  500E               	movf	glcd_Image@i,w,c
  9227  003F6E  09B8               	iorlw	184
  9228  003F70  6E09               	movwf	glcd_WriteByte@data,c
  9229  003F72  500F               	movf	glcd_Image@cs,w,c
  9230  003F74  ECA6  F01D         	call	_glcd_WriteByte
  9231                           
  9232                           ;glcd.c: 709: LATBbits.LATB2=1;
  9233  003F78  848A               	bsf	3978,2,c	;volatile
  9234                           
  9235                           ;glcd.c: 712: for(j = 0; j < 64; ++j)
  9236  003F7A  0E00               	movlw	0
  9237  003F7C  6E0D               	movwf	glcd_Image@j,c
  9238  003F7E  0E3F               	movlw	63
  9239  003F80  640D               	cpfsgt	glcd_Image@j,c
  9240  003F82  D001               	goto	l500
  9241  003F84  D010               	goto	u4930
  9242  003F86                     l500:
  9243                           
  9244                           ;glcd.c: 713: {
  9245                           ;glcd.c: 714: glcd_WriteByte(cs, accueil[ptr]);
  9246  003F86  0EFB               	movlw	low _accueil
  9247  003F88  240B               	addwf	glcd_Image@ptr,w,c
  9248  003F8A  6EF6               	movwf	tblptrl,c
  9249  003F8C  0E7A               	movlw	high _accueil
  9250  003F8E  200C               	addwfc	glcd_Image@ptr+1,w,c
  9251  003F90  6EF7               	movwf	tblptrh,c
  9252  003F92                     	if	0	;There are less than 3 active tblptr bytes
  9253  003F92                     	endif
  9254  003F92  0008               	tblrd		*
  9255  003F94  CFF5 F009          	movff	tablat,glcd_WriteByte@data
  9256  003F98  500F               	movf	glcd_Image@cs,w,c
  9257  003F9A  ECA6  F01D         	call	_glcd_WriteByte
  9258                           
  9259                           ;glcd.c: 715: ptr+=1;
  9260  003F9E  4A0B               	infsnz	glcd_Image@ptr,f,c
  9261  003FA0  2A0C               	incf	glcd_Image@ptr+1,f,c
  9262  003FA2  2A0D               	incf	glcd_Image@j,f,c
  9263  003FA4  D7EC               	goto	L32
  9264  003FA6                     u4930:
  9265  003FA6  2A0F               	incf	glcd_Image@cs,f,c
  9266  003FA8  D7D7               	goto	l4528
  9267  003FAA                     u4940:
  9268  003FAA  2A0E               	incf	glcd_Image@i,f,c
  9269  003FAC  D7CF               	goto	l4522
  9270  003FAE                     u4950:
  9271                           
  9272                           ;glcd.c: 716: }
  9273                           ;glcd.c: 717: }
  9274                           ;glcd.c: 718: }
  9275                           ;glcd.c: 720: LATBbits.LATB0=0;
  9276  003FAE  908A               	bcf	3978,0,c	;volatile
  9277                           
  9278                           ;glcd.c: 721: LATBbits.LATB1=0;
  9279  003FB0  928A               	bcf	3978,1,c	;volatile
  9280  003FB2  0012               	return		;funcret
  9281  003FB4                     __end_of_glcd_Image:
  9282                           	opt stack 0
  9283                           tblptru	equ	0xFF8
  9284                           tblptrh	equ	0xFF7
  9285                           tblptrl	equ	0xFF6
  9286                           tablat	equ	0xFF5
  9287                           prodh	equ	0xFF4
  9288                           prodl	equ	0xFF3
  9289                           intcon	equ	0xFF2
  9290                           postinc0	equ	0xFEE
  9291                           wreg	equ	0xFE8
  9292                           indf1	equ	0xFE7
  9293                           postinc1	equ	0xFE6
  9294                           postdec1	equ	0xFE5
  9295                           fsr1h	equ	0xFE2
  9296                           fsr1l	equ	0xFE1
  9297                           indf2	equ	0xFDF
  9298                           postinc2	equ	0xFDE
  9299                           fsr2h	equ	0xFDA
  9300                           fsr2l	equ	0xFD9
  9301                           status	equ	0xFD8
  9302                           
  9303 ;; *************** function _display_grid *****************
  9304 ;; Defined at:
  9305 ;;		line 61 in file "main.c"
  9306 ;; Parameters:    Size  Location     Type
  9307 ;;		None
  9308 ;; Auto vars:     Size  Location     Type
  9309 ;;  j               1   17[COMRAM] unsigned char 
  9310 ;;  i               1   18[COMRAM] unsigned char 
  9311 ;; Return value:  Size  Location     Type
  9312 ;;                  1    wreg      void 
  9313 ;; Registers used:
  9314 ;;		wreg, status,2, status,0, cstack
  9315 ;; Tracked objects:
  9316 ;;		On entry : 0/0
  9317 ;;		On exit  : 0/0
  9318 ;;		Unchanged: 0/0
  9319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9320 ;;      Params:         0       0       0       0       0       0       0       0       0
  9321 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9323 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9324 ;;Total ram usage:        2 bytes
  9325 ;; Hardware stack levels used:    1
  9326 ;; Hardware stack levels required when called:    2
  9327 ;; This function calls:
  9328 ;;		_glcd_PlotPixel
  9329 ;; This function is called by:
  9330 ;;		_main
  9331 ;; This function uses a non-reentrant model
  9332 ;;
  9333                           
  9334                           	psect	text17
  9335  0045A0                     __ptext17:
  9336                           	opt stack 0
  9337  0045A0                     _display_grid:
  9338                           	opt stack 28
  9339                           
  9340                           ;main.c: 62: for (uint8_t i=0;i<128;i++){
  9341                           
  9342                           ;incstack = 0
  9343  0045A0  0E00               	movlw	0
  9344  0045A2  6E13               	movwf	display_grid@i,c
  9345  0045A4                     l3640:
  9346  0045A4  0E7F               	movlw	127
  9347  0045A6  6413               	cpfsgt	display_grid@i,c
  9348  0045A8  D001               	goto	l43
  9349  0045AA  0012               	return	
  9350  0045AC                     l43:
  9351                           
  9352                           ;main.c: 63: for(uint8_t j=0;j<64;j++){
  9353  0045AC  0E00               	movlw	0
  9354  0045AE  6E12               	movwf	display_grid@j,c
  9355  0045B0                     l3646:
  9356  0045B0  0E3F               	movlw	63
  9357  0045B2  6412               	cpfsgt	display_grid@j,c
  9358  0045B4  D001               	goto	l45
  9359  0045B6  D0C3               	goto	u3930
  9360  0045B8                     l45:
  9361                           
  9362                           ;main.c: 64: if ((j>=0 && j<=1) || (j>=62 && j<=63))
  9363  0045B8  0E01               	movlw	1
  9364  0045BA  6412               	cpfsgt	display_grid@j,c
  9365  0045BC  D006               	goto	u3550
  9366  0045BE  0E3D               	movlw	61
  9367  0045C0  6412               	cpfsgt	display_grid@j,c
  9368  0045C2  D00B               	goto	l47
  9369  0045C4  0E40               	movlw	64
  9370  0045C6  6012               	cpfslt	display_grid@j,c
  9371  0045C8  D008               	goto	l47
  9372  0045CA                     u3550:
  9373                           
  9374                           ;main.c: 65: glcd_PlotPixel(i,j,1);
  9375  0045CA  C012  F00B         	movff	display_grid@j,glcd_PlotPixel@ypos
  9376  0045CE  0E01               	movlw	1
  9377  0045D0  6E0C               	movwf	glcd_PlotPixel@color,c
  9378  0045D2  5013               	movf	display_grid@i,w,c
  9379  0045D4  EC9C  F020         	call	_glcd_PlotPixel
  9380  0045D8  D01E               	goto	l55
  9381  0045DA                     l47:
  9382                           
  9383                           ;main.c: 66: else if (((i>=0 && i<=1) || ( i>=126 && i<=127)))
  9384  0045DA  0E01               	movlw	1
  9385  0045DC  6413               	cpfsgt	display_grid@i,c
  9386  0045DE  D006               	goto	u3580
  9387  0045E0  0E7D               	movlw	125
  9388  0045E2  6413               	cpfsgt	display_grid@i,c
  9389  0045E4  D00B               	goto	l51
  9390  0045E6  0E80               	movlw	128
  9391  0045E8  6013               	cpfslt	display_grid@i,c
  9392  0045EA  D008               	goto	l51
  9393  0045EC                     u3580:
  9394                           
  9395                           ;main.c: 67: glcd_PlotPixel(i,j,1);
  9396  0045EC  C012  F00B         	movff	display_grid@j,glcd_PlotPixel@ypos
  9397  0045F0  0E01               	movlw	1
  9398  0045F2  6E0C               	movwf	glcd_PlotPixel@color,c
  9399  0045F4  5013               	movf	display_grid@i,w,c
  9400  0045F6  EC9C  F020         	call	_glcd_PlotPixel
  9401  0045FA  D00D               	goto	l55
  9402  0045FC                     l51:
  9403                           
  9404                           ;main.c: 68: else if (i>=91 && i<=92 )
  9405  0045FC  0E5A               	movlw	90
  9406  0045FE  6413               	cpfsgt	display_grid@i,c
  9407  004600  D00A               	goto	l55
  9408  004602  0E5D               	movlw	93
  9409  004604  6013               	cpfslt	display_grid@i,c
  9410  004606  D007               	goto	l55
  9411                           
  9412                           ;main.c: 69: glcd_PlotPixel(i,j,1);
  9413  004608  C012  F00B         	movff	display_grid@j,glcd_PlotPixel@ypos
  9414  00460C  0E01               	movlw	1
  9415  00460E  6E0C               	movwf	glcd_PlotPixel@color,c
  9416  004610  5013               	movf	display_grid@i,w,c
  9417  004612  EC9C  F020         	call	_glcd_PlotPixel
  9418  004616                     l55:
  9419                           
  9420                           ;main.c: 72: if (i>=2 && i<=90 && j==61)
  9421  004616  0E01               	movlw	1
  9422  004618  6413               	cpfsgt	display_grid@i,c
  9423  00461A  D00E               	goto	l56
  9424  00461C  0E5B               	movlw	91
  9425  00461E  6013               	cpfslt	display_grid@i,c
  9426  004620  D00B               	goto	l56
  9427  004622  0E3D               	movlw	61
  9428  004624  1812               	xorwf	display_grid@j,w,c
  9429  004626  A4D8               	btfss	status,2,c
  9430  004628  D007               	goto	l56
  9431                           
  9432                           ;main.c: 73: glcd_PlotPixel(i,j,1);
  9433  00462A  C012  F00B         	movff	display_grid@j,glcd_PlotPixel@ypos
  9434  00462E  0E01               	movlw	1
  9435  004630  6E0C               	movwf	glcd_PlotPixel@color,c
  9436  004632  5013               	movf	display_grid@i,w,c
  9437  004634  EC9C  F020         	call	_glcd_PlotPixel
  9438  004638                     l56:
  9439                           
  9440                           ;main.c: 76: if ( ((i==6) || (i==11) || (i==16) || (i==21) || (i==26) || (i==31) || (i==
      +                          36) || (i==41) || (i==46) || (i==51) || (i==56) || (i==61) || (i==66) || (i==71) || (i==
      +                          76) || (i==81) || (i==86)) )
  9441  004638  0E06               	movlw	6
  9442  00463A  1813               	xorwf	display_grid@i,w,c
  9443  00463C  B4D8               	btfsc	status,2,c
  9444  00463E  D040               	goto	u3800
  9445  004640  0E0B               	movlw	11
  9446  004642  1813               	xorwf	display_grid@i,w,c
  9447  004644  B4D8               	btfsc	status,2,c
  9448  004646  D03C               	goto	u3800
  9449  004648  0E10               	movlw	16
  9450  00464A  1813               	xorwf	display_grid@i,w,c
  9451  00464C  B4D8               	btfsc	status,2,c
  9452  00464E  D038               	goto	u3800
  9453  004650  0E15               	movlw	21
  9454  004652  1813               	xorwf	display_grid@i,w,c
  9455  004654  B4D8               	btfsc	status,2,c
  9456  004656  D034               	goto	u3800
  9457  004658  0E1A               	movlw	26
  9458  00465A  1813               	xorwf	display_grid@i,w,c
  9459  00465C  B4D8               	btfsc	status,2,c
  9460  00465E  D030               	goto	u3800
  9461  004660  0E1F               	movlw	31
  9462  004662  1813               	xorwf	display_grid@i,w,c
  9463  004664  B4D8               	btfsc	status,2,c
  9464  004666  D02C               	goto	u3800
  9465  004668  0E24               	movlw	36
  9466  00466A  1813               	xorwf	display_grid@i,w,c
  9467  00466C  B4D8               	btfsc	status,2,c
  9468  00466E  D028               	goto	u3800
  9469  004670  0E29               	movlw	41
  9470  004672  1813               	xorwf	display_grid@i,w,c
  9471  004674  B4D8               	btfsc	status,2,c
  9472  004676  D024               	goto	u3800
  9473  004678  0E2E               	movlw	46
  9474  00467A  1813               	xorwf	display_grid@i,w,c
  9475  00467C  B4D8               	btfsc	status,2,c
  9476  00467E  D020               	goto	u3800
  9477  004680  0E33               	movlw	51
  9478  004682  1813               	xorwf	display_grid@i,w,c
  9479  004684  B4D8               	btfsc	status,2,c
  9480  004686  D01C               	goto	u3800
  9481  004688  0E38               	movlw	56
  9482  00468A  1813               	xorwf	display_grid@i,w,c
  9483  00468C  B4D8               	btfsc	status,2,c
  9484  00468E  D018               	goto	u3800
  9485  004690  0E3D               	movlw	61
  9486  004692  1813               	xorwf	display_grid@i,w,c
  9487  004694  B4D8               	btfsc	status,2,c
  9488  004696  D014               	goto	u3800
  9489  004698  0E42               	movlw	66
  9490  00469A  1813               	xorwf	display_grid@i,w,c
  9491  00469C  B4D8               	btfsc	status,2,c
  9492  00469E  D010               	goto	u3800
  9493  0046A0  0E47               	movlw	71
  9494  0046A2  1813               	xorwf	display_grid@i,w,c
  9495  0046A4  B4D8               	btfsc	status,2,c
  9496  0046A6  D00C               	goto	u3800
  9497  0046A8  0E4C               	movlw	76
  9498  0046AA  1813               	xorwf	display_grid@i,w,c
  9499  0046AC  B4D8               	btfsc	status,2,c
  9500  0046AE  D008               	goto	u3800
  9501  0046B0  0E51               	movlw	81
  9502  0046B2  1813               	xorwf	display_grid@i,w,c
  9503  0046B4  B4D8               	btfsc	status,2,c
  9504  0046B6  D004               	goto	u3800
  9505  0046B8  0E56               	movlw	86
  9506  0046BA  1813               	xorwf	display_grid@i,w,c
  9507  0046BC  A4D8               	btfss	status,2,c
  9508  0046BE  D007               	goto	l57
  9509  0046C0                     u3800:
  9510                           
  9511                           ;main.c: 77: glcd_PlotPixel(i,j,1);
  9512  0046C0  C012  F00B         	movff	display_grid@j,glcd_PlotPixel@ypos
  9513  0046C4  0E01               	movlw	1
  9514  0046C6  6E0C               	movwf	glcd_PlotPixel@color,c
  9515  0046C8  5013               	movf	display_grid@i,w,c
  9516  0046CA  EC9C  F020         	call	_glcd_PlotPixel
  9517  0046CE                     l57:
  9518                           
  9519                           ;main.c: 80: if ( ((j==6) || (j==11) || (j==16) || (j==21) || (j==26) || (j==31) || (j==
      +                          36) || (j==41) || (j==46) || (j==51) || (j==56)) && (i<92))
  9520  0046CE  0E06               	movlw	6
  9521  0046D0  1812               	xorwf	display_grid@j,w,c
  9522  0046D2  B4D8               	btfsc	status,2,c
  9523  0046D4  D028               	goto	u3910
  9524  0046D6  0E0B               	movlw	11
  9525  0046D8  1812               	xorwf	display_grid@j,w,c
  9526  0046DA  B4D8               	btfsc	status,2,c
  9527  0046DC  D024               	goto	u3910
  9528  0046DE  0E10               	movlw	16
  9529  0046E0  1812               	xorwf	display_grid@j,w,c
  9530  0046E2  B4D8               	btfsc	status,2,c
  9531  0046E4  D020               	goto	u3910
  9532  0046E6  0E15               	movlw	21
  9533  0046E8  1812               	xorwf	display_grid@j,w,c
  9534  0046EA  B4D8               	btfsc	status,2,c
  9535  0046EC  D01C               	goto	u3910
  9536  0046EE  0E1A               	movlw	26
  9537  0046F0  1812               	xorwf	display_grid@j,w,c
  9538  0046F2  B4D8               	btfsc	status,2,c
  9539  0046F4  D018               	goto	u3910
  9540  0046F6  0E1F               	movlw	31
  9541  0046F8  1812               	xorwf	display_grid@j,w,c
  9542  0046FA  B4D8               	btfsc	status,2,c
  9543  0046FC  D014               	goto	u3910
  9544  0046FE  0E24               	movlw	36
  9545  004700  1812               	xorwf	display_grid@j,w,c
  9546  004702  B4D8               	btfsc	status,2,c
  9547  004704  D010               	goto	u3910
  9548  004706  0E29               	movlw	41
  9549  004708  1812               	xorwf	display_grid@j,w,c
  9550  00470A  B4D8               	btfsc	status,2,c
  9551  00470C  D00C               	goto	u3910
  9552  00470E  0E2E               	movlw	46
  9553  004710  1812               	xorwf	display_grid@j,w,c
  9554  004712  B4D8               	btfsc	status,2,c
  9555  004714  D008               	goto	u3910
  9556  004716  0E33               	movlw	51
  9557  004718  1812               	xorwf	display_grid@j,w,c
  9558  00471A  B4D8               	btfsc	status,2,c
  9559  00471C  D004               	goto	u3910
  9560  00471E  0E38               	movlw	56
  9561  004720  1812               	xorwf	display_grid@j,w,c
  9562  004722  A4D8               	btfss	status,2,c
  9563  004724  D00A               	goto	l60
  9564  004726                     u3910:
  9565  004726  0E5C               	movlw	92
  9566  004728  6013               	cpfslt	display_grid@i,c
  9567  00472A  D007               	goto	l60
  9568                           
  9569                           ;main.c: 81: glcd_PlotPixel(i,j,1);
  9570  00472C  C012  F00B         	movff	display_grid@j,glcd_PlotPixel@ypos
  9571  004730  0E01               	movlw	1
  9572  004732  6E0C               	movwf	glcd_PlotPixel@color,c
  9573  004734  5013               	movf	display_grid@i,w,c
  9574  004736  EC9C  F020         	call	_glcd_PlotPixel
  9575  00473A                     l60:
  9576  00473A  2A12               	incf	display_grid@j,f,c
  9577  00473C  D739               	goto	l3646
  9578  00473E                     u3930:
  9579  00473E  2A13               	incf	display_grid@i,f,c
  9580  004740  D731               	goto	l3640
  9581  004742                     __end_of_display_grid:
  9582                           	opt stack 0
  9583                           tblptru	equ	0xFF8
  9584                           tblptrh	equ	0xFF7
  9585                           tblptrl	equ	0xFF6
  9586                           tablat	equ	0xFF5
  9587                           prodh	equ	0xFF4
  9588                           prodl	equ	0xFF3
  9589                           intcon	equ	0xFF2
  9590                           postinc0	equ	0xFEE
  9591                           wreg	equ	0xFE8
  9592                           indf1	equ	0xFE7
  9593                           postinc1	equ	0xFE6
  9594                           postdec1	equ	0xFE5
  9595                           fsr1h	equ	0xFE2
  9596                           fsr1l	equ	0xFE1
  9597                           indf2	equ	0xFDF
  9598                           postinc2	equ	0xFDE
  9599                           fsr2h	equ	0xFDA
  9600                           fsr2l	equ	0xFD9
  9601                           status	equ	0xFD8
  9602                           
  9603 ;; *************** function _glcd_PlotPixel *****************
  9604 ;; Defined at:
  9605 ;;		line 470 in file "glcd_library/glcd.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;  xpos            1    wreg     unsigned char 
  9608 ;;  ypos            1   10[COMRAM] unsigned char 
  9609 ;;  color           1   11[COMRAM] unsigned char 
  9610 ;; Auto vars:     Size  Location     Type
  9611 ;;  xpos            1   14[COMRAM] unsigned char 
  9612 ;;  side            1   16[COMRAM] unsigned char 
  9613 ;;  data            1   15[COMRAM] unsigned char 
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  1    wreg      void 
  9616 ;; Registers used:
  9617 ;;		wreg, status,2, status,0, cstack
  9618 ;; Tracked objects:
  9619 ;;		On entry : 0/0
  9620 ;;		On exit  : 0/0
  9621 ;;		Unchanged: 0/0
  9622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9623 ;;      Params:         2       0       0       0       0       0       0       0       0
  9624 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9625 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9626 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9627 ;;Total ram usage:        7 bytes
  9628 ;; Hardware stack levels used:    1
  9629 ;; Hardware stack levels required when called:    1
  9630 ;; This function calls:
  9631 ;;		___awdiv
  9632 ;;		_glcd_ReadByte
  9633 ;;		_glcd_WriteByte
  9634 ;; This function is called by:
  9635 ;;		_display_grid
  9636 ;;		_update_display_shapes
  9637 ;;		_glcd_Rect
  9638 ;; This function uses a non-reentrant model
  9639 ;;
  9640                           
  9641                           	psect	text18
  9642  004138                     __ptext18:
  9643                           	opt stack 0
  9644  004138                     _glcd_PlotPixel:
  9645                           	opt stack 28
  9646                           
  9647                           ;incstack = 0
  9648                           ;glcd_PlotPixel@xpos stored from wreg
  9649  004138  6E0F               	movwf	glcd_PlotPixel@xpos,c
  9650                           
  9651                           ;glcd.c: 472: unsigned char data;
  9652                           ;glcd.c: 473: unsigned char side = 0;
  9653  00413A  0E00               	movlw	0
  9654  00413C  6E11               	movwf	glcd_PlotPixel@side,c
  9655                           
  9656                           ;glcd.c: 475: if(xpos > 63)
  9657  00413E  0E3F               	movlw	63
  9658  004140  640F               	cpfsgt	glcd_PlotPixel@xpos,c
  9659  004142  D004               	goto	l429
  9660                           
  9661                           ;glcd.c: 476: {
  9662                           ;glcd.c: 477: xpos -= 64;
  9663  004144  0E40               	movlw	64
  9664  004146  5E0F               	subwf	glcd_PlotPixel@xpos,f,c
  9665                           
  9666                           ;glcd.c: 478: side = 1;
  9667  004148  0E01               	movlw	1
  9668  00414A  6E11               	movwf	glcd_PlotPixel@side,c
  9669  00414C                     l429:
  9670                           
  9671                           ;glcd.c: 479: }
  9672                           ;glcd.c: 480: LATBbits.LATB2=0;
  9673  00414C  948A               	bcf	3978,2,c	;volatile
  9674                           
  9675                           ;glcd.c: 482: xpos &=0b01111111;
  9676  00414E  9E0F               	bcf	glcd_PlotPixel@xpos,7,c
  9677                           
  9678                           ;glcd.c: 483: xpos |=0b01000000;
  9679  004150  8C0F               	bsf	glcd_PlotPixel@xpos,6,c
  9680                           
  9681                           ;glcd.c: 484: glcd_WriteByte(side, (xpos));
  9682  004152  C00F  F009         	movff	glcd_PlotPixel@xpos,glcd_WriteByte@data
  9683  004156  5011               	movf	glcd_PlotPixel@side,w,c
  9684  004158  ECA6  F01D         	call	_glcd_WriteByte
  9685                           
  9686                           ;glcd.c: 485: glcd_WriteByte(side, (((ypos/8)) & 0xBF) | 0xB8);
  9687  00415C  C00B  F001         	movff	glcd_PlotPixel@ypos,___awdiv@dividend
  9688  004160  6A02               	clrf	___awdiv@dividend+1,c
  9689  004162  0E00               	movlw	0
  9690  004164  6E04               	movwf	___awdiv@divisor+1,c
  9691  004166  0E08               	movlw	8
  9692  004168  6E03               	movwf	___awdiv@divisor,c
  9693  00416A  EC17  F020         	call	___awdiv	;wreg free
  9694  00416E  5001               	movf	?___awdiv,w,c
  9695  004170  0BBF               	andlw	191
  9696  004172  09B8               	iorlw	184
  9697  004174  6E09               	movwf	glcd_WriteByte@data,c
  9698  004176  5011               	movf	glcd_PlotPixel@side,w,c
  9699  004178  ECA6  F01D         	call	_glcd_WriteByte
  9700                           
  9701                           ;glcd.c: 487: LATBbits.LATB2=1;
  9702  00417C  848A               	bsf	3978,2,c	;volatile
  9703                           
  9704                           ;glcd.c: 489: glcd_ReadByte(side);
  9705  00417E  5011               	movf	glcd_PlotPixel@side,w,c
  9706  004180  ECC1  F01D         	call	_glcd_ReadByte
  9707                           
  9708                           ;glcd.c: 490: data = glcd_ReadByte(side);
  9709  004184  5011               	movf	glcd_PlotPixel@side,w,c
  9710  004186  ECC1  F01D         	call	_glcd_ReadByte
  9711  00418A  6E10               	movwf	glcd_PlotPixel@data,c
  9712                           
  9713                           ;glcd.c: 492: LATBbits.LATB2=0;
  9714  00418C  948A               	bcf	3978,2,c	;volatile
  9715                           
  9716                           ;glcd.c: 494: glcd_WriteByte(side, xpos);
  9717  00418E  C00F  F009         	movff	glcd_PlotPixel@xpos,glcd_WriteByte@data
  9718  004192  5011               	movf	glcd_PlotPixel@side,w,c
  9719  004194  ECA6  F01D         	call	_glcd_WriteByte
  9720                           
  9721                           ;glcd.c: 496: if(color)
  9722  004198  500C               	movf	glcd_PlotPixel@color,w,c
  9723  00419A  B4D8               	btfsc	status,2,c
  9724  00419C  D00F               	goto	l430
  9725                           
  9726                           ;glcd.c: 497: data=(data)|(1<<(ypos%8));
  9727  00419E  C00B  F00D         	movff	glcd_PlotPixel@ypos,??_glcd_PlotPixel
  9728  0041A2  0E07               	movlw	7
  9729  0041A4  160D               	andwf	??_glcd_PlotPixel,f,c
  9730  0041A6  0E01               	movlw	1
  9731  0041A8  6E0E               	movwf	(??_glcd_PlotPixel+1)& (0+255),c
  9732  0041AA  2A0D               	incf	??_glcd_PlotPixel,f,c
  9733  0041AC  D002               	goto	u2754
  9734  0041AE                     u2755:
  9735  0041AE  90D8               	bcf	status,0,c
  9736  0041B0  360E               	rlcf	??_glcd_PlotPixel+1,f,c
  9737  0041B2                     u2754:
  9738  0041B2  2E0D               	decfsz	??_glcd_PlotPixel,f,c
  9739  0041B4  D7FC               	goto	u2755
  9740  0041B6  500E               	movf	??_glcd_PlotPixel+1,w,c
  9741  0041B8  1010               	iorwf	glcd_PlotPixel@data,w,c
  9742  0041BA  D00F               	goto	L33
  9743  0041BC                     l430:
  9744                           
  9745                           ;glcd.c: 498: else
  9746                           ;glcd.c: 499: data =(data)&(~(1<<(ypos%8)));
  9747  0041BC  C00B  F00D         	movff	glcd_PlotPixel@ypos,??_glcd_PlotPixel
  9748  0041C0  0E07               	movlw	7
  9749  0041C2  160D               	andwf	??_glcd_PlotPixel,f,c
  9750  0041C4  0E01               	movlw	1
  9751  0041C6  6E0E               	movwf	(??_glcd_PlotPixel+1)& (0+255),c
  9752  0041C8  2A0D               	incf	??_glcd_PlotPixel,f,c
  9753  0041CA  D002               	goto	u2764
  9754  0041CC                     u2765:
  9755  0041CC  90D8               	bcf	status,0,c
  9756  0041CE  360E               	rlcf	??_glcd_PlotPixel+1,f,c
  9757  0041D0                     u2764:
  9758  0041D0  2E0D               	decfsz	??_glcd_PlotPixel,f,c
  9759  0041D2  D7FC               	goto	u2765
  9760  0041D4  500E               	movf	??_glcd_PlotPixel+1,w,c
  9761  0041D6  0AFF               	xorlw	255
  9762  0041D8  1410               	andwf	glcd_PlotPixel@data,w,c
  9763  0041DA                     L33:
  9764  0041DA  6E10               	movwf	glcd_PlotPixel@data,c
  9765                           
  9766                           ;glcd.c: 501: LATBbits.LATB2=1;
  9767  0041DC  848A               	bsf	3978,2,c	;volatile
  9768                           
  9769                           ;glcd.c: 503: glcd_WriteByte(side, data);
  9770  0041DE  C010  F009         	movff	glcd_PlotPixel@data,glcd_WriteByte@data
  9771  0041E2  5011               	movf	glcd_PlotPixel@side,w,c
  9772  0041E4  ECA6  F01D         	call	_glcd_WriteByte
  9773  0041E8  0012               	return		;funcret
  9774  0041EA                     __end_of_glcd_PlotPixel:
  9775                           	opt stack 0
  9776                           tblptru	equ	0xFF8
  9777                           tblptrh	equ	0xFF7
  9778                           tblptrl	equ	0xFF6
  9779                           tablat	equ	0xFF5
  9780                           prodh	equ	0xFF4
  9781                           prodl	equ	0xFF3
  9782                           intcon	equ	0xFF2
  9783                           postinc0	equ	0xFEE
  9784                           wreg	equ	0xFE8
  9785                           indf1	equ	0xFE7
  9786                           postinc1	equ	0xFE6
  9787                           postdec1	equ	0xFE5
  9788                           fsr1h	equ	0xFE2
  9789                           fsr1l	equ	0xFE1
  9790                           indf2	equ	0xFDF
  9791                           postinc2	equ	0xFDE
  9792                           fsr2h	equ	0xFDA
  9793                           fsr2l	equ	0xFD9
  9794                           status	equ	0xFD8
  9795                           
  9796 ;; *************** function _glcd_ReadByte *****************
  9797 ;; Defined at:
  9798 ;;		line 432 in file "glcd_library/glcd.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  side            1    wreg     unsigned char 
  9801 ;; Auto vars:     Size  Location     Type
  9802 ;;  side            1    0[COMRAM] unsigned char 
  9803 ;;  data            1    1[COMRAM] unsigned char 
  9804 ;; Return value:  Size  Location     Type
  9805 ;;                  1    wreg      unsigned char 
  9806 ;; Registers used:
  9807 ;;		wreg, status,2, cstack
  9808 ;; Tracked objects:
  9809 ;;		On entry : 0/0
  9810 ;;		On exit  : 0/0
  9811 ;;		Unchanged: 0/0
  9812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9813 ;;      Params:         0       0       0       0       0       0       0       0       0
  9814 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9816 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9817 ;;Total ram usage:        2 bytes
  9818 ;; Hardware stack levels used:    1
  9819 ;; This function calls:
  9820 ;;		Nothing
  9821 ;; This function is called by:
  9822 ;;		_glcd_PlotPixel
  9823 ;; This function uses a non-reentrant model
  9824 ;;
  9825                           
  9826                           	psect	text19
  9827  003B82                     __ptext19:
  9828                           	opt stack 0
  9829  003B82                     _glcd_ReadByte:
  9830                           	opt stack 28
  9831                           
  9832                           ;incstack = 0
  9833                           ;glcd_ReadByte@side stored from wreg
  9834  003B82  6E01               	movwf	glcd_ReadByte@side,c
  9835                           
  9836                           ;glcd.c: 434: unsigned char data;
  9837                           ;glcd.c: 436: if(side)
  9838  003B84  5001               	movf	glcd_ReadByte@side,w,c
  9839  003B86  B4D8               	btfsc	status,2,c
  9840  003B88  D003               	goto	l424
  9841                           
  9842                           ;glcd.c: 437: {
  9843                           ;glcd.c: 438: LATBbits.LATB0 = 1;
  9844  003B8A  808A               	bsf	3978,0,c	;volatile
  9845                           
  9846                           ;glcd.c: 439: LATBbits.LATB1 = 0;
  9847  003B8C  928A               	bcf	3978,1,c	;volatile
  9848                           
  9849                           ;glcd.c: 440: }
  9850  003B8E  D002               	goto	l425
  9851  003B90                     l424:
  9852                           
  9853                           ;glcd.c: 441: else
  9854                           ;glcd.c: 442: {
  9855                           ;glcd.c: 443: LATBbits.LATB1 = 0;
  9856  003B90  928A               	bcf	3978,1,c	;volatile
  9857                           
  9858                           ;glcd.c: 444: LATBbits.LATB1 = 1;
  9859  003B92  828A               	bsf	3978,1,c	;volatile
  9860  003B94                     l425:
  9861                           
  9862                           ;glcd.c: 445: }
  9863                           ;glcd.c: 447: TRISD = 0xFF;
  9864  003B94  6895               	setf	3989,c	;volatile
  9865                           
  9866                           ;glcd.c: 448: LATBbits.LATB3 = 1;
  9867  003B96  868A               	bsf	3978,3,c	;volatile
  9868                           
  9869                           ;glcd.c: 452: LATBbits.LATB4 = 1;
  9870  003B98  888A               	bsf	3978,4,c	;volatile
  9871                           
  9872                           ;glcd.c: 454: _delay((unsigned long)((1)*(100000/4000.0)));
  9873  003B9A  0E08               	movlw	8
  9874  003B9C                     u5307:
  9875  003B9C  2EE8               	decfsz	wreg,f,c
  9876  003B9E  D7FE               	bra	u5307
  9877  003BA0  F000               	nop	
  9878                           
  9879                           ;glcd.c: 456: data = PORTD;
  9880  003BA2  CF83 F002          	movff	3971,glcd_ReadByte@data	;volatile
  9881                           
  9882                           ;glcd.c: 457: LATBbits.LATB4 = 0;
  9883  003BA6  988A               	bcf	3978,4,c	;volatile
  9884                           
  9885                           ;glcd.c: 459: _delay((unsigned long)((1)*(100000/4000.0)));
  9886  003BA8  0E08               	movlw	8
  9887  003BAA                     u5317:
  9888  003BAA  2EE8               	decfsz	wreg,f,c
  9889  003BAC  D7FE               	bra	u5317
  9890  003BAE  F000               	nop	
  9891                           
  9892                           ;glcd.c: 460: LATBbits.LATB0 = 0;
  9893  003BB0  908A               	bcf	3978,0,c	;volatile
  9894                           
  9895                           ;glcd.c: 461: LATBbits.LATB1 = 0;
  9896  003BB2  928A               	bcf	3978,1,c	;volatile
  9897                           
  9898                           ;glcd.c: 463: return data;
  9899  003BB4  5002               	movf	glcd_ReadByte@data,w,c
  9900  003BB6  0012               	return	
  9901  003BB8                     __end_of_glcd_ReadByte:
  9902                           	opt stack 0
  9903                           tblptru	equ	0xFF8
  9904                           tblptrh	equ	0xFF7
  9905                           tblptrl	equ	0xFF6
  9906                           tablat	equ	0xFF5
  9907                           prodh	equ	0xFF4
  9908                           prodl	equ	0xFF3
  9909                           intcon	equ	0xFF2
  9910                           postinc0	equ	0xFEE
  9911                           wreg	equ	0xFE8
  9912                           indf1	equ	0xFE7
  9913                           postinc1	equ	0xFE6
  9914                           postdec1	equ	0xFE5
  9915                           fsr1h	equ	0xFE2
  9916                           fsr1l	equ	0xFE1
  9917                           indf2	equ	0xFDF
  9918                           postinc2	equ	0xFDE
  9919                           fsr2h	equ	0xFDA
  9920                           fsr2l	equ	0xFD9
  9921                           status	equ	0xFD8
  9922                           
  9923 ;; *************** function ___awdiv *****************
  9924 ;; Defined at:
  9925 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;  dividend        2    0[COMRAM] int 
  9928 ;;  divisor         2    2[COMRAM] int 
  9929 ;; Auto vars:     Size  Location     Type
  9930 ;;  quotient        2    6[COMRAM] int 
  9931 ;;  sign            1    5[COMRAM] unsigned char 
  9932 ;;  counter         1    4[COMRAM] unsigned char 
  9933 ;; Return value:  Size  Location     Type
  9934 ;;                  2    0[COMRAM] int 
  9935 ;; Registers used:
  9936 ;;		wreg, status,2, status,0
  9937 ;; Tracked objects:
  9938 ;;		On entry : 0/0
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9942 ;;      Params:         4       0       0       0       0       0       0       0       0
  9943 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9944 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9945 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9946 ;;Total ram usage:        8 bytes
  9947 ;; Hardware stack levels used:    1
  9948 ;; This function calls:
  9949 ;;		Nothing
  9950 ;; This function is called by:
  9951 ;;		_glcd_PlotPixel
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           	psect	text20
  9956  00402E                     __ptext20:
  9957                           	opt stack 0
  9958  00402E                     ___awdiv:
  9959                           	opt stack 28
  9960                           
  9961                           ;incstack = 0
  9962  00402E  0E00               	movlw	0
  9963  004030  6E06               	movwf	___awdiv@sign,c
  9964  004032  AE04               	btfss	___awdiv@divisor+1,7,c
  9965  004034  D006               	goto	l744
  9966  004036  6C03               	negf	___awdiv@divisor,c
  9967  004038  1E04               	comf	___awdiv@divisor+1,f,c
  9968  00403A  B0D8               	btfsc	status,0,c
  9969  00403C  2A04               	incf	___awdiv@divisor+1,f,c
  9970  00403E  0E01               	movlw	1
  9971  004040  6E06               	movwf	___awdiv@sign,c
  9972  004042                     l744:
  9973  004042  AE02               	btfss	___awdiv@dividend+1,7,c
  9974  004044  D006               	goto	l745
  9975  004046  6C01               	negf	___awdiv@dividend,c
  9976  004048  1E02               	comf	___awdiv@dividend+1,f,c
  9977  00404A  B0D8               	btfsc	status,0,c
  9978  00404C  2A02               	incf	___awdiv@dividend+1,f,c
  9979  00404E  0E01               	movlw	1
  9980  004050  1A06               	xorwf	___awdiv@sign,f,c
  9981  004052                     l745:
  9982  004052  0E00               	movlw	0
  9983  004054  6E08               	movwf	___awdiv@quotient+1,c
  9984  004056  0E00               	movlw	0
  9985  004058  6E07               	movwf	___awdiv@quotient,c
  9986  00405A  5003               	movf	___awdiv@divisor,w,c
  9987  00405C  1004               	iorwf	___awdiv@divisor+1,w,c
  9988  00405E  B4D8               	btfsc	status,2,c
  9989  004060  D01C               	goto	l752
  9990  004062  0E01               	movlw	1
  9991  004064  6E05               	movwf	___awdiv@counter,c
  9992  004066  D004               	goto	l747
  9993  004068  90D8               	bcf	status,0,c
  9994  00406A  3603               	rlcf	___awdiv@divisor,f,c
  9995  00406C  3604               	rlcf	___awdiv@divisor+1,f,c
  9996  00406E  2A05               	incf	___awdiv@counter,f,c
  9997  004070                     l747:
  9998  004070  AE04               	btfss	___awdiv@divisor+1,7,c
  9999  004072  D7FA               	goto	l748
 10000  004074                     u2700:
 10001  004074  90D8               	bcf	status,0,c
 10002  004076  3607               	rlcf	___awdiv@quotient,f,c
 10003  004078  3608               	rlcf	___awdiv@quotient+1,f,c
 10004  00407A  5003               	movf	___awdiv@divisor,w,c
 10005  00407C  5C01               	subwf	___awdiv@dividend,w,c
 10006  00407E  5004               	movf	___awdiv@divisor+1,w,c
 10007  004080  5802               	subwfb	___awdiv@dividend+1,w,c
 10008  004082  A0D8               	btfss	status,0,c
 10009  004084  D005               	goto	l751
 10010  004086  5003               	movf	___awdiv@divisor,w,c
 10011  004088  5E01               	subwf	___awdiv@dividend,f,c
 10012  00408A  5004               	movf	___awdiv@divisor+1,w,c
 10013  00408C  5A02               	subwfb	___awdiv@dividend+1,f,c
 10014  00408E  8007               	bsf	___awdiv@quotient,0,c
 10015  004090                     l751:
 10016  004090  90D8               	bcf	status,0,c
 10017  004092  3204               	rrcf	___awdiv@divisor+1,f,c
 10018  004094  3203               	rrcf	___awdiv@divisor,f,c
 10019  004096  2E05               	decfsz	___awdiv@counter,f,c
 10020  004098  D7ED               	goto	u2700
 10021  00409A                     l752:
 10022  00409A  5006               	movf	___awdiv@sign,w,c
 10023  00409C  B4D8               	btfsc	status,2,c
 10024  00409E  D004               	goto	l753
 10025  0040A0  6C07               	negf	___awdiv@quotient,c
 10026  0040A2  1E08               	comf	___awdiv@quotient+1,f,c
 10027  0040A4  B0D8               	btfsc	status,0,c
 10028  0040A6  2A08               	incf	___awdiv@quotient+1,f,c
 10029  0040A8                     l753:
 10030  0040A8  C007  F001         	movff	___awdiv@quotient,?___awdiv
 10031  0040AC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 10032  0040B0  0012               	return	
 10033  0040B2                     __end_of___awdiv:
 10034                           	opt stack 0
 10035                           tblptru	equ	0xFF8
 10036                           tblptrh	equ	0xFF7
 10037                           tblptrl	equ	0xFF6
 10038                           tablat	equ	0xFF5
 10039                           prodh	equ	0xFF4
 10040                           prodl	equ	0xFF3
 10041                           intcon	equ	0xFF2
 10042                           postinc0	equ	0xFEE
 10043                           wreg	equ	0xFE8
 10044                           indf1	equ	0xFE7
 10045                           postinc1	equ	0xFE6
 10046                           postdec1	equ	0xFE5
 10047                           fsr1h	equ	0xFE2
 10048                           fsr1l	equ	0xFE1
 10049                           indf2	equ	0xFDF
 10050                           postinc2	equ	0xFDE
 10051                           fsr2h	equ	0xFDA
 10052                           fsr2l	equ	0xFD9
 10053                           status	equ	0xFD8
 10054                           
 10055 ;; *************** function _displayStartScore *****************
 10056 ;; Defined at:
 10057 ;;		line 945 in file "main.c"
 10058 ;; Parameters:    Size  Location     Type
 10059 ;;  bestScore       1    wreg     unsigned char 
 10060 ;; Auto vars:     Size  Location     Type
 10061 ;;  bestScore       1   46[COMRAM] unsigned char 
 10062 ;;  string         20   26[COMRAM] unsigned char [20]
 10063 ;; Return value:  Size  Location     Type
 10064 ;;                  1    wreg      void 
 10065 ;; Registers used:
 10066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10067 ;; Tracked objects:
 10068 ;;		On entry : 0/0
 10069 ;;		On exit  : 0/0
 10070 ;;		Unchanged: 0/0
 10071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10072 ;;      Params:         0       0       0       0       0       0       0       0       0
 10073 ;;      Locals:        21       0       0       0       0       0       0       0       0
 10074 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10075 ;;      Totals:        21       0       0       0       0       0       0       0       0
 10076 ;;Total ram usage:       21 bytes
 10077 ;; Hardware stack levels used:    1
 10078 ;; Hardware stack levels required when called:    3
 10079 ;; This function calls:
 10080 ;;		_delayHomeScreen
 10081 ;;		_glcd_FillScreen
 10082 ;;		_glcd_WriteString
 10083 ;;		_sprintf
 10084 ;; This function is called by:
 10085 ;;		_main
 10086 ;; This function uses a non-reentrant model
 10087 ;;
 10088                           
 10089                           	psect	text21
 10090  003D8A                     __ptext21:
 10091                           	opt stack 0
 10092  003D8A                     _displayStartScore:
 10093                           	opt stack 27
 10094                           
 10095                           ;incstack = 0
 10096                           ;displayStartScore@bestScore stored from wreg
 10097  003D8A  6E2F               	movwf	displayStartScore@bestScore,c
 10098                           
 10099                           ;main.c: 947: char string[20]="";
 10100  003D8C  EE20  F03E         	lfsr	2,displayStartScore@F4364
 10101  003D90  EE10  F01B         	lfsr	1,displayStartScore@string
 10102  003D94  0E13               	movlw	19
 10103  003D96                     u4881:
 10104  003D96  CFDB FFE3          	movff	plusw2,plusw1
 10105  003D9A  06E8               	decf	wreg,f,c
 10106  003D9C  E2FC               	bc	u4881
 10107                           
 10108                           ;main.c: 948: sprintf(string,"%d",bestScore);
 10109  003D9E  0E1B               	movlw	low displayStartScore@string
 10110  003DA0  6E0D               	movwf	sprintf@sp,c
 10111  003DA2  0E00               	movlw	high displayStartScore@string
 10112  003DA4  6E0E               	movwf	sprintf@sp+1,c
 10113  003DA6  0EFB               	movlw	low STR_1
 10114  003DA8  6E0F               	movwf	sprintf@f,c
 10115  003DAA  0E7F               	movlw	high STR_1
 10116  003DAC  6E10               	movwf	sprintf@f+1,c
 10117  003DAE  C02F  F011         	movff	displayStartScore@bestScore,?_sprintf+4
 10118  003DB2  6A12               	clrf	?_sprintf+5,c
 10119  003DB4  EC2C  F022         	call	_sprintf	;wreg free
 10120                           
 10121                           ;main.c: 949: glcd_WriteString("best score : ",64,32);
 10122  003DB8  0EE3               	movlw	low STR_2
 10123  003DBA  6E14               	movwf	glcd_WriteString@str,c
 10124  003DBC  0E7F               	movlw	high STR_2
 10125  003DBE  6E15               	movwf	glcd_WriteString@str+1,c
 10126  003DC0  0E40               	movlw	64
 10127  003DC2  6E16               	movwf	glcd_WriteString@font,c
 10128  003DC4  0E20               	movlw	32
 10129  003DC6  6E17               	movwf	glcd_WriteString@color,c
 10130  003DC8  EC59  F020         	call	_glcd_WriteString	;wreg free
 10131                           
 10132                           ;main.c: 950: delayHomeScreen();
 10133  003DCC  EC8C  F01D         	call	_delayHomeScreen	;wreg free
 10134                           
 10135                           ;main.c: 951: glcd_FillScreen(0);
 10136  003DD0  0E00               	movlw	0
 10137  003DD2  EC31  F01F         	call	_glcd_FillScreen
 10138                           
 10139                           ;main.c: 952: glcd_WriteString(string,64,32);
 10140  003DD6  0E1B               	movlw	low displayStartScore@string
 10141  003DD8  6E14               	movwf	glcd_WriteString@str,c
 10142  003DDA  0E00               	movlw	high displayStartScore@string
 10143  003DDC  6E15               	movwf	glcd_WriteString@str+1,c
 10144  003DDE  0E40               	movlw	64
 10145  003DE0  6E16               	movwf	glcd_WriteString@font,c
 10146  003DE2  0E20               	movlw	32
 10147  003DE4  6E17               	movwf	glcd_WriteString@color,c
 10148  003DE6  EC59  F020         	call	_glcd_WriteString	;wreg free
 10149                           
 10150                           ;main.c: 953: delayHomeScreen();
 10151  003DEA  EC8C  F01D         	call	_delayHomeScreen	;wreg free
 10152                           
 10153                           ;main.c: 954: glcd_FillScreen(0);
 10154  003DEE  0E00               	movlw	0
 10155  003DF0  EC31  F01F         	call	_glcd_FillScreen
 10156  003DF4  0012               	return		;funcret
 10157  003DF6                     __end_of_displayStartScore:
 10158                           	opt stack 0
 10159                           tblptru	equ	0xFF8
 10160                           tblptrh	equ	0xFF7
 10161                           tblptrl	equ	0xFF6
 10162                           tablat	equ	0xFF5
 10163                           prodh	equ	0xFF4
 10164                           prodl	equ	0xFF3
 10165                           intcon	equ	0xFF2
 10166                           postinc0	equ	0xFEE
 10167                           wreg	equ	0xFE8
 10168                           indf1	equ	0xFE7
 10169                           postinc1	equ	0xFE6
 10170                           postdec1	equ	0xFE5
 10171                           plusw1	equ	0xFE3
 10172                           fsr1h	equ	0xFE2
 10173                           fsr1l	equ	0xFE1
 10174                           indf2	equ	0xFDF
 10175                           postinc2	equ	0xFDE
 10176                           plusw2	equ	0xFDB
 10177                           fsr2h	equ	0xFDA
 10178                           fsr2l	equ	0xFD9
 10179                           status	equ	0xFD8
 10180                           
 10181 ;; *************** function _sprintf *****************
 10182 ;; Defined at:
 10183 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
 10184 ;; Parameters:    Size  Location     Type
 10185 ;;  sp              2   12[COMRAM] PTR unsigned char 
 10186 ;;		 -> displayStartScore@string(20), 
 10187 ;;  f               2   14[COMRAM] PTR const unsigned char 
 10188 ;;		 -> STR_1(3), 
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;  tmpval          4    0        struct .
 10191 ;;  cp              3    0        PTR const unsigned char 
 10192 ;;  val             2   23[COMRAM] unsigned int 
 10193 ;;  ap              2   19[COMRAM] PTR void [1]
 10194 ;;		 -> ?_sprintf(2), 
 10195 ;;  len             2    0        unsigned int 
 10196 ;;  c               1   25[COMRAM] char 
 10197 ;;  prec            1   22[COMRAM] char 
 10198 ;;  flag            1   21[COMRAM] unsigned char 
 10199 ;; Return value:  Size  Location     Type
 10200 ;;                  2   12[COMRAM] int 
 10201 ;; Registers used:
 10202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10203 ;; Tracked objects:
 10204 ;;		On entry : 0/0
 10205 ;;		On exit  : 0/0
 10206 ;;		Unchanged: 0/0
 10207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10208 ;;      Params:         6       0       0       0       0       0       0       0       0
 10209 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10210 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10211 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10212 ;;Total ram usage:       14 bytes
 10213 ;; Hardware stack levels used:    1
 10214 ;; Hardware stack levels required when called:    1
 10215 ;; This function calls:
 10216 ;;		___lwdiv
 10217 ;;		___lwmod
 10218 ;; This function is called by:
 10219 ;;		_displayStartScore
 10220 ;; This function uses a non-reentrant model
 10221 ;;
 10222                           
 10223                           	psect	text22
 10224  004458                     __ptext22:
 10225                           	opt stack 0
 10226  004458                     _sprintf:
 10227                           	opt stack 28
 10228                           
 10229                           ;doprnt.c: 494: va_list ap;
 10230                           ;doprnt.c: 499: signed char c;
 10231                           ;doprnt.c: 506: signed char prec;
 10232                           ;doprnt.c: 508: unsigned char flag;
 10233                           ;doprnt.c: 523: union {
 10234                           ;doprnt.c: 524: unsigned long vd;
 10235                           ;doprnt.c: 525: double integ;
 10236                           ;doprnt.c: 526: } tmpval;
 10237                           ;doprnt.c: 528: unsigned int val;
 10238                           ;doprnt.c: 529: unsigned len;
 10239                           ;doprnt.c: 530: const char * cp;
 10240                           ;doprnt.c: 533: *ap = __va_start();
 10241                           
 10242                           ;incstack = 0
 10243  004458  0E11               	movlw	low (?_sprintf+4)
 10244  00445A  6E14               	movwf	sprintf@ap,c
 10245  00445C  0E00               	movlw	high (?_sprintf+4)
 10246  00445E  6E15               	movwf	sprintf@ap+1,c
 10247                           
 10248                           ;doprnt.c: 536: while(c = *f++) {
 10249  004460  D08C               	goto	u3310
 10250  004462                     
 10251                           ;doprnt.c: 538: if(c != '%')
 10252  004462  0E25               	movlw	37
 10253  004464  181A               	xorwf	sprintf@c,w,c
 10254  004466  B4D8               	btfsc	status,2,c
 10255  004468  D009               	goto	l559
 10256                           
 10257                           ;doprnt.c: 540: {
 10258                           ;doprnt.c: 541: ((*sp++ = (c)));
 10259  00446A  C00D  FFD9         	movff	sprintf@sp,fsr2l
 10260  00446E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
 10261  004472  C01A  FFDF         	movff	sprintf@c,indf2
 10262  004476  4A0D               	infsnz	sprintf@sp,f,c
 10263  004478  2A0E               	incf	sprintf@sp+1,f,c
 10264                           
 10265                           ;doprnt.c: 542: continue;
 10266  00447A  D07F               	goto	u3310
 10267  00447C                     l559:
 10268                           
 10269                           ;doprnt.c: 543: }
 10270                           ;doprnt.c: 548: flag = 0;
 10271  00447C  0E00               	movlw	0
 10272  00447E  6E16               	movwf	sprintf@flag,c
 10273                           
 10274                           ;doprnt.c: 822: }
 10275                           
 10276                           ;doprnt.c: 813: continue;
 10277                           
 10278                           ;doprnt.c: 802: default:
 10279                           
 10280                           ;doprnt.c: 698: case 'i':
 10281                           ;doprnt.c: 699: break;
 10282                           
 10283                           ;doprnt.c: 697: case 'd':
 10284                           
 10285                           ;doprnt.c: 638: goto alldone;
 10286                           
 10287                           ;doprnt.c: 637: case 0:
 10288                           
 10289                           ;doprnt.c: 635: switch(c = *f++) {
 10290  004480  C00F  FFF6         	movff	sprintf@f,tblptrl
 10291  004484  C010  FFF7         	movff	sprintf@f+1,tblptrh
 10292  004488  4A0F               	infsnz	sprintf@f,f,c
 10293  00448A  2A10               	incf	sprintf@f+1,f,c
 10294  00448C                     	if	0	;tblptru may be non-zero
 10295  00448C                     	endif
 10296  00448C                     	if	0	;tblptru may be non-zero
 10297  00448C                     	endif
 10298  00448C  0008               	tblrd		*
 10299  00448E  CFF5 F01A          	movff	tablat,sprintf@c
 10300  004492  501A               	movf	sprintf@c,w,c
 10301                           
 10302                           ; Switch size 1, requested type "space"
 10303                           ; Number of cases is 3, Range of values is 0 to 105
 10304                           ; switch strategies available:
 10305                           ; Name         Instructions Cycles
 10306                           ; simple_byte           10     6 (average)
 10307                           ;	Chosen strategy is simple_byte
 10308  004494  0A00               	xorlw	0	; case 0
 10309  004496  B4D8               	btfsc	status,2,c
 10310  004498  D07C               	goto	u3320
 10311  00449A  0A64               	xorlw	100	; case 100
 10312  00449C  B4D8               	btfsc	status,2,c
 10313  00449E  D003               	goto	l565
 10314  0044A0  0A0D               	xorlw	13	; case 105
 10315  0044A2  A4D8               	btfss	status,2,c
 10316  0044A4  D06A               	goto	u3310
 10317  0044A6                     l565:
 10318                           
 10319                           ;doprnt.c: 1253: {
 10320                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 10321  0044A6  C014  FFD9         	movff	sprintf@ap,fsr2l
 10322  0044AA  C015  FFDA         	movff	sprintf@ap+1,fsr2h
 10323  0044AE  CFDE F018          	movff	postinc2,sprintf@val
 10324  0044B2  CFDD F019          	movff	postdec2,sprintf@val+1
 10325  0044B6  0E02               	movlw	2
 10326  0044B8  2614               	addwf	sprintf@ap,f,c
 10327  0044BA  0E00               	movlw	0
 10328  0044BC  2215               	addwfc	sprintf@ap+1,f,c
 10329                           
 10330                           ;doprnt.c: 1261: if((int)val < 0) {
 10331  0044BE  AE19               	btfss	sprintf@val+1,7,c
 10332  0044C0  D006               	goto	l567
 10333                           
 10334                           ;doprnt.c: 1262: flag |= 0x03;
 10335  0044C2  0E03               	movlw	3
 10336  0044C4  1216               	iorwf	sprintf@flag,f,c
 10337                           
 10338                           ;doprnt.c: 1263: val = -val;
 10339  0044C6  6C18               	negf	sprintf@val,c
 10340  0044C8  1E19               	comf	sprintf@val+1,f,c
 10341  0044CA  B0D8               	btfsc	status,0,c
 10342  0044CC  2A19               	incf	sprintf@val+1,f,c
 10343  0044CE                     l567:
 10344                           
 10345                           ;doprnt.c: 1264: }
 10346                           ;doprnt.c: 1266: }
 10347                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10348  0044CE  0E01               	movlw	1
 10349  0044D0  6E1A               	movwf	sprintf@c,c
 10350  0044D2                     l3500:
 10351  0044D2  0E05               	movlw	5
 10352  0044D4  181A               	xorwf	sprintf@c,w,c
 10353  0044D6  B4D8               	btfsc	status,2,c
 10354  0044D8  D012               	goto	u3290
 10355                           
 10356                           ;doprnt.c: 1306: if(val < dpowers[c])
 10357  0044DA  501A               	movf	sprintf@c,w,c
 10358  0044DC  0D02               	mullw	2
 10359  0044DE  0EBE               	movlw	low _dpowers
 10360  0044E0  24F3               	addwf	prodl,w,c
 10361  0044E2  6EF6               	movwf	tblptrl,c
 10362  0044E4  0E7F               	movlw	high _dpowers
 10363  0044E6  20F4               	addwfc	prodh,w,c
 10364  0044E8  6EF7               	movwf	tblptrh,c
 10365  0044EA                     	if	0	;There are less than 3 active tblptr bytes
 10366  0044EA                     	endif
 10367  0044EA  0009               	tblrd		*+
 10368  0044EC  50F5               	movf	tablat,w,c
 10369  0044EE  5C18               	subwf	sprintf@val,w,c
 10370  0044F0  0009               	tblrd		*+
 10371  0044F2  50F5               	movf	tablat,w,c
 10372  0044F4  5819               	subwfb	sprintf@val+1,w,c
 10373  0044F6  A0D8               	btfss	status,0,c
 10374  0044F8  D002               	goto	u3290
 10375                           
 10376                           ;doprnt.c: 1307: break;
 10377  0044FA  2A1A               	incf	sprintf@c,f,c
 10378  0044FC  D7EA               	goto	l3500
 10379  0044FE                     u3290:
 10380                           
 10381                           ;doprnt.c: 1422: {
 10382                           ;doprnt.c: 1438: if(flag & 0x03)
 10383  0044FE  C016  F013         	movff	sprintf@flag,??_sprintf
 10384  004502  0E03               	movlw	3
 10385  004504  1613               	andwf	??_sprintf,f,c
 10386  004506  B4D8               	btfsc	status,2,c
 10387  004508  D008               	goto	l571
 10388                           
 10389                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 10390  00450A  C00D  FFD9         	movff	sprintf@sp,fsr2l
 10391  00450E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
 10392  004512  0E2D               	movlw	45
 10393  004514  6EDF               	movwf	indf2,c
 10394  004516  4A0D               	infsnz	sprintf@sp,f,c
 10395  004518  2A0E               	incf	sprintf@sp+1,f,c
 10396  00451A                     l571:
 10397                           
 10398                           ;doprnt.c: 1469: }
 10399                           ;doprnt.c: 1472: prec = c;
 10400  00451A  C01A  F017         	movff	sprintf@c,sprintf@prec
 10401                           
 10402                           ;doprnt.c: 1474: while(prec--) {
 10403  00451E  D029               	goto	l572
 10404  004520                     
 10405                           ;doprnt.c: 1478: {
 10406                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10407  004520  5017               	movf	sprintf@prec,w,c
 10408  004522  0D02               	mullw	2
 10409  004524  0EBE               	movlw	low _dpowers
 10410  004526  24F3               	addwf	prodl,w,c
 10411  004528  6EF6               	movwf	tblptrl,c
 10412  00452A  0E7F               	movlw	high _dpowers
 10413  00452C  20F4               	addwfc	prodh,w,c
 10414  00452E  6EF7               	movwf	tblptrh,c
 10415  004530                     	if	0	;There are less than 3 active tblptr bytes
 10416  004530                     	endif
 10417  004530  0009               	tblrd		*+
 10418  004532  CFF5 F003          	movff	tablat,___lwdiv@divisor
 10419  004536  000A               	tblrd		*-
 10420  004538  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
 10421  00453C  C018  F001         	movff	sprintf@val,___lwdiv@dividend
 10422  004540  C019  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
 10423  004544  EC71  F01E         	call	___lwdiv	;wreg free
 10424  004548  C001  F008         	movff	?___lwdiv,___lwmod@dividend
 10425  00454C  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
 10426  004550  0E00               	movlw	0
 10427  004552  6E0B               	movwf	___lwmod@divisor+1,c
 10428  004554  0E0A               	movlw	10
 10429  004556  6E0A               	movwf	___lwmod@divisor,c
 10430  004558  ECDC  F01D         	call	___lwmod	;wreg free
 10431  00455C  5008               	movf	?___lwmod,w,c
 10432  00455E  0F30               	addlw	48
 10433  004560  6E1A               	movwf	sprintf@c,c
 10434                           
 10435                           ;doprnt.c: 1523: }
 10436                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10437  004562  C00D  FFD9         	movff	sprintf@sp,fsr2l
 10438  004566  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
 10439  00456A  C01A  FFDF         	movff	sprintf@c,indf2
 10440  00456E  4A0D               	infsnz	sprintf@sp,f,c
 10441  004570  2A0E               	incf	sprintf@sp+1,f,c
 10442  004572                     l572:
 10443  004572  0617               	decf	sprintf@prec,f,c
 10444  004574  2817               	incf	sprintf@prec,w,c
 10445  004576  A4D8               	btfss	status,2,c
 10446  004578  D7D3               	goto	l573
 10447  00457A                     u3310:
 10448  00457A  C00F  FFF6         	movff	sprintf@f,tblptrl
 10449  00457E  C010  FFF7         	movff	sprintf@f+1,tblptrh
 10450  004582  4A0F               	infsnz	sprintf@f,f,c
 10451  004584  2A10               	incf	sprintf@f+1,f,c
 10452  004586                     	if	0	;tblptru may be non-zero
 10453  004586                     	endif
 10454  004586                     	if	0	;tblptru may be non-zero
 10455  004586                     	endif
 10456  004586  0008               	tblrd		*
 10457  004588  CFF5 F01A          	movff	tablat,sprintf@c
 10458  00458C  501A               	movf	sprintf@c,w,c
 10459  00458E  A4D8               	btfss	status,2,c
 10460  004590  D768               	goto	l558
 10461  004592                     u3320:
 10462                           
 10463                           ;doprnt.c: 1538: *sp = 0;
 10464                           
 10465                           ;doprnt.c: 1525: }
 10466                           ;doprnt.c: 1533: }
 10467                           ;doprnt.c: 1535: alldone:
 10468  004592  C00D  FFD9         	movff	sprintf@sp,fsr2l
 10469  004596  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
 10470  00459A  0E00               	movlw	0
 10471  00459C  6EDF               	movwf	indf2,c
 10472  00459E  0012               	return	
 10473  0045A0                     __end_of_sprintf:
 10474                           	opt stack 0
 10475                           tblptru	equ	0xFF8
 10476                           tblptrh	equ	0xFF7
 10477                           tblptrl	equ	0xFF6
 10478                           tablat	equ	0xFF5
 10479                           prodh	equ	0xFF4
 10480                           prodl	equ	0xFF3
 10481                           intcon	equ	0xFF2
 10482                           postinc0	equ	0xFEE
 10483                           wreg	equ	0xFE8
 10484                           indf1	equ	0xFE7
 10485                           postinc1	equ	0xFE6
 10486                           postdec1	equ	0xFE5
 10487                           plusw1	equ	0xFE3
 10488                           fsr1h	equ	0xFE2
 10489                           fsr1l	equ	0xFE1
 10490                           indf2	equ	0xFDF
 10491                           postinc2	equ	0xFDE
 10492                           postdec2	equ	0xFDD
 10493                           plusw2	equ	0xFDB
 10494                           fsr2h	equ	0xFDA
 10495                           fsr2l	equ	0xFD9
 10496                           status	equ	0xFD8
 10497                           
 10498 ;; *************** function ___lwmod *****************
 10499 ;; Defined at:
 10500 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
 10501 ;; Parameters:    Size  Location     Type
 10502 ;;  dividend        2    7[COMRAM] unsigned int 
 10503 ;;  divisor         2    9[COMRAM] unsigned int 
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;  counter         1   11[COMRAM] unsigned char 
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  2    7[COMRAM] unsigned int 
 10508 ;; Registers used:
 10509 ;;		wreg, status,2, status,0
 10510 ;; Tracked objects:
 10511 ;;		On entry : 0/0
 10512 ;;		On exit  : 0/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10515 ;;      Params:         4       0       0       0       0       0       0       0       0
 10516 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10517 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10518 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10519 ;;Total ram usage:        5 bytes
 10520 ;; Hardware stack levels used:    1
 10521 ;; This function calls:
 10522 ;;		Nothing
 10523 ;; This function is called by:
 10524 ;;		_sprintf
 10525 ;; This function uses a non-reentrant model
 10526 ;;
 10527                           
 10528                           	psect	text23
 10529  003BB8                     __ptext23:
 10530                           	opt stack 0
 10531  003BB8                     ___lwmod:
 10532                           	opt stack 28
 10533                           
 10534                           ;incstack = 0
 10535  003BB8  500A               	movf	___lwmod@divisor,w,c
 10536  003BBA  100B               	iorwf	___lwmod@divisor+1,w,c
 10537  003BBC  B4D8               	btfsc	status,2,c
 10538  003BBE  D018               	goto	l995
 10539  003BC0  0E01               	movlw	1
 10540  003BC2  6E0C               	movwf	___lwmod@counter,c
 10541  003BC4  D004               	goto	l990
 10542  003BC6  90D8               	bcf	status,0,c
 10543  003BC8  360A               	rlcf	___lwmod@divisor,f,c
 10544  003BCA  360B               	rlcf	___lwmod@divisor+1,f,c
 10545  003BCC  2A0C               	incf	___lwmod@counter,f,c
 10546  003BCE                     l990:
 10547  003BCE  AE0B               	btfss	___lwmod@divisor+1,7,c
 10548  003BD0  D7FA               	goto	l991
 10549  003BD2                     u3030:
 10550  003BD2  500A               	movf	___lwmod@divisor,w,c
 10551  003BD4  5C08               	subwf	___lwmod@dividend,w,c
 10552  003BD6  500B               	movf	___lwmod@divisor+1,w,c
 10553  003BD8  5809               	subwfb	___lwmod@dividend+1,w,c
 10554  003BDA  A0D8               	btfss	status,0,c
 10555  003BDC  D004               	goto	l994
 10556  003BDE  500A               	movf	___lwmod@divisor,w,c
 10557  003BE0  5E08               	subwf	___lwmod@dividend,f,c
 10558  003BE2  500B               	movf	___lwmod@divisor+1,w,c
 10559  003BE4  5A09               	subwfb	___lwmod@dividend+1,f,c
 10560  003BE6                     l994:
 10561  003BE6  90D8               	bcf	status,0,c
 10562  003BE8  320B               	rrcf	___lwmod@divisor+1,f,c
 10563  003BEA  320A               	rrcf	___lwmod@divisor,f,c
 10564  003BEC  2E0C               	decfsz	___lwmod@counter,f,c
 10565  003BEE  D7F1               	goto	u3030
 10566  003BF0                     l995:
 10567  003BF0  C008  F008         	movff	___lwmod@dividend,?___lwmod
 10568  003BF4  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
 10569  003BF8  0012               	return		;funcret
 10570  003BFA                     __end_of___lwmod:
 10571                           	opt stack 0
 10572                           tblptru	equ	0xFF8
 10573                           tblptrh	equ	0xFF7
 10574                           tblptrl	equ	0xFF6
 10575                           tablat	equ	0xFF5
 10576                           prodh	equ	0xFF4
 10577                           prodl	equ	0xFF3
 10578                           intcon	equ	0xFF2
 10579                           postinc0	equ	0xFEE
 10580                           wreg	equ	0xFE8
 10581                           indf1	equ	0xFE7
 10582                           postinc1	equ	0xFE6
 10583                           postdec1	equ	0xFE5
 10584                           plusw1	equ	0xFE3
 10585                           fsr1h	equ	0xFE2
 10586                           fsr1l	equ	0xFE1
 10587                           indf2	equ	0xFDF
 10588                           postinc2	equ	0xFDE
 10589                           postdec2	equ	0xFDD
 10590                           plusw2	equ	0xFDB
 10591                           fsr2h	equ	0xFDA
 10592                           fsr2l	equ	0xFD9
 10593                           status	equ	0xFD8
 10594                           
 10595 ;; *************** function ___lwdiv *****************
 10596 ;; Defined at:
 10597 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
 10598 ;; Parameters:    Size  Location     Type
 10599 ;;  dividend        2    0[COMRAM] unsigned int 
 10600 ;;  divisor         2    2[COMRAM] unsigned int 
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;  quotient        2    4[COMRAM] unsigned int 
 10603 ;;  counter         1    6[COMRAM] unsigned char 
 10604 ;; Return value:  Size  Location     Type
 10605 ;;                  2    0[COMRAM] unsigned int 
 10606 ;; Registers used:
 10607 ;;		wreg, status,2, status,0
 10608 ;; Tracked objects:
 10609 ;;		On entry : 0/0
 10610 ;;		On exit  : 0/0
 10611 ;;		Unchanged: 0/0
 10612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10613 ;;      Params:         4       0       0       0       0       0       0       0       0
 10614 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10615 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10616 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10617 ;;Total ram usage:        7 bytes
 10618 ;; Hardware stack levels used:    1
 10619 ;; This function calls:
 10620 ;;		Nothing
 10621 ;; This function is called by:
 10622 ;;		_sprintf
 10623 ;; This function uses a non-reentrant model
 10624 ;;
 10625                           
 10626                           	psect	text24
 10627  003CE2                     __ptext24:
 10628                           	opt stack 0
 10629  003CE2                     ___lwdiv:
 10630                           	opt stack 28
 10631                           
 10632                           ;incstack = 0
 10633  003CE2  0E00               	movlw	0
 10634  003CE4  6E06               	movwf	___lwdiv@quotient+1,c
 10635  003CE6  0E00               	movlw	0
 10636  003CE8  6E05               	movwf	___lwdiv@quotient,c
 10637  003CEA  5003               	movf	___lwdiv@divisor,w,c
 10638  003CEC  1004               	iorwf	___lwdiv@divisor+1,w,c
 10639  003CEE  B4D8               	btfsc	status,2,c
 10640  003CF0  D01C               	goto	l985
 10641  003CF2  0E01               	movlw	1
 10642  003CF4  6E07               	movwf	___lwdiv@counter,c
 10643  003CF6  D004               	goto	l980
 10644  003CF8  90D8               	bcf	status,0,c
 10645  003CFA  3603               	rlcf	___lwdiv@divisor,f,c
 10646  003CFC  3604               	rlcf	___lwdiv@divisor+1,f,c
 10647  003CFE  2A07               	incf	___lwdiv@counter,f,c
 10648  003D00                     l980:
 10649  003D00  AE04               	btfss	___lwdiv@divisor+1,7,c
 10650  003D02  D7FA               	goto	l981
 10651  003D04                     u3000:
 10652  003D04  90D8               	bcf	status,0,c
 10653  003D06  3605               	rlcf	___lwdiv@quotient,f,c
 10654  003D08  3606               	rlcf	___lwdiv@quotient+1,f,c
 10655  003D0A  5003               	movf	___lwdiv@divisor,w,c
 10656  003D0C  5C01               	subwf	___lwdiv@dividend,w,c
 10657  003D0E  5004               	movf	___lwdiv@divisor+1,w,c
 10658  003D10  5802               	subwfb	___lwdiv@dividend+1,w,c
 10659  003D12  A0D8               	btfss	status,0,c
 10660  003D14  D005               	goto	l984
 10661  003D16  5003               	movf	___lwdiv@divisor,w,c
 10662  003D18  5E01               	subwf	___lwdiv@dividend,f,c
 10663  003D1A  5004               	movf	___lwdiv@divisor+1,w,c
 10664  003D1C  5A02               	subwfb	___lwdiv@dividend+1,f,c
 10665  003D1E  8005               	bsf	___lwdiv@quotient,0,c
 10666  003D20                     l984:
 10667  003D20  90D8               	bcf	status,0,c
 10668  003D22  3204               	rrcf	___lwdiv@divisor+1,f,c
 10669  003D24  3203               	rrcf	___lwdiv@divisor,f,c
 10670  003D26  2E07               	decfsz	___lwdiv@counter,f,c
 10671  003D28  D7ED               	goto	u3000
 10672  003D2A                     l985:
 10673  003D2A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 10674  003D2E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10675  003D32  0012               	return		;funcret
 10676  003D34                     __end_of___lwdiv:
 10677                           	opt stack 0
 10678                           tblptru	equ	0xFF8
 10679                           tblptrh	equ	0xFF7
 10680                           tblptrl	equ	0xFF6
 10681                           tablat	equ	0xFF5
 10682                           prodh	equ	0xFF4
 10683                           prodl	equ	0xFF3
 10684                           intcon	equ	0xFF2
 10685                           postinc0	equ	0xFEE
 10686                           wreg	equ	0xFE8
 10687                           indf1	equ	0xFE7
 10688                           postinc1	equ	0xFE6
 10689                           postdec1	equ	0xFE5
 10690                           plusw1	equ	0xFE3
 10691                           fsr1h	equ	0xFE2
 10692                           fsr1l	equ	0xFE1
 10693                           indf2	equ	0xFDF
 10694                           postinc2	equ	0xFDE
 10695                           postdec2	equ	0xFDD
 10696                           plusw2	equ	0xFDB
 10697                           fsr2h	equ	0xFDA
 10698                           fsr2l	equ	0xFD9
 10699                           status	equ	0xFD8
 10700                           
 10701 ;; *************** function _glcd_WriteString *****************
 10702 ;; Defined at:
 10703 ;;		line 673 in file "glcd_library/glcd.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;  str             2   19[COMRAM] PTR const unsigned char 
 10706 ;;		 -> STR_4(10), STR_3(27), STR_2(14), displayStartScore@string(20), 
 10707 ;;  font            1   21[COMRAM] unsigned char 
 10708 ;;  color           1   22[COMRAM] unsigned char 
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;		None
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      void 
 10713 ;; Registers used:
 10714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10720 ;;      Params:         4       0       0       0       0       0       0       0       0
 10721 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10722 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10723 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10724 ;;Total ram usage:        4 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; Hardware stack levels required when called:    2
 10727 ;; This function calls:
 10728 ;;		_glcd_WriteChar3x6
 10729 ;;		_glcd_WriteChar8X8
 10730 ;; This function is called by:
 10731 ;;		_displayStartScore
 10732 ;;		_glcd_text_write
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736                           	psect	text25
 10737  0040B2                     __ptext25:
 10738                           	opt stack 0
 10739  0040B2                     _glcd_WriteString:
 10740                           	opt stack 27
 10741                           
 10742                           ;glcd.c: 675: while(*str)
 10743                           
 10744                           ;incstack = 0
 10745  0040B2  D02E               	goto	l485
 10746  0040B4                     
 10747                           ;glcd.c: 676: {
 10748                           ;glcd.c: 677: if(font)
 10749  0040B4  5016               	movf	glcd_WriteString@font,w,c
 10750  0040B6  B4D8               	btfsc	status,2,c
 10751  0040B8  D015               	goto	l487
 10752                           
 10753                           ;glcd.c: 678: glcd_WriteChar8X8(*str, color);
 10754  0040BA  C017  F00B         	movff	glcd_WriteString@color,glcd_WriteChar8X8@color
 10755  0040BE  C014  FFF6         	movff	glcd_WriteString@str,tblptrl
 10756  0040C2  C015  FFF7         	movff	glcd_WriteString@str+1,tblptrh
 10757  0040C6  6AF8               	clrf	tblptru,c
 10758  0040C8  0E07               	movlw	(high __ramtop+-1)
 10759  0040CA  64F7               	cpfsgt	tblptrh,c
 10760  0040CC  D003               	bra	u3347
 10761  0040CE  0008               	tblrd		*
 10762  0040D0  50F5               	movf	tablat,w,c
 10763  0040D2  D005               	bra	u3340
 10764  0040D4                     u3347:
 10765  0040D4  CFF6 FFE1          	movff	tblptrl,fsr1l
 10766  0040D8  CFF7 FFE2          	movff	tblptrh,fsr1h
 10767  0040DC  50E7               	movf	indf1,w,c
 10768  0040DE                     u3340:
 10769  0040DE  EC54  F021         	call	_glcd_WriteChar8X8
 10770  0040E2  D014               	goto	l488
 10771  0040E4                     l487:
 10772                           
 10773                           ;glcd.c: 679: else
 10774                           ;glcd.c: 680: glcd_WriteChar3x6(*str, color);
 10775  0040E4  C017  F00B         	movff	glcd_WriteString@color,glcd_WriteChar3x6@color
 10776  0040E8  C014  FFF6         	movff	glcd_WriteString@str,tblptrl
 10777  0040EC  C015  FFF7         	movff	glcd_WriteString@str+1,tblptrh
 10778  0040F0  6AF8               	clrf	tblptru,c
 10779  0040F2  0E07               	movlw	(high __ramtop+-1)
 10780  0040F4  64F7               	cpfsgt	tblptrh,c
 10781  0040F6  D003               	bra	u3357
 10782  0040F8  0008               	tblrd		*
 10783  0040FA  50F5               	movf	tablat,w,c
 10784  0040FC  D005               	bra	u3350
 10785  0040FE                     u3357:
 10786  0040FE  CFF6 FFE1          	movff	tblptrl,fsr1l
 10787  004102  CFF7 FFE2          	movff	tblptrh,fsr1h
 10788  004106  50E7               	movf	indf1,w,c
 10789  004108                     u3350:
 10790  004108  ECBA  F021         	call	_glcd_WriteChar3x6
 10791  00410C                     l488:
 10792                           
 10793                           ;glcd.c: 681: str++;
 10794  00410C  4A14               	infsnz	glcd_WriteString@str,f,c
 10795  00410E  2A15               	incf	glcd_WriteString@str+1,f,c
 10796  004110                     l485:
 10797  004110  C014  FFF6         	movff	glcd_WriteString@str,tblptrl
 10798  004114  C015  FFF7         	movff	glcd_WriteString@str+1,tblptrh
 10799  004118  6AF8               	clrf	tblptru,c
 10800  00411A  0E07               	movlw	(high __ramtop+-1)
 10801  00411C  64F7               	cpfsgt	tblptrh,c
 10802  00411E  D003               	bra	u3367
 10803  004120  0008               	tblrd		*
 10804  004122  50F5               	movf	tablat,w,c
 10805  004124  D005               	bra	u3360
 10806  004126                     u3367:
 10807  004126  CFF6 FFE1          	movff	tblptrl,fsr1l
 10808  00412A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10809  00412E  50E7               	movf	indf1,w,c
 10810  004130                     u3360:
 10811  004130  0900               	iorlw	0
 10812  004132  B4D8               	btfsc	status,2,c
 10813  004134  0012               	return	
 10814  004136  D7BE               	goto	l486
 10815  004138                     __end_of_glcd_WriteString:
 10816                           	opt stack 0
 10817                           tblptru	equ	0xFF8
 10818                           tblptrh	equ	0xFF7
 10819                           tblptrl	equ	0xFF6
 10820                           tablat	equ	0xFF5
 10821                           prodh	equ	0xFF4
 10822                           prodl	equ	0xFF3
 10823                           intcon	equ	0xFF2
 10824                           postinc0	equ	0xFEE
 10825                           wreg	equ	0xFE8
 10826                           indf1	equ	0xFE7
 10827                           postinc1	equ	0xFE6
 10828                           postdec1	equ	0xFE5
 10829                           plusw1	equ	0xFE3
 10830                           fsr1h	equ	0xFE2
 10831                           fsr1l	equ	0xFE1
 10832                           indf2	equ	0xFDF
 10833                           postinc2	equ	0xFDE
 10834                           postdec2	equ	0xFDD
 10835                           plusw2	equ	0xFDB
 10836                           fsr2h	equ	0xFDA
 10837                           fsr2l	equ	0xFD9
 10838                           status	equ	0xFD8
 10839                           
 10840 ;; *************** function _glcd_WriteChar8X8 *****************
 10841 ;; Defined at:
 10842 ;;		line 579 in file "glcd_library/glcd.c"
 10843 ;; Parameters:    Size  Location     Type
 10844 ;;  ch              1    wreg     unsigned char 
 10845 ;;  color           1   10[COMRAM] unsigned char 
 10846 ;; Auto vars:     Size  Location     Type
 10847 ;;  ch              1   15[COMRAM] unsigned char 
 10848 ;;  chr             2   13[COMRAM] unsigned int 
 10849 ;;  side            1   18[COMRAM] unsigned char 
 10850 ;;  i               1   17[COMRAM] unsigned char 
 10851 ;;  xpos            1   16[COMRAM] unsigned char 
 10852 ;; Return value:  Size  Location     Type
 10853 ;;                  1    wreg      void 
 10854 ;; Registers used:
 10855 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10856 ;; Tracked objects:
 10857 ;;		On entry : 0/0
 10858 ;;		On exit  : 0/0
 10859 ;;		Unchanged: 0/0
 10860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10861 ;;      Params:         1       0       0       0       0       0       0       0       0
 10862 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10863 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10864 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10865 ;;Total ram usage:        9 bytes
 10866 ;; Hardware stack levels used:    1
 10867 ;; Hardware stack levels required when called:    1
 10868 ;; This function calls:
 10869 ;;		_glcd_WriteByte
 10870 ;; This function is called by:
 10871 ;;		_glcd_WriteString
 10872 ;; This function uses a non-reentrant model
 10873 ;;
 10874                           
 10875                           	psect	text26
 10876  0042A8                     __ptext26:
 10877                           	opt stack 0
 10878  0042A8                     _glcd_WriteChar8X8:
 10879                           	opt stack 27
 10880                           
 10881                           ;incstack = 0
 10882                           ;glcd_WriteChar8X8@ch stored from wreg
 10883  0042A8  6E10               	movwf	glcd_WriteChar8X8@ch,c
 10884                           
 10885                           ;glcd.c: 581: unsigned char i,xpos;
 10886                           ;glcd.c: 582: unsigned char side = 0;
 10887  0042AA  0E00               	movlw	0
 10888  0042AC  6E13               	movwf	glcd_WriteChar8X8@side,c
 10889                           
 10890                           ;glcd.c: 583: unsigned int chr;
 10891                           ;glcd.c: 585: if (ch=='\n')
 10892  0042AE  0E0A               	movlw	10
 10893  0042B0  1810               	xorwf	glcd_WriteChar8X8@ch,w,c
 10894  0042B2  A4D8               	btfss	status,2,c
 10895  0042B4  D004               	goto	l463
 10896                           
 10897                           ;glcd.c: 586: {
 10898                           ;glcd.c: 587: x=0;
 10899  0042B6  0E00               	movlw	0
 10900  0042B8  6E53               	movwf	_x,c
 10901                           
 10902                           ;glcd.c: 588: y++;
 10903  0042BA  2A52               	incf	_y,f,c
 10904                           
 10905                           ;glcd.c: 589: return;
 10906  0042BC  0012               	return	
 10907  0042BE                     l463:
 10908                           
 10909                           ;glcd.c: 590: }
 10910                           ;glcd.c: 592: if(x > 63)
 10911  0042BE  0E3F               	movlw	63
 10912  0042C0  6453               	cpfsgt	_x,c
 10913  0042C2  D006               	goto	l465
 10914                           
 10915                           ;glcd.c: 593: {
 10916                           ;glcd.c: 594: side = 1;
 10917  0042C4  0E01               	movlw	1
 10918  0042C6  6E13               	movwf	glcd_WriteChar8X8@side,c
 10919                           
 10920                           ;glcd.c: 595: xpos=x-64;
 10921  0042C8  5053               	movf	_x,w,c
 10922  0042CA  0FC0               	addlw	192
 10923  0042CC  6E11               	movwf	glcd_WriteChar8X8@xpos,c
 10924                           
 10925                           ;glcd.c: 596: }
 10926  0042CE  D002               	goto	l466
 10927  0042D0                     l465:
 10928                           
 10929                           ;glcd.c: 597: else
 10930                           ;glcd.c: 598: xpos=x;
 10931  0042D0  C053  F011         	movff	_x,glcd_WriteChar8X8@xpos
 10932  0042D4                     l466:
 10933                           
 10934                           ;glcd.c: 600: chr = (int)ch*8;
 10935  0042D4  5010               	movf	glcd_WriteChar8X8@ch,w,c
 10936  0042D6  0D08               	mullw	8
 10937  0042D8  CFF3 F00E          	movff	prodl,glcd_WriteChar8X8@chr
 10938  0042DC  CFF4 F00F          	movff	prodh,glcd_WriteChar8X8@chr+1
 10939                           
 10940                           ;glcd.c: 602: for(i = 0; i < 8; i++)
 10941  0042E0  0E00               	movlw	0
 10942  0042E2  6E12               	movwf	glcd_WriteChar8X8@i,c
 10943  0042E4                     l3236:
 10944  0042E4  0E07               	movlw	7
 10945  0042E6  6412               	cpfsgt	glcd_WriteChar8X8@i,c
 10946  0042E8  D001               	goto	l467
 10947  0042EA  D041               	goto	u2900
 10948  0042EC                     l467:
 10949                           
 10950                           ;glcd.c: 603: {
 10951                           ;glcd.c: 605: if(xpos > 63)
 10952  0042EC  0E3F               	movlw	63
 10953  0042EE  6411               	cpfsgt	glcd_WriteChar8X8@xpos,c
 10954  0042F0  D012               	goto	l469
 10955                           
 10956                           ;glcd.c: 606: {
 10957                           ;glcd.c: 607: xpos -= 64;
 10958  0042F2  0E40               	movlw	64
 10959  0042F4  5E11               	subwf	glcd_WriteChar8X8@xpos,f,c
 10960                           
 10961                           ;glcd.c: 608: side = 1;
 10962  0042F6  0E01               	movlw	1
 10963  0042F8  6E13               	movwf	glcd_WriteChar8X8@side,c
 10964                           
 10965                           ;glcd.c: 609: LATBbits.LATB2=0;
 10966  0042FA  948A               	bcf	3978,2,c	;volatile
 10967                           
 10968                           ;glcd.c: 610: glcd_WriteByte(side, 0x40 | xpos);
 10969  0042FC  5011               	movf	glcd_WriteChar8X8@xpos,w,c
 10970  0042FE  0940               	iorlw	64
 10971  004300  6E09               	movwf	glcd_WriteByte@data,c
 10972  004302  5013               	movf	glcd_WriteChar8X8@side,w,c
 10973  004304  ECA6  F01D         	call	_glcd_WriteByte
 10974                           
 10975                           ;glcd.c: 611: glcd_WriteByte(side, 0xB8 | y);
 10976  004308  5052               	movf	_y,w,c
 10977  00430A  09B8               	iorlw	184
 10978  00430C  6E09               	movwf	glcd_WriteByte@data,c
 10979  00430E  5013               	movf	glcd_WriteChar8X8@side,w,c
 10980  004310  ECA6  F01D         	call	_glcd_WriteByte
 10981                           
 10982                           ;glcd.c: 612: LATBbits.LATB2=1;
 10983  004314  848A               	bsf	3978,2,c	;volatile
 10984  004316                     l469:
 10985                           
 10986                           ;glcd.c: 613: }
 10987                           ;glcd.c: 614: if(color)
 10988  004316  500B               	movf	glcd_WriteChar8X8@color,w,c
 10989  004318  B4D8               	btfsc	status,2,c
 10990  00431A  D013               	goto	l470
 10991                           
 10992                           ;glcd.c: 615: glcd_WriteByte(side,Font8x8[chr+i]);
 10993  00431C  5012               	movf	glcd_WriteChar8X8@i,w,c
 10994  00431E  240E               	addwf	glcd_WriteChar8X8@chr,w,c
 10995  004320  6E0C               	movwf	??_glcd_WriteChar8X8& (0+255),c
 10996  004322  0E00               	movlw	0
 10997  004324  200F               	addwfc	glcd_WriteChar8X8@chr+1,w,c
 10998  004326  6E0D               	movwf	(??_glcd_WriteChar8X8+1)& (0+255),c
 10999  004328  0EFB               	movlw	low _Font8x8
 11000  00432A  240C               	addwf	??_glcd_WriteChar8X8,w,c
 11001  00432C  6EF6               	movwf	tblptrl,c
 11002  00432E  0E72               	movlw	high _Font8x8
 11003  004330  200D               	addwfc	??_glcd_WriteChar8X8+1,w,c
 11004  004332  6EF7               	movwf	tblptrh,c
 11005  004334                     	if	0	;There are less than 3 active tblptr bytes
 11006  004334                     	endif
 11007  004334  0008               	tblrd		*
 11008  004336  CFF5 F009          	movff	tablat,glcd_WriteByte@data
 11009  00433A  5013               	movf	glcd_WriteChar8X8@side,w,c
 11010  00433C  ECA6  F01D         	call	_glcd_WriteByte
 11011  004340  D013               	goto	l471
 11012  004342                     l470:
 11013                           
 11014                           ;glcd.c: 616: else
 11015                           ;glcd.c: 617: glcd_WriteByte(side,~(Font8x8[chr+i]));
 11016  004342  5012               	movf	glcd_WriteChar8X8@i,w,c
 11017  004344  240E               	addwf	glcd_WriteChar8X8@chr,w,c
 11018  004346  6E0C               	movwf	??_glcd_WriteChar8X8& (0+255),c
 11019  004348  0E00               	movlw	0
 11020  00434A  200F               	addwfc	glcd_WriteChar8X8@chr+1,w,c
 11021  00434C  6E0D               	movwf	(??_glcd_WriteChar8X8+1)& (0+255),c
 11022  00434E  0EFB               	movlw	low _Font8x8
 11023  004350  240C               	addwf	??_glcd_WriteChar8X8,w,c
 11024  004352  6EF6               	movwf	tblptrl,c
 11025  004354  0E72               	movlw	high _Font8x8
 11026  004356  200D               	addwfc	??_glcd_WriteChar8X8+1,w,c
 11027  004358  6EF7               	movwf	tblptrh,c
 11028  00435A                     	if	0	;There are less than 3 active tblptr bytes
 11029  00435A                     	endif
 11030  00435A  0008               	tblrd		*
 11031  00435C  50F5               	movf	tablat,w,c
 11032  00435E  0AFF               	xorlw	255
 11033  004360  6E09               	movwf	glcd_WriteByte@data,c
 11034  004362  5013               	movf	glcd_WriteChar8X8@side,w,c
 11035  004364  ECA6  F01D         	call	_glcd_WriteByte
 11036  004368                     l471:
 11037                           
 11038                           ;glcd.c: 618: xpos++;
 11039  004368  2A11               	incf	glcd_WriteChar8X8@xpos,f,c
 11040  00436A  2A12               	incf	glcd_WriteChar8X8@i,f,c
 11041  00436C  D7BB               	goto	l3236
 11042  00436E                     u2900:
 11043                           
 11044                           ;glcd.c: 619: }
 11045                           ;glcd.c: 620: x+=8;
 11046  00436E  0E08               	movlw	8
 11047  004370  2653               	addwf	_x,f,c
 11048  004372  0012               	return		;funcret
 11049  004374                     __end_of_glcd_WriteChar8X8:
 11050                           	opt stack 0
 11051                           tblptru	equ	0xFF8
 11052                           tblptrh	equ	0xFF7
 11053                           tblptrl	equ	0xFF6
 11054                           tablat	equ	0xFF5
 11055                           prodh	equ	0xFF4
 11056                           prodl	equ	0xFF3
 11057                           intcon	equ	0xFF2
 11058                           postinc0	equ	0xFEE
 11059                           wreg	equ	0xFE8
 11060                           indf1	equ	0xFE7
 11061                           postinc1	equ	0xFE6
 11062                           postdec1	equ	0xFE5
 11063                           plusw1	equ	0xFE3
 11064                           fsr1h	equ	0xFE2
 11065                           fsr1l	equ	0xFE1
 11066                           indf2	equ	0xFDF
 11067                           postinc2	equ	0xFDE
 11068                           postdec2	equ	0xFDD
 11069                           plusw2	equ	0xFDB
 11070                           fsr2h	equ	0xFDA
 11071                           fsr2l	equ	0xFD9
 11072                           status	equ	0xFD8
 11073                           
 11074 ;; *************** function _glcd_WriteChar3x6 *****************
 11075 ;; Defined at:
 11076 ;;		line 627 in file "glcd_library/glcd.c"
 11077 ;; Parameters:    Size  Location     Type
 11078 ;;  ch              1    wreg     unsigned char 
 11079 ;;  color           1   10[COMRAM] unsigned char 
 11080 ;; Auto vars:     Size  Location     Type
 11081 ;;  ch              1   14[COMRAM] unsigned char 
 11082 ;;  side            1   16[COMRAM] unsigned char 
 11083 ;;  i               1   15[COMRAM] unsigned char 
 11084 ;;  xpos            1   13[COMRAM] unsigned char 
 11085 ;; Return value:  Size  Location     Type
 11086 ;;                  1    wreg      void 
 11087 ;; Registers used:
 11088 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11089 ;; Tracked objects:
 11090 ;;		On entry : 0/0
 11091 ;;		On exit  : 0/0
 11092 ;;		Unchanged: 0/0
 11093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11094 ;;      Params:         1       0       0       0       0       0       0       0       0
 11095 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11096 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11097 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11098 ;;Total ram usage:        7 bytes
 11099 ;; Hardware stack levels used:    1
 11100 ;; Hardware stack levels required when called:    1
 11101 ;; This function calls:
 11102 ;;		_glcd_WriteByte
 11103 ;; This function is called by:
 11104 ;;		_glcd_WriteString
 11105 ;; This function uses a non-reentrant model
 11106 ;;
 11107                           
 11108                           	psect	text27
 11109  004374                     __ptext27:
 11110                           	opt stack 0
 11111  004374                     _glcd_WriteChar3x6:
 11112                           	opt stack 27
 11113                           
 11114                           ;incstack = 0
 11115                           ;glcd_WriteChar3x6@ch stored from wreg
 11116  004374  6E0F               	movwf	glcd_WriteChar3x6@ch,c
 11117                           
 11118                           ;glcd.c: 629: unsigned char i,xpos;
 11119                           ;glcd.c: 630: unsigned char side = 0;
 11120  004376  0E00               	movlw	0
 11121  004378  6E11               	movwf	glcd_WriteChar3x6@side,c
 11122                           
 11123                           ;glcd.c: 632: if (ch=='\n')
 11124  00437A  0E0A               	movlw	10
 11125  00437C  180F               	xorwf	glcd_WriteChar3x6@ch,w,c
 11126  00437E  A4D8               	btfss	status,2,c
 11127  004380  D004               	goto	l474
 11128                           
 11129                           ;glcd.c: 633: {
 11130                           ;glcd.c: 634: x=0;
 11131  004382  0E00               	movlw	0
 11132  004384  6E53               	movwf	_x,c
 11133                           
 11134                           ;glcd.c: 635: y++;
 11135  004386  2A52               	incf	_y,f,c
 11136                           
 11137                           ;glcd.c: 636: return;
 11138  004388  0012               	return	
 11139  00438A                     l474:
 11140                           
 11141                           ;glcd.c: 637: }
 11142                           ;glcd.c: 639: if(x > 63)
 11143  00438A  0E3F               	movlw	63
 11144  00438C  6453               	cpfsgt	_x,c
 11145  00438E  D006               	goto	l476
 11146                           
 11147                           ;glcd.c: 640: {
 11148                           ;glcd.c: 641: side = 1;
 11149  004390  0E01               	movlw	1
 11150  004392  6E11               	movwf	glcd_WriteChar3x6@side,c
 11151                           
 11152                           ;glcd.c: 642: xpos=x-64;
 11153  004394  5053               	movf	_x,w,c
 11154  004396  0FC0               	addlw	192
 11155  004398  6E0E               	movwf	glcd_WriteChar3x6@xpos,c
 11156                           
 11157                           ;glcd.c: 643: }
 11158  00439A  D002               	goto	l477
 11159  00439C                     l476:
 11160                           
 11161                           ;glcd.c: 644: else
 11162                           ;glcd.c: 645: xpos=x;
 11163  00439C  C053  F00E         	movff	_x,glcd_WriteChar3x6@xpos
 11164  0043A0                     l477:
 11165                           
 11166                           ;glcd.c: 647: ch -= 32;
 11167  0043A0  0E20               	movlw	32
 11168  0043A2  5E0F               	subwf	glcd_WriteChar3x6@ch,f,c
 11169                           
 11170                           ;glcd.c: 649: for(i = 0; i < 3; i++)
 11171  0043A4  0E00               	movlw	0
 11172  0043A6  6E10               	movwf	glcd_WriteChar3x6@i,c
 11173  0043A8                     l3288:
 11174  0043A8  0E02               	movlw	2
 11175  0043AA  6410               	cpfsgt	glcd_WriteChar3x6@i,c
 11176  0043AC  D001               	goto	l478
 11177  0043AE  D051               	goto	u2960
 11178  0043B0                     l478:
 11179                           
 11180                           ;glcd.c: 650: {
 11181                           ;glcd.c: 651: if(xpos > 63)
 11182  0043B0  0E3F               	movlw	63
 11183  0043B2  640E               	cpfsgt	glcd_WriteChar3x6@xpos,c
 11184  0043B4  D012               	goto	l480
 11185                           
 11186                           ;glcd.c: 652: {
 11187                           ;glcd.c: 653: xpos -= 64;
 11188  0043B6  0E40               	movlw	64
 11189  0043B8  5E0E               	subwf	glcd_WriteChar3x6@xpos,f,c
 11190                           
 11191                           ;glcd.c: 654: side = 1;
 11192  0043BA  0E01               	movlw	1
 11193  0043BC  6E11               	movwf	glcd_WriteChar3x6@side,c
 11194                           
 11195                           ;glcd.c: 655: LATBbits.LATB2=0;
 11196  0043BE  948A               	bcf	3978,2,c	;volatile
 11197                           
 11198                           ;glcd.c: 656: glcd_WriteByte(side, 0x40 | xpos);
 11199  0043C0  500E               	movf	glcd_WriteChar3x6@xpos,w,c
 11200  0043C2  0940               	iorlw	64
 11201  0043C4  6E09               	movwf	glcd_WriteByte@data,c
 11202  0043C6  5011               	movf	glcd_WriteChar3x6@side,w,c
 11203  0043C8  ECA6  F01D         	call	_glcd_WriteByte
 11204                           
 11205                           ;glcd.c: 657: glcd_WriteByte(side, 0xB8 | y);
 11206  0043CC  5052               	movf	_y,w,c
 11207  0043CE  09B8               	iorlw	184
 11208  0043D0  6E09               	movwf	glcd_WriteByte@data,c
 11209  0043D2  5011               	movf	glcd_WriteChar3x6@side,w,c
 11210  0043D4  ECA6  F01D         	call	_glcd_WriteByte
 11211                           
 11212                           ;glcd.c: 658: LATBbits.LATB2=1;
 11213  0043D8  848A               	bsf	3978,2,c	;volatile
 11214  0043DA                     l480:
 11215                           
 11216                           ;glcd.c: 659: }
 11217                           ;glcd.c: 660: if(color)
 11218  0043DA  500B               	movf	glcd_WriteChar3x6@color,w,c
 11219  0043DC  B4D8               	btfsc	status,2,c
 11220  0043DE  D01B               	goto	l481
 11221                           
 11222                           ;glcd.c: 661: glcd_WriteByte(side,Font3x6[ch][i]);
 11223  0043E0  500F               	movf	glcd_WriteChar3x6@ch,w,c
 11224  0043E2  0D03               	mullw	3
 11225  0043E4  0EFB               	movlw	low _Font3x6
 11226  0043E6  6E0C               	movwf	??_glcd_WriteChar3x6& (0+255),c
 11227  0043E8  0E7E               	movlw	high _Font3x6
 11228  0043EA  6E0D               	movwf	(??_glcd_WriteChar3x6+1)& (0+255),c
 11229  0043EC  50F3               	movf	prodl,w,c
 11230  0043EE  260C               	addwf	??_glcd_WriteChar3x6,f,c
 11231  0043F0  50F4               	movf	prodh,w,c
 11232  0043F2  220D               	addwfc	??_glcd_WriteChar3x6+1,f,c
 11233  0043F4  5010               	movf	glcd_WriteChar3x6@i,w,c
 11234  0043F6  0D01               	mullw	1
 11235  0043F8  50F3               	movf	prodl,w,c
 11236  0043FA  260C               	addwf	??_glcd_WriteChar3x6,f,c
 11237  0043FC  50F4               	movf	prodh,w,c
 11238  0043FE  220D               	addwfc	??_glcd_WriteChar3x6+1,f,c
 11239  004400  C00C  FFF6         	movff	??_glcd_WriteChar3x6,tblptrl
 11240  004404  C00D  FFF7         	movff	??_glcd_WriteChar3x6+1,tblptrh
 11241  004408                     	if	0	;tblptru may be non-zero
 11242  004408                     	endif
 11243  004408                     	if	0	;tblptru may be non-zero
 11244  004408                     	endif
 11245  004408  0008               	tblrd		*
 11246  00440A  CFF5 F009          	movff	tablat,glcd_WriteByte@data
 11247  00440E  5011               	movf	glcd_WriteChar3x6@side,w,c
 11248  004410  ECA6  F01D         	call	_glcd_WriteByte
 11249  004414  D01B               	goto	l482
 11250  004416                     l481:
 11251                           
 11252                           ;glcd.c: 662: else
 11253                           ;glcd.c: 663: glcd_WriteByte(side,~(Font3x6[ch][i]));
 11254  004416  500F               	movf	glcd_WriteChar3x6@ch,w,c
 11255  004418  0D03               	mullw	3
 11256  00441A  0EFB               	movlw	low _Font3x6
 11257  00441C  6E0C               	movwf	??_glcd_WriteChar3x6& (0+255),c
 11258  00441E  0E7E               	movlw	high _Font3x6
 11259  004420  6E0D               	movwf	(??_glcd_WriteChar3x6+1)& (0+255),c
 11260  004422  50F3               	movf	prodl,w,c
 11261  004424  260C               	addwf	??_glcd_WriteChar3x6,f,c
 11262  004426  50F4               	movf	prodh,w,c
 11263  004428  220D               	addwfc	??_glcd_WriteChar3x6+1,f,c
 11264  00442A  5010               	movf	glcd_WriteChar3x6@i,w,c
 11265  00442C  0D01               	mullw	1
 11266  00442E  50F3               	movf	prodl,w,c
 11267  004430  260C               	addwf	??_glcd_WriteChar3x6,f,c
 11268  004432  50F4               	movf	prodh,w,c
 11269  004434  220D               	addwfc	??_glcd_WriteChar3x6+1,f,c
 11270  004436  C00C  FFF6         	movff	??_glcd_WriteChar3x6,tblptrl
 11271  00443A  C00D  FFF7         	movff	??_glcd_WriteChar3x6+1,tblptrh
 11272  00443E                     	if	0	;tblptru may be non-zero
 11273  00443E                     	endif
 11274  00443E                     	if	0	;tblptru may be non-zero
 11275  00443E                     	endif
 11276  00443E  0008               	tblrd		*
 11277  004440  50F5               	movf	tablat,w,c
 11278  004442  0AFF               	xorlw	255
 11279  004444  6E09               	movwf	glcd_WriteByte@data,c
 11280  004446  5011               	movf	glcd_WriteChar3x6@side,w,c
 11281  004448  ECA6  F01D         	call	_glcd_WriteByte
 11282  00444C                     l482:
 11283                           
 11284                           ;glcd.c: 664: xpos++;
 11285  00444C  2A0E               	incf	glcd_WriteChar3x6@xpos,f,c
 11286  00444E  2A10               	incf	glcd_WriteChar3x6@i,f,c
 11287  004450  D7AB               	goto	l3288
 11288  004452                     u2960:
 11289                           
 11290                           ;glcd.c: 665: }
 11291                           ;glcd.c: 666: x+=5;
 11292  004452  0E05               	movlw	5
 11293  004454  2653               	addwf	_x,f,c
 11294  004456  0012               	return		;funcret
 11295  004458                     __end_of_glcd_WriteChar3x6:
 11296                           	opt stack 0
 11297                           tblptru	equ	0xFF8
 11298                           tblptrh	equ	0xFF7
 11299                           tblptrl	equ	0xFF6
 11300                           tablat	equ	0xFF5
 11301                           prodh	equ	0xFF4
 11302                           prodl	equ	0xFF3
 11303                           intcon	equ	0xFF2
 11304                           postinc0	equ	0xFEE
 11305                           wreg	equ	0xFE8
 11306                           indf1	equ	0xFE7
 11307                           postinc1	equ	0xFE6
 11308                           postdec1	equ	0xFE5
 11309                           plusw1	equ	0xFE3
 11310                           fsr1h	equ	0xFE2
 11311                           fsr1l	equ	0xFE1
 11312                           indf2	equ	0xFDF
 11313                           postinc2	equ	0xFDE
 11314                           postdec2	equ	0xFDD
 11315                           plusw2	equ	0xFDB
 11316                           fsr2h	equ	0xFDA
 11317                           fsr2l	equ	0xFD9
 11318                           status	equ	0xFD8
 11319                           
 11320 ;; *************** function _glcd_FillScreen *****************
 11321 ;; Defined at:
 11322 ;;		line 530 in file "glcd_library/glcd.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;  color           1    wreg     unsigned char 
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;  color           1   10[COMRAM] unsigned char 
 11327 ;;  i               1   12[COMRAM] unsigned char 
 11328 ;;  j               1   11[COMRAM] unsigned char 
 11329 ;; Return value:  Size  Location     Type
 11330 ;;                  1    wreg      void 
 11331 ;; Registers used:
 11332 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11333 ;; Tracked objects:
 11334 ;;		On entry : 0/0
 11335 ;;		On exit  : 0/0
 11336 ;;		Unchanged: 0/0
 11337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11338 ;;      Params:         0       0       0       0       0       0       0       0       0
 11339 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11340 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11341 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11342 ;;Total ram usage:        3 bytes
 11343 ;; Hardware stack levels used:    1
 11344 ;; Hardware stack levels required when called:    1
 11345 ;; This function calls:
 11346 ;;		_glcd_WriteByte
 11347 ;; This function is called by:
 11348 ;;		_displayStartScore
 11349 ;;		_main
 11350 ;;		_glcd_Init
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354                           	psect	text28
 11355  003E62                     __ptext28:
 11356                           	opt stack 0
 11357  003E62                     _glcd_FillScreen:
 11358                           	opt stack 28
 11359                           
 11360                           ;incstack = 0
 11361                           ;glcd_FillScreen@color stored from wreg
 11362  003E62  6E0B               	movwf	glcd_FillScreen@color,c
 11363                           
 11364                           ;glcd.c: 532: unsigned char i, j;
 11365                           ;glcd.c: 534: for(i = 0; i < 8; i ++)
 11366  003E64  0E00               	movlw	0
 11367  003E66  6E0D               	movwf	glcd_FillScreen@i,c
 11368  003E68                     l3548:
 11369  003E68  0E07               	movlw	7
 11370  003E6A  640D               	cpfsgt	glcd_FillScreen@i,c
 11371  003E6C  D001               	goto	l449
 11372  003E6E  0012               	return	
 11373  003E70                     l449:
 11374                           
 11375                           ;glcd.c: 535: {
 11376                           ;glcd.c: 536: LATBbits.LATB2=0;
 11377  003E70  948A               	bcf	3978,2,c	;volatile
 11378                           
 11379                           ;glcd.c: 537: glcd_WriteByte(0, 0b01000000);
 11380  003E72  0E40               	movlw	64
 11381  003E74  6E09               	movwf	glcd_WriteByte@data,c
 11382  003E76  0E00               	movlw	0
 11383  003E78  ECA6  F01D         	call	_glcd_WriteByte
 11384                           
 11385                           ;glcd.c: 538: glcd_WriteByte(1, 0b01000000);
 11386  003E7C  0E40               	movlw	64
 11387  003E7E  6E09               	movwf	glcd_WriteByte@data,c
 11388  003E80  0E01               	movlw	1
 11389  003E82  ECA6  F01D         	call	_glcd_WriteByte
 11390                           
 11391                           ;glcd.c: 539: glcd_WriteByte(0, i | 0b10111000);
 11392  003E86  500D               	movf	glcd_FillScreen@i,w,c
 11393  003E88  09B8               	iorlw	184
 11394  003E8A  6E09               	movwf	glcd_WriteByte@data,c
 11395  003E8C  0E00               	movlw	0
 11396  003E8E  ECA6  F01D         	call	_glcd_WriteByte
 11397                           
 11398                           ;glcd.c: 540: glcd_WriteByte(1, i | 0b10111000);
 11399  003E92  500D               	movf	glcd_FillScreen@i,w,c
 11400  003E94  09B8               	iorlw	184
 11401  003E96  6E09               	movwf	glcd_WriteByte@data,c
 11402  003E98  0E01               	movlw	1
 11403  003E9A  ECA6  F01D         	call	_glcd_WriteByte
 11404                           
 11405                           ;glcd.c: 541: LATBbits.LATB2=1;
 11406  003E9E  848A               	bsf	3978,2,c	;volatile
 11407                           
 11408                           ;glcd.c: 543: for(j = 0; j < 64; j++)
 11409  003EA0  0E00               	movlw	0
 11410  003EA2  6E0C               	movwf	glcd_FillScreen@j,c
 11411  003EA4                     l3562:
 11412  003EA4  0E3F               	movlw	63
 11413  003EA6  640C               	cpfsgt	glcd_FillScreen@j,c
 11414  003EA8  D001               	goto	l451
 11415  003EAA  D010               	goto	u3400
 11416  003EAC                     l451:
 11417                           
 11418                           ;glcd.c: 544: {
 11419                           ;glcd.c: 545: glcd_WriteByte(0, 0xFF*color);
 11420  003EAC  500B               	movf	glcd_FillScreen@color,w,c
 11421  003EAE  0DFF               	mullw	255
 11422  003EB0  CFF3 F009          	movff	prodl,glcd_WriteByte@data
 11423  003EB4  0E00               	movlw	0
 11424  003EB6  ECA6  F01D         	call	_glcd_WriteByte
 11425                           
 11426                           ;glcd.c: 546: glcd_WriteByte(1, 0xFF*color);
 11427  003EBA  500B               	movf	glcd_FillScreen@color,w,c
 11428  003EBC  0DFF               	mullw	255
 11429  003EBE  CFF3 F009          	movff	prodl,glcd_WriteByte@data
 11430  003EC2  0E01               	movlw	1
 11431  003EC4  ECA6  F01D         	call	_glcd_WriteByte
 11432  003EC8  2A0C               	incf	glcd_FillScreen@j,f,c
 11433  003ECA  D7EC               	goto	l3562
 11434  003ECC                     u3400:
 11435  003ECC  2A0D               	incf	glcd_FillScreen@i,f,c
 11436  003ECE  D7CC               	goto	l3548
 11437  003ED0                     __end_of_glcd_FillScreen:
 11438                           	opt stack 0
 11439                           tblptru	equ	0xFF8
 11440                           tblptrh	equ	0xFF7
 11441                           tblptrl	equ	0xFF6
 11442                           tablat	equ	0xFF5
 11443                           prodh	equ	0xFF4
 11444                           prodl	equ	0xFF3
 11445                           intcon	equ	0xFF2
 11446                           postinc0	equ	0xFEE
 11447                           wreg	equ	0xFE8
 11448                           indf1	equ	0xFE7
 11449                           postinc1	equ	0xFE6
 11450                           postdec1	equ	0xFE5
 11451                           plusw1	equ	0xFE3
 11452                           fsr1h	equ	0xFE2
 11453                           fsr1l	equ	0xFE1
 11454                           indf2	equ	0xFDF
 11455                           postinc2	equ	0xFDE
 11456                           postdec2	equ	0xFDD
 11457                           plusw2	equ	0xFDB
 11458                           fsr2h	equ	0xFDA
 11459                           fsr2l	equ	0xFD9
 11460                           status	equ	0xFD8
 11461                           
 11462 ;; *************** function _glcd_WriteByte *****************
 11463 ;; Defined at:
 11464 ;;		line 395 in file "glcd_library/glcd.c"
 11465 ;; Parameters:    Size  Location     Type
 11466 ;;  side            1    wreg     unsigned char 
 11467 ;;  data            1    8[COMRAM] unsigned char 
 11468 ;; Auto vars:     Size  Location     Type
 11469 ;;  side            1    9[COMRAM] unsigned char 
 11470 ;; Return value:  Size  Location     Type
 11471 ;;                  1    wreg      void 
 11472 ;; Registers used:
 11473 ;;		wreg, status,2
 11474 ;; Tracked objects:
 11475 ;;		On entry : 0/0
 11476 ;;		On exit  : 0/0
 11477 ;;		Unchanged: 0/0
 11478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11479 ;;      Params:         1       0       0       0       0       0       0       0       0
 11480 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11481 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11482 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11483 ;;Total ram usage:        2 bytes
 11484 ;; Hardware stack levels used:    1
 11485 ;; This function calls:
 11486 ;;		Nothing
 11487 ;; This function is called by:
 11488 ;;		_glcd_Init
 11489 ;;		_glcd_PlotPixel
 11490 ;;		_glcd_FillScreen
 11491 ;;		_glcd_SetCursor
 11492 ;;		_glcd_WriteChar8X8
 11493 ;;		_glcd_WriteChar3x6
 11494 ;;		_glcd_Image
 11495 ;; This function uses a non-reentrant model
 11496 ;;
 11497                           
 11498                           	psect	text29
 11499  003B4C                     __ptext29:
 11500                           	opt stack 0
 11501  003B4C                     _glcd_WriteByte:
 11502                           	opt stack 28
 11503                           
 11504                           ;incstack = 0
 11505                           ;glcd_WriteByte@side stored from wreg
 11506  003B4C  6E0A               	movwf	glcd_WriteByte@side,c
 11507                           
 11508                           ;glcd.c: 397: if(side)
 11509  003B4E  500A               	movf	glcd_WriteByte@side,w,c
 11510  003B50  B4D8               	btfsc	status,2,c
 11511  003B52  D003               	goto	l419
 11512                           
 11513                           ;glcd.c: 398: {
 11514                           ;glcd.c: 399: LATBbits.LATB0 = 1;
 11515  003B54  808A               	bsf	3978,0,c	;volatile
 11516                           
 11517                           ;glcd.c: 400: LATBbits.LATB1 = 0;
 11518  003B56  928A               	bcf	3978,1,c	;volatile
 11519                           
 11520                           ;glcd.c: 401: }
 11521  003B58  D002               	goto	l420
 11522  003B5A                     l419:
 11523                           
 11524                           ;glcd.c: 402: else
 11525                           ;glcd.c: 403: {
 11526                           ;glcd.c: 404: LATBbits.LATB1 = 0;
 11527  003B5A  928A               	bcf	3978,1,c	;volatile
 11528                           
 11529                           ;glcd.c: 405: LATBbits.LATB1 = 1;
 11530  003B5C  828A               	bsf	3978,1,c	;volatile
 11531  003B5E                     l420:
 11532                           
 11533                           ;glcd.c: 406: }
 11534                           ;glcd.c: 408: TRISD=0;
 11535  003B5E  0E00               	movlw	0
 11536  003B60  6E95               	movwf	3989,c	;volatile
 11537                           
 11538                           ;glcd.c: 409: LATBbits.LATB3=0;
 11539  003B62  968A               	bcf	3978,3,c	;volatile
 11540                           
 11541                           ;glcd.c: 411: LATD = data;
 11542  003B64  C009  FF8C         	movff	glcd_WriteByte@data,3980	;volatile
 11543                           
 11544                           ;glcd.c: 415: LATBbits.LATB4 = 1;
 11545  003B68  888A               	bsf	3978,4,c	;volatile
 11546                           
 11547                           ;glcd.c: 417: _delay((unsigned long)((1)*(100000/4000.0)));
 11548  003B6A  0E08               	movlw	8
 11549  003B6C                     u5327:
 11550  003B6C  2EE8               	decfsz	wreg,f,c
 11551  003B6E  D7FE               	bra	u5327
 11552  003B70  F000               	nop	
 11553                           
 11554                           ;glcd.c: 418: LATBbits.LATB4 = 0;
 11555  003B72  988A               	bcf	3978,4,c	;volatile
 11556                           
 11557                           ;glcd.c: 420: _delay((unsigned long)((1)*(100000/4000.0)));
 11558  003B74  0E08               	movlw	8
 11559  003B76                     u5337:
 11560  003B76  2EE8               	decfsz	wreg,f,c
 11561  003B78  D7FE               	bra	u5337
 11562  003B7A  F000               	nop	
 11563                           
 11564                           ;glcd.c: 423: LATBbits.LATB0 = 0;
 11565  003B7C  908A               	bcf	3978,0,c	;volatile
 11566                           
 11567                           ;glcd.c: 424: LATBbits.LATB1 = 0;
 11568  003B7E  928A               	bcf	3978,1,c	;volatile
 11569  003B80  0012               	return		;funcret
 11570  003B82                     __end_of_glcd_WriteByte:
 11571                           	opt stack 0
 11572                           tblptru	equ	0xFF8
 11573                           tblptrh	equ	0xFF7
 11574                           tblptrl	equ	0xFF6
 11575                           tablat	equ	0xFF5
 11576                           prodh	equ	0xFF4
 11577                           prodl	equ	0xFF3
 11578                           intcon	equ	0xFF2
 11579                           postinc0	equ	0xFEE
 11580                           wreg	equ	0xFE8
 11581                           indf1	equ	0xFE7
 11582                           postinc1	equ	0xFE6
 11583                           postdec1	equ	0xFE5
 11584                           plusw1	equ	0xFE3
 11585                           fsr1h	equ	0xFE2
 11586                           fsr1l	equ	0xFE1
 11587                           indf2	equ	0xFDF
 11588                           postinc2	equ	0xFDE
 11589                           postdec2	equ	0xFDD
 11590                           plusw2	equ	0xFDB
 11591                           fsr2h	equ	0xFDA
 11592                           fsr2l	equ	0xFD9
 11593                           status	equ	0xFD8
 11594                           
 11595 ;; *************** function _delayHomeScreen *****************
 11596 ;; Defined at:
 11597 ;;		line 506 in file "main.c"
 11598 ;; Parameters:    Size  Location     Type
 11599 ;;		None
 11600 ;; Auto vars:     Size  Location     Type
 11601 ;;  d               2    2[COMRAM] unsigned int 
 11602 ;;  c               2    0[COMRAM] unsigned int 
 11603 ;; Return value:  Size  Location     Type
 11604 ;;                  1    wreg      void 
 11605 ;; Registers used:
 11606 ;;		wreg, status,2, status,0
 11607 ;; Tracked objects:
 11608 ;;		On entry : 0/0
 11609 ;;		On exit  : 0/0
 11610 ;;		Unchanged: 0/0
 11611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11612 ;;      Params:         0       0       0       0       0       0       0       0       0
 11613 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11614 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11615 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11616 ;;Total ram usage:        4 bytes
 11617 ;; Hardware stack levels used:    1
 11618 ;; This function calls:
 11619 ;;		Nothing
 11620 ;; This function is called by:
 11621 ;;		_displayStartScore
 11622 ;;		_main
 11623 ;; This function uses a non-reentrant model
 11624 ;;
 11625                           
 11626                           	psect	text30
 11627  003B18                     __ptext30:
 11628                           	opt stack 0
 11629  003B18                     _delayHomeScreen:
 11630                           	opt stack 29
 11631                           
 11632                           ;main.c: 507: uint16_t c, d;
 11633                           ;main.c: 508: for (c = 0; c <= 65530; c++){
 11634                           
 11635                           ;incstack = 0
 11636  003B18  0E00               	movlw	0
 11637  003B1A  6E02               	movwf	delayHomeScreen@c+1,c
 11638  003B1C  0E00               	movlw	0
 11639  003B1E  6E01               	movwf	delayHomeScreen@c,c
 11640  003B20                     l3392:
 11641  003B20  0EFB               	movlw	251
 11642  003B22  5C01               	subwf	delayHomeScreen@c,w,c
 11643  003B24  0EFF               	movlw	255
 11644  003B26  5802               	subwfb	delayHomeScreen@c+1,w,c
 11645  003B28  B0D8               	btfsc	status,0,c
 11646  003B2A  0012               	return	
 11647                           
 11648                           ;main.c: 509: for (d = 0; d <= 10; d++)
 11649  003B2C  0E00               	movlw	0
 11650  003B2E  6E04               	movwf	delayHomeScreen@d+1,c
 11651  003B30  0E00               	movlw	0
 11652  003B32  6E03               	movwf	delayHomeScreen@d,c
 11653  003B34                     l3398:
 11654  003B34  5004               	movf	delayHomeScreen@d+1,w,c
 11655  003B36  E107               	bnz	l3406
 11656  003B38  0E0B               	movlw	11
 11657  003B3A  5C03               	subwf	delayHomeScreen@d,w,c
 11658  003B3C  B0D8               	btfsc	status,0,c
 11659  003B3E  D003               	goto	u3110
 11660                           
 11661                           ;main.c: 510: {}
 11662  003B40  4A03               	infsnz	delayHomeScreen@d,f,c
 11663  003B42  2A04               	incf	delayHomeScreen@d+1,f,c
 11664  003B44  D7F7               	goto	l3398
 11665  003B46                     u3110:
 11666  003B46                     l3406:
 11667  003B46  4A01               	infsnz	delayHomeScreen@c,f,c
 11668  003B48  2A02               	incf	delayHomeScreen@c+1,f,c
 11669  003B4A  D7EA               	goto	l3392
 11670  003B4C                     __end_of_delayHomeScreen:
 11671                           	opt stack 0
 11672                           tblptru	equ	0xFF8
 11673                           tblptrh	equ	0xFF7
 11674                           tblptrl	equ	0xFF6
 11675                           tablat	equ	0xFF5
 11676                           prodh	equ	0xFF4
 11677                           prodl	equ	0xFF3
 11678                           intcon	equ	0xFF2
 11679                           postinc0	equ	0xFEE
 11680                           wreg	equ	0xFE8
 11681                           indf1	equ	0xFE7
 11682                           postinc1	equ	0xFE6
 11683                           postdec1	equ	0xFE5
 11684                           plusw1	equ	0xFE3
 11685                           fsr1h	equ	0xFE2
 11686                           fsr1l	equ	0xFE1
 11687                           indf2	equ	0xFDF
 11688                           postinc2	equ	0xFDE
 11689                           postdec2	equ	0xFDD
 11690                           plusw2	equ	0xFDB
 11691                           fsr2h	equ	0xFDA
 11692                           fsr2l	equ	0xFD9
 11693                           status	equ	0xFD8
 11694                           
 11695 ;; *************** function _delay *****************
 11696 ;; Defined at:
 11697 ;;		line 497 in file "main.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;		None
 11700 ;; Auto vars:     Size  Location     Type
 11701 ;;  c               2    0[COMRAM] unsigned int 
 11702 ;;  d               2    0        unsigned int 
 11703 ;; Return value:  Size  Location     Type
 11704 ;;                  1    wreg      void 
 11705 ;; Registers used:
 11706 ;;		wreg, status,2, status,0
 11707 ;; Tracked objects:
 11708 ;;		On entry : 0/0
 11709 ;;		On exit  : 0/0
 11710 ;;		Unchanged: 0/0
 11711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11712 ;;      Params:         0       0       0       0       0       0       0       0       0
 11713 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11714 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11715 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11716 ;;Total ram usage:        2 bytes
 11717 ;; Hardware stack levels used:    1
 11718 ;; This function calls:
 11719 ;;		Nothing
 11720 ;; This function is called by:
 11721 ;;		_main
 11722 ;; This function uses a non-reentrant model
 11723 ;;
 11724                           
 11725                           	psect	text31
 11726  003A70                     __ptext31:
 11727                           	opt stack 0
 11728  003A70                     _delay:
 11729                           	opt stack 30
 11730                           
 11731                           ;main.c: 498: uint16_t c, d;
 11732                           ;main.c: 499: for (c = 0; c <= 65530; c++){
 11733                           
 11734                           ;incstack = 0
 11735  003A70  0E00               	movlw	0
 11736  003A72  6E02               	movwf	delay@c+1,c
 11737  003A74  0E00               	movlw	0
 11738  003A76  6E01               	movwf	delay@c,c
 11739  003A78                     l3958:
 11740  003A78  0EFB               	movlw	251
 11741  003A7A  5C01               	subwf	delay@c,w,c
 11742  003A7C  0EFF               	movlw	255
 11743  003A7E  5802               	subwfb	delay@c+1,w,c
 11744  003A80  B0D8               	btfsc	status,0,c
 11745  003A82  0012               	return	
 11746  003A84  4A01               	infsnz	delay@c,f,c
 11747  003A86  2A02               	incf	delay@c+1,f,c
 11748  003A88  D7F7               	goto	l3958
 11749  003A8A                     __end_of_delay:
 11750                           	opt stack 0
 11751                           tblptru	equ	0xFF8
 11752                           tblptrh	equ	0xFF7
 11753                           tblptrl	equ	0xFF6
 11754                           tablat	equ	0xFF5
 11755                           prodh	equ	0xFF4
 11756                           prodl	equ	0xFF3
 11757                           intcon	equ	0xFF2
 11758                           postinc0	equ	0xFEE
 11759                           wreg	equ	0xFE8
 11760                           indf1	equ	0xFE7
 11761                           postinc1	equ	0xFE6
 11762                           postdec1	equ	0xFE5
 11763                           plusw1	equ	0xFE3
 11764                           fsr1h	equ	0xFE2
 11765                           fsr1l	equ	0xFE1
 11766                           indf2	equ	0xFDF
 11767                           postinc2	equ	0xFDE
 11768                           postdec2	equ	0xFDD
 11769                           plusw2	equ	0xFDB
 11770                           fsr2h	equ	0xFDA
 11771                           fsr2l	equ	0xFD9
 11772                           status	equ	0xFD8
 11773                           
 11774 ;; *************** function _createRandomShape *****************
 11775 ;; Defined at:
 11776 ;;		line 516 in file "main.c"
 11777 ;; Parameters:    Size  Location     Type
 11778 ;;  i               1    wreg     unsigned char 
 11779 ;; Auto vars:     Size  Location     Type
 11780 ;;  i               1   51[COMRAM] unsigned char 
 11781 ;;  k               1   44[COMRAM] unsigned char 
 11782 ;;  k               1   43[COMRAM] unsigned char 
 11783 ;;  k               1   42[COMRAM] unsigned char 
 11784 ;;  k               1   41[COMRAM] unsigned char 
 11785 ;;  k               1   40[COMRAM] unsigned char 
 11786 ;;  k               1   39[COMRAM] unsigned char 
 11787 ;;  k               1   38[COMRAM] unsigned char 
 11788 ;;  k               1   37[COMRAM] unsigned char 
 11789 ;;  k               1   36[COMRAM] unsigned char 
 11790 ;;  k               1   35[COMRAM] unsigned char 
 11791 ;;  k               1   34[COMRAM] unsigned char 
 11792 ;;  k               1   33[COMRAM] unsigned char 
 11793 ;;  k               1   32[COMRAM] unsigned char 
 11794 ;;  k               1   31[COMRAM] unsigned char 
 11795 ;;  k               1   30[COMRAM] unsigned char 
 11796 ;;  k               1   29[COMRAM] unsigned char 
 11797 ;;  start           1   49[COMRAM] unsigned char 
 11798 ;;  start           1   48[COMRAM] unsigned char 
 11799 ;;  start           1   47[COMRAM] unsigned char 
 11800 ;;  start           1   46[COMRAM] unsigned char 
 11801 ;;  k               1   45[COMRAM] unsigned char 
 11802 ;;  orientation     1   50[COMRAM] unsigned char 
 11803 ;;  type            1   28[COMRAM] unsigned char 
 11804 ;; Return value:  Size  Location     Type
 11805 ;;                  1    wreg      void 
 11806 ;; Registers used:
 11807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11808 ;; Tracked objects:
 11809 ;;		On entry : 0/0
 11810 ;;		On exit  : 0/0
 11811 ;;		Unchanged: 0/0
 11812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11813 ;;      Params:         0       0       0       0       0       0       0       0       0
 11814 ;;      Locals:        24       0       0       0       0       0       0       0       0
 11815 ;;      Temps:          8       0       0       0       0       0       0       0       0
 11816 ;;      Totals:        32       0       0       0       0       0       0       0       0
 11817 ;;Total ram usage:       32 bytes
 11818 ;; Hardware stack levels used:    1
 11819 ;; Hardware stack levels required when called:    2
 11820 ;; This function calls:
 11821 ;;		___awmod
 11822 ;;		_rand
 11823 ;; This function is called by:
 11824 ;;		_main
 11825 ;; This function uses a non-reentrant model
 11826 ;;
 11827                           
 11828                           	psect	text32
 11829  005E5A                     __ptext32:
 11830                           	opt stack 0
 11831  005E5A                     _createRandomShape:
 11832                           	opt stack 28
 11833                           
 11834                           ;incstack = 0
 11835                           ;createRandomShape@i stored from wreg
 11836  005E5A  6E34               	movwf	createRandomShape@i,c
 11837                           
 11838                           ;main.c: 519: uint8_t type = (rand() % (7)) + 1;
 11839  005E5C  EC48  F01E         	call	_rand	;wreg free
 11840  005E60  C00D  F00F         	movff	?_rand,___awmod@dividend
 11841  005E64  C00E  F010         	movff	?_rand+1,___awmod@dividend+1
 11842  005E68  0E00               	movlw	0
 11843  005E6A  6E12               	movwf	___awmod@divisor+1,c
 11844  005E6C  0E07               	movlw	7
 11845  005E6E  6E11               	movwf	___awmod@divisor,c
 11846  005E70  EC68  F01F         	call	___awmod	;wreg free
 11847  005E74  280F               	incf	?___awmod,w,c
 11848  005E76  6E1D               	movwf	createRandomShape@type,c
 11849                           
 11850                           ;main.c: 521: uint8_t orientation =rand()%4;
 11851  005E78  EC48  F01E         	call	_rand	;wreg free
 11852  005E7C  500D               	movf	?_rand,w,c
 11853  005E7E  0B03               	andlw	3
 11854  005E80  6E33               	movwf	createRandomShape@orientation,c
 11855                           
 11856                           ;main.c: 524: switch (type){
 11857  005E82  EF1B  F039         	goto	l200
 11858  005E86                     
 11859                           ;main.c: 528: all_shapes[i].orientation=0;
 11860  005E86  5034               	movf	createRandomShape@i,w,c
 11861  005E88  0D09               	mullw	9
 11862  005E8A  0E08               	movlw	8
 11863  005E8C  26F3               	addwf	prodl,f,c
 11864  005E8E  0E00               	movlw	0
 11865  005E90  22F4               	addwfc	prodh,f,c
 11866  005E92  0E00               	movlw	low _all_shapes
 11867  005E94  24F3               	addwf	prodl,w,c
 11868  005E96  6ED9               	movwf	fsr2l,c
 11869  005E98  0E01               	movlw	high _all_shapes
 11870  005E9A  20F4               	addwfc	prodh,w,c
 11871  005E9C  6EDA               	movwf	fsr2h,c
 11872  005E9E  0E00               	movlw	0
 11873  005EA0  6EDF               	movwf	indf2,c
 11874                           
 11875                           ;main.c: 529: uint8_t start=8;
 11876  005EA2  0E08               	movlw	8
 11877  005EA4  6E2F               	movwf	createRandomShape@start,c
 11878                           
 11879                           ;main.c: 530: for (uint8_t k=0;k<4;k++){
 11880  005EA6  0E00               	movlw	0
 11881  005EA8  6E1E               	movwf	createRandomShape@k,c
 11882  005EAA                     l3974:
 11883  005EAA  0E03               	movlw	3
 11884  005EAC  641E               	cpfsgt	createRandomShape@k,c
 11885  005EAE  D002               	goto	l204
 11886  005EB0  EF35  F039         	goto	l217
 11887  005EB4                     l204:
 11888                           
 11889                           ;main.c: 531: all_shapes[i].index[k].x=start;
 11890  005EB4  5034               	movf	createRandomShape@i,w,c
 11891  005EB6  0D09               	mullw	9
 11892  005EB8  0E00               	movlw	low _all_shapes
 11893  005EBA  6E15               	movwf	??_createRandomShape& (0+255),c
 11894  005EBC  0E01               	movlw	high _all_shapes
 11895  005EBE  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 11896  005EC0  50F3               	movf	prodl,w,c
 11897  005EC2  2615               	addwf	??_createRandomShape,f,c
 11898  005EC4  50F4               	movf	prodh,w,c
 11899  005EC6  2216               	addwfc	??_createRandomShape+1,f,c
 11900  005EC8  501E               	movf	createRandomShape@k,w,c
 11901  005ECA  0D02               	mullw	2
 11902  005ECC  50F3               	movf	prodl,w,c
 11903  005ECE  2415               	addwf	??_createRandomShape,w,c
 11904  005ED0  6ED9               	movwf	fsr2l,c
 11905  005ED2  50F4               	movf	prodh,w,c
 11906  005ED4  2016               	addwfc	??_createRandomShape+1,w,c
 11907  005ED6  6EDA               	movwf	fsr2h,c
 11908  005ED8  C02F  FFDF         	movff	createRandomShape@start,indf2
 11909                           
 11910                           ;main.c: 532: all_shapes[i].index[k].y=0;
 11911  005EDC  5034               	movf	createRandomShape@i,w,c
 11912  005EDE  0D09               	mullw	9
 11913  005EE0  0E00               	movlw	low _all_shapes
 11914  005EE2  6E15               	movwf	??_createRandomShape& (0+255),c
 11915  005EE4  0E01               	movlw	high _all_shapes
 11916  005EE6  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 11917  005EE8  50F3               	movf	prodl,w,c
 11918  005EEA  2615               	addwf	??_createRandomShape,f,c
 11919  005EEC  50F4               	movf	prodh,w,c
 11920  005EEE  2216               	addwfc	??_createRandomShape+1,f,c
 11921  005EF0  501E               	movf	createRandomShape@k,w,c
 11922  005EF2  0D02               	mullw	2
 11923  005EF4  50F3               	movf	prodl,w,c
 11924  005EF6  2615               	addwf	??_createRandomShape,f,c
 11925  005EF8  50F4               	movf	prodh,w,c
 11926  005EFA  2216               	addwfc	??_createRandomShape+1,f,c
 11927  005EFC  0E01               	movlw	1
 11928  005EFE  2415               	addwf	??_createRandomShape,w,c
 11929  005F00  6ED9               	movwf	fsr2l,c
 11930  005F02  0E00               	movlw	0
 11931  005F04  2016               	addwfc	??_createRandomShape+1,w,c
 11932  005F06  6EDA               	movwf	fsr2h,c
 11933  005F08  0E00               	movlw	0
 11934  005F0A  6EDF               	movwf	indf2,c
 11935                           
 11936                           ;main.c: 533: start++;
 11937  005F0C  2A2F               	incf	createRandomShape@start,f,c
 11938  005F0E  2A1E               	incf	createRandomShape@k,f,c
 11939  005F10  D7CC               	goto	l3974
 11940  005F12                     
 11941                           ;main.c: 537: all_shapes[i].orientation=1;
 11942  005F12  5034               	movf	createRandomShape@i,w,c
 11943  005F14  0D09               	mullw	9
 11944  005F16  0E08               	movlw	8
 11945  005F18  26F3               	addwf	prodl,f,c
 11946  005F1A  0E00               	movlw	0
 11947  005F1C  22F4               	addwfc	prodh,f,c
 11948  005F1E  0E00               	movlw	low _all_shapes
 11949  005F20  24F3               	addwf	prodl,w,c
 11950  005F22  6ED9               	movwf	fsr2l,c
 11951  005F24  0E01               	movlw	high _all_shapes
 11952  005F26  20F4               	addwfc	prodh,w,c
 11953  005F28  6EDA               	movwf	fsr2h,c
 11954  005F2A  0E01               	movlw	1
 11955  005F2C  6EDF               	movwf	indf2,c
 11956                           
 11957                           ;main.c: 538: uint8_t start=8;
 11958  005F2E  0E08               	movlw	8
 11959  005F30  6E2F               	movwf	createRandomShape@start,c
 11960                           
 11961                           ;main.c: 539: for (uint8_t k=0;k<4;k++){
 11962  005F32  0E00               	movlw	0
 11963  005F34  6E1F               	movwf	createRandomShape@k_278,c
 11964  005F36                     l3992:
 11965  005F36  0E03               	movlw	3
 11966  005F38  641F               	cpfsgt	createRandomShape@k_278,c
 11967  005F3A  D002               	goto	l208
 11968  005F3C  EF35  F039         	goto	l217
 11969  005F40                     l208:
 11970                           
 11971                           ;main.c: 540: all_shapes[i].index[k].x=start;
 11972  005F40  5034               	movf	createRandomShape@i,w,c
 11973  005F42  0D09               	mullw	9
 11974  005F44  0E00               	movlw	low _all_shapes
 11975  005F46  6E15               	movwf	??_createRandomShape& (0+255),c
 11976  005F48  0E01               	movlw	high _all_shapes
 11977  005F4A  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 11978  005F4C  50F3               	movf	prodl,w,c
 11979  005F4E  2615               	addwf	??_createRandomShape,f,c
 11980  005F50  50F4               	movf	prodh,w,c
 11981  005F52  2216               	addwfc	??_createRandomShape+1,f,c
 11982  005F54  501F               	movf	createRandomShape@k_278,w,c
 11983  005F56  0D02               	mullw	2
 11984  005F58  50F3               	movf	prodl,w,c
 11985  005F5A  2415               	addwf	??_createRandomShape,w,c
 11986  005F5C  6ED9               	movwf	fsr2l,c
 11987  005F5E  50F4               	movf	prodh,w,c
 11988  005F60  2016               	addwfc	??_createRandomShape+1,w,c
 11989  005F62  6EDA               	movwf	fsr2h,c
 11990  005F64  C02F  FFDF         	movff	createRandomShape@start,indf2
 11991                           
 11992                           ;main.c: 541: all_shapes[i].index[k].y=1;
 11993  005F68  5034               	movf	createRandomShape@i,w,c
 11994  005F6A  0D09               	mullw	9
 11995  005F6C  0E00               	movlw	low _all_shapes
 11996  005F6E  6E15               	movwf	??_createRandomShape& (0+255),c
 11997  005F70  0E01               	movlw	high _all_shapes
 11998  005F72  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 11999  005F74  50F3               	movf	prodl,w,c
 12000  005F76  2615               	addwf	??_createRandomShape,f,c
 12001  005F78  50F4               	movf	prodh,w,c
 12002  005F7A  2216               	addwfc	??_createRandomShape+1,f,c
 12003  005F7C  501F               	movf	createRandomShape@k_278,w,c
 12004  005F7E  0D02               	mullw	2
 12005  005F80  50F3               	movf	prodl,w,c
 12006  005F82  2615               	addwf	??_createRandomShape,f,c
 12007  005F84  50F4               	movf	prodh,w,c
 12008  005F86  2216               	addwfc	??_createRandomShape+1,f,c
 12009  005F88  0E01               	movlw	1
 12010  005F8A  2415               	addwf	??_createRandomShape,w,c
 12011  005F8C  6ED9               	movwf	fsr2l,c
 12012  005F8E  0E00               	movlw	0
 12013  005F90  2016               	addwfc	??_createRandomShape+1,w,c
 12014  005F92  6EDA               	movwf	fsr2h,c
 12015  005F94  0E01               	movlw	1
 12016  005F96  6EDF               	movwf	indf2,c
 12017                           
 12018                           ;main.c: 542: start++;
 12019  005F98  2A2F               	incf	createRandomShape@start,f,c
 12020  005F9A  2A1F               	incf	createRandomShape@k_278,f,c
 12021  005F9C  D7CC               	goto	l3992
 12022  005F9E                     
 12023                           ;main.c: 546: all_shapes[i].orientation=2;
 12024  005F9E  5034               	movf	createRandomShape@i,w,c
 12025  005FA0  0D09               	mullw	9
 12026  005FA2  0E08               	movlw	8
 12027  005FA4  26F3               	addwf	prodl,f,c
 12028  005FA6  0E00               	movlw	0
 12029  005FA8  22F4               	addwfc	prodh,f,c
 12030  005FAA  0E00               	movlw	low _all_shapes
 12031  005FAC  24F3               	addwf	prodl,w,c
 12032  005FAE  6ED9               	movwf	fsr2l,c
 12033  005FB0  0E01               	movlw	high _all_shapes
 12034  005FB2  20F4               	addwfc	prodh,w,c
 12035  005FB4  6EDA               	movwf	fsr2h,c
 12036  005FB6  0E02               	movlw	2
 12037  005FB8  6EDF               	movwf	indf2,c
 12038                           
 12039                           ;main.c: 547: uint8_t start=0;
 12040  005FBA  0E00               	movlw	0
 12041  005FBC  6E2F               	movwf	createRandomShape@start,c
 12042                           
 12043                           ;main.c: 548: for (uint8_t k=0;k<4;k++){
 12044  005FBE  0E00               	movlw	0
 12045  005FC0  6E20               	movwf	createRandomShape@k_279,c
 12046  005FC2                     l4010:
 12047  005FC2  0E03               	movlw	3
 12048  005FC4  6420               	cpfsgt	createRandomShape@k_279,c
 12049  005FC6  D002               	goto	l211
 12050  005FC8  EF35  F039         	goto	l217
 12051  005FCC                     l211:
 12052                           
 12053                           ;main.c: 549: all_shapes[i].index[k].x=10;
 12054  005FCC  5034               	movf	createRandomShape@i,w,c
 12055  005FCE  0D09               	mullw	9
 12056  005FD0  0E00               	movlw	low _all_shapes
 12057  005FD2  6E15               	movwf	??_createRandomShape& (0+255),c
 12058  005FD4  0E01               	movlw	high _all_shapes
 12059  005FD6  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12060  005FD8  50F3               	movf	prodl,w,c
 12061  005FDA  2615               	addwf	??_createRandomShape,f,c
 12062  005FDC  50F4               	movf	prodh,w,c
 12063  005FDE  2216               	addwfc	??_createRandomShape+1,f,c
 12064  005FE0  5020               	movf	createRandomShape@k_279,w,c
 12065  005FE2  0D02               	mullw	2
 12066  005FE4  50F3               	movf	prodl,w,c
 12067  005FE6  2415               	addwf	??_createRandomShape,w,c
 12068  005FE8  6ED9               	movwf	fsr2l,c
 12069  005FEA  50F4               	movf	prodh,w,c
 12070  005FEC  2016               	addwfc	??_createRandomShape+1,w,c
 12071  005FEE  6EDA               	movwf	fsr2h,c
 12072  005FF0  0E0A               	movlw	10
 12073  005FF2  6EDF               	movwf	indf2,c
 12074                           
 12075                           ;main.c: 550: all_shapes[i].index[k].y=start;
 12076  005FF4  5034               	movf	createRandomShape@i,w,c
 12077  005FF6  0D09               	mullw	9
 12078  005FF8  0E00               	movlw	low _all_shapes
 12079  005FFA  6E15               	movwf	??_createRandomShape& (0+255),c
 12080  005FFC  0E01               	movlw	high _all_shapes
 12081  005FFE  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12082  006000  50F3               	movf	prodl,w,c
 12083  006002  2615               	addwf	??_createRandomShape,f,c
 12084  006004  50F4               	movf	prodh,w,c
 12085  006006  2216               	addwfc	??_createRandomShape+1,f,c
 12086  006008  5020               	movf	createRandomShape@k_279,w,c
 12087  00600A  0D02               	mullw	2
 12088  00600C  50F3               	movf	prodl,w,c
 12089  00600E  2615               	addwf	??_createRandomShape,f,c
 12090  006010  50F4               	movf	prodh,w,c
 12091  006012  2216               	addwfc	??_createRandomShape+1,f,c
 12092  006014  0E01               	movlw	1
 12093  006016  2415               	addwf	??_createRandomShape,w,c
 12094  006018  6ED9               	movwf	fsr2l,c
 12095  00601A  0E00               	movlw	0
 12096  00601C  2016               	addwfc	??_createRandomShape+1,w,c
 12097  00601E  6EDA               	movwf	fsr2h,c
 12098  006020  C02F  FFDF         	movff	createRandomShape@start,indf2
 12099                           
 12100                           ;main.c: 551: start++;
 12101  006024  2A2F               	incf	createRandomShape@start,f,c
 12102  006026  2A20               	incf	createRandomShape@k_279,f,c
 12103  006028  D7CC               	goto	l4010
 12104  00602A                     
 12105                           ;main.c: 555: all_shapes[i].orientation=3;
 12106  00602A  5034               	movf	createRandomShape@i,w,c
 12107  00602C  0D09               	mullw	9
 12108  00602E  0E08               	movlw	8
 12109  006030  26F3               	addwf	prodl,f,c
 12110  006032  0E00               	movlw	0
 12111  006034  22F4               	addwfc	prodh,f,c
 12112  006036  0E00               	movlw	low _all_shapes
 12113  006038  24F3               	addwf	prodl,w,c
 12114  00603A  6ED9               	movwf	fsr2l,c
 12115  00603C  0E01               	movlw	high _all_shapes
 12116  00603E  20F4               	addwfc	prodh,w,c
 12117  006040  6EDA               	movwf	fsr2h,c
 12118  006042  0E03               	movlw	3
 12119  006044  6EDF               	movwf	indf2,c
 12120                           
 12121                           ;main.c: 556: uint8_t start=0;
 12122  006046  0E00               	movlw	0
 12123  006048  6E2F               	movwf	createRandomShape@start,c
 12124                           
 12125                           ;main.c: 557: for (uint8_t k=0;k<4;k++){
 12126  00604A  0E00               	movlw	0
 12127  00604C  6E21               	movwf	createRandomShape@k_280,c
 12128  00604E                     l4028:
 12129  00604E  0E03               	movlw	3
 12130  006050  6421               	cpfsgt	createRandomShape@k_280,c
 12131  006052  D002               	goto	l214
 12132  006054  EF35  F039         	goto	l217
 12133  006058                     l214:
 12134                           
 12135                           ;main.c: 558: all_shapes[i].index[k].x=11;
 12136  006058  5034               	movf	createRandomShape@i,w,c
 12137  00605A  0D09               	mullw	9
 12138  00605C  0E00               	movlw	low _all_shapes
 12139  00605E  6E15               	movwf	??_createRandomShape& (0+255),c
 12140  006060  0E01               	movlw	high _all_shapes
 12141  006062  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12142  006064  50F3               	movf	prodl,w,c
 12143  006066  2615               	addwf	??_createRandomShape,f,c
 12144  006068  50F4               	movf	prodh,w,c
 12145  00606A  2216               	addwfc	??_createRandomShape+1,f,c
 12146  00606C  5021               	movf	createRandomShape@k_280,w,c
 12147  00606E  0D02               	mullw	2
 12148  006070  50F3               	movf	prodl,w,c
 12149  006072  2415               	addwf	??_createRandomShape,w,c
 12150  006074  6ED9               	movwf	fsr2l,c
 12151  006076  50F4               	movf	prodh,w,c
 12152  006078  2016               	addwfc	??_createRandomShape+1,w,c
 12153  00607A  6EDA               	movwf	fsr2h,c
 12154  00607C  0E0B               	movlw	11
 12155  00607E  6EDF               	movwf	indf2,c
 12156                           
 12157                           ;main.c: 559: all_shapes[i].index[k].y=start;
 12158  006080  5034               	movf	createRandomShape@i,w,c
 12159  006082  0D09               	mullw	9
 12160  006084  0E00               	movlw	low _all_shapes
 12161  006086  6E15               	movwf	??_createRandomShape& (0+255),c
 12162  006088  0E01               	movlw	high _all_shapes
 12163  00608A  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12164  00608C  50F3               	movf	prodl,w,c
 12165  00608E  2615               	addwf	??_createRandomShape,f,c
 12166  006090  50F4               	movf	prodh,w,c
 12167  006092  2216               	addwfc	??_createRandomShape+1,f,c
 12168  006094  5021               	movf	createRandomShape@k_280,w,c
 12169  006096  0D02               	mullw	2
 12170  006098  50F3               	movf	prodl,w,c
 12171  00609A  2615               	addwf	??_createRandomShape,f,c
 12172  00609C  50F4               	movf	prodh,w,c
 12173  00609E  2216               	addwfc	??_createRandomShape+1,f,c
 12174  0060A0  0E01               	movlw	1
 12175  0060A2  2415               	addwf	??_createRandomShape,w,c
 12176  0060A4  6ED9               	movwf	fsr2l,c
 12177  0060A6  0E00               	movlw	0
 12178  0060A8  2016               	addwfc	??_createRandomShape+1,w,c
 12179  0060AA  6EDA               	movwf	fsr2h,c
 12180  0060AC  C02F  FFDF         	movff	createRandomShape@start,indf2
 12181                           
 12182                           ;main.c: 560: start++;
 12183  0060B0  2A2F               	incf	createRandomShape@start,f,c
 12184  0060B2  2A21               	incf	createRandomShape@k_280,f,c
 12185  0060B4  D7CC               	goto	l4028
 12186  0060B6  5033               	movf	createRandomShape@orientation,w,c
 12187                           
 12188                           ; Switch size 1, requested type "space"
 12189                           ; Number of cases is 4, Range of values is 0 to 3
 12190                           ; switch strategies available:
 12191                           ; Name         Instructions Cycles
 12192                           ; simple_byte           13     7 (average)
 12193                           ;	Chosen strategy is simple_byte
 12194  0060B8  0A00               	xorlw	0	; case 0
 12195  0060BA  B4D8               	btfsc	status,2,c
 12196  0060BC  D6E4               	goto	l203
 12197  0060BE  0A01               	xorlw	1	; case 1
 12198  0060C0  B4D8               	btfsc	status,2,c
 12199  0060C2  D727               	goto	l207
 12200  0060C4  0A03               	xorlw	3	; case 2
 12201  0060C6  B4D8               	btfsc	status,2,c
 12202  0060C8  D76A               	goto	l210
 12203  0060CA  0A01               	xorlw	1	; case 3
 12204  0060CC  B4D8               	btfsc	status,2,c
 12205  0060CE  D7AD               	goto	l213
 12206                           
 12207                           ;main.c: 566: break;
 12208  0060D0  EF35  F039         	goto	l217
 12209  0060D4                     
 12210                           ;main.c: 570: all_shapes[i].orientation=0;
 12211  0060D4  5034               	movf	createRandomShape@i,w,c
 12212  0060D6  0D09               	mullw	9
 12213  0060D8  0E08               	movlw	8
 12214  0060DA  26F3               	addwf	prodl,f,c
 12215  0060DC  0E00               	movlw	0
 12216  0060DE  22F4               	addwfc	prodh,f,c
 12217  0060E0  0E00               	movlw	low _all_shapes
 12218  0060E2  24F3               	addwf	prodl,w,c
 12219  0060E4  6ED9               	movwf	fsr2l,c
 12220  0060E6  0E01               	movlw	high _all_shapes
 12221  0060E8  20F4               	addwfc	prodh,w,c
 12222  0060EA  6EDA               	movwf	fsr2h,c
 12223  0060EC  0E00               	movlw	0
 12224  0060EE  6EDF               	movwf	indf2,c
 12225                           
 12226                           ;main.c: 571: uint8_t start=10;
 12227  0060F0  0E0A               	movlw	10
 12228  0060F2  6E30               	movwf	createRandomShape@start_281,c
 12229                           
 12230                           ;main.c: 572: all_shapes[i].index[0].x=10;
 12231  0060F4  5034               	movf	createRandomShape@i,w,c
 12232  0060F6  0D09               	mullw	9
 12233  0060F8  0E00               	movlw	low _all_shapes
 12234  0060FA  24F3               	addwf	prodl,w,c
 12235  0060FC  6ED9               	movwf	fsr2l,c
 12236  0060FE  0E01               	movlw	high _all_shapes
 12237  006100  20F4               	addwfc	prodh,w,c
 12238  006102  6EDA               	movwf	fsr2h,c
 12239  006104  0E0A               	movlw	10
 12240  006106  6EDF               	movwf	indf2,c
 12241                           
 12242                           ;main.c: 573: all_shapes[i].index[0].y=0;
 12243  006108  5034               	movf	createRandomShape@i,w,c
 12244  00610A  0D09               	mullw	9
 12245  00610C  0E01               	movlw	1
 12246  00610E  26F3               	addwf	prodl,f,c
 12247  006110  0E00               	movlw	0
 12248  006112  22F4               	addwfc	prodh,f,c
 12249  006114  0E00               	movlw	low _all_shapes
 12250  006116  24F3               	addwf	prodl,w,c
 12251  006118  6ED9               	movwf	fsr2l,c
 12252  00611A  0E01               	movlw	high _all_shapes
 12253  00611C  20F4               	addwfc	prodh,w,c
 12254  00611E  6EDA               	movwf	fsr2h,c
 12255  006120  0E00               	movlw	0
 12256  006122  6EDF               	movwf	indf2,c
 12257                           
 12258                           ;main.c: 574: for (uint8_t k=1;k<4;k++){
 12259  006124  0E01               	movlw	1
 12260  006126  6E22               	movwf	createRandomShape@k_282,c
 12261  006128                     l4054:
 12262  006128  0E03               	movlw	3
 12263  00612A  6422               	cpfsgt	createRandomShape@k_282,c
 12264  00612C  D002               	goto	l221
 12265  00612E  EF35  F039         	goto	l217
 12266  006132                     l221:
 12267                           
 12268                           ;main.c: 575: all_shapes[i].index[k].x=start;
 12269  006132  5034               	movf	createRandomShape@i,w,c
 12270  006134  0D09               	mullw	9
 12271  006136  0E00               	movlw	low _all_shapes
 12272  006138  6E15               	movwf	??_createRandomShape& (0+255),c
 12273  00613A  0E01               	movlw	high _all_shapes
 12274  00613C  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12275  00613E  50F3               	movf	prodl,w,c
 12276  006140  2615               	addwf	??_createRandomShape,f,c
 12277  006142  50F4               	movf	prodh,w,c
 12278  006144  2216               	addwfc	??_createRandomShape+1,f,c
 12279  006146  5022               	movf	createRandomShape@k_282,w,c
 12280  006148  0D02               	mullw	2
 12281  00614A  50F3               	movf	prodl,w,c
 12282  00614C  2415               	addwf	??_createRandomShape,w,c
 12283  00614E  6ED9               	movwf	fsr2l,c
 12284  006150  50F4               	movf	prodh,w,c
 12285  006152  2016               	addwfc	??_createRandomShape+1,w,c
 12286  006154  6EDA               	movwf	fsr2h,c
 12287  006156  C030  FFDF         	movff	createRandomShape@start_281,indf2
 12288                           
 12289                           ;main.c: 576: all_shapes[i].index[k].y=1;
 12290  00615A  5034               	movf	createRandomShape@i,w,c
 12291  00615C  0D09               	mullw	9
 12292  00615E  0E00               	movlw	low _all_shapes
 12293  006160  6E15               	movwf	??_createRandomShape& (0+255),c
 12294  006162  0E01               	movlw	high _all_shapes
 12295  006164  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12296  006166  50F3               	movf	prodl,w,c
 12297  006168  2615               	addwf	??_createRandomShape,f,c
 12298  00616A  50F4               	movf	prodh,w,c
 12299  00616C  2216               	addwfc	??_createRandomShape+1,f,c
 12300  00616E  5022               	movf	createRandomShape@k_282,w,c
 12301  006170  0D02               	mullw	2
 12302  006172  50F3               	movf	prodl,w,c
 12303  006174  2615               	addwf	??_createRandomShape,f,c
 12304  006176  50F4               	movf	prodh,w,c
 12305  006178  2216               	addwfc	??_createRandomShape+1,f,c
 12306  00617A  0E01               	movlw	1
 12307  00617C  2415               	addwf	??_createRandomShape,w,c
 12308  00617E  6ED9               	movwf	fsr2l,c
 12309  006180  0E00               	movlw	0
 12310  006182  2016               	addwfc	??_createRandomShape+1,w,c
 12311  006184  6EDA               	movwf	fsr2h,c
 12312  006186  0E01               	movlw	1
 12313  006188  6EDF               	movwf	indf2,c
 12314                           
 12315                           ;main.c: 577: start++;
 12316  00618A  2A30               	incf	createRandomShape@start_281,f,c
 12317  00618C  2A22               	incf	createRandomShape@k_282,f,c
 12318  00618E  D7CC               	goto	l4054
 12319  006190                     
 12320                           ;main.c: 581: all_shapes[i].orientation=1;
 12321  006190  5034               	movf	createRandomShape@i,w,c
 12322  006192  0D09               	mullw	9
 12323  006194  0E08               	movlw	8
 12324  006196  26F3               	addwf	prodl,f,c
 12325  006198  0E00               	movlw	0
 12326  00619A  22F4               	addwfc	prodh,f,c
 12327  00619C  0E00               	movlw	low _all_shapes
 12328  00619E  24F3               	addwf	prodl,w,c
 12329  0061A0  6ED9               	movwf	fsr2l,c
 12330  0061A2  0E01               	movlw	high _all_shapes
 12331  0061A4  20F4               	addwfc	prodh,w,c
 12332  0061A6  6EDA               	movwf	fsr2h,c
 12333  0061A8  0E01               	movlw	1
 12334  0061AA  6EDF               	movwf	indf2,c
 12335                           
 12336                           ;main.c: 582: uint8_t start=10;
 12337  0061AC  0E0A               	movlw	10
 12338  0061AE  6E30               	movwf	createRandomShape@start_281,c
 12339                           
 12340                           ;main.c: 583: all_shapes[i].index[0].x=12;
 12341  0061B0  5034               	movf	createRandomShape@i,w,c
 12342  0061B2  0D09               	mullw	9
 12343  0061B4  0E00               	movlw	low _all_shapes
 12344  0061B6  24F3               	addwf	prodl,w,c
 12345  0061B8  6ED9               	movwf	fsr2l,c
 12346  0061BA  0E01               	movlw	high _all_shapes
 12347  0061BC  20F4               	addwfc	prodh,w,c
 12348  0061BE  6EDA               	movwf	fsr2h,c
 12349  0061C0  0E0C               	movlw	12
 12350  0061C2  6EDF               	movwf	indf2,c
 12351                           
 12352                           ;main.c: 584: all_shapes[i].index[0].y=2;
 12353  0061C4  5034               	movf	createRandomShape@i,w,c
 12354  0061C6  0D09               	mullw	9
 12355  0061C8  0E01               	movlw	1
 12356  0061CA  26F3               	addwf	prodl,f,c
 12357  0061CC  0E00               	movlw	0
 12358  0061CE  22F4               	addwfc	prodh,f,c
 12359  0061D0  0E00               	movlw	low _all_shapes
 12360  0061D2  24F3               	addwf	prodl,w,c
 12361  0061D4  6ED9               	movwf	fsr2l,c
 12362  0061D6  0E01               	movlw	high _all_shapes
 12363  0061D8  20F4               	addwfc	prodh,w,c
 12364  0061DA  6EDA               	movwf	fsr2h,c
 12365  0061DC  0E02               	movlw	2
 12366  0061DE  6EDF               	movwf	indf2,c
 12367                           
 12368                           ;main.c: 585: for (uint8_t k=1;k<4;k++){
 12369  0061E0  0E01               	movlw	1
 12370  0061E2  6E23               	movwf	createRandomShape@k_283,c
 12371  0061E4                     l4076:
 12372  0061E4  0E03               	movlw	3
 12373  0061E6  6423               	cpfsgt	createRandomShape@k_283,c
 12374  0061E8  D002               	goto	l225
 12375  0061EA  EF35  F039         	goto	l217
 12376  0061EE                     l225:
 12377                           
 12378                           ;main.c: 586: all_shapes[i].index[k].x=start;
 12379  0061EE  5034               	movf	createRandomShape@i,w,c
 12380  0061F0  0D09               	mullw	9
 12381  0061F2  0E00               	movlw	low _all_shapes
 12382  0061F4  6E15               	movwf	??_createRandomShape& (0+255),c
 12383  0061F6  0E01               	movlw	high _all_shapes
 12384  0061F8  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12385  0061FA  50F3               	movf	prodl,w,c
 12386  0061FC  2615               	addwf	??_createRandomShape,f,c
 12387  0061FE  50F4               	movf	prodh,w,c
 12388  006200  2216               	addwfc	??_createRandomShape+1,f,c
 12389  006202  5023               	movf	createRandomShape@k_283,w,c
 12390  006204  0D02               	mullw	2
 12391  006206  50F3               	movf	prodl,w,c
 12392  006208  2415               	addwf	??_createRandomShape,w,c
 12393  00620A  6ED9               	movwf	fsr2l,c
 12394  00620C  50F4               	movf	prodh,w,c
 12395  00620E  2016               	addwfc	??_createRandomShape+1,w,c
 12396  006210  6EDA               	movwf	fsr2h,c
 12397  006212  C030  FFDF         	movff	createRandomShape@start_281,indf2
 12398                           
 12399                           ;main.c: 587: all_shapes[i].index[k].y=1;
 12400  006216  5034               	movf	createRandomShape@i,w,c
 12401  006218  0D09               	mullw	9
 12402  00621A  0E00               	movlw	low _all_shapes
 12403  00621C  6E15               	movwf	??_createRandomShape& (0+255),c
 12404  00621E  0E01               	movlw	high _all_shapes
 12405  006220  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12406  006222  50F3               	movf	prodl,w,c
 12407  006224  2615               	addwf	??_createRandomShape,f,c
 12408  006226  50F4               	movf	prodh,w,c
 12409  006228  2216               	addwfc	??_createRandomShape+1,f,c
 12410  00622A  5023               	movf	createRandomShape@k_283,w,c
 12411  00622C  0D02               	mullw	2
 12412  00622E  50F3               	movf	prodl,w,c
 12413  006230  2615               	addwf	??_createRandomShape,f,c
 12414  006232  50F4               	movf	prodh,w,c
 12415  006234  2216               	addwfc	??_createRandomShape+1,f,c
 12416  006236  0E01               	movlw	1
 12417  006238  2415               	addwf	??_createRandomShape,w,c
 12418  00623A  6ED9               	movwf	fsr2l,c
 12419  00623C  0E00               	movlw	0
 12420  00623E  2016               	addwfc	??_createRandomShape+1,w,c
 12421  006240  6EDA               	movwf	fsr2h,c
 12422  006242  0E01               	movlw	1
 12423  006244  6EDF               	movwf	indf2,c
 12424                           
 12425                           ;main.c: 588: start++;
 12426  006246  2A30               	incf	createRandomShape@start_281,f,c
 12427  006248  2A23               	incf	createRandomShape@k_283,f,c
 12428  00624A  D7CC               	goto	l4076
 12429  00624C                     
 12430                           ;main.c: 592: all_shapes[i].orientation=2;
 12431  00624C  5034               	movf	createRandomShape@i,w,c
 12432  00624E  0D09               	mullw	9
 12433  006250  0E08               	movlw	8
 12434  006252  26F3               	addwf	prodl,f,c
 12435  006254  0E00               	movlw	0
 12436  006256  22F4               	addwfc	prodh,f,c
 12437  006258  0E00               	movlw	low _all_shapes
 12438  00625A  24F3               	addwf	prodl,w,c
 12439  00625C  6ED9               	movwf	fsr2l,c
 12440  00625E  0E01               	movlw	high _all_shapes
 12441  006260  20F4               	addwfc	prodh,w,c
 12442  006262  6EDA               	movwf	fsr2h,c
 12443  006264  0E02               	movlw	2
 12444  006266  6EDF               	movwf	indf2,c
 12445                           
 12446                           ;main.c: 593: uint8_t start=0;
 12447  006268  0E00               	movlw	0
 12448  00626A  6E30               	movwf	createRandomShape@start_281,c
 12449                           
 12450                           ;main.c: 594: all_shapes[i].index[0].x=10;
 12451  00626C  5034               	movf	createRandomShape@i,w,c
 12452  00626E  0D09               	mullw	9
 12453  006270  0E00               	movlw	low _all_shapes
 12454  006272  24F3               	addwf	prodl,w,c
 12455  006274  6ED9               	movwf	fsr2l,c
 12456  006276  0E01               	movlw	high _all_shapes
 12457  006278  20F4               	addwfc	prodh,w,c
 12458  00627A  6EDA               	movwf	fsr2h,c
 12459  00627C  0E0A               	movlw	10
 12460  00627E  6EDF               	movwf	indf2,c
 12461                           
 12462                           ;main.c: 595: all_shapes[i].index[0].y=2;
 12463  006280  5034               	movf	createRandomShape@i,w,c
 12464  006282  0D09               	mullw	9
 12465  006284  0E01               	movlw	1
 12466  006286  26F3               	addwf	prodl,f,c
 12467  006288  0E00               	movlw	0
 12468  00628A  22F4               	addwfc	prodh,f,c
 12469  00628C  0E00               	movlw	low _all_shapes
 12470  00628E  24F3               	addwf	prodl,w,c
 12471  006290  6ED9               	movwf	fsr2l,c
 12472  006292  0E01               	movlw	high _all_shapes
 12473  006294  20F4               	addwfc	prodh,w,c
 12474  006296  6EDA               	movwf	fsr2h,c
 12475  006298  0E02               	movlw	2
 12476  00629A  6EDF               	movwf	indf2,c
 12477                           
 12478                           ;main.c: 596: for (uint8_t k=1;k<4;k++){
 12479  00629C  0E01               	movlw	1
 12480  00629E  6E24               	movwf	createRandomShape@k_284,c
 12481  0062A0                     l4098:
 12482  0062A0  0E03               	movlw	3
 12483  0062A2  6424               	cpfsgt	createRandomShape@k_284,c
 12484  0062A4  D002               	goto	l228
 12485  0062A6  EF35  F039         	goto	l217
 12486  0062AA                     l228:
 12487                           
 12488                           ;main.c: 597: all_shapes[i].index[k].x=11;
 12489  0062AA  5034               	movf	createRandomShape@i,w,c
 12490  0062AC  0D09               	mullw	9
 12491  0062AE  0E00               	movlw	low _all_shapes
 12492  0062B0  6E15               	movwf	??_createRandomShape& (0+255),c
 12493  0062B2  0E01               	movlw	high _all_shapes
 12494  0062B4  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12495  0062B6  50F3               	movf	prodl,w,c
 12496  0062B8  2615               	addwf	??_createRandomShape,f,c
 12497  0062BA  50F4               	movf	prodh,w,c
 12498  0062BC  2216               	addwfc	??_createRandomShape+1,f,c
 12499  0062BE  5024               	movf	createRandomShape@k_284,w,c
 12500  0062C0  0D02               	mullw	2
 12501  0062C2  50F3               	movf	prodl,w,c
 12502  0062C4  2415               	addwf	??_createRandomShape,w,c
 12503  0062C6  6ED9               	movwf	fsr2l,c
 12504  0062C8  50F4               	movf	prodh,w,c
 12505  0062CA  2016               	addwfc	??_createRandomShape+1,w,c
 12506  0062CC  6EDA               	movwf	fsr2h,c
 12507  0062CE  0E0B               	movlw	11
 12508  0062D0  6EDF               	movwf	indf2,c
 12509                           
 12510                           ;main.c: 598: all_shapes[i].index[k].y=start;
 12511  0062D2  5034               	movf	createRandomShape@i,w,c
 12512  0062D4  0D09               	mullw	9
 12513  0062D6  0E00               	movlw	low _all_shapes
 12514  0062D8  6E15               	movwf	??_createRandomShape& (0+255),c
 12515  0062DA  0E01               	movlw	high _all_shapes
 12516  0062DC  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12517  0062DE  50F3               	movf	prodl,w,c
 12518  0062E0  2615               	addwf	??_createRandomShape,f,c
 12519  0062E2  50F4               	movf	prodh,w,c
 12520  0062E4  2216               	addwfc	??_createRandomShape+1,f,c
 12521  0062E6  5024               	movf	createRandomShape@k_284,w,c
 12522  0062E8  0D02               	mullw	2
 12523  0062EA  50F3               	movf	prodl,w,c
 12524  0062EC  2615               	addwf	??_createRandomShape,f,c
 12525  0062EE  50F4               	movf	prodh,w,c
 12526  0062F0  2216               	addwfc	??_createRandomShape+1,f,c
 12527  0062F2  0E01               	movlw	1
 12528  0062F4  2415               	addwf	??_createRandomShape,w,c
 12529  0062F6  6ED9               	movwf	fsr2l,c
 12530  0062F8  0E00               	movlw	0
 12531  0062FA  2016               	addwfc	??_createRandomShape+1,w,c
 12532  0062FC  6EDA               	movwf	fsr2h,c
 12533  0062FE  C030  FFDF         	movff	createRandomShape@start_281,indf2
 12534                           
 12535                           ;main.c: 599: start++;
 12536  006302  2A30               	incf	createRandomShape@start_281,f,c
 12537  006304  2A24               	incf	createRandomShape@k_284,f,c
 12538  006306  D7CC               	goto	l4098
 12539  006308                     
 12540                           ;main.c: 603: all_shapes[i].orientation=3;
 12541  006308  5034               	movf	createRandomShape@i,w,c
 12542  00630A  0D09               	mullw	9
 12543  00630C  0E08               	movlw	8
 12544  00630E  26F3               	addwf	prodl,f,c
 12545  006310  0E00               	movlw	0
 12546  006312  22F4               	addwfc	prodh,f,c
 12547  006314  0E00               	movlw	low _all_shapes
 12548  006316  24F3               	addwf	prodl,w,c
 12549  006318  6ED9               	movwf	fsr2l,c
 12550  00631A  0E01               	movlw	high _all_shapes
 12551  00631C  20F4               	addwfc	prodh,w,c
 12552  00631E  6EDA               	movwf	fsr2h,c
 12553  006320  0E03               	movlw	3
 12554  006322  6EDF               	movwf	indf2,c
 12555                           
 12556                           ;main.c: 604: uint8_t start=0;
 12557  006324  0E00               	movlw	0
 12558  006326  6E30               	movwf	createRandomShape@start_281,c
 12559                           
 12560                           ;main.c: 605: all_shapes[i].index[0].x=12;
 12561  006328  5034               	movf	createRandomShape@i,w,c
 12562  00632A  0D09               	mullw	9
 12563  00632C  0E00               	movlw	low _all_shapes
 12564  00632E  24F3               	addwf	prodl,w,c
 12565  006330  6ED9               	movwf	fsr2l,c
 12566  006332  0E01               	movlw	high _all_shapes
 12567  006334  20F4               	addwfc	prodh,w,c
 12568  006336  6EDA               	movwf	fsr2h,c
 12569  006338  0E0C               	movlw	12
 12570  00633A  6EDF               	movwf	indf2,c
 12571                           
 12572                           ;main.c: 606: all_shapes[i].index[0].y=0;
 12573  00633C  5034               	movf	createRandomShape@i,w,c
 12574  00633E  0D09               	mullw	9
 12575  006340  0E01               	movlw	1
 12576  006342  26F3               	addwf	prodl,f,c
 12577  006344  0E00               	movlw	0
 12578  006346  22F4               	addwfc	prodh,f,c
 12579  006348  0E00               	movlw	low _all_shapes
 12580  00634A  24F3               	addwf	prodl,w,c
 12581  00634C  6ED9               	movwf	fsr2l,c
 12582  00634E  0E01               	movlw	high _all_shapes
 12583  006350  20F4               	addwfc	prodh,w,c
 12584  006352  6EDA               	movwf	fsr2h,c
 12585  006354  0E00               	movlw	0
 12586  006356  6EDF               	movwf	indf2,c
 12587                           
 12588                           ;main.c: 607: for (uint8_t k=1;k<4;k++){
 12589  006358  0E01               	movlw	1
 12590  00635A  6E25               	movwf	createRandomShape@k_285,c
 12591  00635C                     l4120:
 12592  00635C  0E03               	movlw	3
 12593  00635E  6425               	cpfsgt	createRandomShape@k_285,c
 12594  006360  D002               	goto	l231
 12595  006362  EF35  F039         	goto	l217
 12596  006366                     l231:
 12597                           
 12598                           ;main.c: 608: all_shapes[i].index[k].x=11;
 12599  006366  5034               	movf	createRandomShape@i,w,c
 12600  006368  0D09               	mullw	9
 12601  00636A  0E00               	movlw	low _all_shapes
 12602  00636C  6E15               	movwf	??_createRandomShape& (0+255),c
 12603  00636E  0E01               	movlw	high _all_shapes
 12604  006370  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12605  006372  50F3               	movf	prodl,w,c
 12606  006374  2615               	addwf	??_createRandomShape,f,c
 12607  006376  50F4               	movf	prodh,w,c
 12608  006378  2216               	addwfc	??_createRandomShape+1,f,c
 12609  00637A  5025               	movf	createRandomShape@k_285,w,c
 12610  00637C  0D02               	mullw	2
 12611  00637E  50F3               	movf	prodl,w,c
 12612  006380  2415               	addwf	??_createRandomShape,w,c
 12613  006382  6ED9               	movwf	fsr2l,c
 12614  006384  50F4               	movf	prodh,w,c
 12615  006386  2016               	addwfc	??_createRandomShape+1,w,c
 12616  006388  6EDA               	movwf	fsr2h,c
 12617  00638A  0E0B               	movlw	11
 12618  00638C  6EDF               	movwf	indf2,c
 12619                           
 12620                           ;main.c: 609: all_shapes[i].index[k].y=start;
 12621  00638E  5034               	movf	createRandomShape@i,w,c
 12622  006390  0D09               	mullw	9
 12623  006392  0E00               	movlw	low _all_shapes
 12624  006394  6E15               	movwf	??_createRandomShape& (0+255),c
 12625  006396  0E01               	movlw	high _all_shapes
 12626  006398  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12627  00639A  50F3               	movf	prodl,w,c
 12628  00639C  2615               	addwf	??_createRandomShape,f,c
 12629  00639E  50F4               	movf	prodh,w,c
 12630  0063A0  2216               	addwfc	??_createRandomShape+1,f,c
 12631  0063A2  5025               	movf	createRandomShape@k_285,w,c
 12632  0063A4  0D02               	mullw	2
 12633  0063A6  50F3               	movf	prodl,w,c
 12634  0063A8  2615               	addwf	??_createRandomShape,f,c
 12635  0063AA  50F4               	movf	prodh,w,c
 12636  0063AC  2216               	addwfc	??_createRandomShape+1,f,c
 12637  0063AE  0E01               	movlw	1
 12638  0063B0  2415               	addwf	??_createRandomShape,w,c
 12639  0063B2  6ED9               	movwf	fsr2l,c
 12640  0063B4  0E00               	movlw	0
 12641  0063B6  2016               	addwfc	??_createRandomShape+1,w,c
 12642  0063B8  6EDA               	movwf	fsr2h,c
 12643  0063BA  C030  FFDF         	movff	createRandomShape@start_281,indf2
 12644                           
 12645                           ;main.c: 610: start++;
 12646  0063BE  2A30               	incf	createRandomShape@start_281,f,c
 12647  0063C0  2A25               	incf	createRandomShape@k_285,f,c
 12648  0063C2  D7CC               	goto	l4120
 12649  0063C4  5033               	movf	createRandomShape@orientation,w,c
 12650                           
 12651                           ; Switch size 1, requested type "space"
 12652                           ; Number of cases is 4, Range of values is 0 to 3
 12653                           ; switch strategies available:
 12654                           ; Name         Instructions Cycles
 12655                           ; simple_byte           13     7 (average)
 12656                           ;	Chosen strategy is simple_byte
 12657  0063C6  0A00               	xorlw	0	; case 0
 12658  0063C8  B4D8               	btfsc	status,2,c
 12659  0063CA  D684               	goto	l220
 12660  0063CC  0A01               	xorlw	1	; case 1
 12661  0063CE  B4D8               	btfsc	status,2,c
 12662  0063D0  D6DF               	goto	l224
 12663  0063D2  0A03               	xorlw	3	; case 2
 12664  0063D4  B4D8               	btfsc	status,2,c
 12665  0063D6  D73A               	goto	l227
 12666  0063D8  0A01               	xorlw	1	; case 3
 12667  0063DA  B4D8               	btfsc	status,2,c
 12668  0063DC  D795               	goto	l230
 12669                           
 12670                           ;main.c: 616: break;
 12671  0063DE  EF35  F039         	goto	l217
 12672  0063E2                     
 12673                           ;main.c: 620: all_shapes[i].orientation=0;
 12674  0063E2  5034               	movf	createRandomShape@i,w,c
 12675  0063E4  0D09               	mullw	9
 12676  0063E6  0E08               	movlw	8
 12677  0063E8  26F3               	addwf	prodl,f,c
 12678  0063EA  0E00               	movlw	0
 12679  0063EC  22F4               	addwfc	prodh,f,c
 12680  0063EE  0E00               	movlw	low _all_shapes
 12681  0063F0  24F3               	addwf	prodl,w,c
 12682  0063F2  6ED9               	movwf	fsr2l,c
 12683  0063F4  0E01               	movlw	high _all_shapes
 12684  0063F6  20F4               	addwfc	prodh,w,c
 12685  0063F8  6EDA               	movwf	fsr2h,c
 12686  0063FA  0E00               	movlw	0
 12687  0063FC  6EDF               	movwf	indf2,c
 12688                           
 12689                           ;main.c: 621: uint8_t start=10;
 12690  0063FE  0E0A               	movlw	10
 12691  006400  6E31               	movwf	createRandomShape@start_286,c
 12692                           
 12693                           ;main.c: 622: all_shapes[i].index[0].x=12;
 12694  006402  5034               	movf	createRandomShape@i,w,c
 12695  006404  0D09               	mullw	9
 12696  006406  0E00               	movlw	low _all_shapes
 12697  006408  24F3               	addwf	prodl,w,c
 12698  00640A  6ED9               	movwf	fsr2l,c
 12699  00640C  0E01               	movlw	high _all_shapes
 12700  00640E  20F4               	addwfc	prodh,w,c
 12701  006410  6EDA               	movwf	fsr2h,c
 12702  006412  0E0C               	movlw	12
 12703  006414  6EDF               	movwf	indf2,c
 12704                           
 12705                           ;main.c: 623: all_shapes[i].index[0].y=0;
 12706  006416  5034               	movf	createRandomShape@i,w,c
 12707  006418  0D09               	mullw	9
 12708  00641A  0E01               	movlw	1
 12709  00641C  26F3               	addwf	prodl,f,c
 12710  00641E  0E00               	movlw	0
 12711  006420  22F4               	addwfc	prodh,f,c
 12712  006422  0E00               	movlw	low _all_shapes
 12713  006424  24F3               	addwf	prodl,w,c
 12714  006426  6ED9               	movwf	fsr2l,c
 12715  006428  0E01               	movlw	high _all_shapes
 12716  00642A  20F4               	addwfc	prodh,w,c
 12717  00642C  6EDA               	movwf	fsr2h,c
 12718  00642E  0E00               	movlw	0
 12719  006430  6EDF               	movwf	indf2,c
 12720                           
 12721                           ;main.c: 624: for (uint8_t k=1;k<4;k++){
 12722  006432  0E01               	movlw	1
 12723  006434  6E26               	movwf	createRandomShape@k_287,c
 12724  006436                     l4146:
 12725  006436  0E03               	movlw	3
 12726  006438  6426               	cpfsgt	createRandomShape@k_287,c
 12727  00643A  D002               	goto	l237
 12728  00643C  EF35  F039         	goto	l217
 12729  006440                     l237:
 12730                           
 12731                           ;main.c: 625: all_shapes[i].index[k].x=start;
 12732  006440  5034               	movf	createRandomShape@i,w,c
 12733  006442  0D09               	mullw	9
 12734  006444  0E00               	movlw	low _all_shapes
 12735  006446  6E15               	movwf	??_createRandomShape& (0+255),c
 12736  006448  0E01               	movlw	high _all_shapes
 12737  00644A  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12738  00644C  50F3               	movf	prodl,w,c
 12739  00644E  2615               	addwf	??_createRandomShape,f,c
 12740  006450  50F4               	movf	prodh,w,c
 12741  006452  2216               	addwfc	??_createRandomShape+1,f,c
 12742  006454  5026               	movf	createRandomShape@k_287,w,c
 12743  006456  0D02               	mullw	2
 12744  006458  50F3               	movf	prodl,w,c
 12745  00645A  2415               	addwf	??_createRandomShape,w,c
 12746  00645C  6ED9               	movwf	fsr2l,c
 12747  00645E  50F4               	movf	prodh,w,c
 12748  006460  2016               	addwfc	??_createRandomShape+1,w,c
 12749  006462  6EDA               	movwf	fsr2h,c
 12750  006464  C031  FFDF         	movff	createRandomShape@start_286,indf2
 12751                           
 12752                           ;main.c: 626: all_shapes[i].index[k].y=1;
 12753  006468  5034               	movf	createRandomShape@i,w,c
 12754  00646A  0D09               	mullw	9
 12755  00646C  0E00               	movlw	low _all_shapes
 12756  00646E  6E15               	movwf	??_createRandomShape& (0+255),c
 12757  006470  0E01               	movlw	high _all_shapes
 12758  006472  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12759  006474  50F3               	movf	prodl,w,c
 12760  006476  2615               	addwf	??_createRandomShape,f,c
 12761  006478  50F4               	movf	prodh,w,c
 12762  00647A  2216               	addwfc	??_createRandomShape+1,f,c
 12763  00647C  5026               	movf	createRandomShape@k_287,w,c
 12764  00647E  0D02               	mullw	2
 12765  006480  50F3               	movf	prodl,w,c
 12766  006482  2615               	addwf	??_createRandomShape,f,c
 12767  006484  50F4               	movf	prodh,w,c
 12768  006486  2216               	addwfc	??_createRandomShape+1,f,c
 12769  006488  0E01               	movlw	1
 12770  00648A  2415               	addwf	??_createRandomShape,w,c
 12771  00648C  6ED9               	movwf	fsr2l,c
 12772  00648E  0E00               	movlw	0
 12773  006490  2016               	addwfc	??_createRandomShape+1,w,c
 12774  006492  6EDA               	movwf	fsr2h,c
 12775  006494  0E01               	movlw	1
 12776  006496  6EDF               	movwf	indf2,c
 12777                           
 12778                           ;main.c: 627: start++;
 12779  006498  2A31               	incf	createRandomShape@start_286,f,c
 12780  00649A  2A26               	incf	createRandomShape@k_287,f,c
 12781  00649C  D7CC               	goto	l4146
 12782  00649E                     
 12783                           ;main.c: 631: all_shapes[i].orientation=1;
 12784  00649E  5034               	movf	createRandomShape@i,w,c
 12785  0064A0  0D09               	mullw	9
 12786  0064A2  0E08               	movlw	8
 12787  0064A4  26F3               	addwf	prodl,f,c
 12788  0064A6  0E00               	movlw	0
 12789  0064A8  22F4               	addwfc	prodh,f,c
 12790  0064AA  0E00               	movlw	low _all_shapes
 12791  0064AC  24F3               	addwf	prodl,w,c
 12792  0064AE  6ED9               	movwf	fsr2l,c
 12793  0064B0  0E01               	movlw	high _all_shapes
 12794  0064B2  20F4               	addwfc	prodh,w,c
 12795  0064B4  6EDA               	movwf	fsr2h,c
 12796  0064B6  0E01               	movlw	1
 12797  0064B8  6EDF               	movwf	indf2,c
 12798                           
 12799                           ;main.c: 632: uint8_t start=10;
 12800  0064BA  0E0A               	movlw	10
 12801  0064BC  6E31               	movwf	createRandomShape@start_286,c
 12802                           
 12803                           ;main.c: 633: all_shapes[i].index[0].x=10;
 12804  0064BE  5034               	movf	createRandomShape@i,w,c
 12805  0064C0  0D09               	mullw	9
 12806  0064C2  0E00               	movlw	low _all_shapes
 12807  0064C4  24F3               	addwf	prodl,w,c
 12808  0064C6  6ED9               	movwf	fsr2l,c
 12809  0064C8  0E01               	movlw	high _all_shapes
 12810  0064CA  20F4               	addwfc	prodh,w,c
 12811  0064CC  6EDA               	movwf	fsr2h,c
 12812  0064CE  0E0A               	movlw	10
 12813  0064D0  6EDF               	movwf	indf2,c
 12814                           
 12815                           ;main.c: 634: all_shapes[i].index[0].y=2;
 12816  0064D2  5034               	movf	createRandomShape@i,w,c
 12817  0064D4  0D09               	mullw	9
 12818  0064D6  0E01               	movlw	1
 12819  0064D8  26F3               	addwf	prodl,f,c
 12820  0064DA  0E00               	movlw	0
 12821  0064DC  22F4               	addwfc	prodh,f,c
 12822  0064DE  0E00               	movlw	low _all_shapes
 12823  0064E0  24F3               	addwf	prodl,w,c
 12824  0064E2  6ED9               	movwf	fsr2l,c
 12825  0064E4  0E01               	movlw	high _all_shapes
 12826  0064E6  20F4               	addwfc	prodh,w,c
 12827  0064E8  6EDA               	movwf	fsr2h,c
 12828  0064EA  0E02               	movlw	2
 12829  0064EC  6EDF               	movwf	indf2,c
 12830                           
 12831                           ;main.c: 635: for (uint8_t k=1;k<4;k++){
 12832  0064EE  0E01               	movlw	1
 12833  0064F0  6E27               	movwf	createRandomShape@k_288,c
 12834  0064F2                     l4168:
 12835  0064F2  0E03               	movlw	3
 12836  0064F4  6427               	cpfsgt	createRandomShape@k_288,c
 12837  0064F6  D002               	goto	l241
 12838  0064F8  EF35  F039         	goto	l217
 12839  0064FC                     l241:
 12840                           
 12841                           ;main.c: 636: all_shapes[i].index[k].x=start;
 12842  0064FC  5034               	movf	createRandomShape@i,w,c
 12843  0064FE  0D09               	mullw	9
 12844  006500  0E00               	movlw	low _all_shapes
 12845  006502  6E15               	movwf	??_createRandomShape& (0+255),c
 12846  006504  0E01               	movlw	high _all_shapes
 12847  006506  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12848  006508  50F3               	movf	prodl,w,c
 12849  00650A  2615               	addwf	??_createRandomShape,f,c
 12850  00650C  50F4               	movf	prodh,w,c
 12851  00650E  2216               	addwfc	??_createRandomShape+1,f,c
 12852  006510  5027               	movf	createRandomShape@k_288,w,c
 12853  006512  0D02               	mullw	2
 12854  006514  50F3               	movf	prodl,w,c
 12855  006516  2415               	addwf	??_createRandomShape,w,c
 12856  006518  6ED9               	movwf	fsr2l,c
 12857  00651A  50F4               	movf	prodh,w,c
 12858  00651C  2016               	addwfc	??_createRandomShape+1,w,c
 12859  00651E  6EDA               	movwf	fsr2h,c
 12860  006520  C031  FFDF         	movff	createRandomShape@start_286,indf2
 12861                           
 12862                           ;main.c: 637: all_shapes[i].index[k].y=1;
 12863  006524  5034               	movf	createRandomShape@i,w,c
 12864  006526  0D09               	mullw	9
 12865  006528  0E00               	movlw	low _all_shapes
 12866  00652A  6E15               	movwf	??_createRandomShape& (0+255),c
 12867  00652C  0E01               	movlw	high _all_shapes
 12868  00652E  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12869  006530  50F3               	movf	prodl,w,c
 12870  006532  2615               	addwf	??_createRandomShape,f,c
 12871  006534  50F4               	movf	prodh,w,c
 12872  006536  2216               	addwfc	??_createRandomShape+1,f,c
 12873  006538  5027               	movf	createRandomShape@k_288,w,c
 12874  00653A  0D02               	mullw	2
 12875  00653C  50F3               	movf	prodl,w,c
 12876  00653E  2615               	addwf	??_createRandomShape,f,c
 12877  006540  50F4               	movf	prodh,w,c
 12878  006542  2216               	addwfc	??_createRandomShape+1,f,c
 12879  006544  0E01               	movlw	1
 12880  006546  2415               	addwf	??_createRandomShape,w,c
 12881  006548  6ED9               	movwf	fsr2l,c
 12882  00654A  0E00               	movlw	0
 12883  00654C  2016               	addwfc	??_createRandomShape+1,w,c
 12884  00654E  6EDA               	movwf	fsr2h,c
 12885  006550  0E01               	movlw	1
 12886  006552  6EDF               	movwf	indf2,c
 12887                           
 12888                           ;main.c: 638: start++;
 12889  006554  2A31               	incf	createRandomShape@start_286,f,c
 12890  006556  2A27               	incf	createRandomShape@k_288,f,c
 12891  006558  D7CC               	goto	l4168
 12892  00655A                     
 12893                           ;main.c: 642: all_shapes[i].orientation=2;
 12894  00655A  5034               	movf	createRandomShape@i,w,c
 12895  00655C  0D09               	mullw	9
 12896  00655E  0E08               	movlw	8
 12897  006560  26F3               	addwf	prodl,f,c
 12898  006562  0E00               	movlw	0
 12899  006564  22F4               	addwfc	prodh,f,c
 12900  006566  0E00               	movlw	low _all_shapes
 12901  006568  24F3               	addwf	prodl,w,c
 12902  00656A  6ED9               	movwf	fsr2l,c
 12903  00656C  0E01               	movlw	high _all_shapes
 12904  00656E  20F4               	addwfc	prodh,w,c
 12905  006570  6EDA               	movwf	fsr2h,c
 12906  006572  0E02               	movlw	2
 12907  006574  6EDF               	movwf	indf2,c
 12908                           
 12909                           ;main.c: 643: uint8_t start=0;
 12910  006576  0E00               	movlw	0
 12911  006578  6E31               	movwf	createRandomShape@start_286,c
 12912                           
 12913                           ;main.c: 644: all_shapes[i].index[0].x=10;
 12914  00657A  5034               	movf	createRandomShape@i,w,c
 12915  00657C  0D09               	mullw	9
 12916  00657E  0E00               	movlw	low _all_shapes
 12917  006580  24F3               	addwf	prodl,w,c
 12918  006582  6ED9               	movwf	fsr2l,c
 12919  006584  0E01               	movlw	high _all_shapes
 12920  006586  20F4               	addwfc	prodh,w,c
 12921  006588  6EDA               	movwf	fsr2h,c
 12922  00658A  0E0A               	movlw	10
 12923  00658C  6EDF               	movwf	indf2,c
 12924                           
 12925                           ;main.c: 645: all_shapes[i].index[0].y=0;
 12926  00658E  5034               	movf	createRandomShape@i,w,c
 12927  006590  0D09               	mullw	9
 12928  006592  0E01               	movlw	1
 12929  006594  26F3               	addwf	prodl,f,c
 12930  006596  0E00               	movlw	0
 12931  006598  22F4               	addwfc	prodh,f,c
 12932  00659A  0E00               	movlw	low _all_shapes
 12933  00659C  24F3               	addwf	prodl,w,c
 12934  00659E  6ED9               	movwf	fsr2l,c
 12935  0065A0  0E01               	movlw	high _all_shapes
 12936  0065A2  20F4               	addwfc	prodh,w,c
 12937  0065A4  6EDA               	movwf	fsr2h,c
 12938  0065A6  0E00               	movlw	0
 12939  0065A8  6EDF               	movwf	indf2,c
 12940                           
 12941                           ;main.c: 646: for (uint8_t k=1;k<4;k++){
 12942  0065AA  0E01               	movlw	1
 12943  0065AC  6E28               	movwf	createRandomShape@k_289,c
 12944  0065AE                     l4190:
 12945  0065AE  0E03               	movlw	3
 12946  0065B0  6428               	cpfsgt	createRandomShape@k_289,c
 12947  0065B2  D002               	goto	l244
 12948  0065B4  EF35  F039         	goto	l217
 12949  0065B8                     l244:
 12950                           
 12951                           ;main.c: 647: all_shapes[i].index[k].x=11;
 12952  0065B8  5034               	movf	createRandomShape@i,w,c
 12953  0065BA  0D09               	mullw	9
 12954  0065BC  0E00               	movlw	low _all_shapes
 12955  0065BE  6E15               	movwf	??_createRandomShape& (0+255),c
 12956  0065C0  0E01               	movlw	high _all_shapes
 12957  0065C2  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12958  0065C4  50F3               	movf	prodl,w,c
 12959  0065C6  2615               	addwf	??_createRandomShape,f,c
 12960  0065C8  50F4               	movf	prodh,w,c
 12961  0065CA  2216               	addwfc	??_createRandomShape+1,f,c
 12962  0065CC  5028               	movf	createRandomShape@k_289,w,c
 12963  0065CE  0D02               	mullw	2
 12964  0065D0  50F3               	movf	prodl,w,c
 12965  0065D2  2415               	addwf	??_createRandomShape,w,c
 12966  0065D4  6ED9               	movwf	fsr2l,c
 12967  0065D6  50F4               	movf	prodh,w,c
 12968  0065D8  2016               	addwfc	??_createRandomShape+1,w,c
 12969  0065DA  6EDA               	movwf	fsr2h,c
 12970  0065DC  0E0B               	movlw	11
 12971  0065DE  6EDF               	movwf	indf2,c
 12972                           
 12973                           ;main.c: 648: all_shapes[i].index[k].y=start;
 12974  0065E0  5034               	movf	createRandomShape@i,w,c
 12975  0065E2  0D09               	mullw	9
 12976  0065E4  0E00               	movlw	low _all_shapes
 12977  0065E6  6E15               	movwf	??_createRandomShape& (0+255),c
 12978  0065E8  0E01               	movlw	high _all_shapes
 12979  0065EA  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12980  0065EC  50F3               	movf	prodl,w,c
 12981  0065EE  2615               	addwf	??_createRandomShape,f,c
 12982  0065F0  50F4               	movf	prodh,w,c
 12983  0065F2  2216               	addwfc	??_createRandomShape+1,f,c
 12984  0065F4  5028               	movf	createRandomShape@k_289,w,c
 12985  0065F6  0D02               	mullw	2
 12986  0065F8  50F3               	movf	prodl,w,c
 12987  0065FA  2615               	addwf	??_createRandomShape,f,c
 12988  0065FC  50F4               	movf	prodh,w,c
 12989  0065FE  2216               	addwfc	??_createRandomShape+1,f,c
 12990  006600  0E01               	movlw	1
 12991  006602  2415               	addwf	??_createRandomShape,w,c
 12992  006604  6ED9               	movwf	fsr2l,c
 12993  006606  0E00               	movlw	0
 12994  006608  2016               	addwfc	??_createRandomShape+1,w,c
 12995  00660A  6EDA               	movwf	fsr2h,c
 12996  00660C  C031  FFDF         	movff	createRandomShape@start_286,indf2
 12997                           
 12998                           ;main.c: 649: start++;
 12999  006610  2A31               	incf	createRandomShape@start_286,f,c
 13000  006612  2A28               	incf	createRandomShape@k_289,f,c
 13001  006614  D7CC               	goto	l4190
 13002  006616                     
 13003                           ;main.c: 653: all_shapes[i].orientation=3;
 13004  006616  5034               	movf	createRandomShape@i,w,c
 13005  006618  0D09               	mullw	9
 13006  00661A  0E08               	movlw	8
 13007  00661C  26F3               	addwf	prodl,f,c
 13008  00661E  0E00               	movlw	0
 13009  006620  22F4               	addwfc	prodh,f,c
 13010  006622  0E00               	movlw	low _all_shapes
 13011  006624  24F3               	addwf	prodl,w,c
 13012  006626  6ED9               	movwf	fsr2l,c
 13013  006628  0E01               	movlw	high _all_shapes
 13014  00662A  20F4               	addwfc	prodh,w,c
 13015  00662C  6EDA               	movwf	fsr2h,c
 13016  00662E  0E03               	movlw	3
 13017  006630  6EDF               	movwf	indf2,c
 13018                           
 13019                           ;main.c: 654: uint8_t start=0;
 13020  006632  0E00               	movlw	0
 13021  006634  6E31               	movwf	createRandomShape@start_286,c
 13022                           
 13023                           ;main.c: 655: all_shapes[i].index[0].x=12;
 13024  006636  5034               	movf	createRandomShape@i,w,c
 13025  006638  0D09               	mullw	9
 13026  00663A  0E00               	movlw	low _all_shapes
 13027  00663C  24F3               	addwf	prodl,w,c
 13028  00663E  6ED9               	movwf	fsr2l,c
 13029  006640  0E01               	movlw	high _all_shapes
 13030  006642  20F4               	addwfc	prodh,w,c
 13031  006644  6EDA               	movwf	fsr2h,c
 13032  006646  0E0C               	movlw	12
 13033  006648  6EDF               	movwf	indf2,c
 13034                           
 13035                           ;main.c: 656: all_shapes[i].index[0].y=2;
 13036  00664A  5034               	movf	createRandomShape@i,w,c
 13037  00664C  0D09               	mullw	9
 13038  00664E  0E01               	movlw	1
 13039  006650  26F3               	addwf	prodl,f,c
 13040  006652  0E00               	movlw	0
 13041  006654  22F4               	addwfc	prodh,f,c
 13042  006656  0E00               	movlw	low _all_shapes
 13043  006658  24F3               	addwf	prodl,w,c
 13044  00665A  6ED9               	movwf	fsr2l,c
 13045  00665C  0E01               	movlw	high _all_shapes
 13046  00665E  20F4               	addwfc	prodh,w,c
 13047  006660  6EDA               	movwf	fsr2h,c
 13048  006662  0E02               	movlw	2
 13049  006664  6EDF               	movwf	indf2,c
 13050                           
 13051                           ;main.c: 657: for (uint8_t k=1;k<4;k++){
 13052  006666  0E01               	movlw	1
 13053  006668  6E29               	movwf	createRandomShape@k_290,c
 13054  00666A                     l4212:
 13055  00666A  0E03               	movlw	3
 13056  00666C  6429               	cpfsgt	createRandomShape@k_290,c
 13057  00666E  D002               	goto	l247
 13058  006670  EF35  F039         	goto	l217
 13059  006674                     l247:
 13060                           
 13061                           ;main.c: 658: all_shapes[i].index[k].x=11;
 13062  006674  5034               	movf	createRandomShape@i,w,c
 13063  006676  0D09               	mullw	9
 13064  006678  0E00               	movlw	low _all_shapes
 13065  00667A  6E15               	movwf	??_createRandomShape& (0+255),c
 13066  00667C  0E01               	movlw	high _all_shapes
 13067  00667E  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 13068  006680  50F3               	movf	prodl,w,c
 13069  006682  2615               	addwf	??_createRandomShape,f,c
 13070  006684  50F4               	movf	prodh,w,c
 13071  006686  2216               	addwfc	??_createRandomShape+1,f,c
 13072  006688  5029               	movf	createRandomShape@k_290,w,c
 13073  00668A  0D02               	mullw	2
 13074  00668C  50F3               	movf	prodl,w,c
 13075  00668E  2415               	addwf	??_createRandomShape,w,c
 13076  006690  6ED9               	movwf	fsr2l,c
 13077  006692  50F4               	movf	prodh,w,c
 13078  006694  2016               	addwfc	??_createRandomShape+1,w,c
 13079  006696  6EDA               	movwf	fsr2h,c
 13080  006698  0E0B               	movlw	11
 13081  00669A  6EDF               	movwf	indf2,c
 13082                           
 13083                           ;main.c: 659: all_shapes[i].index[k].y=start;
 13084  00669C  5034               	movf	createRandomShape@i,w,c
 13085  00669E  0D09               	mullw	9
 13086  0066A0  0E00               	movlw	low _all_shapes
 13087  0066A2  6E15               	movwf	??_createRandomShape& (0+255),c
 13088  0066A4  0E01               	movlw	high _all_shapes
 13089  0066A6  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 13090  0066A8  50F3               	movf	prodl,w,c
 13091  0066AA  2615               	addwf	??_createRandomShape,f,c
 13092  0066AC  50F4               	movf	prodh,w,c
 13093  0066AE  2216               	addwfc	??_createRandomShape+1,f,c
 13094  0066B0  5029               	movf	createRandomShape@k_290,w,c
 13095  0066B2  0D02               	mullw	2
 13096  0066B4  50F3               	movf	prodl,w,c
 13097  0066B6  2615               	addwf	??_createRandomShape,f,c
 13098  0066B8  50F4               	movf	prodh,w,c
 13099  0066BA  2216               	addwfc	??_createRandomShape+1,f,c
 13100  0066BC  0E01               	movlw	1
 13101  0066BE  2415               	addwf	??_createRandomShape,w,c
 13102  0066C0  6ED9               	movwf	fsr2l,c
 13103  0066C2  0E00               	movlw	0
 13104  0066C4  2016               	addwfc	??_createRandomShape+1,w,c
 13105  0066C6  6EDA               	movwf	fsr2h,c
 13106  0066C8  C031  FFDF         	movff	createRandomShape@start_286,indf2
 13107                           
 13108                           ;main.c: 660: start++;
 13109  0066CC  2A31               	incf	createRandomShape@start_286,f,c
 13110  0066CE  2A29               	incf	createRandomShape@k_290,f,c
 13111  0066D0  D7CC               	goto	l4212
 13112  0066D2  5033               	movf	createRandomShape@orientation,w,c
 13113                           
 13114                           ; Switch size 1, requested type "space"
 13115                           ; Number of cases is 4, Range of values is 0 to 3
 13116                           ; switch strategies available:
 13117                           ; Name         Instructions Cycles
 13118                           ; simple_byte           13     7 (average)
 13119                           ;	Chosen strategy is simple_byte
 13120  0066D4  0A00               	xorlw	0	; case 0
 13121  0066D6  B4D8               	btfsc	status,2,c
 13122  0066D8  D684               	goto	l236
 13123  0066DA  0A01               	xorlw	1	; case 1
 13124  0066DC  B4D8               	btfsc	status,2,c
 13125  0066DE  D6DF               	goto	l240
 13126  0066E0  0A03               	xorlw	3	; case 2
 13127  0066E2  B4D8               	btfsc	status,2,c
 13128  0066E4  D73A               	goto	l243
 13129  0066E6  0A01               	xorlw	1	; case 3
 13130  0066E8  B4D8               	btfsc	status,2,c
 13131  0066EA  D795               	goto	l246
 13132                           
 13133                           ;main.c: 666: break;
 13134  0066EC  EF35  F039         	goto	l217
 13135  0066F0                     
 13136                           ;main.c: 668: all_shapes[i].index[0].x=11;
 13137  0066F0  5034               	movf	createRandomShape@i,w,c
 13138  0066F2  0D09               	mullw	9
 13139  0066F4  0E00               	movlw	low _all_shapes
 13140  0066F6  24F3               	addwf	prodl,w,c
 13141  0066F8  6ED9               	movwf	fsr2l,c
 13142  0066FA  0E01               	movlw	high _all_shapes
 13143  0066FC  20F4               	addwfc	prodh,w,c
 13144  0066FE  6EDA               	movwf	fsr2h,c
 13145  006700  0E0B               	movlw	11
 13146  006702  6EDF               	movwf	indf2,c
 13147                           
 13148                           ;main.c: 669: all_shapes[i].index[0].y=0;
 13149  006704  5034               	movf	createRandomShape@i,w,c
 13150  006706  0D09               	mullw	9
 13151  006708  0E01               	movlw	1
 13152  00670A  26F3               	addwf	prodl,f,c
 13153  00670C  0E00               	movlw	0
 13154  00670E  22F4               	addwfc	prodh,f,c
 13155  006710  0E00               	movlw	low _all_shapes
 13156  006712  24F3               	addwf	prodl,w,c
 13157  006714  6ED9               	movwf	fsr2l,c
 13158  006716  0E01               	movlw	high _all_shapes
 13159  006718  20F4               	addwfc	prodh,w,c
 13160  00671A  6EDA               	movwf	fsr2h,c
 13161  00671C  0E00               	movlw	0
 13162  00671E  6EDF               	movwf	indf2,c
 13163                           
 13164                           ;main.c: 670: all_shapes[i].index[1].x=12;
 13165  006720  5034               	movf	createRandomShape@i,w,c
 13166  006722  0D09               	mullw	9
 13167  006724  0E02               	movlw	2
 13168  006726  26F3               	addwf	prodl,f,c
 13169  006728  0E00               	movlw	0
 13170  00672A  22F4               	addwfc	prodh,f,c
 13171  00672C  0E00               	movlw	low _all_shapes
 13172  00672E  24F3               	addwf	prodl,w,c
 13173  006730  6ED9               	movwf	fsr2l,c
 13174  006732  0E01               	movlw	high _all_shapes
 13175  006734  20F4               	addwfc	prodh,w,c
 13176  006736  6EDA               	movwf	fsr2h,c
 13177  006738  0E0C               	movlw	12
 13178  00673A  6EDF               	movwf	indf2,c
 13179                           
 13180                           ;main.c: 671: all_shapes[i].index[1].y=0;
 13181  00673C  5034               	movf	createRandomShape@i,w,c
 13182  00673E  0D09               	mullw	9
 13183  006740  0E03               	movlw	3
 13184  006742  26F3               	addwf	prodl,f,c
 13185  006744  0E00               	movlw	0
 13186  006746  22F4               	addwfc	prodh,f,c
 13187  006748  0E00               	movlw	low _all_shapes
 13188  00674A  24F3               	addwf	prodl,w,c
 13189  00674C  6ED9               	movwf	fsr2l,c
 13190  00674E  0E01               	movlw	high _all_shapes
 13191  006750  20F4               	addwfc	prodh,w,c
 13192  006752  6EDA               	movwf	fsr2h,c
 13193  006754  0E00               	movlw	0
 13194  006756  6EDF               	movwf	indf2,c
 13195                           
 13196                           ;main.c: 672: all_shapes[i].index[2].x=11;
 13197  006758  5034               	movf	createRandomShape@i,w,c
 13198  00675A  0D09               	mullw	9
 13199  00675C  0E04               	movlw	4
 13200  00675E  26F3               	addwf	prodl,f,c
 13201  006760  0E00               	movlw	0
 13202  006762  22F4               	addwfc	prodh,f,c
 13203  006764  0E00               	movlw	low _all_shapes
 13204  006766  24F3               	addwf	prodl,w,c
 13205  006768  6ED9               	movwf	fsr2l,c
 13206  00676A  0E01               	movlw	high _all_shapes
 13207  00676C  20F4               	addwfc	prodh,w,c
 13208  00676E  6EDA               	movwf	fsr2h,c
 13209  006770  0E0B               	movlw	11
 13210  006772  6EDF               	movwf	indf2,c
 13211                           
 13212                           ;main.c: 673: all_shapes[i].index[2].y=1;
 13213  006774  5034               	movf	createRandomShape@i,w,c
 13214  006776  0D09               	mullw	9
 13215  006778  0E05               	movlw	5
 13216  00677A  26F3               	addwf	prodl,f,c
 13217  00677C  0E00               	movlw	0
 13218  00677E  22F4               	addwfc	prodh,f,c
 13219  006780  0E00               	movlw	low _all_shapes
 13220  006782  24F3               	addwf	prodl,w,c
 13221  006784  6ED9               	movwf	fsr2l,c
 13222  006786  0E01               	movlw	high _all_shapes
 13223  006788  20F4               	addwfc	prodh,w,c
 13224  00678A  6EDA               	movwf	fsr2h,c
 13225  00678C  0E01               	movlw	1
 13226  00678E  6EDF               	movwf	indf2,c
 13227                           
 13228                           ;main.c: 674: all_shapes[i].index[3].x=12;
 13229  006790  5034               	movf	createRandomShape@i,w,c
 13230  006792  0D09               	mullw	9
 13231  006794  0E06               	movlw	6
 13232  006796  26F3               	addwf	prodl,f,c
 13233  006798  0E00               	movlw	0
 13234  00679A  22F4               	addwfc	prodh,f,c
 13235  00679C  0E00               	movlw	low _all_shapes
 13236  00679E  24F3               	addwf	prodl,w,c
 13237  0067A0  6ED9               	movwf	fsr2l,c
 13238  0067A2  0E01               	movlw	high _all_shapes
 13239  0067A4  20F4               	addwfc	prodh,w,c
 13240  0067A6  6EDA               	movwf	fsr2h,c
 13241  0067A8  0E0C               	movlw	12
 13242  0067AA  6EDF               	movwf	indf2,c
 13243                           
 13244                           ;main.c: 675: all_shapes[i].index[3].y=1;
 13245  0067AC  5034               	movf	createRandomShape@i,w,c
 13246  0067AE  0D09               	mullw	9
 13247  0067B0  0E07               	movlw	7
 13248  0067B2  26F3               	addwf	prodl,f,c
 13249  0067B4  0E00               	movlw	0
 13250  0067B6  22F4               	addwfc	prodh,f,c
 13251  0067B8  0E00               	movlw	low _all_shapes
 13252  0067BA  24F3               	addwf	prodl,w,c
 13253  0067BC  6ED9               	movwf	fsr2l,c
 13254  0067BE  0E01               	movlw	high _all_shapes
 13255  0067C0  20F4               	addwfc	prodh,w,c
 13256  0067C2  6EDA               	movwf	fsr2h,c
 13257  0067C4  0E01               	movlw	1
 13258  0067C6  6EDF               	movwf	indf2,c
 13259                           
 13260                           ;main.c: 676: switch (orientation){
 13261  0067C8  D02A               	goto	l251
 13262  0067CA                     
 13263                           ;main.c: 678: all_shapes[i].orientation=0;
 13264  0067CA  5034               	movf	createRandomShape@i,w,c
 13265  0067CC  0D09               	mullw	9
 13266  0067CE  0E08               	movlw	8
 13267  0067D0  26F3               	addwf	prodl,f,c
 13268  0067D2  0E00               	movlw	0
 13269  0067D4  22F4               	addwfc	prodh,f,c
 13270  0067D6  0E00               	movlw	low _all_shapes
 13271  0067D8  24F3               	addwf	prodl,w,c
 13272  0067DA  6ED9               	movwf	fsr2l,c
 13273  0067DC  0E01               	movlw	high _all_shapes
 13274  0067DE  20F4               	addwfc	prodh,w,c
 13275  0067E0  6EDA               	movwf	fsr2h,c
 13276  0067E2  0E00               	movlw	0
 13277  0067E4  D3D4               	goto	L41
 13278  0067E6                     
 13279                           ;main.c: 681: all_shapes[i].orientation=1;
 13280  0067E6  5034               	movf	createRandomShape@i,w,c
 13281  0067E8  0D09               	mullw	9
 13282  0067EA  0E08               	movlw	8
 13283  0067EC  26F3               	addwf	prodl,f,c
 13284  0067EE  0E00               	movlw	0
 13285  0067F0  22F4               	addwfc	prodh,f,c
 13286  0067F2  0E00               	movlw	low _all_shapes
 13287  0067F4  24F3               	addwf	prodl,w,c
 13288  0067F6  6ED9               	movwf	fsr2l,c
 13289  0067F8  0E01               	movlw	high _all_shapes
 13290  0067FA  20F4               	addwfc	prodh,w,c
 13291  0067FC  6EDA               	movwf	fsr2h,c
 13292  0067FE  0E01               	movlw	1
 13293  006800  D3C6               	goto	L41
 13294  006802                     
 13295                           ;main.c: 684: all_shapes[i].orientation=2;
 13296  006802  5034               	movf	createRandomShape@i,w,c
 13297  006804  0D09               	mullw	9
 13298  006806  0E08               	movlw	8
 13299  006808  26F3               	addwf	prodl,f,c
 13300  00680A  0E00               	movlw	0
 13301  00680C  22F4               	addwfc	prodh,f,c
 13302  00680E  0E00               	movlw	low _all_shapes
 13303  006810  24F3               	addwf	prodl,w,c
 13304  006812  6ED9               	movwf	fsr2l,c
 13305  006814  0E01               	movlw	high _all_shapes
 13306  006816  20F4               	addwfc	prodh,w,c
 13307  006818  6EDA               	movwf	fsr2h,c
 13308  00681A  0E02               	movlw	2
 13309  00681C  D3B8               	goto	L41
 13310  00681E                     l251:
 13311  00681E  5033               	movf	createRandomShape@orientation,w,c
 13312                           
 13313                           ; Switch size 1, requested type "space"
 13314                           ; Number of cases is 4, Range of values is 0 to 3
 13315                           ; switch strategies available:
 13316                           ; Name         Instructions Cycles
 13317                           ; simple_byte           13     7 (average)
 13318                           ;	Chosen strategy is simple_byte
 13319  006820  0A00               	xorlw	0	; case 0
 13320  006822  B4D8               	btfsc	status,2,c
 13321  006824  D7D2               	goto	l252
 13322  006826  0A01               	xorlw	1	; case 1
 13323  006828  B4D8               	btfsc	status,2,c
 13324  00682A  D7DD               	goto	l254
 13325  00682C  0A03               	xorlw	3	; case 2
 13326  00682E  B4D8               	btfsc	status,2,c
 13327  006830  D7E8               	goto	l255
 13328  006832  0A01               	xorlw	1	; case 3
 13329  006834  B4D8               	btfsc	status,2,c
 13330  006836  EFFF  F038         	goto	L46
 13331                           
 13332                           ;main.c: 692: break;
 13333  00683A  EF35  F039         	goto	l217
 13334  00683E                     
 13335                           ;main.c: 696: all_shapes[i].orientation=0;
 13336  00683E  5034               	movf	createRandomShape@i,w,c
 13337  006840  0D09               	mullw	9
 13338  006842  0E08               	movlw	8
 13339  006844  26F3               	addwf	prodl,f,c
 13340  006846  0E00               	movlw	0
 13341  006848  22F4               	addwfc	prodh,f,c
 13342  00684A  0E00               	movlw	low _all_shapes
 13343  00684C  24F3               	addwf	prodl,w,c
 13344  00684E  6ED9               	movwf	fsr2l,c
 13345  006850  0E01               	movlw	high _all_shapes
 13346  006852  20F4               	addwfc	prodh,w,c
 13347  006854  6EDA               	movwf	fsr2h,c
 13348  006856  0E00               	movlw	0
 13349  006858  6EDF               	movwf	indf2,c
 13350                           
 13351                           ;main.c: 697: all_shapes[i].index[0].x=10;
 13352  00685A  5034               	movf	createRandomShape@i,w,c
 13353  00685C  0D09               	mullw	9
 13354  00685E  0E00               	movlw	low _all_shapes
 13355  006860  24F3               	addwf	prodl,w,c
 13356  006862  6ED9               	movwf	fsr2l,c
 13357  006864  0E01               	movlw	high _all_shapes
 13358  006866  20F4               	addwfc	prodh,w,c
 13359  006868  6EDA               	movwf	fsr2h,c
 13360  00686A  0E0A               	movlw	10
 13361  00686C  6EDF               	movwf	indf2,c
 13362                           
 13363                           ;main.c: 698: all_shapes[i].index[0].y=1;
 13364  00686E  5034               	movf	createRandomShape@i,w,c
 13365  006870  0D09               	mullw	9
 13366  006872  0E01               	movlw	1
 13367  006874  26F3               	addwf	prodl,f,c
 13368  006876  0E00               	movlw	0
 13369  006878  22F4               	addwfc	prodh,f,c
 13370  00687A  0E00               	movlw	low _all_shapes
 13371  00687C  24F3               	addwf	prodl,w,c
 13372  00687E  6ED9               	movwf	fsr2l,c
 13373  006880  0E01               	movlw	high _all_shapes
 13374  006882  20F4               	addwfc	prodh,w,c
 13375  006884  6EDA               	movwf	fsr2h,c
 13376  006886  0E01               	movlw	1
 13377  006888  6EDF               	movwf	indf2,c
 13378                           
 13379                           ;main.c: 699: all_shapes[i].index[1].x=11;
 13380  00688A  5034               	movf	createRandomShape@i,w,c
 13381  00688C  0D09               	mullw	9
 13382  00688E  0E02               	movlw	2
 13383  006890  26F3               	addwf	prodl,f,c
 13384  006892  0E00               	movlw	0
 13385  006894  22F4               	addwfc	prodh,f,c
 13386  006896  0E00               	movlw	low _all_shapes
 13387  006898  24F3               	addwf	prodl,w,c
 13388  00689A  6ED9               	movwf	fsr2l,c
 13389  00689C  0E01               	movlw	high _all_shapes
 13390  00689E  20F4               	addwfc	prodh,w,c
 13391  0068A0  6EDA               	movwf	fsr2h,c
 13392  0068A2  0E0B               	movlw	11
 13393  0068A4  6EDF               	movwf	indf2,c
 13394                           
 13395                           ;main.c: 700: all_shapes[i].index[1].y=1;
 13396  0068A6  5034               	movf	createRandomShape@i,w,c
 13397  0068A8  0D09               	mullw	9
 13398  0068AA  0E03               	movlw	3
 13399  0068AC  26F3               	addwf	prodl,f,c
 13400  0068AE  0E00               	movlw	0
 13401  0068B0  22F4               	addwfc	prodh,f,c
 13402  0068B2  0E00               	movlw	low _all_shapes
 13403  0068B4  24F3               	addwf	prodl,w,c
 13404  0068B6  6ED9               	movwf	fsr2l,c
 13405  0068B8  0E01               	movlw	high _all_shapes
 13406  0068BA  20F4               	addwfc	prodh,w,c
 13407  0068BC  6EDA               	movwf	fsr2h,c
 13408  0068BE  0E01               	movlw	1
 13409  0068C0  6EDF               	movwf	indf2,c
 13410                           
 13411                           ;main.c: 701: all_shapes[i].index[2].x=11;
 13412  0068C2  5034               	movf	createRandomShape@i,w,c
 13413  0068C4  0D09               	mullw	9
 13414  0068C6  0E04               	movlw	4
 13415  0068C8  26F3               	addwf	prodl,f,c
 13416  0068CA  0E00               	movlw	0
 13417  0068CC  22F4               	addwfc	prodh,f,c
 13418  0068CE  0E00               	movlw	low _all_shapes
 13419  0068D0  24F3               	addwf	prodl,w,c
 13420  0068D2  6ED9               	movwf	fsr2l,c
 13421  0068D4  0E01               	movlw	high _all_shapes
 13422  0068D6  20F4               	addwfc	prodh,w,c
 13423  0068D8  6EDA               	movwf	fsr2h,c
 13424  0068DA  0E0B               	movlw	11
 13425  0068DC  6EDF               	movwf	indf2,c
 13426                           
 13427                           ;main.c: 702: all_shapes[i].index[2].y=0;
 13428  0068DE  5034               	movf	createRandomShape@i,w,c
 13429  0068E0  0D09               	mullw	9
 13430  0068E2  0E05               	movlw	5
 13431  0068E4  26F3               	addwf	prodl,f,c
 13432  0068E6  0E00               	movlw	0
 13433  0068E8  22F4               	addwfc	prodh,f,c
 13434  0068EA  0E00               	movlw	low _all_shapes
 13435  0068EC  24F3               	addwf	prodl,w,c
 13436  0068EE  6ED9               	movwf	fsr2l,c
 13437  0068F0  0E01               	movlw	high _all_shapes
 13438  0068F2  20F4               	addwfc	prodh,w,c
 13439  0068F4  6EDA               	movwf	fsr2h,c
 13440  0068F6  0E00               	movlw	0
 13441  0068F8  6EDF               	movwf	indf2,c
 13442                           
 13443                           ;main.c: 703: all_shapes[i].index[3].x=12;
 13444  0068FA  5034               	movf	createRandomShape@i,w,c
 13445  0068FC  0D09               	mullw	9
 13446  0068FE  0E06               	movlw	6
 13447  006900  26F3               	addwf	prodl,f,c
 13448  006902  0E00               	movlw	0
 13449  006904  22F4               	addwfc	prodh,f,c
 13450  006906  0E00               	movlw	low _all_shapes
 13451  006908  24F3               	addwf	prodl,w,c
 13452  00690A  6ED9               	movwf	fsr2l,c
 13453  00690C  0E01               	movlw	high _all_shapes
 13454  00690E  20F4               	addwfc	prodh,w,c
 13455  006910  6EDA               	movwf	fsr2h,c
 13456  006912  0E0C               	movlw	12
 13457  006914  6EDF               	movwf	indf2,c
 13458                           
 13459                           ;main.c: 704: all_shapes[i].index[3].y=0;
 13460  006916  5034               	movf	createRandomShape@i,w,c
 13461  006918  0D09               	mullw	9
 13462  00691A  0E07               	movlw	7
 13463  00691C  D759               	goto	L47
 13464  00691E                     
 13465                           ;main.c: 707: all_shapes[i].index[0].x=10;
 13466  00691E  5034               	movf	createRandomShape@i,w,c
 13467  006920  0D09               	mullw	9
 13468  006922  0E00               	movlw	low _all_shapes
 13469  006924  24F3               	addwf	prodl,w,c
 13470  006926  6ED9               	movwf	fsr2l,c
 13471  006928  0E01               	movlw	high _all_shapes
 13472  00692A  20F4               	addwfc	prodh,w,c
 13473  00692C  6EDA               	movwf	fsr2h,c
 13474  00692E  0E0A               	movlw	10
 13475  006930  6EDF               	movwf	indf2,c
 13476                           
 13477                           ;main.c: 708: all_shapes[i].index[0].y=2;
 13478  006932  5034               	movf	createRandomShape@i,w,c
 13479  006934  0D09               	mullw	9
 13480  006936  0E01               	movlw	1
 13481  006938  26F3               	addwf	prodl,f,c
 13482  00693A  0E00               	movlw	0
 13483  00693C  22F4               	addwfc	prodh,f,c
 13484  00693E  0E00               	movlw	low _all_shapes
 13485  006940  24F3               	addwf	prodl,w,c
 13486  006942  6ED9               	movwf	fsr2l,c
 13487  006944  0E01               	movlw	high _all_shapes
 13488  006946  20F4               	addwfc	prodh,w,c
 13489  006948  6EDA               	movwf	fsr2h,c
 13490  00694A  0E02               	movlw	2
 13491  00694C  6EDF               	movwf	indf2,c
 13492                           
 13493                           ;main.c: 709: all_shapes[i].index[1].x=11;
 13494  00694E  5034               	movf	createRandomShape@i,w,c
 13495  006950  0D09               	mullw	9
 13496  006952  0E02               	movlw	2
 13497  006954  26F3               	addwf	prodl,f,c
 13498  006956  0E00               	movlw	0
 13499  006958  22F4               	addwfc	prodh,f,c
 13500  00695A  0E00               	movlw	low _all_shapes
 13501  00695C  24F3               	addwf	prodl,w,c
 13502  00695E  6ED9               	movwf	fsr2l,c
 13503  006960  0E01               	movlw	high _all_shapes
 13504  006962  20F4               	addwfc	prodh,w,c
 13505  006964  6EDA               	movwf	fsr2h,c
 13506  006966  0E0B               	movlw	11
 13507  006968  6EDF               	movwf	indf2,c
 13508                           
 13509                           ;main.c: 710: all_shapes[i].index[1].y=2;
 13510  00696A  5034               	movf	createRandomShape@i,w,c
 13511  00696C  0D09               	mullw	9
 13512  00696E  0E03               	movlw	3
 13513  006970  26F3               	addwf	prodl,f,c
 13514  006972  0E00               	movlw	0
 13515  006974  22F4               	addwfc	prodh,f,c
 13516  006976  0E00               	movlw	low _all_shapes
 13517  006978  24F3               	addwf	prodl,w,c
 13518  00697A  6ED9               	movwf	fsr2l,c
 13519  00697C  0E01               	movlw	high _all_shapes
 13520  00697E  20F4               	addwfc	prodh,w,c
 13521  006980  6EDA               	movwf	fsr2h,c
 13522  006982  0E02               	movlw	2
 13523  006984  6EDF               	movwf	indf2,c
 13524                           
 13525                           ;main.c: 711: all_shapes[i].index[2].x=11;
 13526  006986  5034               	movf	createRandomShape@i,w,c
 13527  006988  0D09               	mullw	9
 13528  00698A  0E04               	movlw	4
 13529  00698C  26F3               	addwf	prodl,f,c
 13530  00698E  0E00               	movlw	0
 13531  006990  22F4               	addwfc	prodh,f,c
 13532  006992  0E00               	movlw	low _all_shapes
 13533  006994  24F3               	addwf	prodl,w,c
 13534  006996  6ED9               	movwf	fsr2l,c
 13535  006998  0E01               	movlw	high _all_shapes
 13536  00699A  20F4               	addwfc	prodh,w,c
 13537  00699C  6EDA               	movwf	fsr2h,c
 13538  00699E  0E0B               	movlw	11
 13539  0069A0  6EDF               	movwf	indf2,c
 13540                           
 13541                           ;main.c: 712: all_shapes[i].index[2].y=1;
 13542  0069A2  5034               	movf	createRandomShape@i,w,c
 13543  0069A4  0D09               	mullw	9
 13544  0069A6  0E05               	movlw	5
 13545  0069A8  26F3               	addwf	prodl,f,c
 13546  0069AA  0E00               	movlw	0
 13547  0069AC  22F4               	addwfc	prodh,f,c
 13548  0069AE  0E00               	movlw	low _all_shapes
 13549  0069B0  24F3               	addwf	prodl,w,c
 13550  0069B2  6ED9               	movwf	fsr2l,c
 13551  0069B4  0E01               	movlw	high _all_shapes
 13552  0069B6  20F4               	addwfc	prodh,w,c
 13553  0069B8  6EDA               	movwf	fsr2h,c
 13554  0069BA  0E01               	movlw	1
 13555  0069BC  6EDF               	movwf	indf2,c
 13556                           
 13557                           ;main.c: 713: all_shapes[i].index[3].x=12;
 13558  0069BE  5034               	movf	createRandomShape@i,w,c
 13559  0069C0  0D09               	mullw	9
 13560  0069C2  0E06               	movlw	6
 13561  0069C4  26F3               	addwf	prodl,f,c
 13562  0069C6  0E00               	movlw	0
 13563  0069C8  22F4               	addwfc	prodh,f,c
 13564  0069CA  0E00               	movlw	low _all_shapes
 13565  0069CC  24F3               	addwf	prodl,w,c
 13566  0069CE  6ED9               	movwf	fsr2l,c
 13567  0069D0  0E01               	movlw	high _all_shapes
 13568  0069D2  20F4               	addwfc	prodh,w,c
 13569  0069D4  6EDA               	movwf	fsr2h,c
 13570  0069D6  0E0C               	movlw	12
 13571  0069D8  6EDF               	movwf	indf2,c
 13572                           
 13573                           ;main.c: 714: all_shapes[i].index[3].y=1;
 13574  0069DA  5034               	movf	createRandomShape@i,w,c
 13575  0069DC  0D09               	mullw	9
 13576  0069DE  0E07               	movlw	7
 13577  0069E0  26F3               	addwf	prodl,f,c
 13578  0069E2  0E00               	movlw	0
 13579  0069E4  22F4               	addwfc	prodh,f,c
 13580  0069E6  0E00               	movlw	low _all_shapes
 13581  0069E8  24F3               	addwf	prodl,w,c
 13582  0069EA  6ED9               	movwf	fsr2l,c
 13583  0069EC  0E01               	movlw	high _all_shapes
 13584  0069EE  20F4               	addwfc	prodh,w,c
 13585  0069F0  6EDA               	movwf	fsr2h,c
 13586  0069F2  0E01               	movlw	1
 13587  0069F4  6EDF               	movwf	indf2,c
 13588  0069F6  D6F7               	goto	l254
 13589  0069F8                     
 13590                           ;main.c: 718: all_shapes[i].index[0].x=10;
 13591  0069F8  5034               	movf	createRandomShape@i,w,c
 13592  0069FA  0D09               	mullw	9
 13593  0069FC  0E00               	movlw	low _all_shapes
 13594  0069FE  24F3               	addwf	prodl,w,c
 13595  006A00  6ED9               	movwf	fsr2l,c
 13596  006A02  0E01               	movlw	high _all_shapes
 13597  006A04  20F4               	addwfc	prodh,w,c
 13598  006A06  6EDA               	movwf	fsr2h,c
 13599  006A08  0E0A               	movlw	10
 13600  006A0A  6EDF               	movwf	indf2,c
 13601                           
 13602                           ;main.c: 719: all_shapes[i].index[0].y=0;
 13603  006A0C  5034               	movf	createRandomShape@i,w,c
 13604  006A0E  0D09               	mullw	9
 13605  006A10  0E01               	movlw	1
 13606  006A12  26F3               	addwf	prodl,f,c
 13607  006A14  0E00               	movlw	0
 13608  006A16  22F4               	addwfc	prodh,f,c
 13609  006A18  0E00               	movlw	low _all_shapes
 13610  006A1A  24F3               	addwf	prodl,w,c
 13611  006A1C  6ED9               	movwf	fsr2l,c
 13612  006A1E  0E01               	movlw	high _all_shapes
 13613  006A20  20F4               	addwfc	prodh,w,c
 13614  006A22  6EDA               	movwf	fsr2h,c
 13615  006A24  0E00               	movlw	0
 13616  006A26  6EDF               	movwf	indf2,c
 13617                           
 13618                           ;main.c: 720: all_shapes[i].index[1].x=10;
 13619  006A28  5034               	movf	createRandomShape@i,w,c
 13620  006A2A  0D09               	mullw	9
 13621  006A2C  0E02               	movlw	2
 13622  006A2E  26F3               	addwf	prodl,f,c
 13623  006A30  0E00               	movlw	0
 13624  006A32  22F4               	addwfc	prodh,f,c
 13625  006A34  0E00               	movlw	low _all_shapes
 13626  006A36  24F3               	addwf	prodl,w,c
 13627  006A38  6ED9               	movwf	fsr2l,c
 13628  006A3A  0E01               	movlw	high _all_shapes
 13629  006A3C  20F4               	addwfc	prodh,w,c
 13630  006A3E  6EDA               	movwf	fsr2h,c
 13631  006A40  0E0A               	movlw	10
 13632  006A42  6EDF               	movwf	indf2,c
 13633                           
 13634                           ;main.c: 721: all_shapes[i].index[1].y=1;
 13635  006A44  5034               	movf	createRandomShape@i,w,c
 13636  006A46  0D09               	mullw	9
 13637  006A48  0E03               	movlw	3
 13638  006A4A  26F3               	addwf	prodl,f,c
 13639  006A4C  0E00               	movlw	0
 13640  006A4E  22F4               	addwfc	prodh,f,c
 13641  006A50  0E00               	movlw	low _all_shapes
 13642  006A52  24F3               	addwf	prodl,w,c
 13643  006A54  6ED9               	movwf	fsr2l,c
 13644  006A56  0E01               	movlw	high _all_shapes
 13645  006A58  20F4               	addwfc	prodh,w,c
 13646  006A5A  6EDA               	movwf	fsr2h,c
 13647  006A5C  0E01               	movlw	1
 13648  006A5E  6EDF               	movwf	indf2,c
 13649                           
 13650                           ;main.c: 722: all_shapes[i].index[2].x=11;
 13651  006A60  5034               	movf	createRandomShape@i,w,c
 13652  006A62  0D09               	mullw	9
 13653  006A64  0E04               	movlw	4
 13654  006A66  26F3               	addwf	prodl,f,c
 13655  006A68  0E00               	movlw	0
 13656  006A6A  22F4               	addwfc	prodh,f,c
 13657  006A6C  0E00               	movlw	low _all_shapes
 13658  006A6E  24F3               	addwf	prodl,w,c
 13659  006A70  6ED9               	movwf	fsr2l,c
 13660  006A72  0E01               	movlw	high _all_shapes
 13661  006A74  20F4               	addwfc	prodh,w,c
 13662  006A76  6EDA               	movwf	fsr2h,c
 13663  006A78  0E0B               	movlw	11
 13664  006A7A  6EDF               	movwf	indf2,c
 13665                           
 13666                           ;main.c: 723: all_shapes[i].index[2].y=1;
 13667  006A7C  5034               	movf	createRandomShape@i,w,c
 13668  006A7E  0D09               	mullw	9
 13669  006A80  0E05               	movlw	5
 13670  006A82  26F3               	addwf	prodl,f,c
 13671  006A84  0E00               	movlw	0
 13672  006A86  22F4               	addwfc	prodh,f,c
 13673  006A88  0E00               	movlw	low _all_shapes
 13674  006A8A  24F3               	addwf	prodl,w,c
 13675  006A8C  6ED9               	movwf	fsr2l,c
 13676  006A8E  0E01               	movlw	high _all_shapes
 13677  006A90  20F4               	addwfc	prodh,w,c
 13678  006A92  6EDA               	movwf	fsr2h,c
 13679  006A94  0E01               	movlw	1
 13680  006A96  6EDF               	movwf	indf2,c
 13681                           
 13682                           ;main.c: 724: all_shapes[i].index[3].x=11;
 13683  006A98  5034               	movf	createRandomShape@i,w,c
 13684  006A9A  0D09               	mullw	9
 13685  006A9C  0E06               	movlw	6
 13686  006A9E  26F3               	addwf	prodl,f,c
 13687  006AA0  0E00               	movlw	0
 13688  006AA2  22F4               	addwfc	prodh,f,c
 13689  006AA4  0E00               	movlw	low _all_shapes
 13690  006AA6  24F3               	addwf	prodl,w,c
 13691  006AA8  6ED9               	movwf	fsr2l,c
 13692  006AAA  0E01               	movlw	high _all_shapes
 13693  006AAC  20F4               	addwfc	prodh,w,c
 13694  006AAE  6EDA               	movwf	fsr2h,c
 13695  006AB0  0E0B               	movlw	11
 13696  006AB2  6EDF               	movwf	indf2,c
 13697                           
 13698                           ;main.c: 725: all_shapes[i].index[3].y=2;
 13699  006AB4  5034               	movf	createRandomShape@i,w,c
 13700  006AB6  0D09               	mullw	9
 13701  006AB8  0E07               	movlw	7
 13702  006ABA  26F3               	addwf	prodl,f,c
 13703  006ABC  0E00               	movlw	0
 13704  006ABE  22F4               	addwfc	prodh,f,c
 13705  006AC0  0E00               	movlw	low _all_shapes
 13706  006AC2  24F3               	addwf	prodl,w,c
 13707  006AC4  6ED9               	movwf	fsr2l,c
 13708  006AC6  0E01               	movlw	high _all_shapes
 13709  006AC8  20F4               	addwfc	prodh,w,c
 13710  006ACA  6EDA               	movwf	fsr2h,c
 13711  006ACC  0E02               	movlw	2
 13712  006ACE  6EDF               	movwf	indf2,c
 13713  006AD0  D698               	goto	l255
 13714  006AD2                     
 13715                           ;main.c: 729: all_shapes[i].index[0].x=11;
 13716  006AD2  5034               	movf	createRandomShape@i,w,c
 13717  006AD4  0D09               	mullw	9
 13718  006AD6  0E00               	movlw	low _all_shapes
 13719  006AD8  24F3               	addwf	prodl,w,c
 13720  006ADA  6ED9               	movwf	fsr2l,c
 13721  006ADC  0E01               	movlw	high _all_shapes
 13722  006ADE  20F4               	addwfc	prodh,w,c
 13723  006AE0  6EDA               	movwf	fsr2h,c
 13724  006AE2  0E0B               	movlw	11
 13725  006AE4  6EDF               	movwf	indf2,c
 13726                           
 13727                           ;main.c: 730: all_shapes[i].index[0].y=0;
 13728  006AE6  5034               	movf	createRandomShape@i,w,c
 13729  006AE8  0D09               	mullw	9
 13730  006AEA  0E01               	movlw	1
 13731  006AEC  26F3               	addwf	prodl,f,c
 13732  006AEE  0E00               	movlw	0
 13733  006AF0  22F4               	addwfc	prodh,f,c
 13734  006AF2  0E00               	movlw	low _all_shapes
 13735  006AF4  24F3               	addwf	prodl,w,c
 13736  006AF6  6ED9               	movwf	fsr2l,c
 13737  006AF8  0E01               	movlw	high _all_shapes
 13738  006AFA  20F4               	addwfc	prodh,w,c
 13739  006AFC  6EDA               	movwf	fsr2h,c
 13740  006AFE  0E00               	movlw	0
 13741  006B00  6EDF               	movwf	indf2,c
 13742                           
 13743                           ;main.c: 731: all_shapes[i].index[1].x=11;
 13744  006B02  5034               	movf	createRandomShape@i,w,c
 13745  006B04  0D09               	mullw	9
 13746  006B06  0E02               	movlw	2
 13747  006B08  26F3               	addwf	prodl,f,c
 13748  006B0A  0E00               	movlw	0
 13749  006B0C  22F4               	addwfc	prodh,f,c
 13750  006B0E  0E00               	movlw	low _all_shapes
 13751  006B10  24F3               	addwf	prodl,w,c
 13752  006B12  6ED9               	movwf	fsr2l,c
 13753  006B14  0E01               	movlw	high _all_shapes
 13754  006B16  20F4               	addwfc	prodh,w,c
 13755  006B18  6EDA               	movwf	fsr2h,c
 13756  006B1A  0E0B               	movlw	11
 13757  006B1C  6EDF               	movwf	indf2,c
 13758                           
 13759                           ;main.c: 732: all_shapes[i].index[1].y=1;
 13760  006B1E  5034               	movf	createRandomShape@i,w,c
 13761  006B20  0D09               	mullw	9
 13762  006B22  0E03               	movlw	3
 13763  006B24  26F3               	addwf	prodl,f,c
 13764  006B26  0E00               	movlw	0
 13765  006B28  22F4               	addwfc	prodh,f,c
 13766  006B2A  0E00               	movlw	low _all_shapes
 13767  006B2C  24F3               	addwf	prodl,w,c
 13768  006B2E  6ED9               	movwf	fsr2l,c
 13769  006B30  0E01               	movlw	high _all_shapes
 13770  006B32  20F4               	addwfc	prodh,w,c
 13771  006B34  6EDA               	movwf	fsr2h,c
 13772  006B36  0E01               	movlw	1
 13773  006B38  6EDF               	movwf	indf2,c
 13774                           
 13775                           ;main.c: 733: all_shapes[i].index[2].x=12;
 13776  006B3A  5034               	movf	createRandomShape@i,w,c
 13777  006B3C  0D09               	mullw	9
 13778  006B3E  0E04               	movlw	4
 13779  006B40  26F3               	addwf	prodl,f,c
 13780  006B42  0E00               	movlw	0
 13781  006B44  22F4               	addwfc	prodh,f,c
 13782  006B46  0E00               	movlw	low _all_shapes
 13783  006B48  24F3               	addwf	prodl,w,c
 13784  006B4A  6ED9               	movwf	fsr2l,c
 13785  006B4C  0E01               	movlw	high _all_shapes
 13786  006B4E  20F4               	addwfc	prodh,w,c
 13787  006B50  6EDA               	movwf	fsr2h,c
 13788  006B52  0E0C               	movlw	12
 13789  006B54  6EDF               	movwf	indf2,c
 13790                           
 13791                           ;main.c: 734: all_shapes[i].index[2].y=1;
 13792  006B56  5034               	movf	createRandomShape@i,w,c
 13793  006B58  0D09               	mullw	9
 13794  006B5A  0E05               	movlw	5
 13795  006B5C  26F3               	addwf	prodl,f,c
 13796  006B5E  0E00               	movlw	0
 13797  006B60  22F4               	addwfc	prodh,f,c
 13798  006B62  0E00               	movlw	low _all_shapes
 13799  006B64  24F3               	addwf	prodl,w,c
 13800  006B66  6ED9               	movwf	fsr2l,c
 13801  006B68  0E01               	movlw	high _all_shapes
 13802  006B6A  20F4               	addwfc	prodh,w,c
 13803  006B6C  6EDA               	movwf	fsr2h,c
 13804  006B6E  0E01               	movlw	1
 13805  006B70  6EDF               	movwf	indf2,c
 13806                           
 13807                           ;main.c: 735: all_shapes[i].index[3].x=12;
 13808  006B72  5034               	movf	createRandomShape@i,w,c
 13809  006B74  0D09               	mullw	9
 13810  006B76  0E06               	movlw	6
 13811  006B78  26F3               	addwf	prodl,f,c
 13812  006B7A  0E00               	movlw	0
 13813  006B7C  22F4               	addwfc	prodh,f,c
 13814  006B7E  0E00               	movlw	low _all_shapes
 13815  006B80  24F3               	addwf	prodl,w,c
 13816  006B82  6ED9               	movwf	fsr2l,c
 13817  006B84  0E01               	movlw	high _all_shapes
 13818  006B86  20F4               	addwfc	prodh,w,c
 13819  006B88  6EDA               	movwf	fsr2h,c
 13820  006B8A  0E0C               	movlw	12
 13821  006B8C  D329               	goto	L43
 13822  006B8E  5033               	movf	createRandomShape@orientation,w,c
 13823                           
 13824                           ; Switch size 1, requested type "space"
 13825                           ; Number of cases is 4, Range of values is 0 to 3
 13826                           ; switch strategies available:
 13827                           ; Name         Instructions Cycles
 13828                           ; simple_byte           13     7 (average)
 13829                           ;	Chosen strategy is simple_byte
 13830  006B90  0A00               	xorlw	0	; case 0
 13831  006B92  B4D8               	btfsc	status,2,c
 13832  006B94  D654               	goto	l260
 13833  006B96  0A01               	xorlw	1	; case 1
 13834  006B98  B4D8               	btfsc	status,2,c
 13835  006B9A  D6C1               	goto	l262
 13836  006B9C  0A03               	xorlw	3	; case 2
 13837  006B9E  B4D8               	btfsc	status,2,c
 13838  006BA0  D72B               	goto	l263
 13839  006BA2  0A01               	xorlw	1	; case 3
 13840  006BA4  B4D8               	btfsc	status,2,c
 13841  006BA6  D795               	goto	l264
 13842                           
 13843                           ;main.c: 742: break;
 13844  006BA8  D360               	goto	l217
 13845  006BAA                     
 13846                           ;main.c: 746: all_shapes[i].orientation=0;
 13847  006BAA  5034               	movf	createRandomShape@i,w,c
 13848  006BAC  0D09               	mullw	9
 13849  006BAE  0E08               	movlw	8
 13850  006BB0  26F3               	addwf	prodl,f,c
 13851  006BB2  0E00               	movlw	0
 13852  006BB4  22F4               	addwfc	prodh,f,c
 13853  006BB6  0E00               	movlw	low _all_shapes
 13854  006BB8  24F3               	addwf	prodl,w,c
 13855  006BBA  6ED9               	movwf	fsr2l,c
 13856  006BBC  0E01               	movlw	high _all_shapes
 13857  006BBE  20F4               	addwfc	prodh,w,c
 13858  006BC0  6EDA               	movwf	fsr2h,c
 13859  006BC2  0E00               	movlw	0
 13860  006BC4  6EDF               	movwf	indf2,c
 13861                           
 13862                           ;main.c: 747: uint8_t start=10;
 13863  006BC6  0E0A               	movlw	10
 13864  006BC8  6E32               	movwf	createRandomShape@start_291,c
 13865                           
 13866                           ;main.c: 748: all_shapes[i].index[0].x=11;
 13867  006BCA  5034               	movf	createRandomShape@i,w,c
 13868  006BCC  0D09               	mullw	9
 13869  006BCE  0E00               	movlw	low _all_shapes
 13870  006BD0  24F3               	addwf	prodl,w,c
 13871  006BD2  6ED9               	movwf	fsr2l,c
 13872  006BD4  0E01               	movlw	high _all_shapes
 13873  006BD6  20F4               	addwfc	prodh,w,c
 13874  006BD8  6EDA               	movwf	fsr2h,c
 13875  006BDA  0E0B               	movlw	11
 13876  006BDC  6EDF               	movwf	indf2,c
 13877                           
 13878                           ;main.c: 749: all_shapes[i].index[0].y=0;
 13879  006BDE  5034               	movf	createRandomShape@i,w,c
 13880  006BE0  0D09               	mullw	9
 13881  006BE2  0E01               	movlw	1
 13882  006BE4  26F3               	addwf	prodl,f,c
 13883  006BE6  0E00               	movlw	0
 13884  006BE8  22F4               	addwfc	prodh,f,c
 13885  006BEA  0E00               	movlw	low _all_shapes
 13886  006BEC  24F3               	addwf	prodl,w,c
 13887  006BEE  6ED9               	movwf	fsr2l,c
 13888  006BF0  0E01               	movlw	high _all_shapes
 13889  006BF2  20F4               	addwfc	prodh,w,c
 13890  006BF4  6EDA               	movwf	fsr2h,c
 13891  006BF6  0E00               	movlw	0
 13892  006BF8  6EDF               	movwf	indf2,c
 13893                           
 13894                           ;main.c: 750: for (uint8_t k=1;k<4;k++){
 13895  006BFA  0E01               	movlw	1
 13896  006BFC  6E2A               	movwf	createRandomShape@k_292,c
 13897  006BFE                     l4264:
 13898  006BFE  0E03               	movlw	3
 13899  006C00  642A               	cpfsgt	createRandomShape@k_292,c
 13900  006C02  D001               	goto	l269
 13901  006C04  D332               	goto	l217
 13902  006C06                     l269:
 13903                           
 13904                           ;main.c: 751: all_shapes[i].index[k].x=start;
 13905  006C06  5034               	movf	createRandomShape@i,w,c
 13906  006C08  0D09               	mullw	9
 13907  006C0A  0E00               	movlw	low _all_shapes
 13908  006C0C  6E15               	movwf	??_createRandomShape& (0+255),c
 13909  006C0E  0E01               	movlw	high _all_shapes
 13910  006C10  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 13911  006C12  50F3               	movf	prodl,w,c
 13912  006C14  2615               	addwf	??_createRandomShape,f,c
 13913  006C16  50F4               	movf	prodh,w,c
 13914  006C18  2216               	addwfc	??_createRandomShape+1,f,c
 13915  006C1A  502A               	movf	createRandomShape@k_292,w,c
 13916  006C1C  0D02               	mullw	2
 13917  006C1E  50F3               	movf	prodl,w,c
 13918  006C20  2415               	addwf	??_createRandomShape,w,c
 13919  006C22  6ED9               	movwf	fsr2l,c
 13920  006C24  50F4               	movf	prodh,w,c
 13921  006C26  2016               	addwfc	??_createRandomShape+1,w,c
 13922  006C28  6EDA               	movwf	fsr2h,c
 13923  006C2A  C032  FFDF         	movff	createRandomShape@start_291,indf2
 13924                           
 13925                           ;main.c: 752: all_shapes[i].index[k].y=1;
 13926  006C2E  5034               	movf	createRandomShape@i,w,c
 13927  006C30  0D09               	mullw	9
 13928  006C32  0E00               	movlw	low _all_shapes
 13929  006C34  6E15               	movwf	??_createRandomShape& (0+255),c
 13930  006C36  0E01               	movlw	high _all_shapes
 13931  006C38  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 13932  006C3A  50F3               	movf	prodl,w,c
 13933  006C3C  2615               	addwf	??_createRandomShape,f,c
 13934  006C3E  50F4               	movf	prodh,w,c
 13935  006C40  2216               	addwfc	??_createRandomShape+1,f,c
 13936  006C42  502A               	movf	createRandomShape@k_292,w,c
 13937  006C44  0D02               	mullw	2
 13938  006C46  50F3               	movf	prodl,w,c
 13939  006C48  2615               	addwf	??_createRandomShape,f,c
 13940  006C4A  50F4               	movf	prodh,w,c
 13941  006C4C  2216               	addwfc	??_createRandomShape+1,f,c
 13942  006C4E  0E01               	movlw	1
 13943  006C50  2415               	addwf	??_createRandomShape,w,c
 13944  006C52  6ED9               	movwf	fsr2l,c
 13945  006C54  0E00               	movlw	0
 13946  006C56  2016               	addwfc	??_createRandomShape+1,w,c
 13947  006C58  6EDA               	movwf	fsr2h,c
 13948  006C5A  0E01               	movlw	1
 13949  006C5C  6EDF               	movwf	indf2,c
 13950                           
 13951                           ;main.c: 753: start++;
 13952  006C5E  2A32               	incf	createRandomShape@start_291,f,c
 13953  006C60  2A2A               	incf	createRandomShape@k_292,f,c
 13954  006C62  D7CD               	goto	l4264
 13955  006C64                     
 13956                           ;main.c: 757: all_shapes[i].orientation=1;
 13957  006C64  5034               	movf	createRandomShape@i,w,c
 13958  006C66  0D09               	mullw	9
 13959  006C68  0E08               	movlw	8
 13960  006C6A  26F3               	addwf	prodl,f,c
 13961  006C6C  0E00               	movlw	0
 13962  006C6E  22F4               	addwfc	prodh,f,c
 13963  006C70  0E00               	movlw	low _all_shapes
 13964  006C72  24F3               	addwf	prodl,w,c
 13965  006C74  6ED9               	movwf	fsr2l,c
 13966  006C76  0E01               	movlw	high _all_shapes
 13967  006C78  20F4               	addwfc	prodh,w,c
 13968  006C7A  6EDA               	movwf	fsr2h,c
 13969  006C7C  0E01               	movlw	1
 13970  006C7E  6EDF               	movwf	indf2,c
 13971                           
 13972                           ;main.c: 758: uint8_t start=10;
 13973  006C80  0E0A               	movlw	10
 13974  006C82  6E32               	movwf	createRandomShape@start_291,c
 13975                           
 13976                           ;main.c: 759: all_shapes[i].index[0].x=11;
 13977  006C84  5034               	movf	createRandomShape@i,w,c
 13978  006C86  0D09               	mullw	9
 13979  006C88  0E00               	movlw	low _all_shapes
 13980  006C8A  24F3               	addwf	prodl,w,c
 13981  006C8C  6ED9               	movwf	fsr2l,c
 13982  006C8E  0E01               	movlw	high _all_shapes
 13983  006C90  20F4               	addwfc	prodh,w,c
 13984  006C92  6EDA               	movwf	fsr2h,c
 13985  006C94  0E0B               	movlw	11
 13986  006C96  6EDF               	movwf	indf2,c
 13987                           
 13988                           ;main.c: 760: all_shapes[i].index[0].y=2;
 13989  006C98  5034               	movf	createRandomShape@i,w,c
 13990  006C9A  0D09               	mullw	9
 13991  006C9C  0E01               	movlw	1
 13992  006C9E  26F3               	addwf	prodl,f,c
 13993  006CA0  0E00               	movlw	0
 13994  006CA2  22F4               	addwfc	prodh,f,c
 13995  006CA4  0E00               	movlw	low _all_shapes
 13996  006CA6  24F3               	addwf	prodl,w,c
 13997  006CA8  6ED9               	movwf	fsr2l,c
 13998  006CAA  0E01               	movlw	high _all_shapes
 13999  006CAC  20F4               	addwfc	prodh,w,c
 14000  006CAE  6EDA               	movwf	fsr2h,c
 14001  006CB0  0E02               	movlw	2
 14002  006CB2  6EDF               	movwf	indf2,c
 14003                           
 14004                           ;main.c: 761: for (uint8_t k=1;k<4;k++){
 14005  006CB4  0E01               	movlw	1
 14006  006CB6  6E2B               	movwf	createRandomShape@k_293,c
 14007  006CB8                     l4286:
 14008  006CB8  0E03               	movlw	3
 14009  006CBA  642B               	cpfsgt	createRandomShape@k_293,c
 14010  006CBC  D001               	goto	l273
 14011  006CBE  D2D5               	goto	l217
 14012  006CC0                     l273:
 14013                           
 14014                           ;main.c: 762: all_shapes[i].index[k].x=start;
 14015  006CC0  5034               	movf	createRandomShape@i,w,c
 14016  006CC2  0D09               	mullw	9
 14017  006CC4  0E00               	movlw	low _all_shapes
 14018  006CC6  6E15               	movwf	??_createRandomShape& (0+255),c
 14019  006CC8  0E01               	movlw	high _all_shapes
 14020  006CCA  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 14021  006CCC  50F3               	movf	prodl,w,c
 14022  006CCE  2615               	addwf	??_createRandomShape,f,c
 14023  006CD0  50F4               	movf	prodh,w,c
 14024  006CD2  2216               	addwfc	??_createRandomShape+1,f,c
 14025  006CD4  502B               	movf	createRandomShape@k_293,w,c
 14026  006CD6  0D02               	mullw	2
 14027  006CD8  50F3               	movf	prodl,w,c
 14028  006CDA  2415               	addwf	??_createRandomShape,w,c
 14029  006CDC  6ED9               	movwf	fsr2l,c
 14030  006CDE  50F4               	movf	prodh,w,c
 14031  006CE0  2016               	addwfc	??_createRandomShape+1,w,c
 14032  006CE2  6EDA               	movwf	fsr2h,c
 14033  006CE4  C032  FFDF         	movff	createRandomShape@start_291,indf2
 14034                           
 14035                           ;main.c: 763: all_shapes[i].index[k].y=1;
 14036  006CE8  5034               	movf	createRandomShape@i,w,c
 14037  006CEA  0D09               	mullw	9
 14038  006CEC  0E00               	movlw	low _all_shapes
 14039  006CEE  6E15               	movwf	??_createRandomShape& (0+255),c
 14040  006CF0  0E01               	movlw	high _all_shapes
 14041  006CF2  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 14042  006CF4  50F3               	movf	prodl,w,c
 14043  006CF6  2615               	addwf	??_createRandomShape,f,c
 14044  006CF8  50F4               	movf	prodh,w,c
 14045  006CFA  2216               	addwfc	??_createRandomShape+1,f,c
 14046  006CFC  502B               	movf	createRandomShape@k_293,w,c
 14047  006CFE  0D02               	mullw	2
 14048  006D00  50F3               	movf	prodl,w,c
 14049  006D02  2615               	addwf	??_createRandomShape,f,c
 14050  006D04  50F4               	movf	prodh,w,c
 14051  006D06  2216               	addwfc	??_createRandomShape+1,f,c
 14052  006D08  0E01               	movlw	1
 14053  006D0A  2415               	addwf	??_createRandomShape,w,c
 14054  006D0C  6ED9               	movwf	fsr2l,c
 14055  006D0E  0E00               	movlw	0
 14056  006D10  2016               	addwfc	??_createRandomShape+1,w,c
 14057  006D12  6EDA               	movwf	fsr2h,c
 14058  006D14  0E01               	movlw	1
 14059  006D16  6EDF               	movwf	indf2,c
 14060                           
 14061                           ;main.c: 764: start++;
 14062  006D18  2A32               	incf	createRandomShape@start_291,f,c
 14063  006D1A  2A2B               	incf	createRandomShape@k_293,f,c
 14064  006D1C  D7CD               	goto	l4286
 14065  006D1E                     
 14066                           ;main.c: 768: all_shapes[i].orientation=2;
 14067  006D1E  5034               	movf	createRandomShape@i,w,c
 14068  006D20  0D09               	mullw	9
 14069  006D22  0E08               	movlw	8
 14070  006D24  26F3               	addwf	prodl,f,c
 14071  006D26  0E00               	movlw	0
 14072  006D28  22F4               	addwfc	prodh,f,c
 14073  006D2A  0E00               	movlw	low _all_shapes
 14074  006D2C  24F3               	addwf	prodl,w,c
 14075  006D2E  6ED9               	movwf	fsr2l,c
 14076  006D30  0E01               	movlw	high _all_shapes
 14077  006D32  20F4               	addwfc	prodh,w,c
 14078  006D34  6EDA               	movwf	fsr2h,c
 14079  006D36  0E02               	movlw	2
 14080  006D38  6EDF               	movwf	indf2,c
 14081                           
 14082                           ;main.c: 769: uint8_t start=0;
 14083  006D3A  0E00               	movlw	0
 14084  006D3C  6E32               	movwf	createRandomShape@start_291,c
 14085                           
 14086                           ;main.c: 770: all_shapes[i].index[0].x=10;
 14087  006D3E  5034               	movf	createRandomShape@i,w,c
 14088  006D40  0D09               	mullw	9
 14089  006D42  0E00               	movlw	low _all_shapes
 14090  006D44  24F3               	addwf	prodl,w,c
 14091  006D46  6ED9               	movwf	fsr2l,c
 14092  006D48  0E01               	movlw	high _all_shapes
 14093  006D4A  20F4               	addwfc	prodh,w,c
 14094  006D4C  6EDA               	movwf	fsr2h,c
 14095  006D4E  0E0A               	movlw	10
 14096  006D50  6EDF               	movwf	indf2,c
 14097                           
 14098                           ;main.c: 771: all_shapes[i].index[0].y=1;
 14099  006D52  5034               	movf	createRandomShape@i,w,c
 14100  006D54  0D09               	mullw	9
 14101  006D56  0E01               	movlw	1
 14102  006D58  26F3               	addwf	prodl,f,c
 14103  006D5A  0E00               	movlw	0
 14104  006D5C  22F4               	addwfc	prodh,f,c
 14105  006D5E  0E00               	movlw	low _all_shapes
 14106  006D60  24F3               	addwf	prodl,w,c
 14107  006D62  6ED9               	movwf	fsr2l,c
 14108  006D64  0E01               	movlw	high _all_shapes
 14109  006D66  20F4               	addwfc	prodh,w,c
 14110  006D68  6EDA               	movwf	fsr2h,c
 14111  006D6A  0E01               	movlw	1
 14112  006D6C  6EDF               	movwf	indf2,c
 14113                           
 14114                           ;main.c: 772: for (uint8_t k=1;k<4;k++){
 14115  006D6E  0E01               	movlw	1
 14116  006D70  6E2C               	movwf	createRandomShape@k_294,c
 14117  006D72                     l4308:
 14118  006D72  0E03               	movlw	3
 14119  006D74  642C               	cpfsgt	createRandomShape@k_294,c
 14120  006D76  D001               	goto	l276
 14121  006D78  D278               	goto	l217
 14122  006D7A                     l276:
 14123                           
 14124                           ;main.c: 773: all_shapes[i].index[k].x=11;
 14125  006D7A  5034               	movf	createRandomShape@i,w,c
 14126  006D7C  0D09               	mullw	9
 14127  006D7E  0E00               	movlw	low _all_shapes
 14128  006D80  6E15               	movwf	??_createRandomShape& (0+255),c
 14129  006D82  0E01               	movlw	high _all_shapes
 14130  006D84  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 14131  006D86  50F3               	movf	prodl,w,c
 14132  006D88  2615               	addwf	??_createRandomShape,f,c
 14133  006D8A  50F4               	movf	prodh,w,c
 14134  006D8C  2216               	addwfc	??_createRandomShape+1,f,c
 14135  006D8E  502C               	movf	createRandomShape@k_294,w,c
 14136  006D90  0D02               	mullw	2
 14137  006D92  50F3               	movf	prodl,w,c
 14138  006D94  2415               	addwf	??_createRandomShape,w,c
 14139  006D96  6ED9               	movwf	fsr2l,c
 14140  006D98  50F4               	movf	prodh,w,c
 14141  006D9A  2016               	addwfc	??_createRandomShape+1,w,c
 14142  006D9C  6EDA               	movwf	fsr2h,c
 14143  006D9E  0E0B               	movlw	11
 14144  006DA0  6EDF               	movwf	indf2,c
 14145                           
 14146                           ;main.c: 774: all_shapes[i].index[k].y=start;
 14147  006DA2  5034               	movf	createRandomShape@i,w,c
 14148  006DA4  0D09               	mullw	9
 14149  006DA6  0E00               	movlw	low _all_shapes
 14150  006DA8  6E15               	movwf	??_createRandomShape& (0+255),c
 14151  006DAA  0E01               	movlw	high _all_shapes
 14152  006DAC  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 14153  006DAE  50F3               	movf	prodl,w,c
 14154  006DB0  2615               	addwf	??_createRandomShape,f,c
 14155  006DB2  50F4               	movf	prodh,w,c
 14156  006DB4  2216               	addwfc	??_createRandomShape+1,f,c
 14157  006DB6  502C               	movf	createRandomShape@k_294,w,c
 14158  006DB8  0D02               	mullw	2
 14159  006DBA  50F3               	movf	prodl,w,c
 14160  006DBC  2615               	addwf	??_createRandomShape,f,c
 14161  006DBE  50F4               	movf	prodh,w,c
 14162  006DC0  2216               	addwfc	??_createRandomShape+1,f,c
 14163  006DC2  0E01               	movlw	1
 14164  006DC4  2415               	addwf	??_createRandomShape,w,c
 14165  006DC6  6ED9               	movwf	fsr2l,c
 14166  006DC8  0E00               	movlw	0
 14167  006DCA  2016               	addwfc	??_createRandomShape+1,w,c
 14168  006DCC  6EDA               	movwf	fsr2h,c
 14169  006DCE  C032  FFDF         	movff	createRandomShape@start_291,indf2
 14170                           
 14171                           ;main.c: 775: start++;
 14172  006DD2  2A32               	incf	createRandomShape@start_291,f,c
 14173  006DD4  2A2C               	incf	createRandomShape@k_294,f,c
 14174  006DD6  D7CD               	goto	l4308
 14175  006DD8                     
 14176                           ;main.c: 779: all_shapes[i].orientation=3;
 14177  006DD8  5034               	movf	createRandomShape@i,w,c
 14178  006DDA  0D09               	mullw	9
 14179  006DDC  0E08               	movlw	8
 14180  006DDE  26F3               	addwf	prodl,f,c
 14181  006DE0  0E00               	movlw	0
 14182  006DE2  22F4               	addwfc	prodh,f,c
 14183  006DE4  0E00               	movlw	low _all_shapes
 14184  006DE6  24F3               	addwf	prodl,w,c
 14185  006DE8  6ED9               	movwf	fsr2l,c
 14186  006DEA  0E01               	movlw	high _all_shapes
 14187  006DEC  20F4               	addwfc	prodh,w,c
 14188  006DEE  6EDA               	movwf	fsr2h,c
 14189  006DF0  0E03               	movlw	3
 14190  006DF2  6EDF               	movwf	indf2,c
 14191                           
 14192                           ;main.c: 780: uint8_t start=0;
 14193  006DF4  0E00               	movlw	0
 14194  006DF6  6E32               	movwf	createRandomShape@start_291,c
 14195                           
 14196                           ;main.c: 781: all_shapes[i].index[0].x=12;
 14197  006DF8  5034               	movf	createRandomShape@i,w,c
 14198  006DFA  0D09               	mullw	9
 14199  006DFC  0E00               	movlw	low _all_shapes
 14200  006DFE  24F3               	addwf	prodl,w,c
 14201  006E00  6ED9               	movwf	fsr2l,c
 14202  006E02  0E01               	movlw	high _all_shapes
 14203  006E04  20F4               	addwfc	prodh,w,c
 14204  006E06  6EDA               	movwf	fsr2h,c
 14205  006E08  0E0C               	movlw	12
 14206  006E0A  6EDF               	movwf	indf2,c
 14207                           
 14208                           ;main.c: 782: all_shapes[i].index[0].y=1;
 14209  006E0C  5034               	movf	createRandomShape@i,w,c
 14210  006E0E  0D09               	mullw	9
 14211  006E10  0E01               	movlw	1
 14212  006E12  26F3               	addwf	prodl,f,c
 14213  006E14  0E00               	movlw	0
 14214  006E16  22F4               	addwfc	prodh,f,c
 14215  006E18  0E00               	movlw	low _all_shapes
 14216  006E1A  24F3               	addwf	prodl,w,c
 14217  006E1C  6ED9               	movwf	fsr2l,c
 14218  006E1E  0E01               	movlw	high _all_shapes
 14219  006E20  20F4               	addwfc	prodh,w,c
 14220  006E22  6EDA               	movwf	fsr2h,c
 14221  006E24  0E01               	movlw	1
 14222  006E26  6EDF               	movwf	indf2,c
 14223                           
 14224                           ;main.c: 783: for (uint8_t k=1;k<4;k++){
 14225  006E28  0E01               	movlw	1
 14226  006E2A  6E2D               	movwf	createRandomShape@k_295,c
 14227  006E2C                     l4330:
 14228  006E2C  0E03               	movlw	3
 14229  006E2E  642D               	cpfsgt	createRandomShape@k_295,c
 14230  006E30  D001               	goto	l279
 14231  006E32  D21B               	goto	l217
 14232  006E34                     l279:
 14233                           
 14234                           ;main.c: 784: all_shapes[i].index[k].x=11;
 14235  006E34  5034               	movf	createRandomShape@i,w,c
 14236  006E36  0D09               	mullw	9
 14237  006E38  0E00               	movlw	low _all_shapes
 14238  006E3A  6E15               	movwf	??_createRandomShape& (0+255),c
 14239  006E3C  0E01               	movlw	high _all_shapes
 14240  006E3E  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 14241  006E40  50F3               	movf	prodl,w,c
 14242  006E42  2615               	addwf	??_createRandomShape,f,c
 14243  006E44  50F4               	movf	prodh,w,c
 14244  006E46  2216               	addwfc	??_createRandomShape+1,f,c
 14245  006E48  502D               	movf	createRandomShape@k_295,w,c
 14246  006E4A  0D02               	mullw	2
 14247  006E4C  50F3               	movf	prodl,w,c
 14248  006E4E  2415               	addwf	??_createRandomShape,w,c
 14249  006E50  6ED9               	movwf	fsr2l,c
 14250  006E52  50F4               	movf	prodh,w,c
 14251  006E54  2016               	addwfc	??_createRandomShape+1,w,c
 14252  006E56  6EDA               	movwf	fsr2h,c
 14253  006E58  0E0B               	movlw	11
 14254  006E5A  6EDF               	movwf	indf2,c
 14255                           
 14256                           ;main.c: 785: all_shapes[i].index[k].y=start;
 14257  006E5C  5034               	movf	createRandomShape@i,w,c
 14258  006E5E  0D09               	mullw	9
 14259  006E60  0E00               	movlw	low _all_shapes
 14260  006E62  6E15               	movwf	??_createRandomShape& (0+255),c
 14261  006E64  0E01               	movlw	high _all_shapes
 14262  006E66  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 14263  006E68  50F3               	movf	prodl,w,c
 14264  006E6A  2615               	addwf	??_createRandomShape,f,c
 14265  006E6C  50F4               	movf	prodh,w,c
 14266  006E6E  2216               	addwfc	??_createRandomShape+1,f,c
 14267  006E70  502D               	movf	createRandomShape@k_295,w,c
 14268  006E72  0D02               	mullw	2
 14269  006E74  50F3               	movf	prodl,w,c
 14270  006E76  2615               	addwf	??_createRandomShape,f,c
 14271  006E78  50F4               	movf	prodh,w,c
 14272  006E7A  2216               	addwfc	??_createRandomShape+1,f,c
 14273  006E7C  0E01               	movlw	1
 14274  006E7E  2415               	addwf	??_createRandomShape,w,c
 14275  006E80  6ED9               	movwf	fsr2l,c
 14276  006E82  0E00               	movlw	0
 14277  006E84  2016               	addwfc	??_createRandomShape+1,w,c
 14278  006E86  6EDA               	movwf	fsr2h,c
 14279  006E88  C032  FFDF         	movff	createRandomShape@start_291,indf2
 14280                           
 14281                           ;main.c: 786: start++;
 14282  006E8C  2A32               	incf	createRandomShape@start_291,f,c
 14283  006E8E  2A2D               	incf	createRandomShape@k_295,f,c
 14284  006E90  D7CD               	goto	l4330
 14285  006E92  5033               	movf	createRandomShape@orientation,w,c
 14286                           
 14287                           ; Switch size 1, requested type "space"
 14288                           ; Number of cases is 4, Range of values is 0 to 3
 14289                           ; switch strategies available:
 14290                           ; Name         Instructions Cycles
 14291                           ; simple_byte           13     7 (average)
 14292                           ;	Chosen strategy is simple_byte
 14293  006E94  0A00               	xorlw	0	; case 0
 14294  006E96  B4D8               	btfsc	status,2,c
 14295  006E98  D688               	goto	l268
 14296  006E9A  0A01               	xorlw	1	; case 1
 14297  006E9C  B4D8               	btfsc	status,2,c
 14298  006E9E  D6E2               	goto	l272
 14299  006EA0  0A03               	xorlw	3	; case 2
 14300  006EA2  B4D8               	btfsc	status,2,c
 14301  006EA4  D73C               	goto	l275
 14302  006EA6  0A01               	xorlw	1	; case 3
 14303  006EA8  B4D8               	btfsc	status,2,c
 14304  006EAA  D796               	goto	l278
 14305                           
 14306                           ;main.c: 792: break;
 14307  006EAC  D1DE               	goto	l217
 14308  006EAE                     
 14309                           ;main.c: 796: all_shapes[i].orientation=0;
 14310  006EAE  5034               	movf	createRandomShape@i,w,c
 14311  006EB0  0D09               	mullw	9
 14312  006EB2  0E08               	movlw	8
 14313  006EB4  26F3               	addwf	prodl,f,c
 14314  006EB6  0E00               	movlw	0
 14315  006EB8  22F4               	addwfc	prodh,f,c
 14316  006EBA  0E00               	movlw	low _all_shapes
 14317  006EBC  24F3               	addwf	prodl,w,c
 14318  006EBE  6ED9               	movwf	fsr2l,c
 14319  006EC0  0E01               	movlw	high _all_shapes
 14320  006EC2  20F4               	addwfc	prodh,w,c
 14321  006EC4  6EDA               	movwf	fsr2h,c
 14322  006EC6  0E00               	movlw	0
 14323  006EC8  6EDF               	movwf	indf2,c
 14324                           
 14325                           ;main.c: 797: all_shapes[i].index[0].x=10;
 14326  006ECA  5034               	movf	createRandomShape@i,w,c
 14327  006ECC  0D09               	mullw	9
 14328  006ECE  0E00               	movlw	low _all_shapes
 14329  006ED0  24F3               	addwf	prodl,w,c
 14330  006ED2  6ED9               	movwf	fsr2l,c
 14331  006ED4  0E01               	movlw	high _all_shapes
 14332  006ED6  20F4               	addwfc	prodh,w,c
 14333  006ED8  6EDA               	movwf	fsr2h,c
 14334  006EDA  0E0A               	movlw	10
 14335  006EDC  6EDF               	movwf	indf2,c
 14336                           
 14337                           ;main.c: 798: all_shapes[i].index[0].y=0;
 14338  006EDE  5034               	movf	createRandomShape@i,w,c
 14339  006EE0  0D09               	mullw	9
 14340  006EE2  0E01               	movlw	1
 14341  006EE4  26F3               	addwf	prodl,f,c
 14342  006EE6  0E00               	movlw	0
 14343  006EE8  22F4               	addwfc	prodh,f,c
 14344  006EEA  0E00               	movlw	low _all_shapes
 14345  006EEC  24F3               	addwf	prodl,w,c
 14346  006EEE  6ED9               	movwf	fsr2l,c
 14347  006EF0  0E01               	movlw	high _all_shapes
 14348  006EF2  20F4               	addwfc	prodh,w,c
 14349  006EF4  6EDA               	movwf	fsr2h,c
 14350  006EF6  0E00               	movlw	0
 14351  006EF8  6EDF               	movwf	indf2,c
 14352                           
 14353                           ;main.c: 799: all_shapes[i].index[1].x=11;
 14354  006EFA  5034               	movf	createRandomShape@i,w,c
 14355  006EFC  0D09               	mullw	9
 14356  006EFE  0E02               	movlw	2
 14357  006F00  26F3               	addwf	prodl,f,c
 14358  006F02  0E00               	movlw	0
 14359  006F04  22F4               	addwfc	prodh,f,c
 14360  006F06  0E00               	movlw	low _all_shapes
 14361  006F08  24F3               	addwf	prodl,w,c
 14362  006F0A  6ED9               	movwf	fsr2l,c
 14363  006F0C  0E01               	movlw	high _all_shapes
 14364  006F0E  20F4               	addwfc	prodh,w,c
 14365  006F10  6EDA               	movwf	fsr2h,c
 14366  006F12  0E0B               	movlw	11
 14367  006F14  6EDF               	movwf	indf2,c
 14368                           
 14369                           ;main.c: 800: all_shapes[i].index[1].y=0;
 14370  006F16  5034               	movf	createRandomShape@i,w,c
 14371  006F18  0D09               	mullw	9
 14372  006F1A  0E03               	movlw	3
 14373  006F1C  26F3               	addwf	prodl,f,c
 14374  006F1E  0E00               	movlw	0
 14375  006F20  22F4               	addwfc	prodh,f,c
 14376  006F22  0E00               	movlw	low _all_shapes
 14377  006F24  24F3               	addwf	prodl,w,c
 14378  006F26  6ED9               	movwf	fsr2l,c
 14379  006F28  0E01               	movlw	high _all_shapes
 14380  006F2A  20F4               	addwfc	prodh,w,c
 14381  006F2C  6EDA               	movwf	fsr2h,c
 14382  006F2E  0E00               	movlw	0
 14383  006F30  6EDF               	movwf	indf2,c
 14384                           
 14385                           ;main.c: 801: all_shapes[i].index[2].x=11;
 14386  006F32  5034               	movf	createRandomShape@i,w,c
 14387  006F34  0D09               	mullw	9
 14388  006F36  0E04               	movlw	4
 14389  006F38  26F3               	addwf	prodl,f,c
 14390  006F3A  0E00               	movlw	0
 14391  006F3C  22F4               	addwfc	prodh,f,c
 14392  006F3E  0E00               	movlw	low _all_shapes
 14393  006F40  24F3               	addwf	prodl,w,c
 14394  006F42  6ED9               	movwf	fsr2l,c
 14395  006F44  0E01               	movlw	high _all_shapes
 14396  006F46  20F4               	addwfc	prodh,w,c
 14397  006F48  6EDA               	movwf	fsr2h,c
 14398  006F4A  0E0B               	movlw	11
 14399  006F4C  6EDF               	movwf	indf2,c
 14400                           
 14401                           ;main.c: 802: all_shapes[i].index[2].y=1;
 14402  006F4E  5034               	movf	createRandomShape@i,w,c
 14403  006F50  0D09               	mullw	9
 14404  006F52  0E05               	movlw	5
 14405  006F54  26F3               	addwf	prodl,f,c
 14406  006F56  0E00               	movlw	0
 14407  006F58  22F4               	addwfc	prodh,f,c
 14408  006F5A  0E00               	movlw	low _all_shapes
 14409  006F5C  24F3               	addwf	prodl,w,c
 14410  006F5E  6ED9               	movwf	fsr2l,c
 14411  006F60  0E01               	movlw	high _all_shapes
 14412  006F62  20F4               	addwfc	prodh,w,c
 14413  006F64  6EDA               	movwf	fsr2h,c
 14414  006F66  0E01               	movlw	1
 14415  006F68  6EDF               	movwf	indf2,c
 14416                           
 14417                           ;main.c: 803: all_shapes[i].index[3].x=12;
 14418  006F6A  5034               	movf	createRandomShape@i,w,c
 14419  006F6C  0D09               	mullw	9
 14420  006F6E  0E06               	movlw	6
 14421  006F70  26F3               	addwf	prodl,f,c
 14422  006F72  0E00               	movlw	0
 14423  006F74  22F4               	addwfc	prodh,f,c
 14424  006F76  0E00               	movlw	low _all_shapes
 14425  006F78  24F3               	addwf	prodl,w,c
 14426  006F7A  6ED9               	movwf	fsr2l,c
 14427  006F7C  0E01               	movlw	high _all_shapes
 14428  006F7E  20F4               	addwfc	prodh,w,c
 14429  006F80  6EDA               	movwf	fsr2h,c
 14430  006F82  0E0C               	movlw	12
 14431  006F84  6EDF               	movwf	indf2,c
 14432                           
 14433                           ;main.c: 804: all_shapes[i].index[3].y=1;
 14434  006F86  5034               	movf	createRandomShape@i,w,c
 14435  006F88  0D09               	mullw	9
 14436  006F8A  0E07               	movlw	7
 14437  006F8C  D42F               	goto	L48
 14438  006F8E                     L41:
 14439  006F8E  6EDF               	movwf	indf2,c
 14440                           
 14441                           ;main.c: 805: break;
 14442  006F90  D16C               	goto	l217
 14443  006F92                     
 14444                           ;main.c: 807: all_shapes[i].index[0].x=10;
 14445  006F92  5034               	movf	createRandomShape@i,w,c
 14446  006F94  0D09               	mullw	9
 14447  006F96  0E00               	movlw	low _all_shapes
 14448  006F98  24F3               	addwf	prodl,w,c
 14449  006F9A  6ED9               	movwf	fsr2l,c
 14450  006F9C  0E01               	movlw	high _all_shapes
 14451  006F9E  20F4               	addwfc	prodh,w,c
 14452  006FA0  6EDA               	movwf	fsr2h,c
 14453  006FA2  0E0A               	movlw	10
 14454  006FA4  6EDF               	movwf	indf2,c
 14455                           
 14456                           ;main.c: 808: all_shapes[i].index[0].y=1;
 14457  006FA6  5034               	movf	createRandomShape@i,w,c
 14458  006FA8  0D09               	mullw	9
 14459  006FAA  0E01               	movlw	1
 14460  006FAC  26F3               	addwf	prodl,f,c
 14461  006FAE  0E00               	movlw	0
 14462  006FB0  22F4               	addwfc	prodh,f,c
 14463  006FB2  0E00               	movlw	low _all_shapes
 14464  006FB4  24F3               	addwf	prodl,w,c
 14465  006FB6  6ED9               	movwf	fsr2l,c
 14466  006FB8  0E01               	movlw	high _all_shapes
 14467  006FBA  20F4               	addwfc	prodh,w,c
 14468  006FBC  6EDA               	movwf	fsr2h,c
 14469  006FBE  0E01               	movlw	1
 14470  006FC0  6EDF               	movwf	indf2,c
 14471                           
 14472                           ;main.c: 809: all_shapes[i].index[1].x=11;
 14473  006FC2  5034               	movf	createRandomShape@i,w,c
 14474  006FC4  0D09               	mullw	9
 14475  006FC6  0E02               	movlw	2
 14476  006FC8  26F3               	addwf	prodl,f,c
 14477  006FCA  0E00               	movlw	0
 14478  006FCC  22F4               	addwfc	prodh,f,c
 14479  006FCE  0E00               	movlw	low _all_shapes
 14480  006FD0  24F3               	addwf	prodl,w,c
 14481  006FD2  6ED9               	movwf	fsr2l,c
 14482  006FD4  0E01               	movlw	high _all_shapes
 14483  006FD6  20F4               	addwfc	prodh,w,c
 14484  006FD8  6EDA               	movwf	fsr2h,c
 14485  006FDA  0E0B               	movlw	11
 14486  006FDC  6EDF               	movwf	indf2,c
 14487                           
 14488                           ;main.c: 810: all_shapes[i].index[1].y=1;
 14489  006FDE  5034               	movf	createRandomShape@i,w,c
 14490  006FE0  0D09               	mullw	9
 14491  006FE2  0E03               	movlw	3
 14492  006FE4  26F3               	addwf	prodl,f,c
 14493  006FE6  0E00               	movlw	0
 14494  006FE8  22F4               	addwfc	prodh,f,c
 14495  006FEA  0E00               	movlw	low _all_shapes
 14496  006FEC  24F3               	addwf	prodl,w,c
 14497  006FEE  6ED9               	movwf	fsr2l,c
 14498  006FF0  0E01               	movlw	high _all_shapes
 14499  006FF2  20F4               	addwfc	prodh,w,c
 14500  006FF4  6EDA               	movwf	fsr2h,c
 14501  006FF6  0E01               	movlw	1
 14502  006FF8  6EDF               	movwf	indf2,c
 14503                           
 14504                           ;main.c: 811: all_shapes[i].index[2].x=11;
 14505  006FFA  5034               	movf	createRandomShape@i,w,c
 14506  006FFC  0D09               	mullw	9
 14507  006FFE  0E04               	movlw	4
 14508  007000  26F3               	addwf	prodl,f,c
 14509  007002  0E00               	movlw	0
 14510  007004  22F4               	addwfc	prodh,f,c
 14511  007006  0E00               	movlw	low _all_shapes
 14512  007008  24F3               	addwf	prodl,w,c
 14513  00700A  6ED9               	movwf	fsr2l,c
 14514  00700C  0E01               	movlw	high _all_shapes
 14515  00700E  20F4               	addwfc	prodh,w,c
 14516  007010  6EDA               	movwf	fsr2h,c
 14517  007012  0E0B               	movlw	11
 14518  007014  6EDF               	movwf	indf2,c
 14519                           
 14520                           ;main.c: 812: all_shapes[i].index[2].y=2;
 14521  007016  5034               	movf	createRandomShape@i,w,c
 14522  007018  0D09               	mullw	9
 14523  00701A  0E05               	movlw	5
 14524  00701C  26F3               	addwf	prodl,f,c
 14525  00701E  0E00               	movlw	0
 14526  007020  22F4               	addwfc	prodh,f,c
 14527  007022  0E00               	movlw	low _all_shapes
 14528  007024  24F3               	addwf	prodl,w,c
 14529  007026  6ED9               	movwf	fsr2l,c
 14530  007028  0E01               	movlw	high _all_shapes
 14531  00702A  20F4               	addwfc	prodh,w,c
 14532  00702C  6EDA               	movwf	fsr2h,c
 14533  00702E  0E02               	movlw	2
 14534  007030  6EDF               	movwf	indf2,c
 14535                           
 14536                           ;main.c: 813: all_shapes[i].index[3].x=12;
 14537  007032  5034               	movf	createRandomShape@i,w,c
 14538  007034  0D09               	mullw	9
 14539  007036  0E06               	movlw	6
 14540  007038  26F3               	addwf	prodl,f,c
 14541  00703A  0E00               	movlw	0
 14542  00703C  22F4               	addwfc	prodh,f,c
 14543  00703E  0E00               	movlw	low _all_shapes
 14544  007040  24F3               	addwf	prodl,w,c
 14545  007042  6ED9               	movwf	fsr2l,c
 14546  007044  0E01               	movlw	high _all_shapes
 14547  007046  20F4               	addwfc	prodh,w,c
 14548  007048  6EDA               	movwf	fsr2h,c
 14549  00704A  0E0C               	movlw	12
 14550  00704C  6EDF               	movwf	indf2,c
 14551                           
 14552                           ;main.c: 814: all_shapes[i].index[3].y=2;
 14553  00704E  5034               	movf	createRandomShape@i,w,c
 14554  007050  0D09               	mullw	9
 14555  007052  0E07               	movlw	7
 14556  007054  26F3               	addwf	prodl,f,c
 14557  007056  0E00               	movlw	0
 14558  007058  22F4               	addwfc	prodh,f,c
 14559  00705A  0E00               	movlw	low _all_shapes
 14560  00705C  24F3               	addwf	prodl,w,c
 14561  00705E  6ED9               	movwf	fsr2l,c
 14562  007060  0E01               	movlw	high _all_shapes
 14563  007062  20F4               	addwfc	prodh,w,c
 14564  007064  6EDA               	movwf	fsr2h,c
 14565  007066  0E02               	movlw	2
 14566  007068  D4C5               	goto	L45
 14567  00706A                     
 14568                           ;main.c: 818: all_shapes[i].index[0].x=11;
 14569  00706A  5034               	movf	createRandomShape@i,w,c
 14570  00706C  0D09               	mullw	9
 14571  00706E  0E00               	movlw	low _all_shapes
 14572  007070  24F3               	addwf	prodl,w,c
 14573  007072  6ED9               	movwf	fsr2l,c
 14574  007074  0E01               	movlw	high _all_shapes
 14575  007076  20F4               	addwfc	prodh,w,c
 14576  007078  6EDA               	movwf	fsr2h,c
 14577  00707A  0E0B               	movlw	11
 14578  00707C  6EDF               	movwf	indf2,c
 14579                           
 14580                           ;main.c: 819: all_shapes[i].index[0].y=0;
 14581  00707E  5034               	movf	createRandomShape@i,w,c
 14582  007080  0D09               	mullw	9
 14583  007082  0E01               	movlw	1
 14584  007084  26F3               	addwf	prodl,f,c
 14585  007086  0E00               	movlw	0
 14586  007088  22F4               	addwfc	prodh,f,c
 14587  00708A  0E00               	movlw	low _all_shapes
 14588  00708C  24F3               	addwf	prodl,w,c
 14589  00708E  6ED9               	movwf	fsr2l,c
 14590  007090  0E01               	movlw	high _all_shapes
 14591  007092  20F4               	addwfc	prodh,w,c
 14592  007094  6EDA               	movwf	fsr2h,c
 14593  007096  0E00               	movlw	0
 14594  007098  6EDF               	movwf	indf2,c
 14595                           
 14596                           ;main.c: 820: all_shapes[i].index[1].x=11;
 14597  00709A  5034               	movf	createRandomShape@i,w,c
 14598  00709C  0D09               	mullw	9
 14599  00709E  0E02               	movlw	2
 14600  0070A0  26F3               	addwf	prodl,f,c
 14601  0070A2  0E00               	movlw	0
 14602  0070A4  22F4               	addwfc	prodh,f,c
 14603  0070A6  0E00               	movlw	low _all_shapes
 14604  0070A8  24F3               	addwf	prodl,w,c
 14605  0070AA  6ED9               	movwf	fsr2l,c
 14606  0070AC  0E01               	movlw	high _all_shapes
 14607  0070AE  20F4               	addwfc	prodh,w,c
 14608  0070B0  6EDA               	movwf	fsr2h,c
 14609  0070B2  0E0B               	movlw	11
 14610  0070B4  6EDF               	movwf	indf2,c
 14611                           
 14612                           ;main.c: 821: all_shapes[i].index[1].y=1;
 14613  0070B6  5034               	movf	createRandomShape@i,w,c
 14614  0070B8  0D09               	mullw	9
 14615  0070BA  0E03               	movlw	3
 14616  0070BC  26F3               	addwf	prodl,f,c
 14617  0070BE  0E00               	movlw	0
 14618  0070C0  22F4               	addwfc	prodh,f,c
 14619  0070C2  0E00               	movlw	low _all_shapes
 14620  0070C4  24F3               	addwf	prodl,w,c
 14621  0070C6  6ED9               	movwf	fsr2l,c
 14622  0070C8  0E01               	movlw	high _all_shapes
 14623  0070CA  20F4               	addwfc	prodh,w,c
 14624  0070CC  6EDA               	movwf	fsr2h,c
 14625  0070CE  0E01               	movlw	1
 14626  0070D0  6EDF               	movwf	indf2,c
 14627                           
 14628                           ;main.c: 822: all_shapes[i].index[2].x=10;
 14629  0070D2  5034               	movf	createRandomShape@i,w,c
 14630  0070D4  0D09               	mullw	9
 14631  0070D6  0E04               	movlw	4
 14632  0070D8  26F3               	addwf	prodl,f,c
 14633  0070DA  0E00               	movlw	0
 14634  0070DC  22F4               	addwfc	prodh,f,c
 14635  0070DE  0E00               	movlw	low _all_shapes
 14636  0070E0  24F3               	addwf	prodl,w,c
 14637  0070E2  6ED9               	movwf	fsr2l,c
 14638  0070E4  0E01               	movlw	high _all_shapes
 14639  0070E6  20F4               	addwfc	prodh,w,c
 14640  0070E8  6EDA               	movwf	fsr2h,c
 14641  0070EA  0E0A               	movlw	10
 14642  0070EC  6EDF               	movwf	indf2,c
 14643                           
 14644                           ;main.c: 823: all_shapes[i].index[2].y=1;
 14645  0070EE  5034               	movf	createRandomShape@i,w,c
 14646  0070F0  0D09               	mullw	9
 14647  0070F2  0E05               	movlw	5
 14648  0070F4  26F3               	addwf	prodl,f,c
 14649  0070F6  0E00               	movlw	0
 14650  0070F8  22F4               	addwfc	prodh,f,c
 14651  0070FA  0E00               	movlw	low _all_shapes
 14652  0070FC  24F3               	addwf	prodl,w,c
 14653  0070FE  6ED9               	movwf	fsr2l,c
 14654  007100  0E01               	movlw	high _all_shapes
 14655  007102  20F4               	addwfc	prodh,w,c
 14656  007104  6EDA               	movwf	fsr2h,c
 14657  007106  0E01               	movlw	1
 14658  007108  6EDF               	movwf	indf2,c
 14659                           
 14660                           ;main.c: 824: all_shapes[i].index[3].x=10;
 14661  00710A  5034               	movf	createRandomShape@i,w,c
 14662  00710C  0D09               	mullw	9
 14663  00710E  0E06               	movlw	6
 14664  007110  26F3               	addwf	prodl,f,c
 14665  007112  0E00               	movlw	0
 14666  007114  22F4               	addwfc	prodh,f,c
 14667  007116  0E00               	movlw	low _all_shapes
 14668  007118  24F3               	addwf	prodl,w,c
 14669  00711A  6ED9               	movwf	fsr2l,c
 14670  00711C  0E01               	movlw	high _all_shapes
 14671  00711E  20F4               	addwfc	prodh,w,c
 14672  007120  6EDA               	movwf	fsr2h,c
 14673  007122  0E0A               	movlw	10
 14674  007124  D4C6               	goto	L44
 14675  007126                     
 14676                           ;main.c: 829: all_shapes[i].index[0].x=12;
 14677  007126  5034               	movf	createRandomShape@i,w,c
 14678  007128  0D09               	mullw	9
 14679  00712A  0E00               	movlw	low _all_shapes
 14680  00712C  24F3               	addwf	prodl,w,c
 14681  00712E  6ED9               	movwf	fsr2l,c
 14682  007130  0E01               	movlw	high _all_shapes
 14683  007132  20F4               	addwfc	prodh,w,c
 14684  007134  6EDA               	movwf	fsr2h,c
 14685  007136  0E0C               	movlw	12
 14686  007138  6EDF               	movwf	indf2,c
 14687                           
 14688                           ;main.c: 830: all_shapes[i].index[0].y=0;
 14689  00713A  5034               	movf	createRandomShape@i,w,c
 14690  00713C  0D09               	mullw	9
 14691  00713E  0E01               	movlw	1
 14692  007140  26F3               	addwf	prodl,f,c
 14693  007142  0E00               	movlw	0
 14694  007144  22F4               	addwfc	prodh,f,c
 14695  007146  0E00               	movlw	low _all_shapes
 14696  007148  24F3               	addwf	prodl,w,c
 14697  00714A  6ED9               	movwf	fsr2l,c
 14698  00714C  0E01               	movlw	high _all_shapes
 14699  00714E  20F4               	addwfc	prodh,w,c
 14700  007150  6EDA               	movwf	fsr2h,c
 14701  007152  0E00               	movlw	0
 14702  007154  6EDF               	movwf	indf2,c
 14703                           
 14704                           ;main.c: 831: all_shapes[i].index[1].x=12;
 14705  007156  5034               	movf	createRandomShape@i,w,c
 14706  007158  0D09               	mullw	9
 14707  00715A  0E02               	movlw	2
 14708  00715C  26F3               	addwf	prodl,f,c
 14709  00715E  0E00               	movlw	0
 14710  007160  22F4               	addwfc	prodh,f,c
 14711  007162  0E00               	movlw	low _all_shapes
 14712  007164  24F3               	addwf	prodl,w,c
 14713  007166  6ED9               	movwf	fsr2l,c
 14714  007168  0E01               	movlw	high _all_shapes
 14715  00716A  20F4               	addwfc	prodh,w,c
 14716  00716C  6EDA               	movwf	fsr2h,c
 14717  00716E  0E0C               	movlw	12
 14718  007170  6EDF               	movwf	indf2,c
 14719                           
 14720                           ;main.c: 832: all_shapes[i].index[1].y=1;
 14721  007172  5034               	movf	createRandomShape@i,w,c
 14722  007174  0D09               	mullw	9
 14723  007176  0E03               	movlw	3
 14724  007178  26F3               	addwf	prodl,f,c
 14725  00717A  0E00               	movlw	0
 14726  00717C  22F4               	addwfc	prodh,f,c
 14727  00717E  0E00               	movlw	low _all_shapes
 14728  007180  24F3               	addwf	prodl,w,c
 14729  007182  6ED9               	movwf	fsr2l,c
 14730  007184  0E01               	movlw	high _all_shapes
 14731  007186  20F4               	addwfc	prodh,w,c
 14732  007188  6EDA               	movwf	fsr2h,c
 14733  00718A  0E01               	movlw	1
 14734  00718C  6EDF               	movwf	indf2,c
 14735                           
 14736                           ;main.c: 833: all_shapes[i].index[2].x=11;
 14737  00718E  5034               	movf	createRandomShape@i,w,c
 14738  007190  0D09               	mullw	9
 14739  007192  0E04               	movlw	4
 14740  007194  26F3               	addwf	prodl,f,c
 14741  007196  0E00               	movlw	0
 14742  007198  22F4               	addwfc	prodh,f,c
 14743  00719A  0E00               	movlw	low _all_shapes
 14744  00719C  24F3               	addwf	prodl,w,c
 14745  00719E  6ED9               	movwf	fsr2l,c
 14746  0071A0  0E01               	movlw	high _all_shapes
 14747  0071A2  20F4               	addwfc	prodh,w,c
 14748  0071A4  6EDA               	movwf	fsr2h,c
 14749  0071A6  0E0B               	movlw	11
 14750  0071A8  6EDF               	movwf	indf2,c
 14751                           
 14752                           ;main.c: 834: all_shapes[i].index[2].y=1;
 14753  0071AA  5034               	movf	createRandomShape@i,w,c
 14754  0071AC  0D09               	mullw	9
 14755  0071AE  0E05               	movlw	5
 14756  0071B0  26F3               	addwf	prodl,f,c
 14757  0071B2  0E00               	movlw	0
 14758  0071B4  22F4               	addwfc	prodh,f,c
 14759  0071B6  0E00               	movlw	low _all_shapes
 14760  0071B8  24F3               	addwf	prodl,w,c
 14761  0071BA  6ED9               	movwf	fsr2l,c
 14762  0071BC  0E01               	movlw	high _all_shapes
 14763  0071BE  20F4               	addwfc	prodh,w,c
 14764  0071C0  6EDA               	movwf	fsr2h,c
 14765  0071C2  0E01               	movlw	1
 14766  0071C4  6EDF               	movwf	indf2,c
 14767                           
 14768                           ;main.c: 835: all_shapes[i].index[3].x=11;
 14769  0071C6  5034               	movf	createRandomShape@i,w,c
 14770  0071C8  0D09               	mullw	9
 14771  0071CA  0E06               	movlw	6
 14772  0071CC  26F3               	addwf	prodl,f,c
 14773  0071CE  0E00               	movlw	0
 14774  0071D0  22F4               	addwfc	prodh,f,c
 14775  0071D2  0E00               	movlw	low _all_shapes
 14776  0071D4  24F3               	addwf	prodl,w,c
 14777  0071D6  6ED9               	movwf	fsr2l,c
 14778  0071D8  0E01               	movlw	high _all_shapes
 14779  0071DA  20F4               	addwfc	prodh,w,c
 14780  0071DC  6EDA               	movwf	fsr2h,c
 14781  0071DE  0E0B               	movlw	11
 14782  0071E0                     L43:
 14783  0071E0  6EDF               	movwf	indf2,c
 14784                           
 14785                           ;main.c: 836: all_shapes[i].index[3].y=2;
 14786  0071E2  5034               	movf	createRandomShape@i,w,c
 14787  0071E4  0D09               	mullw	9
 14788  0071E6  0E07               	movlw	7
 14789  0071E8  26F3               	addwf	prodl,f,c
 14790  0071EA  0E00               	movlw	0
 14791  0071EC  22F4               	addwfc	prodh,f,c
 14792  0071EE  0E00               	movlw	low _all_shapes
 14793  0071F0  24F3               	addwf	prodl,w,c
 14794  0071F2  6ED9               	movwf	fsr2l,c
 14795  0071F4  0E01               	movlw	high _all_shapes
 14796  0071F6  20F4               	addwfc	prodh,w,c
 14797  0071F8  6EDA               	movwf	fsr2h,c
 14798  0071FA  0E02               	movlw	2
 14799  0071FC  6EDF               	movwf	indf2,c
 14800  0071FE                     L46:
 14801                           
 14802                           ;main.c: 837: all_shapes[i].orientation=3;
 14803  0071FE  5034               	movf	createRandomShape@i,w,c
 14804  007200  0D09               	mullw	9
 14805  007202  0E08               	movlw	8
 14806  007204  26F3               	addwf	prodl,f,c
 14807  007206  0E00               	movlw	0
 14808  007208  22F4               	addwfc	prodh,f,c
 14809  00720A  0E00               	movlw	low _all_shapes
 14810  00720C  24F3               	addwf	prodl,w,c
 14811  00720E  6ED9               	movwf	fsr2l,c
 14812  007210  0E01               	movlw	high _all_shapes
 14813  007212  20F4               	addwfc	prodh,w,c
 14814  007214  6EDA               	movwf	fsr2h,c
 14815  007216  0E03               	movlw	3
 14816  007218  D6BA               	goto	L41
 14817  00721A  5033               	movf	createRandomShape@orientation,w,c
 14818                           
 14819                           ; Switch size 1, requested type "space"
 14820                           ; Number of cases is 4, Range of values is 0 to 3
 14821                           ; switch strategies available:
 14822                           ; Name         Instructions Cycles
 14823                           ; simple_byte           13     7 (average)
 14824                           ;	Chosen strategy is simple_byte
 14825  00721C  0A00               	xorlw	0	; case 0
 14826  00721E  B4D8               	btfsc	status,2,c
 14827  007220  D646               	goto	l284
 14828  007222  0A01               	xorlw	1	; case 1
 14829  007224  B4D8               	btfsc	status,2,c
 14830  007226  D6B5               	goto	l286
 14831  007228  0A03               	xorlw	3	; case 2
 14832  00722A  B4D8               	btfsc	status,2,c
 14833  00722C  D71E               	goto	l287
 14834  00722E  0A01               	xorlw	1	; case 3
 14835  007230  B4D8               	btfsc	status,2,c
 14836  007232  D779               	goto	l288
 14837                           
 14838                           ;main.c: 845: }
 14839                           
 14840                           ;main.c: 844: break;
 14841                           
 14842                           ;main.c: 843: default :
 14843                           
 14844                           ;main.c: 842: break;
 14845  007234  D01A               	goto	l217
 14846  007236                     l200:
 14847  007236  501D               	movf	createRandomShape@type,w,c
 14848                           
 14849                           ; Switch size 1, requested type "space"
 14850                           ; Number of cases is 7, Range of values is 1 to 7
 14851                           ; switch strategies available:
 14852                           ; Name         Instructions Cycles
 14853                           ; simple_byte           22    12 (average)
 14854                           ;	Chosen strategy is simple_byte
 14855  007238  0A01               	xorlw	1	; case 1
 14856  00723A  B4D8               	btfsc	status,2,c
 14857  00723C  EF5B  F030         	goto	l202
 14858  007240  0A03               	xorlw	3	; case 2
 14859  007242  B4D8               	btfsc	status,2,c
 14860  007244  EFE2  F031         	goto	l219
 14861  007248  0A01               	xorlw	1	; case 3
 14862  00724A  B4D8               	btfsc	status,2,c
 14863  00724C  EF69  F033         	goto	l235
 14864  007250  0A07               	xorlw	7	; case 4
 14865  007252  B4D8               	btfsc	status,2,c
 14866  007254  EF78  F033         	goto	l250
 14867  007258  0A01               	xorlw	1	; case 5
 14868  00725A  B4D8               	btfsc	status,2,c
 14869  00725C  D498               	goto	l259
 14870  00725E  0A03               	xorlw	3	; case 6
 14871  007260  B4D8               	btfsc	status,2,c
 14872  007262  D617               	goto	l267
 14873  007264  0A01               	xorlw	1	; case 7
 14874  007266  B4D8               	btfsc	status,2,c
 14875  007268  D7D8               	goto	l283
 14876  00726A                     l217:
 14877                           
 14878                           ;main.c: 848: for (uint8_t k=0;k<4;k++){
 14879  00726A  0E00               	movlw	0
 14880  00726C  6E2E               	movwf	createRandomShape@k_296,c
 14881  00726E                     l4364:
 14882  00726E  0E03               	movlw	3
 14883  007270  642E               	cpfsgt	createRandomShape@k_296,c
 14884  007272  D001               	goto	l291
 14885  007274  0012               	return	
 14886  007276                     l291:
 14887                           
 14888                           ;main.c: 849: array_data[all_shapes[i].index[k].x][all_shapes[i].index[k].y]='1';
 14889  007276  5034               	movf	createRandomShape@i,w,c
 14890  007278  0D09               	mullw	9
 14891  00727A  0E00               	movlw	low _all_shapes
 14892  00727C  6E15               	movwf	??_createRandomShape& (0+255),c
 14893  00727E  0E01               	movlw	high _all_shapes
 14894  007280  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 14895  007282  50F3               	movf	prodl,w,c
 14896  007284  2615               	addwf	??_createRandomShape,f,c
 14897  007286  50F4               	movf	prodh,w,c
 14898  007288  2216               	addwfc	??_createRandomShape+1,f,c
 14899  00728A  502E               	movf	createRandomShape@k_296,w,c
 14900  00728C  0D02               	mullw	2
 14901  00728E  50F3               	movf	prodl,w,c
 14902  007290  2415               	addwf	??_createRandomShape,w,c
 14903  007292  6ED9               	movwf	fsr2l,c
 14904  007294  50F4               	movf	prodh,w,c
 14905  007296  2016               	addwfc	??_createRandomShape+1,w,c
 14906  007298  6EDA               	movwf	fsr2h,c
 14907  00729A  50DF               	movf	indf2,w,c
 14908  00729C  6E17               	movwf	(??_createRandomShape+2)& (0+255),c
 14909  00729E  5017               	movf	??_createRandomShape+2,w,c
 14910  0072A0  0D0C               	mullw	12
 14911  0072A2  0E00               	movlw	low _array_data
 14912  0072A4  6E18               	movwf	(??_createRandomShape+3)& (0+255),c
 14913  0072A6  0E02               	movlw	high _array_data
 14914  0072A8  6E19               	movwf	(??_createRandomShape+4)& (0+255),c
 14915  0072AA  50F3               	movf	prodl,w,c
 14916  0072AC  2618               	addwf	??_createRandomShape+3,f,c
 14917  0072AE  50F4               	movf	prodh,w,c
 14918  0072B0  2219               	addwfc	??_createRandomShape+4,f,c
 14919  0072B2  5034               	movf	createRandomShape@i,w,c
 14920  0072B4  0D09               	mullw	9
 14921  0072B6  0E00               	movlw	low _all_shapes
 14922  0072B8  6E1A               	movwf	(??_createRandomShape+5)& (0+255),c
 14923  0072BA  0E01               	movlw	high _all_shapes
 14924  0072BC  6E1B               	movwf	(??_createRandomShape+6)& (0+255),c
 14925  0072BE  50F3               	movf	prodl,w,c
 14926  0072C0  261A               	addwf	??_createRandomShape+5,f,c
 14927  0072C2  50F4               	movf	prodh,w,c
 14928  0072C4  221B               	addwfc	??_createRandomShape+6,f,c
 14929  0072C6  502E               	movf	createRandomShape@k_296,w,c
 14930  0072C8  0D02               	mullw	2
 14931  0072CA  50F3               	movf	prodl,w,c
 14932  0072CC  261A               	addwf	??_createRandomShape+5,f,c
 14933  0072CE  50F4               	movf	prodh,w,c
 14934  0072D0  221B               	addwfc	??_createRandomShape+6,f,c
 14935  0072D2  0E01               	movlw	1
 14936  0072D4  241A               	addwf	??_createRandomShape+5,w,c
 14937  0072D6  6ED9               	movwf	fsr2l,c
 14938  0072D8  0E00               	movlw	0
 14939  0072DA  201B               	addwfc	??_createRandomShape+6,w,c
 14940  0072DC  6EDA               	movwf	fsr2h,c
 14941  0072DE  50DF               	movf	indf2,w,c
 14942  0072E0  6E1C               	movwf	(??_createRandomShape+7)& (0+255),c
 14943  0072E2  501C               	movf	??_createRandomShape+7,w,c
 14944  0072E4  0D01               	mullw	1
 14945  0072E6  50F3               	movf	prodl,w,c
 14946  0072E8  2418               	addwf	??_createRandomShape+3,w,c
 14947  0072EA  6ED9               	movwf	fsr2l,c
 14948  0072EC  50F4               	movf	prodh,w,c
 14949  0072EE  2019               	addwfc	??_createRandomShape+4,w,c
 14950  0072F0  6EDA               	movwf	fsr2h,c
 14951  0072F2  0E31               	movlw	49
 14952  0072F4  6EDF               	movwf	indf2,c
 14953  0072F6  2A2E               	incf	createRandomShape@k_296,f,c
 14954  0072F8  D7BA               	goto	l4364
 14955  0072FA                     __end_of_createRandomShape:
 14956                           	opt stack 0
 14957                           tblptru	equ	0xFF8
 14958                           tblptrh	equ	0xFF7
 14959                           tblptrl	equ	0xFF6
 14960                           tablat	equ	0xFF5
 14961                           prodh	equ	0xFF4
 14962                           prodl	equ	0xFF3
 14963                           intcon	equ	0xFF2
 14964                           postinc0	equ	0xFEE
 14965                           wreg	equ	0xFE8
 14966                           indf1	equ	0xFE7
 14967                           postinc1	equ	0xFE6
 14968                           postdec1	equ	0xFE5
 14969                           plusw1	equ	0xFE3
 14970                           fsr1h	equ	0xFE2
 14971                           fsr1l	equ	0xFE1
 14972                           indf2	equ	0xFDF
 14973                           postinc2	equ	0xFDE
 14974                           postdec2	equ	0xFDD
 14975                           plusw2	equ	0xFDB
 14976                           fsr2h	equ	0xFDA
 14977                           fsr2l	equ	0xFD9
 14978                           status	equ	0xFD8
 14979                           
 14980 ;; *************** function _rand *****************
 14981 ;; Defined at:
 14982 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\rand.c"
 14983 ;; Parameters:    Size  Location     Type
 14984 ;;		None
 14985 ;; Auto vars:     Size  Location     Type
 14986 ;;		None
 14987 ;; Return value:  Size  Location     Type
 14988 ;;                  2   12[COMRAM] int 
 14989 ;; Registers used:
 14990 ;;		wreg, status,2, status,0, cstack
 14991 ;; Tracked objects:
 14992 ;;		On entry : 0/0
 14993 ;;		On exit  : 0/0
 14994 ;;		Unchanged: 0/0
 14995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14996 ;;      Params:         2       0       0       0       0       0       0       0       0
 14997 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14998 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14999 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15000 ;;Total ram usage:        2 bytes
 15001 ;; Hardware stack levels used:    1
 15002 ;; Hardware stack levels required when called:    1
 15003 ;; This function calls:
 15004 ;;		___lmul
 15005 ;; This function is called by:
 15006 ;;		_createRandomShape
 15007 ;; This function uses a non-reentrant model
 15008 ;;
 15009                           
 15010                           	psect	text33
 15011  003C90                     __ptext33:
 15012                           	opt stack 0
 15013  003C90                     _rand:
 15014                           	opt stack 28
 15015                           
 15016                           ;incstack = 0
 15017  003C90  C055  F001         	movff	_randx,___lmul@multiplier
 15018  003C94  C056  F002         	movff	_randx+1,___lmul@multiplier+1
 15019  003C98  C057  F003         	movff	_randx+2,___lmul@multiplier+2
 15020  003C9C  C058  F004         	movff	_randx+3,___lmul@multiplier+3
 15021  003CA0  0E6D               	movlw	109
 15022  003CA2  6E05               	movwf	___lmul@multiplicand,c
 15023  003CA4  0E4E               	movlw	78
 15024  003CA6  6E06               	movwf	___lmul@multiplicand+1,c
 15025  003CA8  0EC6               	movlw	198
 15026  003CAA  6E07               	movwf	___lmul@multiplicand+2,c
 15027  003CAC  0E41               	movlw	65
 15028  003CAE  6E08               	movwf	___lmul@multiplicand+3,c
 15029  003CB0  EC9A  F01E         	call	___lmul	;wreg free
 15030  003CB4  C001  F055         	movff	?___lmul,_randx
 15031  003CB8  C002  F056         	movff	?___lmul+1,_randx+1
 15032  003CBC  C003  F057         	movff	?___lmul+2,_randx+2
 15033  003CC0  C004  F058         	movff	?___lmul+3,_randx+3
 15034  003CC4  0E39               	movlw	57
 15035  003CC6  2655               	addwf	_randx,f,c
 15036  003CC8  0E30               	movlw	48
 15037  003CCA  2256               	addwfc	_randx+1,f,c
 15038  003CCC  0E00               	movlw	0
 15039  003CCE  2257               	addwfc	_randx+2,f,c
 15040  003CD0  0E00               	movlw	0
 15041  003CD2  2258               	addwfc	_randx+3,f,c
 15042  003CD4  0EFF               	movlw	255
 15043  003CD6  1457               	andwf	_randx+2,w,c
 15044  003CD8  6E0D               	movwf	?_rand,c
 15045  003CDA  0E7F               	movlw	127
 15046  003CDC  1458               	andwf	_randx+3,w,c
 15047  003CDE  6E0E               	movwf	?_rand+1,c
 15048  003CE0  0012               	return	
 15049  003CE2                     __end_of_rand:
 15050                           	opt stack 0
 15051                           tblptru	equ	0xFF8
 15052                           tblptrh	equ	0xFF7
 15053                           tblptrl	equ	0xFF6
 15054                           tablat	equ	0xFF5
 15055                           prodh	equ	0xFF4
 15056                           prodl	equ	0xFF3
 15057                           intcon	equ	0xFF2
 15058                           postinc0	equ	0xFEE
 15059                           wreg	equ	0xFE8
 15060                           indf1	equ	0xFE7
 15061                           postinc1	equ	0xFE6
 15062                           postdec1	equ	0xFE5
 15063                           plusw1	equ	0xFE3
 15064                           fsr1h	equ	0xFE2
 15065                           fsr1l	equ	0xFE1
 15066                           indf2	equ	0xFDF
 15067                           postinc2	equ	0xFDE
 15068                           postdec2	equ	0xFDD
 15069                           plusw2	equ	0xFDB
 15070                           fsr2h	equ	0xFDA
 15071                           fsr2l	equ	0xFD9
 15072                           status	equ	0xFD8
 15073                           
 15074 ;; *************** function ___lmul *****************
 15075 ;; Defined at:
 15076 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul32.c"
 15077 ;; Parameters:    Size  Location     Type
 15078 ;;  multiplier      4    0[COMRAM] unsigned long 
 15079 ;;  multiplicand    4    4[COMRAM] unsigned long 
 15080 ;; Auto vars:     Size  Location     Type
 15081 ;;  product         4    8[COMRAM] unsigned long 
 15082 ;; Return value:  Size  Location     Type
 15083 ;;                  4    0[COMRAM] unsigned long 
 15084 ;; Registers used:
 15085 ;;		wreg, status,2, status,0
 15086 ;; Tracked objects:
 15087 ;;		On entry : 0/0
 15088 ;;		On exit  : 0/0
 15089 ;;		Unchanged: 0/0
 15090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15091 ;;      Params:         8       0       0       0       0       0       0       0       0
 15092 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15093 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15094 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15095 ;;Total ram usage:       12 bytes
 15096 ;; Hardware stack levels used:    1
 15097 ;; This function calls:
 15098 ;;		Nothing
 15099 ;; This function is called by:
 15100 ;;		_rand
 15101 ;; This function uses a non-reentrant model
 15102 ;;
 15103                           
 15104                           	psect	text34
 15105  003D34                     __ptext34:
 15106                           	opt stack 0
 15107  003D34                     ___lmul:
 15108                           	opt stack 28
 15109                           
 15110                           ;incstack = 0
 15111  003D34  0E00               	movlw	0
 15112  003D36  6E09               	movwf	___lmul@product,c
 15113  003D38  0E00               	movlw	0
 15114  003D3A  6E0A               	movwf	___lmul@product+1,c
 15115  003D3C  0E00               	movlw	0
 15116  003D3E  6E0B               	movwf	___lmul@product+2,c
 15117  003D40  0E00               	movlw	0
 15118  003D42  6E0C               	movwf	___lmul@product+3,c
 15119  003D44  A001               	btfss	___lmul@multiplier,0,c
 15120  003D46  D008               	goto	l589
 15121  003D48  5005               	movf	___lmul@multiplicand,w,c
 15122  003D4A  2609               	addwf	___lmul@product,f,c
 15123  003D4C  5006               	movf	___lmul@multiplicand+1,w,c
 15124  003D4E  220A               	addwfc	___lmul@product+1,f,c
 15125  003D50  5007               	movf	___lmul@multiplicand+2,w,c
 15126  003D52  220B               	addwfc	___lmul@product+2,f,c
 15127  003D54  5008               	movf	___lmul@multiplicand+3,w,c
 15128  003D56  220C               	addwfc	___lmul@product+3,f,c
 15129  003D58                     l589:
 15130  003D58  90D8               	bcf	status,0,c
 15131  003D5A  3605               	rlcf	___lmul@multiplicand,f,c
 15132  003D5C  3606               	rlcf	___lmul@multiplicand+1,f,c
 15133  003D5E  3607               	rlcf	___lmul@multiplicand+2,f,c
 15134  003D60  3608               	rlcf	___lmul@multiplicand+3,f,c
 15135  003D62  90D8               	bcf	status,0,c
 15136  003D64  3204               	rrcf	___lmul@multiplier+3,f,c
 15137  003D66  3203               	rrcf	___lmul@multiplier+2,f,c
 15138  003D68  3202               	rrcf	___lmul@multiplier+1,f,c
 15139  003D6A  3201               	rrcf	___lmul@multiplier,f,c
 15140  003D6C  5001               	movf	___lmul@multiplier,w,c
 15141  003D6E  1002               	iorwf	___lmul@multiplier+1,w,c
 15142  003D70  1003               	iorwf	___lmul@multiplier+2,w,c
 15143  003D72  1004               	iorwf	___lmul@multiplier+3,w,c
 15144  003D74  A4D8               	btfss	status,2,c
 15145  003D76  D7E6               	goto	l588
 15146  003D78  C009  F001         	movff	___lmul@product,?___lmul
 15147  003D7C  C00A  F002         	movff	___lmul@product+1,?___lmul+1
 15148  003D80  C00B  F003         	movff	___lmul@product+2,?___lmul+2
 15149  003D84  C00C  F004         	movff	___lmul@product+3,?___lmul+3
 15150  003D88  0012               	return		;funcret
 15151  003D8A                     __end_of___lmul:
 15152                           	opt stack 0
 15153                           tblptru	equ	0xFF8
 15154                           tblptrh	equ	0xFF7
 15155                           tblptrl	equ	0xFF6
 15156                           tablat	equ	0xFF5
 15157                           prodh	equ	0xFF4
 15158                           prodl	equ	0xFF3
 15159                           intcon	equ	0xFF2
 15160                           postinc0	equ	0xFEE
 15161                           wreg	equ	0xFE8
 15162                           indf1	equ	0xFE7
 15163                           postinc1	equ	0xFE6
 15164                           postdec1	equ	0xFE5
 15165                           plusw1	equ	0xFE3
 15166                           fsr1h	equ	0xFE2
 15167                           fsr1l	equ	0xFE1
 15168                           indf2	equ	0xFDF
 15169                           postinc2	equ	0xFDE
 15170                           postdec2	equ	0xFDD
 15171                           plusw2	equ	0xFDB
 15172                           fsr2h	equ	0xFDA
 15173                           fsr2l	equ	0xFD9
 15174                           status	equ	0xFD8
 15175                           
 15176 ;; *************** function ___awmod *****************
 15177 ;; Defined at:
 15178 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awmod.c"
 15179 ;; Parameters:    Size  Location     Type
 15180 ;;  dividend        2   14[COMRAM] int 
 15181 ;;  divisor         2   16[COMRAM] int 
 15182 ;; Auto vars:     Size  Location     Type
 15183 ;;  sign            1   19[COMRAM] unsigned char 
 15184 ;;  counter         1   18[COMRAM] unsigned char 
 15185 ;; Return value:  Size  Location     Type
 15186 ;;                  2   14[COMRAM] int 
 15187 ;; Registers used:
 15188 ;;		wreg, status,2, status,0
 15189 ;; Tracked objects:
 15190 ;;		On entry : 0/0
 15191 ;;		On exit  : 0/0
 15192 ;;		Unchanged: 0/0
 15193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15194 ;;      Params:         4       0       0       0       0       0       0       0       0
 15195 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15196 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15197 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15198 ;;Total ram usage:        6 bytes
 15199 ;; Hardware stack levels used:    1
 15200 ;; This function calls:
 15201 ;;		Nothing
 15202 ;; This function is called by:
 15203 ;;		_createRandomShape
 15204 ;; This function uses a non-reentrant model
 15205 ;;
 15206                           
 15207                           	psect	text35
 15208  003ED0                     __ptext35:
 15209                           	opt stack 0
 15210  003ED0                     ___awmod:
 15211                           	opt stack 29
 15212                           
 15213                           ;incstack = 0
 15214  003ED0  0E00               	movlw	0
 15215  003ED2  6E14               	movwf	___awmod@sign,c
 15216  003ED4  AE10               	btfss	___awmod@dividend+1,7,c
 15217  003ED6  D006               	goto	l757
 15218  003ED8  6C0F               	negf	___awmod@dividend,c
 15219  003EDA  1E10               	comf	___awmod@dividend+1,f,c
 15220  003EDC  B0D8               	btfsc	status,0,c
 15221  003EDE  2A10               	incf	___awmod@dividend+1,f,c
 15222  003EE0  0E01               	movlw	1
 15223  003EE2  6E14               	movwf	___awmod@sign,c
 15224  003EE4                     l757:
 15225  003EE4  AE12               	btfss	___awmod@divisor+1,7,c
 15226  003EE6  D004               	goto	l758
 15227  003EE8  6C11               	negf	___awmod@divisor,c
 15228  003EEA  1E12               	comf	___awmod@divisor+1,f,c
 15229  003EEC  B0D8               	btfsc	status,0,c
 15230  003EEE  2A12               	incf	___awmod@divisor+1,f,c
 15231  003EF0                     l758:
 15232  003EF0  5011               	movf	___awmod@divisor,w,c
 15233  003EF2  1012               	iorwf	___awmod@divisor+1,w,c
 15234  003EF4  B4D8               	btfsc	status,2,c
 15235  003EF6  D018               	goto	l765
 15236  003EF8  0E01               	movlw	1
 15237  003EFA  6E13               	movwf	___awmod@counter,c
 15238  003EFC  D004               	goto	l760
 15239  003EFE  90D8               	bcf	status,0,c
 15240  003F00  3611               	rlcf	___awmod@divisor,f,c
 15241  003F02  3612               	rlcf	___awmod@divisor+1,f,c
 15242  003F04  2A13               	incf	___awmod@counter,f,c
 15243  003F06                     l760:
 15244  003F06  AE12               	btfss	___awmod@divisor+1,7,c
 15245  003F08  D7FA               	goto	l761
 15246  003F0A                     u3480:
 15247  003F0A  5011               	movf	___awmod@divisor,w,c
 15248  003F0C  5C0F               	subwf	___awmod@dividend,w,c
 15249  003F0E  5012               	movf	___awmod@divisor+1,w,c
 15250  003F10  5810               	subwfb	___awmod@dividend+1,w,c
 15251  003F12  A0D8               	btfss	status,0,c
 15252  003F14  D004               	goto	l764
 15253  003F16  5011               	movf	___awmod@divisor,w,c
 15254  003F18  5E0F               	subwf	___awmod@dividend,f,c
 15255  003F1A  5012               	movf	___awmod@divisor+1,w,c
 15256  003F1C  5A10               	subwfb	___awmod@dividend+1,f,c
 15257  003F1E                     l764:
 15258  003F1E  90D8               	bcf	status,0,c
 15259  003F20  3212               	rrcf	___awmod@divisor+1,f,c
 15260  003F22  3211               	rrcf	___awmod@divisor,f,c
 15261  003F24  2E13               	decfsz	___awmod@counter,f,c
 15262  003F26  D7F1               	goto	u3480
 15263  003F28                     l765:
 15264  003F28  5014               	movf	___awmod@sign,w,c
 15265  003F2A  B4D8               	btfsc	status,2,c
 15266  003F2C  D004               	goto	l766
 15267  003F2E  6C0F               	negf	___awmod@dividend,c
 15268  003F30  1E10               	comf	___awmod@dividend+1,f,c
 15269  003F32  B0D8               	btfsc	status,0,c
 15270  003F34  2A10               	incf	___awmod@dividend+1,f,c
 15271  003F36                     l766:
 15272  003F36  C00F  F00F         	movff	___awmod@dividend,?___awmod
 15273  003F3A  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
 15274  003F3E  0012               	return	
 15275  003F40                     __end_of___awmod:
 15276                           	opt stack 0
 15277                           tblptru	equ	0xFF8
 15278                           tblptrh	equ	0xFF7
 15279                           tblptrl	equ	0xFF6
 15280                           tablat	equ	0xFF5
 15281                           prodh	equ	0xFF4
 15282                           prodl	equ	0xFF3
 15283                           intcon	equ	0xFF2
 15284                           postinc0	equ	0xFEE
 15285                           wreg	equ	0xFE8
 15286                           indf1	equ	0xFE7
 15287                           postinc1	equ	0xFE6
 15288                           postdec1	equ	0xFE5
 15289                           plusw1	equ	0xFE3
 15290                           fsr1h	equ	0xFE2
 15291                           fsr1l	equ	0xFE1
 15292                           indf2	equ	0xFDF
 15293                           postinc2	equ	0xFDE
 15294                           postdec2	equ	0xFDD
 15295                           plusw2	equ	0xFDB
 15296                           fsr2h	equ	0xFDA
 15297                           fsr2l	equ	0xFD9
 15298                           status	equ	0xFD8
 15299                           
 15300 ;; *************** function _EEPROM_Write *****************
 15301 ;; Defined at:
 15302 ;;		line 22 in file "glcd_library/mcu.c"
 15303 ;; Parameters:    Size  Location     Type
 15304 ;;  address         2    0[COMRAM] int 
 15305 ;;  data            1    2[COMRAM] unsigned char 
 15306 ;; Auto vars:     Size  Location     Type
 15307 ;;		None
 15308 ;; Return value:  Size  Location     Type
 15309 ;;                  1    wreg      void 
 15310 ;; Registers used:
 15311 ;;		wreg, status,2
 15312 ;; Tracked objects:
 15313 ;;		On entry : 0/0
 15314 ;;		On exit  : 0/0
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15317 ;;      Params:         3       0       0       0       0       0       0       0       0
 15318 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15319 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15320 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15321 ;;Total ram usage:        3 bytes
 15322 ;; Hardware stack levels used:    1
 15323 ;; This function calls:
 15324 ;;		Nothing
 15325 ;; This function is called by:
 15326 ;;		_main
 15327 ;; This function uses a non-reentrant model
 15328 ;;
 15329                           
 15330                           	psect	text36
 15331  003AAA                     __ptext36:
 15332                           	opt stack 0
 15333  003AAA                     _EEPROM_Write:
 15334                           	opt stack 30
 15335                           
 15336                           ;mcu.c: 24: EEADR=address;
 15337                           
 15338                           ;incstack = 0
 15339  003AAA  C001  FFA9         	movff	EEPROM_Write@address,4009	;volatile
 15340                           
 15341                           ;mcu.c: 25: EEDATA=data;
 15342  003AAE  C003  FFA8         	movff	EEPROM_Write@data,4008	;volatile
 15343                           
 15344                           ;mcu.c: 26: EECON1bits.EEPGD=0;
 15345  003AB2  9EA6               	bcf	4006,7,c	;volatile
 15346                           
 15347                           ;mcu.c: 27: EECON1bits.CFGS=0;
 15348  003AB4  9CA6               	bcf	4006,6,c	;volatile
 15349                           
 15350                           ;mcu.c: 28: EECON1bits.WREN=1;
 15351  003AB6  84A6               	bsf	4006,2,c	;volatile
 15352                           
 15353                           ;mcu.c: 29: INTCONbits.GIE=0;
 15354  003AB8  9EF2               	bcf	intcon,7,c	;volatile
 15355                           
 15356                           ;mcu.c: 30: EECON2=0x55;
 15357  003ABA  0E55               	movlw	85
 15358  003ABC  6EA7               	movwf	4007,c	;volatile
 15359                           
 15360                           ;mcu.c: 31: EECON2=0xaa;
 15361  003ABE  0EAA               	movlw	170
 15362  003AC0  6EA7               	movwf	4007,c	;volatile
 15363                           
 15364                           ;mcu.c: 32: EECON1bits.WR=1;
 15365  003AC2  82A6               	bsf	4006,1,c	;volatile
 15366                           
 15367                           ;mcu.c: 33: INTCONbits.GIE=1;
 15368  003AC4  8EF2               	bsf	intcon,7,c	;volatile
 15369  003AC6  A8A1               	btfss	4001,4,c	;volatile
 15370  003AC8  D7FE               	goto	l537
 15371                           
 15372                           ;mcu.c: 35: PIR2bits.EEIF=0;
 15373  003ACA  98A1               	bcf	4001,4,c	;volatile
 15374  003ACC  0012               	return		;funcret
 15375  003ACE                     __end_of_EEPROM_Write:
 15376                           	opt stack 0
 15377                           tblptru	equ	0xFF8
 15378                           tblptrh	equ	0xFF7
 15379                           tblptrl	equ	0xFF6
 15380                           tablat	equ	0xFF5
 15381                           prodh	equ	0xFF4
 15382                           prodl	equ	0xFF3
 15383                           intcon	equ	0xFF2
 15384                           postinc0	equ	0xFEE
 15385                           wreg	equ	0xFE8
 15386                           indf1	equ	0xFE7
 15387                           postinc1	equ	0xFE6
 15388                           postdec1	equ	0xFE5
 15389                           plusw1	equ	0xFE3
 15390                           fsr1h	equ	0xFE2
 15391                           fsr1l	equ	0xFE1
 15392                           indf2	equ	0xFDF
 15393                           postinc2	equ	0xFDE
 15394                           postdec2	equ	0xFDD
 15395                           plusw2	equ	0xFDB
 15396                           fsr2h	equ	0xFDA
 15397                           fsr2l	equ	0xFD9
 15398                           status	equ	0xFD8
 15399                           
 15400 ;; *************** function _EEPROM_Read *****************
 15401 ;; Defined at:
 15402 ;;		line 13 in file "glcd_library/mcu.c"
 15403 ;; Parameters:    Size  Location     Type
 15404 ;;  address         2    0[COMRAM] int 
 15405 ;; Auto vars:     Size  Location     Type
 15406 ;;		None
 15407 ;; Return value:  Size  Location     Type
 15408 ;;                  1    wreg      unsigned char 
 15409 ;; Registers used:
 15410 ;;		wreg, status,2
 15411 ;; Tracked objects:
 15412 ;;		On entry : 0/0
 15413 ;;		On exit  : 0/0
 15414 ;;		Unchanged: 0/0
 15415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15416 ;;      Params:         2       0       0       0       0       0       0       0       0
 15417 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15418 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15419 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15420 ;;Total ram usage:        2 bytes
 15421 ;; Hardware stack levels used:    1
 15422 ;; This function calls:
 15423 ;;		Nothing
 15424 ;; This function is called by:
 15425 ;;		_main
 15426 ;; This function uses a non-reentrant model
 15427 ;;
 15428                           
 15429                           	psect	text37
 15430  003A62                     __ptext37:
 15431                           	opt stack 0
 15432  003A62                     _EEPROM_Read:
 15433                           	opt stack 30
 15434                           
 15435                           ;mcu.c: 15: EEADR=address;
 15436                           
 15437                           ;incstack = 0
 15438  003A62  C001  FFA9         	movff	EEPROM_Read@address,4009	;volatile
 15439                           
 15440                           ;mcu.c: 16: EECON1bits.WREN=0;
 15441  003A66  94A6               	bcf	4006,2,c	;volatile
 15442                           
 15443                           ;mcu.c: 17: EECON1bits.EEPGD=0;
 15444  003A68  9EA6               	bcf	4006,7,c	;volatile
 15445                           
 15446                           ;mcu.c: 18: EECON1bits.RD=1;
 15447  003A6A  80A6               	bsf	4006,0,c	;volatile
 15448                           
 15449                           ;mcu.c: 19: return(EEDATA);
 15450  003A6C  50A8               	movf	4008,w,c	;volatile
 15451  003A6E  0012               	return	
 15452  003A70                     __end_of_EEPROM_Read:
 15453                           	opt stack 0
 15454                           tblptru	equ	0xFF8
 15455                           tblptrh	equ	0xFF7
 15456                           tblptrl	equ	0xFF6
 15457                           tablat	equ	0xFF5
 15458                           prodh	equ	0xFF4
 15459                           prodl	equ	0xFF3
 15460                           intcon	equ	0xFF2
 15461                           postinc0	equ	0xFEE
 15462                           wreg	equ	0xFE8
 15463                           indf1	equ	0xFE7
 15464                           postinc1	equ	0xFE6
 15465                           postdec1	equ	0xFE5
 15466                           plusw1	equ	0xFE3
 15467                           fsr1h	equ	0xFE2
 15468                           fsr1l	equ	0xFE1
 15469                           indf2	equ	0xFDF
 15470                           postinc2	equ	0xFDE
 15471                           postdec2	equ	0xFDD
 15472                           plusw2	equ	0xFDB
 15473                           fsr2h	equ	0xFDA
 15474                           fsr2l	equ	0xFD9
 15475                           status	equ	0xFD8
 15476                           tblptru	equ	0xFF8
 15477                           tblptrh	equ	0xFF7
 15478                           tblptrl	equ	0xFF6
 15479                           tablat	equ	0xFF5
 15480                           prodh	equ	0xFF4
 15481                           prodl	equ	0xFF3
 15482                           intcon	equ	0xFF2
 15483                           postinc0	equ	0xFEE
 15484                           wreg	equ	0xFE8
 15485                           indf1	equ	0xFE7
 15486                           postinc1	equ	0xFE6
 15487                           postdec1	equ	0xFE5
 15488                           plusw1	equ	0xFE3
 15489                           fsr1h	equ	0xFE2
 15490                           fsr1l	equ	0xFE1
 15491                           indf2	equ	0xFDF
 15492                           postinc2	equ	0xFDE
 15493                           postdec2	equ	0xFDD
 15494                           plusw2	equ	0xFDB
 15495                           fsr2h	equ	0xFDA
 15496                           fsr2l	equ	0xFD9
 15497                           status	equ	0xFD8
 15498                           
 15499                           	psect	rparam
 15500  0000                     tblptru	equ	0xFF8
 15501                           tblptrh	equ	0xFF7
 15502                           tblptrl	equ	0xFF6
 15503                           tablat	equ	0xFF5
 15504                           prodh	equ	0xFF4
 15505                           prodl	equ	0xFF3
 15506                           intcon	equ	0xFF2
 15507                           postinc0	equ	0xFEE
 15508                           wreg	equ	0xFE8
 15509                           indf1	equ	0xFE7
 15510                           postinc1	equ	0xFE6
 15511                           postdec1	equ	0xFE5
 15512                           plusw1	equ	0xFE3
 15513                           fsr1h	equ	0xFE2
 15514                           fsr1l	equ	0xFE1
 15515                           indf2	equ	0xFDF
 15516                           postinc2	equ	0xFDE
 15517                           postdec2	equ	0xFDD
 15518                           plusw2	equ	0xFDB
 15519                           fsr2h	equ	0xFDA
 15520                           fsr2l	equ	0xFD9
 15521                           status	equ	0xFD8


Data Sizes:
    Strings     54
    Constant    3277
    Data        4
    BSS         419
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     61      88
    BANK0           160      0       0
    BANK1           256      0     180
    BANK2           256      0     216
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> displayStartScore@string(COMRAM[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    glcd_text_write@str	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_4(CODE[10]), STR_3(CODE[27]), 

    glcd_WriteString@str	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_4(CODE[10]), STR_3(CODE[27]), STR_2(CODE[14]), displayStartScore@string(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_createRandomShape
    _rotate->_dontBelong2Shape
    _moveRight->_dontBelong2Shape
    _moveLeft->_dontBelong2Shape
    _lineCompletedTest->_completedUpdate
    _completedUpdate->_update_display_shapes
    _update_display_shapes->_glcd_PlotPixel
    _gravity->_dontBelong2Shape
    _glcd_text_write->_glcd_WriteString
    _glcd_SetCursor->_glcd_WriteByte
    _glcd_Init->_glcd_FillScreen
    _glcd_Image->_glcd_WriteByte
    _display_grid->_glcd_PlotPixel
    _glcd_PlotPixel->_glcd_WriteByte
    _displayStartScore->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _glcd_WriteString->_glcd_WriteChar8X8
    _glcd_WriteChar8X8->_glcd_WriteByte
    _glcd_WriteChar3x6->_glcd_WriteByte
    _glcd_FillScreen->_glcd_WriteByte
    _glcd_WriteByte->___awdiv
    _createRandomShape->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   65624
                                             52 COMRAM     9     9      0
                        _EEPROM_Read
                       _EEPROM_Write
                  _createRandomShape
                              _delay
                    _delayHomeScreen
                  _displayStartScore
                       _display_grid
                    _glcd_FillScreen
                         _glcd_Image
                          _glcd_Init
                    _glcd_text_write
                            _gravity
                  _lineCompletedTest
                           _moveLeft
                          _moveRight
                           _pwmStart
                            _pwmStop
                             _rotate
                           _setupPWM
              _update_display_shapes
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _rotate                                              24    24      0    1908
                                              7 COMRAM    24    24      0
                   _dontBelong2Shape
 ---------------------------------------------------------------------------------
 (1) _pwmStop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwmStart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _moveRight                                           17    17      0    2427
                                              7 COMRAM    17    17      0
                             ___wmul
                   _dontBelong2Shape
 ---------------------------------------------------------------------------------
 (1) _moveLeft                                            17    17      0    2427
                                              7 COMRAM    17    17      0
                             ___wmul
                   _dontBelong2Shape
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lineCompletedTest                                    6     6      0    6135
                                             45 COMRAM     6     6      0
                    _completedUpdate
 ---------------------------------------------------------------------------------
 (2) _completedUpdate                                     14    14      0    5952
                                             31 COMRAM    14    14      0
              _update_display_shapes
 ---------------------------------------------------------------------------------
 (1) _update_display_shapes                               14    14      0    5349
                                             17 COMRAM    14    14      0
                     _glcd_PlotPixel
 ---------------------------------------------------------------------------------
 (1) _gravity                                             19    19      0    2054
                                              7 COMRAM    19    19      0
                   _dontBelong2Shape
 ---------------------------------------------------------------------------------
 (2) _dontBelong2Shape                                     7     5      2     786
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _glcd_text_write                                      4     0      4   10082
                                             23 COMRAM     4     0      4
                     _glcd_SetCursor
                   _glcd_WriteString
 ---------------------------------------------------------------------------------
 (2) _glcd_SetCursor                                       3     2      1    2829
                                             10 COMRAM     3     2      1
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (1) _glcd_Init                                            5     5      0    5306
                                             13 COMRAM     2     2      0
                    _glcd_FillScreen
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (1) _glcd_Image                                           5     5      0    2802
                                             10 COMRAM     5     5      0
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (1) _display_grid                                         2     2      0    6013
                                             17 COMRAM     2     2      0
                     _glcd_PlotPixel
 ---------------------------------------------------------------------------------
 (2) _glcd_PlotPixel                                       7     5      2    4777
                                             10 COMRAM     7     5      2
                            ___awdiv
                      _glcd_ReadByte
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (3) _glcd_ReadByte                                        2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _displayStartScore                                   21    21      0   10887
                                             26 COMRAM    21    21      0
                    _delayHomeScreen
                    _glcd_FillScreen
                   _glcd_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    17      6    1254
                                             12 COMRAM    14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _glcd_WriteString                                     4     0      4    6731
                                             19 COMRAM     4     0      4
                  _glcd_WriteChar3x6
                  _glcd_WriteChar8X8
 ---------------------------------------------------------------------------------
 (3) _glcd_WriteChar8X8                                    9     8      1    2968
                                             10 COMRAM     9     8      1
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (3) _glcd_WriteChar3x6                                    7     6      1    2946
                                             10 COMRAM     7     6      1
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (2) _glcd_FillScreen                                      3     3      0    2732
                                             10 COMRAM     3     3      0
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (3) _glcd_WriteByte                                       2     1      1    2552
                                              8 COMRAM     2     1      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _delayHomeScreen                                      4     4      0      92
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     4      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _createRandomShape                                   32    32      0    6386
                                             20 COMRAM    32    32      0
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         3     0      3     196
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read
   _EEPROM_Write
   _createRandomShape
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul
   _delay
   _delayHomeScreen
   _displayStartScore
     _delayHomeScreen
     _glcd_FillScreen
       _glcd_WriteByte
         ___awdiv (ARG)
     _glcd_WriteString
       _glcd_WriteChar3x6
         _glcd_WriteByte
           ___awdiv (ARG)
       _glcd_WriteChar8X8
         _glcd_WriteByte
           ___awdiv (ARG)
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _display_grid
     _glcd_PlotPixel
       ___awdiv
       _glcd_ReadByte
       _glcd_WriteByte
         ___awdiv (ARG)
   _glcd_FillScreen
     _glcd_WriteByte
       ___awdiv (ARG)
   _glcd_Image
     _glcd_WriteByte
       ___awdiv (ARG)
   _glcd_Init
     _glcd_FillScreen
       _glcd_WriteByte
         ___awdiv (ARG)
     _glcd_WriteByte
       ___awdiv (ARG)
   _glcd_text_write
     _glcd_SetCursor
       _glcd_WriteByte
         ___awdiv (ARG)
     _glcd_WriteString
       _glcd_WriteChar3x6
         _glcd_WriteByte
           ___awdiv (ARG)
       _glcd_WriteChar8X8
         _glcd_WriteByte
           ___awdiv (ARG)
   _gravity
     _dontBelong2Shape
   _lineCompletedTest
     _completedUpdate
       _update_display_shapes
         _glcd_PlotPixel
           ___awdiv
           _glcd_ReadByte
           _glcd_WriteByte
             ___awdiv (ARG)
   _moveLeft
     ___wmul
     _dontBelong2Shape
   _moveRight
     ___wmul
     _dontBelong2Shape
   _pwmStart
   _pwmStop
   _rotate
     _dontBelong2Shape
   _setupPWM
   _update_display_shapes
     _glcd_PlotPixel
       ___awdiv
       _glcd_ReadByte
       _glcd_WriteByte
         ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D8       9       84.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      B4       7       70.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3D      58       1       92.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E4      20        0.0%
DATA                 0      0     1E4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Fri Nov 26 10:20:07 2021

                             _x 0053                               _y 0052                              l51 45FC  
                            l43 45AC                              l60 473A                              l45 45B8  
                            l70 4B5A                              l55 4616                              l47 45DA  
                            l71 4B0C                              l56 4638                              l80 4B2C  
                            l57 46CE                              l81 4B30                              l73 4B10  
                            l66 4D88                              l90 4B56                              l82 4B34  
                            l74 4B14                              l91 4C24                              l83 4B38  
                            l75 4B18                              l67 4B00                              l92 4BEE  
                            l84 4B3C                              l76 4B1C                              l93 4C9C  
                            l85 4B40                              l77 4B20                              l94 4BF2  
                            l86 4B44                              l78 4B24                              l95 4BF6  
                            l87 4B48                              l79 4B28                              l96 4BFA  
                            l88 4B4C                              l97 4BFE                              l89 4B50  
                            l98 4C02                              l99 4C06                    ___awdiv@sign 0006  
              ??_glcd_PlotPixel 000D             ___wmul@multiplicand 0003                             l100 4C0A  
                           l101 4C0E                             l110 4CC0                             l102 4C12  
                           l111 4CB0                             l103 4C16                             l200 7236  
                           l104 4C1A                             l105 4C20                             l202 60B6  
                           l210 5F9E                             l211 5FCC                             l203 5E86  
                           l131 59BC                             l115 4D5A                             l107 4D14  
                           l220 60D4                             l204 5EB4                             l116 4D1A  
                           l108 4CEA                             l300 47E2                             l221 6132  
                           l213 602A                             l125 3FC2                             l133 59C8  
                           l117 4D30                             l109 4CAA                             l230 6308  
                           l214 6058                             l142 5CC4                             l118 4D20  
                           l310 48A0                             l231 6366                             l207 5F12  
                           l127 4026                             l151 5E52                             l143 5E10  
                           l135 5B80                             l303 4800                             l240 649E  
                           l224 6190                             l208 5F40                             l144 5CDA  
                           l136 5B94                             l304 480C                             l320 3E4A  
                           l217 726A                             l241 64FC                             l225 61EE  
                           l321 3E5E                             l161 5868                             l250 66F0  
                           l306 486E                             l154 5570                             l330 4F74  
                           l251 681E                             l235 66D2                             l243 655A  
                           l219 63C4                             l227 624C                             l139 5CBE  
                           l315 3E06                             l171 5124                             l260 683E  
                           l252 67CA                             l244 65B8                             l236 63E2  
                           l228 62AA                             l420 3B5E                             l500 3F86  
                           l164 586E                             l156 557C                             l332 4F8A  
                           l237 6440                             l149 5E1C                             l317 3E12  
                           l181 5422                             l173 5130                             l325 4DE8  
                           l262 691E                             l254 67E6                             l246 6616  
                           l430 41BC                             l414 428C                             l166 5884  
                           l158 5724                             l350 49E2                             l263 69F8  
                           l255 6802                             l247 6674                             l415 42A0  
                           l319 3E44                             l183 5438                             l175 52D8  
                           l159 5738                             l327 4F6E                             l272 6C64  
                           l264 6AD2                             l424 3B90                             l176 52EC  
                           l360 4A6A                             l344 495E                             l273 6CC0  
                           l425 3B94                             l178 541C                             l354 4AA4  
                           l362 4A7A                             l346 496A                             l291 7276  
                           l283 721A                             l267 6E92                             l275 6D1E  
                           l259 6B8E                             l419 3B5A                             l451 3EAC  
                           l355 4A2C                             l284 6EAE                             l276 6D7A  
                           l268 6BAA                             l460 3C24                             l364 4A8A  
                           l356 4A36                             l348 49D6                             l269 6C06  
                           l429 414C                             l365 4A96                             l357 4A40  
                           l286 6F92                             l278 6DD8                             l470 4342  
                           l358 4A4A                             l287 706A                             l279 6E34  
                           l471 4368                             l463 42BE                             l367 4ACC  
                           l288 7126                             l480 43DA                             l456 3C0E  
                           l368 4AE4                             l537 3AC6                             l449 3E70  
                           l481 4416                             l465 42D0                             l297 474A  
                           l482 444C                             l474 438A                             l466 42D4  
                           l298 4756                             l467 42EC                             l571 451A  
                           l476 439C                             l572 4572                             l477 43A0  
                           l469 4316                             l485 4110                             l573 4520  
                           l565 44A6                             l478 43B0                             l486 40B4  
                           l558 4462                             l487 40E4                             l567 44CE  
                           l559 447C                             l751 4090                             l760 3F06  
                           l488 410C                             l752 409A                             l744 4042  
                           l496 3F54                             l761 3EFE                             l753 40A8  
                           l745 4052                             l498 3F60                             l747 4070  
                           l764 3F1E                             l588 3D44                             l748 4068  
                           l765 3F28                             l757 3EE4                             l589 3D58  
                           l766 3F36                             l758 3EF0                             l980 3D00  
                           l981 3CF8                             l990 3BCE                             l991 3BC6  
                           l984 3D20                   ?_display_grid 0001                             l985 3D2A  
                           l994 3BE6                             l995 3BF0                             _PR2 000FCB  
                  ___awmod@sign 0014                             prod 000FF3                             wreg 000FE8  
                  __CFG_FOSC$HS 000000                    __CFG_LVP$OFF 000000                            l3112 4B04  
                          l4010 5FC2                            l4120 635C                            l4212 666A  
                          l4028 604E                            l3236 42E4                            l3500 44D2  
                          l4054 6128                            l3406 3B46                            l3422 474E  
                          l4330 6E2C                            l4146 6436                            l3370 3FBA  
                          l4410 4DE0                            l4308 6D72                            l4076 61E4  
                          l3452 488E                            l4190 65AE                            l3438 4804  
                          l4264 6BFE                            l4168 64F2                            l3392 3B20  
                          l3288 43A8                            l3640 45A4                            l3800 5CD2  
                          l4098 62A0                            l3562 3EA4                            l4522 3F4C  
                          l3458 4898                            l4364 726E                            l3548 3E68  
                          l4286 6CB8                            l3398 3B34                            l3646 45B0  
                          l4382 3E0A                            l4438 4F82                            l4622 4962  
                          l4528 3F58                            l3752 59B4                            l4376 3DFE  
                          l4616 4956                            l3818 5E14                            l3924 52E4  
                          l4644 49DA                            l3838 5568                            l4638 49CE  
                          l3864 5730                            l3778 5B8C                            l3946 5430  
                          l3974 5EAA                            l3958 3A78                            l3886 587C  
                          l3992 5F36                            l3898 511C                            STR_1 7FFB  
                          STR_2 7FE3                            STR_3 7FC8                            STR_4 7FF1  
                          u3000 3D04                            u3110 3B46                            u3030 3BD2  
                          _LATD 000F8C                            u4100 5E56                            u3310 457A  
                          u4030 5CB8                            u3230 4902                            u3150 47E6  
                          u3400 3ECC                            u3320 4592                            u3080 402A  
                          u4040 5CC8                            u3240 4906                            u4200 5872  
                          u5000 49CA                            u3340 40DE                            u2700 4074  
                          u4140 5728                            u3350 4108                            u4070 5E0C  
                          u3190 4872                            u4150 572C                            u5030 4A0E  
                          u3360 4130                            u4320 5416                            u5040 4A12  
                          u3290 44FE                            u4330 5426                            u3347 40D4  
                          u2900 436E                            u2820 4D82                            u3357 40FE  
                          u3550 45CA                            u2830 4D86                            u4270 52DC  
                          u4190 5862                            u3367 4126                            u3480 3F0A  
                          u3800 46C0                            u4280 52E0                            u2754 41B2  
                          u5307 3B9C                            u2755 41AE                            u2764 41D0  
                          u3580 45EC                            u5317 3BAA                            u2765 41CC  
                          u3910 4726                            u5327 3B6C                            u2960 4452  
                          u5337 3B76                            u3930 473E                            u4830 4F68  
                          u5287 4212                            u4760 3E4E                            u4840 4F78  
                          u5297 4228                            u4930 3FA6                            u4940 3FAA  
                          u3980 5B84                            u4950 3FAE                            u3990 5B88  
                          u4881 3D96                            u4990 49C6                            _TMR2 000FCC  
              ??_glcd_WriteByte 000A           _update_display_shapes 4AF8                            _main 490E  
                          _rand 3C90                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          fsr2l 000FD9                            prodh 000FF4                            prodl 000FF3  
                          start 0000                 __end_of_Font3x6 7FBE                    ___param_bank 000000  
               __end_of_Font8x8 7AFB                 _completedUpdate 4742            __end_of_EEPROM_Write 3ACE  
            glcd_WriteChar8X8@i 0012              glcd_WriteChar3x6@i 0010                  ??_display_grid 0012  
                         ?_main 0001                           ?_rand 000D                 __end_of___awdiv 40B2  
                         _EEADR 000FA9                 __end_of___awmod 3F40                 ___awdiv@divisor 0003  
               __end_of___lwdiv 3D34                 __end_of___lwmod 3BFA                 ___awdiv@counter 0005  
               __end_of_accueil 7EFB                           _PORTA 000F80                           _PORTB 000F81  
                         _PORTD 000F83                           _PORTE 000F84                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISD 000F95                           _TRISE 000F96  
           ___lmul@multiplicand 0005                  moveRight@j_255 0015                  moveRight@j_256 0016  
                         _delay 3A70                 __end_of_dpowers 7FC8                 __end_of_gravity 5E5A  
                         _randx 0055                  moveRight@index 0018                           _score 0054  
                         main@i 003B                           main@y 003C                           tablat 000FF5  
               __end_of_pwmStop 3A5E                           plusw1 000FE3                           plusw2 000FDB  
                         status 000FD8                 __end_of_sprintf 45A0                EEPROM_Write@data 0003  
          __size_of_EEPROM_Read 000E              glcd_WriteByte@data 0009                 __initialization 3C42  
            glcd_WriteByte@side 000A               ??_delayHomeScreen 0001                    __end_of_main 4AF8  
                  __end_of_rand 3CE2            completedUpdate@i_303 002B            completedUpdate@j_301 0029  
          completedUpdate@j_302 002A                   main@bestScore 0037           createRandomShape@type 001D  
                  rotate@temp_x 0018                    rotate@temp_y 0019               ?_dontBelong2Shape 0001  
                        ??_main 0035                          ??_rand 000F                   __activetblptr 000002  
               _glcd_FillScreen 3E62              ??_dontBelong2Shape 0003             glcd_WriteChar8X8@ch 0010  
  createRandomShape@orientation 0033             glcd_WriteChar3x6@ch 000F                          ?_delay 0001  
                        _ADCON1 000FC1                          _EEDATA 000FA8                          _CCPR1L 000FBE  
                        _EECON2 000FA7                ___awdiv@dividend 0001               _lineCompletedTest 3DF6  
        ?_update_display_shapes 0001        __size_of_glcd_text_write 0020                 rotate@new_coord 0010  
            ?_lineCompletedTest 0001         __end_of_completedUpdate 490E             ??_lineCompletedTest 002E  
             ?_glcd_WriteString 0014                          ___lmul 3D34                          ___wmul 3AF2  
                     ??___awdiv 0005                       ??___awmod 0013              ??_glcd_WriteString 0018  
                     ??___lwdiv 0005                       ??___lwmod 000C                          delay@c 0001  
                        clear_0 3C68                          clear_1 3C74                          clear_2 3C80  
              ___awdiv@quotient 0007                 ___awmod@divisor 0011                 ___awmod@counter 0013  
                        _rotate 4DA2                __end_of_moveLeft 5562                       ??_gravity 0008  
                  __pdataCOMRAM 0055                __end_of_setupPWM 3AF2                    __mediumconst 72FA  
                 display_grid@i 0013                   display_grid@j 0012                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                __end_of_pwmStart 3A5A  
     __end_of_lineCompletedTest 3E62                       ??_pwmStop 0001                       ??_sprintf 0013  
                    __accesstop 0060         __end_of__initialization 3C86            __end_of_display_grid 4742  
                 ___rparam_used 000001           __size_of_EEPROM_Write 0024                  __pcstackCOMRAM 0001  
                 __end_of_delay 3A8A         __end_of_glcd_FillScreen 3ED0          createRandomShape@k_280 0021  
        createRandomShape@k_290 0029          createRandomShape@k_282 0022          createRandomShape@k_283 0023  
        createRandomShape@k_292 002A          createRandomShape@k_284 0024          createRandomShape@k_293 002B  
        createRandomShape@k_285 0025          createRandomShape@k_294 002C          createRandomShape@k_278 001F  
        createRandomShape@k_295 002D          createRandomShape@k_287 0026          createRandomShape@k_279 0020  
        createRandomShape@k_296 002E          createRandomShape@k_288 0027          createRandomShape@k_289 0028  
        glcd_WriteChar8X8@color 000B          displayStartScore@F4364 003E              __size_of_glcd_Init 00BE  
        createRandomShape@start 002F                   rotate@pivot_x 001B                   rotate@pivot_y 001C  
                       ??_delay 0001                    _EEPROM_Write 3AAA                      __pbssBANK1 0100  
                    __pbssBANK2 0200            glcd_WriteChar8X8@chr 000E                ?_completedUpdate 0001  
                    _all_shapes 0100           __end_of_glcd_ReadByte 3BB8               ??_glcd_text_write 001C  
        glcd_WriteChar3x6@color 000B                         ?___lmul 0001                         ?___wmul 0001  
            lineCompletedTest@i 0032              lineCompletedTest@j 0033              __size_of_moveRight 044C  
                ___lmul@product 0009                      _glcd_Image 3F40                         ?_rotate 0001  
             _glcd_WriteChar8X8 42A8               _glcd_WriteChar3x6 4374      __size_of_lineCompletedTest 006C  
            ?_glcd_WriteChar8X8 000B              ?_glcd_WriteChar3x6 000B                      _array_data 0200  
                  gravity@j_244 0017                    gravity@j_246 0018                    gravity@j_247 0015  
               _delayHomeScreen 3B18                    gravity@index 001A             ??_glcd_WriteChar8X8 000C  
           ??_glcd_WriteChar3x6 000C                         _Font3x6 7EFB                         _Font8x8 72FB  
                   moveRight@ok 0013               __end_of_glcd_Init 42A8                       ?_moveLeft 0001  
                       __Hparam 0000                         __Lparam 0000                       ?_setupPWM 0001  
                     ?_pwmStart 0001                         ___awdiv 402E                 __size_of___lmul 0056  
                       ___awmod 3ED0                 __size_of___wmul 0026                ?_glcd_FillScreen 0001  
                       ___lwdiv 3CE2                         ___lwmod 3BB8             glcd_WriteString@str 0014  
                       _accueil 7AFB                         __pcinit 3C42                         __ramtop 0800  
     __end_of_glcd_WriteChar8X8 4374       __end_of_glcd_WriteChar3x6 4458                         __ptext0 490E  
                       __ptext1 3ACE                         __ptext2 4DA2                         __ptext3 3A5A  
                       __ptext4 3A56                         __ptext5 5562                         __ptext6 5116  
                       __ptext7 3AF2                         __ptext8 3DF6                         __ptext9 4742  
               __size_of_rotate 0374                         _dpowers 7FBE                       _T2CONbits 000FCA  
                       _gravity 59AE         __size_of_glcd_SetCursor 0048                ___awmod@dividend 000F  
       ??_update_display_shapes 0012                         _pwmStop 3A5A         __size_of_glcd_PlotPixel 00B2  
                       _sprintf 4458           __size_of_display_grid 01A2            end_of_initialization 3C86  
              completedUpdate@i 002D                completedUpdate@j 002C       __size_of_dontBelong2Shape 007A  
             __end_of_moveRight 59AE                   ??_EEPROM_Read 0003                   __Lmediumconst 72FA  
              glcd_text_write@x 001A                glcd_text_write@y 001B                      ??_moveLeft 0008  
                    ??_setupPWM 0003                         postdec1 000FE5                         postdec2 000FDD  
                 moveLeft@j_264 0015                   moveLeft@j_265 0016                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                         rotate@k 001F  
                    ??_pwmStart 0001         __size_of_glcd_WriteByte 0036                   moveLeft@index 0018  
    update_display_shapes@m_230 001A      update_display_shapes@n_231 001B                     ?_glcd_Image 0001  
        update_display_shapes@i 001C          update_display_shapes@j 001D          update_display_shapes@m 0018  
        update_display_shapes@n 0019          update_display_shapes@x 001F          update_display_shapes@y 001E  
                     _PORTEbits 000F84                    _display_grid 45A0       __size_of_glcd_WriteString 0086  
       __end_of_delayHomeScreen 3B4C                       _TRISCbits 000F94              createRandomShape@i 0034  
            createRandomShape@k 001E                     _CCP1CONbits 000FBD             __end_of_EEPROM_Read 3A70  
                __end_of___lmul 3D8A                  __end_of___wmul 3B18           dontBelong2Shape@index 0006  
                 __pidataCOMRAM 3A5E      __size_of_glcd_WriteChar8X8 00CC      __size_of_glcd_WriteChar3x6 00E4  
    createRandomShape@start_281 0030      createRandomShape@start_291 0032      createRandomShape@start_286 0031  
                __end_of_rotate 5116             start_initialization 3C42                     rotate@k_319 001D  
                   rotate@index 001E                 _glcd_text_write 3A8A             completedUpdate@line 0028  
            glcd_SetCursor@side 000C              glcd_SetCursor@xpos 000D              glcd_SetCursor@ypos 000B  
              setupPWM@PR2value 0001             __size_of_glcd_Image 0074                        ??___lmul 0009  
                      ??___wmul 0005            glcd_FillScreen@color 000B                        ??_rotate 0008  
                _glcd_SetCursor 3BFA                     __pbssCOMRAM 003E                ?_delayHomeScreen 0001  
       displayStartScore@string 001B                  _glcd_PlotPixel 4138           glcd_WriteString@color 0017  
             _displayStartScore 3D8A           glcd_WriteChar8X8@side 0013                _dontBelong2Shape 3FB4  
         glcd_WriteChar8X8@xpos 0011              ?_displayStartScore 0001                     sprintf@flag 0016  
                   _EEPROM_Read 3A62                     sprintf@prec 0017                ___lwdiv@dividend 0001  
           ??_displayStartScore 001B           glcd_WriteChar3x6@side 0011           glcd_WriteChar3x6@xpos 000E  
                 __pmediumconst 72FA                  _glcd_WriteByte 3B4C               __size_of_moveLeft 044C  
                      ?___awdiv 0001                        ?___awmod 000F                       _glcd_Init 41EA  
                      ?___lwdiv 0001                        ?___lwmod 0008        __size_of_completedUpdate 01CC  
             __size_of_setupPWM 0024          __end_of_glcd_SetCursor 3C42               __size_of_pwmStart 0004  
                    moveLeft@ok 0013                delayHomeScreen@c 0001                delayHomeScreen@d 0003  
                      ?_gravity 0001         __end_of_glcd_text_write 3AAA          __end_of_glcd_PlotPixel 41EA  
                    moveRight@a 0011                      moveRight@b 0012                      moveRight@i 0017  
                    moveRight@j 0014                _glcd_WriteString 40B2       __end_of_displayStartScore 3DF6  
        __size_of_glcd_ReadByte 0036                        ?_pwmStop 0001                ___lwdiv@quotient 0005  
                __size_of_delay 001A  __size_of_update_display_shapes 02AA                        ?_sprintf 000D  
 __end_of_update_display_shapes 4DA2               _createRandomShape 5E5A                  ___wmul@product 0005  
                      _LATBbits 000F8A                        _PIE1bits 000F9D              ?_createRandomShape 0001  
                     _moveRight 5562          __end_of_glcd_WriteByte 3B82                        _PIR1bits 000F9E  
                      _PIR2bits 000FA1      displayStartScore@bestScore 002F                      ?_glcd_Init 0001  
           ??_createRandomShape 0015                    ??_glcd_Image 000B                 ?_glcd_SetCursor 000B  
                     main@i_339 0039               ___wmul@multiplier 0001                       main@y_340 003A  
    lineCompletedTest@completed 0031                 ?_glcd_PlotPixel 000B                       main@index 003D  
      __size_of_glcd_FillScreen 006E               ___lmul@multiplier 0001                       copy_data0 3C56  
     __end_of_createRandomShape 72FA                glcd_FillScreen@i 000D                glcd_FillScreen@j 000C  
            __end_of_glcd_Image 3FB4                      _EECON1bits 000FA6                      ?_moveRight 0001  
                      __Hrparam 0000                       gravity@ok 0014                 ?_glcd_WriteByte 0009  
                      __Lrparam 0000                   _glcd_ReadByte 3B82                __size_of___awdiv 0084  
              __size_of___awmod 0070                __size_of___lwdiv 0052                __size_of___lwmod 0042  
          glcd_WriteString@font 0016                      sprintf@val 0018                ?_glcd_text_write 0018  
             ??_completedUpdate 0020                __size_of_gravity 04AC      __size_of_displayStartScore 006C  
               ___lwdiv@divisor 0003                 ___lwdiv@counter 0007                        __ptext10 4AF8  
                      __ptext11 59AE                        __ptext20 402E                        __ptext12 3FB4  
                      __ptext21 3D8A                        __ptext13 3A8A                        __ptext30 3B18  
                      __ptext22 4458                        __ptext14 3BFA                        __ptext31 3A70  
                      __ptext23 3BB8                        __ptext15 41EA                        __ptext32 5E5A  
                      __ptext24 3CE2                        __ptext16 3F40                        __ptext33 3C90  
                      __ptext25 40B2                        __ptext17 45A0                        __ptext34 3D34  
                      __ptext26 42A8                        __ptext18 4138                        __ptext35 3ED0  
                      __ptext27 4374                        __ptext19 3B82                        __ptext36 3AAA  
                      __ptext28 3E62                        __ptext37 3A62                        __ptext29 3B4C  
              __size_of_pwmStop 0004                       moveLeft@a 0011                       moveLeft@b 0012  
                     moveLeft@i 0017                       moveLeft@j 0014                   ?_EEPROM_Write 0001  
              __size_of_sprintf 0148              glcd_text_write@str 0018                   __size_of_main 01EA  
                 __size_of_rand 0052                   glcd_Image@ptr 000B                        _moveLeft 5116  
                ?_glcd_ReadByte 0001                   glcd_Init@mode 000F                        _setupPWM 3ACE  
                      _pwmStart 3A56                     ??_glcd_Init 000E        __end_of_dontBelong2Shape 402E  
                      main@next 0038                      _INTCONbits 000FF2                        gravity@a 0012  
                      gravity@b 0013                        gravity@i 0019                        gravity@j 0016  
                ??_EEPROM_Write 0004               dontBelong2Shape@k 0007               dontBelong2Shape@x 0001  
             dontBelong2Shape@y 0002      __size_of_createRandomShape 14A0             glcd_PlotPixel@color 000C  
                     sprintf@ap 0014               ??_glcd_FillScreen 000B                       sprintf@sp 000D  
              ___lwmod@dividend 0008                    ?_EEPROM_Read 0001                     ??_moveRight 0008  
                  glcd_Image@cs 000F        __end_of_glcd_WriteString 4138              EEPROM_Read@address 0001  
                      rotate@ok 001A              glcd_PlotPixel@data 0010                        sprintf@c 001A  
                      sprintf@f 000F              glcd_PlotPixel@side 0011              glcd_PlotPixel@xpos 000F  
            glcd_PlotPixel@ypos 000B                 ___lwmod@divisor 000A                 ___lwmod@counter 000C  
                   glcd_Image@i 000E                     glcd_Image@j 000D               glcd_ReadByte@data 0002  
             glcd_ReadByte@side 0001        __size_of_delayHomeScreen 0034  update_display_shapes@operation 0017  
               ??_glcd_ReadByte 0001             EEPROM_Write@address 0001                ??_glcd_SetCursor 000C  
