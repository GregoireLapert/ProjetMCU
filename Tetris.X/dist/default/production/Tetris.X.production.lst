

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Thu Nov 25 23:30:06 2021

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53  0000                     
    54                           ; Version 1.43
    55                           ; Generated 25/07/2017 GMT
    56                           ; 
    57                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4550 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89                           	psect	idataCOMRAM
    90  003A86                     __pidataCOMRAM:
    91                           	opt stack 0
    92                           
    93                           ;initializer for _randx
    94  003A86  0001               	dw	1
    95  003A88  0000               	dw	0
    96                           
    97                           	psect	mediumconst
    98  007304                     __pmediumconst:
    99                           	opt stack 0
   100  007304  00                 	db	0
   101  007305                     _Font8x8:
   102                           	opt stack 0
   103  007305  00                 	db	0
   104  007306  00                 	db	0
   105  007307  00                 	db	0
   106  007308  00                 	db	0
   107  007309  00                 	db	0
   108  00730A  00                 	db	0
   109  00730B  00                 	db	0
   110  00730C  00                 	db	0
   111  00730D  00                 	db	0
   112  00730E  00                 	db	0
   113  00730F  00                 	db	0
   114  007310  00                 	db	0
   115  007311  00                 	db	0
   116  007312  00                 	db	0
   117  007313  00                 	db	0
   118  007314  00                 	db	0
   119  007315  00                 	db	0
   120  007316  00                 	db	0
   121  007317  00                 	db	0
   122  007318  00                 	db	0
   123  007319  00                 	db	0
   124  00731A  00                 	db	0
   125  00731B  00                 	db	0
   126  00731C  00                 	db	0
   127  00731D  00                 	db	0
   128  00731E  00                 	db	0
   129  00731F  00                 	db	0
   130  007320  00                 	db	0
   131  007321  00                 	db	0
   132  007322  00                 	db	0
   133  007323  00                 	db	0
   134  007324  00                 	db	0
   135  007325  00                 	db	0
   136  007326  00                 	db	0
   137  007327  00                 	db	0
   138  007328  00                 	db	0
   139  007329  00                 	db	0
   140  00732A  00                 	db	0
   141  00732B  00                 	db	0
   142  00732C  00                 	db	0
   143  00732D  00                 	db	0
   144  00732E  00                 	db	0
   145  00732F  00                 	db	0
   146  007330  00                 	db	0
   147  007331  00                 	db	0
   148  007332  00                 	db	0
   149  007333  00                 	db	0
   150  007334  00                 	db	0
   151  007335  00                 	db	0
   152  007336  00                 	db	0
   153  007337  00                 	db	0
   154  007338  00                 	db	0
   155  007339  00                 	db	0
   156  00733A  00                 	db	0
   157  00733B  00                 	db	0
   158  00733C  00                 	db	0
   159  00733D  00                 	db	0
   160  00733E  00                 	db	0
   161  00733F  00                 	db	0
   162  007340  00                 	db	0
   163  007341  00                 	db	0
   164  007342  00                 	db	0
   165  007343  00                 	db	0
   166  007344  00                 	db	0
   167  007345  00                 	db	0
   168  007346  00                 	db	0
   169  007347  00                 	db	0
   170  007348  00                 	db	0
   171  007349  00                 	db	0
   172  00734A  00                 	db	0
   173  00734B  00                 	db	0
   174  00734C  00                 	db	0
   175  00734D  00                 	db	0
   176  00734E  00                 	db	0
   177  00734F  00                 	db	0
   178  007350  00                 	db	0
   179  007351  00                 	db	0
   180  007352  00                 	db	0
   181  007353  00                 	db	0
   182  007354  00                 	db	0
   183  007355  00                 	db	0
   184  007356  00                 	db	0
   185  007357  00                 	db	0
   186  007358  00                 	db	0
   187  007359  00                 	db	0
   188  00735A  00                 	db	0
   189  00735B  00                 	db	0
   190  00735C  00                 	db	0
   191  00735D  00                 	db	0
   192  00735E  00                 	db	0
   193  00735F  00                 	db	0
   194  007360  00                 	db	0
   195  007361  00                 	db	0
   196  007362  00                 	db	0
   197  007363  00                 	db	0
   198  007364  00                 	db	0
   199  007365  00                 	db	0
   200  007366  00                 	db	0
   201  007367  00                 	db	0
   202  007368  00                 	db	0
   203  007369  00                 	db	0
   204  00736A  00                 	db	0
   205  00736B  00                 	db	0
   206  00736C  00                 	db	0
   207  00736D  00                 	db	0
   208  00736E  00                 	db	0
   209  00736F  00                 	db	0
   210  007370  00                 	db	0
   211  007371  00                 	db	0
   212  007372  00                 	db	0
   213  007373  00                 	db	0
   214  007374  00                 	db	0
   215  007375  00                 	db	0
   216  007376  00                 	db	0
   217  007377  00                 	db	0
   218  007378  00                 	db	0
   219  007379  00                 	db	0
   220  00737A  00                 	db	0
   221  00737B  00                 	db	0
   222  00737C  00                 	db	0
   223  00737D  00                 	db	0
   224  00737E  00                 	db	0
   225  00737F  00                 	db	0
   226  007380  00                 	db	0
   227  007381  00                 	db	0
   228  007382  00                 	db	0
   229  007383  00                 	db	0
   230  007384  00                 	db	0
   231  007385  00                 	db	0
   232  007386  00                 	db	0
   233  007387  00                 	db	0
   234  007388  00                 	db	0
   235  007389  00                 	db	0
   236  00738A  00                 	db	0
   237  00738B  00                 	db	0
   238  00738C  00                 	db	0
   239  00738D  00                 	db	0
   240  00738E  00                 	db	0
   241  00738F  00                 	db	0
   242  007390  00                 	db	0
   243  007391  00                 	db	0
   244  007392  00                 	db	0
   245  007393  00                 	db	0
   246  007394  00                 	db	0
   247  007395  00                 	db	0
   248  007396  00                 	db	0
   249  007397  00                 	db	0
   250  007398  00                 	db	0
   251  007399  00                 	db	0
   252  00739A  00                 	db	0
   253  00739B  00                 	db	0
   254  00739C  00                 	db	0
   255  00739D  00                 	db	0
   256  00739E  00                 	db	0
   257  00739F  00                 	db	0
   258  0073A0  00                 	db	0
   259  0073A1  00                 	db	0
   260  0073A2  00                 	db	0
   261  0073A3  00                 	db	0
   262  0073A4  00                 	db	0
   263  0073A5  00                 	db	0
   264  0073A6  00                 	db	0
   265  0073A7  00                 	db	0
   266  0073A8  00                 	db	0
   267  0073A9  00                 	db	0
   268  0073AA  00                 	db	0
   269  0073AB  00                 	db	0
   270  0073AC  00                 	db	0
   271  0073AD  00                 	db	0
   272  0073AE  00                 	db	0
   273  0073AF  00                 	db	0
   274  0073B0  00                 	db	0
   275  0073B1  00                 	db	0
   276  0073B2  00                 	db	0
   277  0073B3  00                 	db	0
   278  0073B4  00                 	db	0
   279  0073B5  00                 	db	0
   280  0073B6  00                 	db	0
   281  0073B7  00                 	db	0
   282  0073B8  00                 	db	0
   283  0073B9  00                 	db	0
   284  0073BA  00                 	db	0
   285  0073BB  00                 	db	0
   286  0073BC  00                 	db	0
   287  0073BD  00                 	db	0
   288  0073BE  00                 	db	0
   289  0073BF  00                 	db	0
   290  0073C0  00                 	db	0
   291  0073C1  00                 	db	0
   292  0073C2  00                 	db	0
   293  0073C3  00                 	db	0
   294  0073C4  00                 	db	0
   295  0073C5  00                 	db	0
   296  0073C6  00                 	db	0
   297  0073C7  00                 	db	0
   298  0073C8  00                 	db	0
   299  0073C9  00                 	db	0
   300  0073CA  00                 	db	0
   301  0073CB  00                 	db	0
   302  0073CC  00                 	db	0
   303  0073CD  00                 	db	0
   304  0073CE  00                 	db	0
   305  0073CF  00                 	db	0
   306  0073D0  00                 	db	0
   307  0073D1  00                 	db	0
   308  0073D2  00                 	db	0
   309  0073D3  00                 	db	0
   310  0073D4  00                 	db	0
   311  0073D5  00                 	db	0
   312  0073D6  00                 	db	0
   313  0073D7  00                 	db	0
   314  0073D8  00                 	db	0
   315  0073D9  00                 	db	0
   316  0073DA  00                 	db	0
   317  0073DB  00                 	db	0
   318  0073DC  00                 	db	0
   319  0073DD  00                 	db	0
   320  0073DE  00                 	db	0
   321  0073DF  00                 	db	0
   322  0073E0  00                 	db	0
   323  0073E1  00                 	db	0
   324  0073E2  00                 	db	0
   325  0073E3  00                 	db	0
   326  0073E4  00                 	db	0
   327  0073E5  00                 	db	0
   328  0073E6  00                 	db	0
   329  0073E7  00                 	db	0
   330  0073E8  00                 	db	0
   331  0073E9  00                 	db	0
   332  0073EA  00                 	db	0
   333  0073EB  00                 	db	0
   334  0073EC  00                 	db	0
   335  0073ED  00                 	db	0
   336  0073EE  00                 	db	0
   337  0073EF  00                 	db	0
   338  0073F0  00                 	db	0
   339  0073F1  00                 	db	0
   340  0073F2  00                 	db	0
   341  0073F3  00                 	db	0
   342  0073F4  00                 	db	0
   343  0073F5  00                 	db	0
   344  0073F6  00                 	db	0
   345  0073F7  00                 	db	0
   346  0073F8  00                 	db	0
   347  0073F9  00                 	db	0
   348  0073FA  00                 	db	0
   349  0073FB  00                 	db	0
   350  0073FC  00                 	db	0
   351  0073FD  00                 	db	0
   352  0073FE  00                 	db	0
   353  0073FF  00                 	db	0
   354  007400  00                 	db	0
   355  007401  00                 	db	0
   356  007402  00                 	db	0
   357  007403  00                 	db	0
   358  007404  00                 	db	0
   359  007405  00                 	db	0
   360  007406  00                 	db	0
   361  007407  00                 	db	0
   362  007408  00                 	db	0
   363  007409  00                 	db	0
   364  00740A  00                 	db	0
   365  00740B  00                 	db	0
   366  00740C  00                 	db	0
   367  00740D  00                 	db	0
   368  00740E  06                 	db	6
   369  00740F  5F                 	db	95
   370  007410  5F                 	db	95
   371  007411  06                 	db	6
   372  007412  00                 	db	0
   373  007413  00                 	db	0
   374  007414  00                 	db	0
   375  007415  00                 	db	0
   376  007416  07                 	db	7
   377  007417  07                 	db	7
   378  007418  00                 	db	0
   379  007419  07                 	db	7
   380  00741A  07                 	db	7
   381  00741B  00                 	db	0
   382  00741C  00                 	db	0
   383  00741D  14                 	db	20
   384  00741E  7F                 	db	127
   385  00741F  7F                 	db	127
   386  007420  14                 	db	20
   387  007421  7F                 	db	127
   388  007422  7F                 	db	127
   389  007423  14                 	db	20
   390  007424  00                 	db	0
   391  007425  24                 	db	36
   392  007426  2E                 	db	46
   393  007427  6B                 	db	107
   394  007428  6B                 	db	107
   395  007429  3A                 	db	58
   396  00742A  12                 	db	18
   397  00742B  00                 	db	0
   398  00742C  00                 	db	0
   399  00742D  46                 	db	70
   400  00742E  66                 	db	102
   401  00742F  30                 	db	48
   402  007430  18                 	db	24
   403  007431  0C                 	db	12
   404  007432  66                 	db	102
   405  007433  62                 	db	98
   406  007434  00                 	db	0
   407  007435  30                 	db	48
   408  007436  7A                 	db	122
   409  007437  4F                 	db	79
   410  007438  5D                 	db	93
   411  007439  37                 	db	55
   412  00743A  7A                 	db	122
   413  00743B  48                 	db	72
   414  00743C  00                 	db	0
   415  00743D  04                 	db	4
   416  00743E  07                 	db	7
   417  00743F  03                 	db	3
   418  007440  00                 	db	0
   419  007441  00                 	db	0
   420  007442  00                 	db	0
   421  007443  00                 	db	0
   422  007444  00                 	db	0
   423  007445  00                 	db	0
   424  007446  1C                 	db	28
   425  007447  3E                 	db	62
   426  007448  63                 	db	99
   427  007449  41                 	db	65
   428  00744A  00                 	db	0
   429  00744B  00                 	db	0
   430  00744C  00                 	db	0
   431  00744D  00                 	db	0
   432  00744E  41                 	db	65
   433  00744F  63                 	db	99
   434  007450  3E                 	db	62
   435  007451  1C                 	db	28
   436  007452  00                 	db	0
   437  007453  00                 	db	0
   438  007454  00                 	db	0
   439  007455  08                 	db	8
   440  007456  2A                 	db	42
   441  007457  3E                 	db	62
   442  007458  1C                 	db	28
   443  007459  1C                 	db	28
   444  00745A  3E                 	db	62
   445  00745B  2A                 	db	42
   446  00745C  08                 	db	8
   447  00745D  08                 	db	8
   448  00745E  08                 	db	8
   449  00745F  3E                 	db	62
   450  007460  3E                 	db	62
   451  007461  08                 	db	8
   452  007462  08                 	db	8
   453  007463  00                 	db	0
   454  007464  00                 	db	0
   455  007465  00                 	db	0
   456  007466  80                 	db	128
   457  007467  E0                 	db	224
   458  007468  60                 	db	96
   459  007469  00                 	db	0
   460  00746A  00                 	db	0
   461  00746B  00                 	db	0
   462  00746C  00                 	db	0
   463  00746D  08                 	db	8
   464  00746E  08                 	db	8
   465  00746F  08                 	db	8
   466  007470  08                 	db	8
   467  007471  08                 	db	8
   468  007472  08                 	db	8
   469  007473  00                 	db	0
   470  007474  00                 	db	0
   471  007475  00                 	db	0
   472  007476  00                 	db	0
   473  007477  60                 	db	96
   474  007478  60                 	db	96
   475  007479  00                 	db	0
   476  00747A  00                 	db	0
   477  00747B  00                 	db	0
   478  00747C  00                 	db	0
   479  00747D  60                 	db	96
   480  00747E  30                 	db	48
   481  00747F  18                 	db	24
   482  007480  0C                 	db	12
   483  007481  06                 	db	6
   484  007482  03                 	db	3
   485  007483  01                 	db	1
   486  007484  00                 	db	0
   487  007485  3E                 	db	62
   488  007486  7F                 	db	127
   489  007487  71                 	db	113
   490  007488  59                 	db	89
   491  007489  4D                 	db	77
   492  00748A  7F                 	db	127
   493  00748B  3E                 	db	62
   494  00748C  00                 	db	0
   495  00748D  40                 	db	64
   496  00748E  42                 	db	66
   497  00748F  7F                 	db	127
   498  007490  7F                 	db	127
   499  007491  40                 	db	64
   500  007492  40                 	db	64
   501  007493  00                 	db	0
   502  007494  00                 	db	0
   503  007495  62                 	db	98
   504  007496  73                 	db	115
   505  007497  59                 	db	89
   506  007498  49                 	db	73
   507  007499  6F                 	db	111
   508  00749A  66                 	db	102
   509  00749B  00                 	db	0
   510  00749C  00                 	db	0
   511  00749D  22                 	db	34
   512  00749E  63                 	db	99
   513  00749F  49                 	db	73
   514  0074A0  49                 	db	73
   515  0074A1  7F                 	db	127
   516  0074A2  36                 	db	54
   517  0074A3  00                 	db	0
   518  0074A4  00                 	db	0
   519  0074A5  18                 	db	24
   520  0074A6  1C                 	db	28
   521  0074A7  16                 	db	22
   522  0074A8  53                 	db	83
   523  0074A9  7F                 	db	127
   524  0074AA  7F                 	db	127
   525  0074AB  50                 	db	80
   526  0074AC  00                 	db	0
   527  0074AD  27                 	db	39
   528  0074AE  67                 	db	103
   529  0074AF  45                 	db	69
   530  0074B0  45                 	db	69
   531  0074B1  7D                 	db	125
   532  0074B2  39                 	db	57
   533  0074B3  00                 	db	0
   534  0074B4  00                 	db	0
   535  0074B5  3C                 	db	60
   536  0074B6  7E                 	db	126
   537  0074B7  4B                 	db	75
   538  0074B8  49                 	db	73
   539  0074B9  79                 	db	121
   540  0074BA  30                 	db	48
   541  0074BB  00                 	db	0
   542  0074BC  00                 	db	0
   543  0074BD  03                 	db	3
   544  0074BE  03                 	db	3
   545  0074BF  71                 	db	113
   546  0074C0  79                 	db	121
   547  0074C1  0F                 	db	15
   548  0074C2  07                 	db	7
   549  0074C3  00                 	db	0
   550  0074C4  00                 	db	0
   551  0074C5  36                 	db	54
   552  0074C6  7F                 	db	127
   553  0074C7  49                 	db	73
   554  0074C8  49                 	db	73
   555  0074C9  7F                 	db	127
   556  0074CA  36                 	db	54
   557  0074CB  00                 	db	0
   558  0074CC  00                 	db	0
   559  0074CD  06                 	db	6
   560  0074CE  4F                 	db	79
   561  0074CF  49                 	db	73
   562  0074D0  69                 	db	105
   563  0074D1  3F                 	db	63
   564  0074D2  1E                 	db	30
   565  0074D3  00                 	db	0
   566  0074D4  00                 	db	0
   567  0074D5  00                 	db	0
   568  0074D6  00                 	db	0
   569  0074D7  66                 	db	102
   570  0074D8  66                 	db	102
   571  0074D9  00                 	db	0
   572  0074DA  00                 	db	0
   573  0074DB  00                 	db	0
   574  0074DC  00                 	db	0
   575  0074DD  00                 	db	0
   576  0074DE  80                 	db	128
   577  0074DF  E6                 	db	230
   578  0074E0  66                 	db	102
   579  0074E1  00                 	db	0
   580  0074E2  00                 	db	0
   581  0074E3  00                 	db	0
   582  0074E4  00                 	db	0
   583  0074E5  08                 	db	8
   584  0074E6  1C                 	db	28
   585  0074E7  36                 	db	54
   586  0074E8  63                 	db	99
   587  0074E9  41                 	db	65
   588  0074EA  00                 	db	0
   589  0074EB  00                 	db	0
   590  0074EC  00                 	db	0
   591  0074ED  24                 	db	36
   592  0074EE  24                 	db	36
   593  0074EF  24                 	db	36
   594  0074F0  24                 	db	36
   595  0074F1  24                 	db	36
   596  0074F2  24                 	db	36
   597  0074F3  00                 	db	0
   598  0074F4  00                 	db	0
   599  0074F5  00                 	db	0
   600  0074F6  41                 	db	65
   601  0074F7  63                 	db	99
   602  0074F8  36                 	db	54
   603  0074F9  1C                 	db	28
   604  0074FA  08                 	db	8
   605  0074FB  00                 	db	0
   606  0074FC  00                 	db	0
   607  0074FD  02                 	db	2
   608  0074FE  03                 	db	3
   609  0074FF  51                 	db	81
   610  007500  59                 	db	89
   611  007501  0F                 	db	15
   612  007502  06                 	db	6
   613  007503  00                 	db	0
   614  007504  00                 	db	0
   615  007505  3E                 	db	62
   616  007506  7F                 	db	127
   617  007507  41                 	db	65
   618  007508  5D                 	db	93
   619  007509  5D                 	db	93
   620  00750A  1F                 	db	31
   621  00750B  1E                 	db	30
   622  00750C  00                 	db	0
   623  00750D  7C                 	db	124
   624  00750E  7E                 	db	126
   625  00750F  13                 	db	19
   626  007510  13                 	db	19
   627  007511  7E                 	db	126
   628  007512  7C                 	db	124
   629  007513  00                 	db	0
   630  007514  00                 	db	0
   631  007515  41                 	db	65
   632  007516  7F                 	db	127
   633  007517  7F                 	db	127
   634  007518  49                 	db	73
   635  007519  49                 	db	73
   636  00751A  7F                 	db	127
   637  00751B  36                 	db	54
   638  00751C  00                 	db	0
   639  00751D  1C                 	db	28
   640  00751E  3E                 	db	62
   641  00751F  63                 	db	99
   642  007520  41                 	db	65
   643  007521  41                 	db	65
   644  007522  63                 	db	99
   645  007523  22                 	db	34
   646  007524  00                 	db	0
   647  007525  41                 	db	65
   648  007526  7F                 	db	127
   649  007527  7F                 	db	127
   650  007528  41                 	db	65
   651  007529  63                 	db	99
   652  00752A  3E                 	db	62
   653  00752B  1C                 	db	28
   654  00752C  00                 	db	0
   655  00752D  41                 	db	65
   656  00752E  7F                 	db	127
   657  00752F  7F                 	db	127
   658  007530  49                 	db	73
   659  007531  5D                 	db	93
   660  007532  41                 	db	65
   661  007533  63                 	db	99
   662  007534  00                 	db	0
   663  007535  41                 	db	65
   664  007536  7F                 	db	127
   665  007537  7F                 	db	127
   666  007538  49                 	db	73
   667  007539  1D                 	db	29
   668  00753A  01                 	db	1
   669  00753B  03                 	db	3
   670  00753C  00                 	db	0
   671  00753D  1C                 	db	28
   672  00753E  3E                 	db	62
   673  00753F  63                 	db	99
   674  007540  41                 	db	65
   675  007541  51                 	db	81
   676  007542  73                 	db	115
   677  007543  72                 	db	114
   678  007544  00                 	db	0
   679  007545  7F                 	db	127
   680  007546  7F                 	db	127
   681  007547  08                 	db	8
   682  007548  08                 	db	8
   683  007549  7F                 	db	127
   684  00754A  7F                 	db	127
   685  00754B  00                 	db	0
   686  00754C  00                 	db	0
   687  00754D  00                 	db	0
   688  00754E  41                 	db	65
   689  00754F  7F                 	db	127
   690  007550  7F                 	db	127
   691  007551  41                 	db	65
   692  007552  00                 	db	0
   693  007553  00                 	db	0
   694  007554  00                 	db	0
   695  007555  30                 	db	48
   696  007556  70                 	db	112
   697  007557  40                 	db	64
   698  007558  41                 	db	65
   699  007559  7F                 	db	127
   700  00755A  3F                 	db	63
   701  00755B  01                 	db	1
   702  00755C  00                 	db	0
   703  00755D  41                 	db	65
   704  00755E  7F                 	db	127
   705  00755F  7F                 	db	127
   706  007560  08                 	db	8
   707  007561  1C                 	db	28
   708  007562  77                 	db	119
   709  007563  63                 	db	99
   710  007564  00                 	db	0
   711  007565  41                 	db	65
   712  007566  7F                 	db	127
   713  007567  7F                 	db	127
   714  007568  41                 	db	65
   715  007569  40                 	db	64
   716  00756A  60                 	db	96
   717  00756B  70                 	db	112
   718  00756C  00                 	db	0
   719  00756D  7F                 	db	127
   720  00756E  7F                 	db	127
   721  00756F  0E                 	db	14
   722  007570  1C                 	db	28
   723  007571  0E                 	db	14
   724  007572  7F                 	db	127
   725  007573  7F                 	db	127
   726  007574  00                 	db	0
   727  007575  7F                 	db	127
   728  007576  7F                 	db	127
   729  007577  06                 	db	6
   730  007578  0C                 	db	12
   731  007579  18                 	db	24
   732  00757A  7F                 	db	127
   733  00757B  7F                 	db	127
   734  00757C  00                 	db	0
   735  00757D  1C                 	db	28
   736  00757E  3E                 	db	62
   737  00757F  63                 	db	99
   738  007580  41                 	db	65
   739  007581  63                 	db	99
   740  007582  3E                 	db	62
   741  007583  1C                 	db	28
   742  007584  00                 	db	0
   743  007585  41                 	db	65
   744  007586  7F                 	db	127
   745  007587  7F                 	db	127
   746  007588  49                 	db	73
   747  007589  09                 	db	9
   748  00758A  0F                 	db	15
   749  00758B  06                 	db	6
   750  00758C  00                 	db	0
   751  00758D  1E                 	db	30
   752  00758E  3F                 	db	63
   753  00758F  21                 	db	33
   754  007590  71                 	db	113
   755  007591  7F                 	db	127
   756  007592  5E                 	db	94
   757  007593  00                 	db	0
   758  007594  00                 	db	0
   759  007595  41                 	db	65
   760  007596  7F                 	db	127
   761  007597  7F                 	db	127
   762  007598  09                 	db	9
   763  007599  19                 	db	25
   764  00759A  7F                 	db	127
   765  00759B  66                 	db	102
   766  00759C  00                 	db	0
   767  00759D  26                 	db	38
   768  00759E  6F                 	db	111
   769  00759F  4D                 	db	77
   770  0075A0  59                 	db	89
   771  0075A1  73                 	db	115
   772  0075A2  32                 	db	50
   773  0075A3  00                 	db	0
   774  0075A4  00                 	db	0
   775  0075A5  03                 	db	3
   776  0075A6  41                 	db	65
   777  0075A7  7F                 	db	127
   778  0075A8  7F                 	db	127
   779  0075A9  41                 	db	65
   780  0075AA  03                 	db	3
   781  0075AB  00                 	db	0
   782  0075AC  00                 	db	0
   783  0075AD  7F                 	db	127
   784  0075AE  7F                 	db	127
   785  0075AF  40                 	db	64
   786  0075B0  40                 	db	64
   787  0075B1  7F                 	db	127
   788  0075B2  7F                 	db	127
   789  0075B3  00                 	db	0
   790  0075B4  00                 	db	0
   791  0075B5  1F                 	db	31
   792  0075B6  3F                 	db	63
   793  0075B7  60                 	db	96
   794  0075B8  60                 	db	96
   795  0075B9  3F                 	db	63
   796  0075BA  1F                 	db	31
   797  0075BB  00                 	db	0
   798  0075BC  00                 	db	0
   799  0075BD  7F                 	db	127
   800  0075BE  7F                 	db	127
   801  0075BF  30                 	db	48
   802  0075C0  18                 	db	24
   803  0075C1  30                 	db	48
   804  0075C2  7F                 	db	127
   805  0075C3  7F                 	db	127
   806  0075C4  00                 	db	0
   807  0075C5  43                 	db	67
   808  0075C6  67                 	db	103
   809  0075C7  3C                 	db	60
   810  0075C8  18                 	db	24
   811  0075C9  3C                 	db	60
   812  0075CA  67                 	db	103
   813  0075CB  43                 	db	67
   814  0075CC  00                 	db	0
   815  0075CD  07                 	db	7
   816  0075CE  4F                 	db	79
   817  0075CF  78                 	db	120
   818  0075D0  78                 	db	120
   819  0075D1  4F                 	db	79
   820  0075D2  07                 	db	7
   821  0075D3  00                 	db	0
   822  0075D4  00                 	db	0
   823  0075D5  47                 	db	71
   824  0075D6  63                 	db	99
   825  0075D7  71                 	db	113
   826  0075D8  59                 	db	89
   827  0075D9  4D                 	db	77
   828  0075DA  67                 	db	103
   829  0075DB  73                 	db	115
   830  0075DC  00                 	db	0
   831  0075DD  00                 	db	0
   832  0075DE  7F                 	db	127
   833  0075DF  7F                 	db	127
   834  0075E0  41                 	db	65
   835  0075E1  41                 	db	65
   836  0075E2  00                 	db	0
   837  0075E3  00                 	db	0
   838  0075E4  00                 	db	0
   839  0075E5  01                 	db	1
   840  0075E6  03                 	db	3
   841  0075E7  06                 	db	6
   842  0075E8  0C                 	db	12
   843  0075E9  18                 	db	24
   844  0075EA  30                 	db	48
   845  0075EB  60                 	db	96
   846  0075EC  00                 	db	0
   847  0075ED  00                 	db	0
   848  0075EE  41                 	db	65
   849  0075EF  41                 	db	65
   850  0075F0  7F                 	db	127
   851  0075F1  7F                 	db	127
   852  0075F2  00                 	db	0
   853  0075F3  00                 	db	0
   854  0075F4  00                 	db	0
   855  0075F5  08                 	db	8
   856  0075F6  0C                 	db	12
   857  0075F7  06                 	db	6
   858  0075F8  03                 	db	3
   859  0075F9  06                 	db	6
   860  0075FA  0C                 	db	12
   861  0075FB  08                 	db	8
   862  0075FC  00                 	db	0
   863  0075FD  80                 	db	128
   864  0075FE  80                 	db	128
   865  0075FF  80                 	db	128
   866  007600  80                 	db	128
   867  007601  80                 	db	128
   868  007602  80                 	db	128
   869  007603  80                 	db	128
   870  007604  80                 	db	128
   871  007605  00                 	db	0
   872  007606  00                 	db	0
   873  007607  03                 	db	3
   874  007608  07                 	db	7
   875  007609  04                 	db	4
   876  00760A  00                 	db	0
   877  00760B  00                 	db	0
   878  00760C  00                 	db	0
   879  00760D  20                 	db	32
   880  00760E  74                 	db	116
   881  00760F  54                 	db	84
   882  007610  54                 	db	84
   883  007611  3C                 	db	60
   884  007612  78                 	db	120
   885  007613  40                 	db	64
   886  007614  00                 	db	0
   887  007615  41                 	db	65
   888  007616  7F                 	db	127
   889  007617  3F                 	db	63
   890  007618  48                 	db	72
   891  007619  48                 	db	72
   892  00761A  78                 	db	120
   893  00761B  30                 	db	48
   894  00761C  00                 	db	0
   895  00761D  38                 	db	56
   896  00761E  7C                 	db	124
   897  00761F  44                 	db	68
   898  007620  44                 	db	68
   899  007621  6C                 	db	108
   900  007622  28                 	db	40
   901  007623  00                 	db	0
   902  007624  00                 	db	0
   903  007625  30                 	db	48
   904  007626  78                 	db	120
   905  007627  48                 	db	72
   906  007628  49                 	db	73
   907  007629  3F                 	db	63
   908  00762A  7F                 	db	127
   909  00762B  40                 	db	64
   910  00762C  00                 	db	0
   911  00762D  38                 	db	56
   912  00762E  7C                 	db	124
   913  00762F  54                 	db	84
   914  007630  54                 	db	84
   915  007631  5C                 	db	92
   916  007632  18                 	db	24
   917  007633  00                 	db	0
   918  007634  00                 	db	0
   919  007635  48                 	db	72
   920  007636  7E                 	db	126
   921  007637  7F                 	db	127
   922  007638  49                 	db	73
   923  007639  03                 	db	3
   924  00763A  02                 	db	2
   925  00763B  00                 	db	0
   926  00763C  00                 	db	0
   927  00763D  98                 	db	152
   928  00763E  BC                 	db	188
   929  00763F  A4                 	db	164
   930  007640  A4                 	db	164
   931  007641  F8                 	db	248
   932  007642  7C                 	db	124
   933  007643  04                 	db	4
   934  007644  00                 	db	0
   935  007645  41                 	db	65
   936  007646  7F                 	db	127
   937  007647  7F                 	db	127
   938  007648  08                 	db	8
   939  007649  04                 	db	4
   940  00764A  7C                 	db	124
   941  00764B  78                 	db	120
   942  00764C  00                 	db	0
   943  00764D  00                 	db	0
   944  00764E  44                 	db	68
   945  00764F  7D                 	db	125
   946  007650  7D                 	db	125
   947  007651  40                 	db	64
   948  007652  00                 	db	0
   949  007653  00                 	db	0
   950  007654  00                 	db	0
   951  007655  60                 	db	96
   952  007656  E0                 	db	224
   953  007657  80                 	db	128
   954  007658  80                 	db	128
   955  007659  FD                 	db	253
   956  00765A  7D                 	db	125
   957  00765B  00                 	db	0
   958  00765C  00                 	db	0
   959  00765D  41                 	db	65
   960  00765E  7F                 	db	127
   961  00765F  7F                 	db	127
   962  007660  10                 	db	16
   963  007661  38                 	db	56
   964  007662  6C                 	db	108
   965  007663  44                 	db	68
   966  007664  00                 	db	0
   967  007665  00                 	db	0
   968  007666  41                 	db	65
   969  007667  7F                 	db	127
   970  007668  7F                 	db	127
   971  007669  40                 	db	64
   972  00766A  00                 	db	0
   973  00766B  00                 	db	0
   974  00766C  00                 	db	0
   975  00766D  7C                 	db	124
   976  00766E  7C                 	db	124
   977  00766F  18                 	db	24
   978  007670  38                 	db	56
   979  007671  1C                 	db	28
   980  007672  7C                 	db	124
   981  007673  78                 	db	120
   982  007674  00                 	db	0
   983  007675  7C                 	db	124
   984  007676  7C                 	db	124
   985  007677  04                 	db	4
   986  007678  04                 	db	4
   987  007679  7C                 	db	124
   988  00767A  78                 	db	120
   989  00767B  00                 	db	0
   990  00767C  00                 	db	0
   991  00767D  38                 	db	56
   992  00767E  7C                 	db	124
   993  00767F  44                 	db	68
   994  007680  44                 	db	68
   995  007681  7C                 	db	124
   996  007682  38                 	db	56
   997  007683  00                 	db	0
   998  007684  00                 	db	0
   999  007685  84                 	db	132
  1000  007686  FC                 	db	252
  1001  007687  F8                 	db	248
  1002  007688  A4                 	db	164
  1003  007689  24                 	db	36
  1004  00768A  3C                 	db	60
  1005  00768B  18                 	db	24
  1006  00768C  00                 	db	0
  1007  00768D  18                 	db	24
  1008  00768E  3C                 	db	60
  1009  00768F  24                 	db	36
  1010  007690  A4                 	db	164
  1011  007691  F8                 	db	248
  1012  007692  FC                 	db	252
  1013  007693  84                 	db	132
  1014  007694  00                 	db	0
  1015  007695  44                 	db	68
  1016  007696  7C                 	db	124
  1017  007697  78                 	db	120
  1018  007698  4C                 	db	76
  1019  007699  04                 	db	4
  1020  00769A  1C                 	db	28
  1021  00769B  18                 	db	24
  1022  00769C  00                 	db	0
  1023  00769D  48                 	db	72
  1024  00769E  5C                 	db	92
  1025  00769F  54                 	db	84
  1026  0076A0  54                 	db	84
  1027  0076A1  74                 	db	116
  1028  0076A2  24                 	db	36
  1029  0076A3  00                 	db	0
  1030  0076A4  00                 	db	0
  1031  0076A5  00                 	db	0
  1032  0076A6  04                 	db	4
  1033  0076A7  3E                 	db	62
  1034  0076A8  7F                 	db	127
  1035  0076A9  44                 	db	68
  1036  0076AA  24                 	db	36
  1037  0076AB  00                 	db	0
  1038  0076AC  00                 	db	0
  1039  0076AD  3C                 	db	60
  1040  0076AE  7C                 	db	124
  1041  0076AF  40                 	db	64
  1042  0076B0  40                 	db	64
  1043  0076B1  3C                 	db	60
  1044  0076B2  7C                 	db	124
  1045  0076B3  40                 	db	64
  1046  0076B4  00                 	db	0
  1047  0076B5  1C                 	db	28
  1048  0076B6  3C                 	db	60
  1049  0076B7  60                 	db	96
  1050  0076B8  60                 	db	96
  1051  0076B9  3C                 	db	60
  1052  0076BA  1C                 	db	28
  1053  0076BB  00                 	db	0
  1054  0076BC  00                 	db	0
  1055  0076BD  3C                 	db	60
  1056  0076BE  7C                 	db	124
  1057  0076BF  70                 	db	112
  1058  0076C0  38                 	db	56
  1059  0076C1  70                 	db	112
  1060  0076C2  7C                 	db	124
  1061  0076C3  3C                 	db	60
  1062  0076C4  00                 	db	0
  1063  0076C5  44                 	db	68
  1064  0076C6  6C                 	db	108
  1065  0076C7  38                 	db	56
  1066  0076C8  10                 	db	16
  1067  0076C9  38                 	db	56
  1068  0076CA  6C                 	db	108
  1069  0076CB  44                 	db	68
  1070  0076CC  00                 	db	0
  1071  0076CD  9C                 	db	156
  1072  0076CE  BC                 	db	188
  1073  0076CF  A0                 	db	160
  1074  0076D0  A0                 	db	160
  1075  0076D1  FC                 	db	252
  1076  0076D2  7C                 	db	124
  1077  0076D3  00                 	db	0
  1078  0076D4  00                 	db	0
  1079  0076D5  4C                 	db	76
  1080  0076D6  64                 	db	100
  1081  0076D7  74                 	db	116
  1082  0076D8  5C                 	db	92
  1083  0076D9  4C                 	db	76
  1084  0076DA  64                 	db	100
  1085  0076DB  00                 	db	0
  1086  0076DC  00                 	db	0
  1087  0076DD  08                 	db	8
  1088  0076DE  08                 	db	8
  1089  0076DF  3E                 	db	62
  1090  0076E0  77                 	db	119
  1091  0076E1  41                 	db	65
  1092  0076E2  41                 	db	65
  1093  0076E3  00                 	db	0
  1094  0076E4  00                 	db	0
  1095  0076E5  00                 	db	0
  1096  0076E6  00                 	db	0
  1097  0076E7  00                 	db	0
  1098  0076E8  77                 	db	119
  1099  0076E9  77                 	db	119
  1100  0076EA  00                 	db	0
  1101  0076EB  00                 	db	0
  1102  0076EC  00                 	db	0
  1103  0076ED  41                 	db	65
  1104  0076EE  41                 	db	65
  1105  0076EF  77                 	db	119
  1106  0076F0  3E                 	db	62
  1107  0076F1  08                 	db	8
  1108  0076F2  08                 	db	8
  1109  0076F3  00                 	db	0
  1110  0076F4  00                 	db	0
  1111  0076F5  02                 	db	2
  1112  0076F6  03                 	db	3
  1113  0076F7  01                 	db	1
  1114  0076F8  03                 	db	3
  1115  0076F9  02                 	db	2
  1116  0076FA  03                 	db	3
  1117  0076FB  01                 	db	1
  1118  0076FC  00                 	db	0
  1119  0076FD  70                 	db	112
  1120  0076FE  78                 	db	120
  1121  0076FF  4C                 	db	76
  1122  007700  46                 	db	70
  1123  007701  4C                 	db	76
  1124  007702  78                 	db	120
  1125  007703  70                 	db	112
  1126  007704  00                 	db	0
  1127  007705  0E                 	db	14
  1128  007706  9F                 	db	159
  1129  007707  91                 	db	145
  1130  007708  B1                 	db	177
  1131  007709  FB                 	db	251
  1132  00770A  4A                 	db	74
  1133  00770B  00                 	db	0
  1134  00770C  00                 	db	0
  1135  00770D  3A                 	db	58
  1136  00770E  7A                 	db	122
  1137  00770F  40                 	db	64
  1138  007710  40                 	db	64
  1139  007711  7A                 	db	122
  1140  007712  7A                 	db	122
  1141  007713  40                 	db	64
  1142  007714  00                 	db	0
  1143  007715  38                 	db	56
  1144  007716  7C                 	db	124
  1145  007717  54                 	db	84
  1146  007718  55                 	db	85
  1147  007719  5D                 	db	93
  1148  00771A  19                 	db	25
  1149  00771B  00                 	db	0
  1150  00771C  00                 	db	0
  1151  00771D  02                 	db	2
  1152  00771E  23                 	db	35
  1153  00771F  75                 	db	117
  1154  007720  55                 	db	85
  1155  007721  55                 	db	85
  1156  007722  7D                 	db	125
  1157  007723  7B                 	db	123
  1158  007724  42                 	db	66
  1159  007725  21                 	db	33
  1160  007726  75                 	db	117
  1161  007727  54                 	db	84
  1162  007728  54                 	db	84
  1163  007729  7D                 	db	125
  1164  00772A  79                 	db	121
  1165  00772B  40                 	db	64
  1166  00772C  00                 	db	0
  1167  00772D  21                 	db	33
  1168  00772E  75                 	db	117
  1169  00772F  55                 	db	85
  1170  007730  54                 	db	84
  1171  007731  7C                 	db	124
  1172  007732  78                 	db	120
  1173  007733  40                 	db	64
  1174  007734  00                 	db	0
  1175  007735  20                 	db	32
  1176  007736  74                 	db	116
  1177  007737  57                 	db	87
  1178  007738  57                 	db	87
  1179  007739  7C                 	db	124
  1180  00773A  78                 	db	120
  1181  00773B  40                 	db	64
  1182  00773C  00                 	db	0
  1183  00773D  18                 	db	24
  1184  00773E  3C                 	db	60
  1185  00773F  A4                 	db	164
  1186  007740  A4                 	db	164
  1187  007741  E4                 	db	228
  1188  007742  40                 	db	64
  1189  007743  00                 	db	0
  1190  007744  00                 	db	0
  1191  007745  02                 	db	2
  1192  007746  3B                 	db	59
  1193  007747  7D                 	db	125
  1194  007748  55                 	db	85
  1195  007749  55                 	db	85
  1196  00774A  5D                 	db	93
  1197  00774B  1B                 	db	27
  1198  00774C  02                 	db	2
  1199  00774D  39                 	db	57
  1200  00774E  7D                 	db	125
  1201  00774F  54                 	db	84
  1202  007750  54                 	db	84
  1203  007751  5D                 	db	93
  1204  007752  19                 	db	25
  1205  007753  00                 	db	0
  1206  007754  00                 	db	0
  1207  007755  39                 	db	57
  1208  007756  7D                 	db	125
  1209  007757  55                 	db	85
  1210  007758  54                 	db	84
  1211  007759  5C                 	db	92
  1212  00775A  18                 	db	24
  1213  00775B  00                 	db	0
  1214  00775C  00                 	db	0
  1215  00775D  01                 	db	1
  1216  00775E  45                 	db	69
  1217  00775F  7C                 	db	124
  1218  007760  7C                 	db	124
  1219  007761  41                 	db	65
  1220  007762  01                 	db	1
  1221  007763  00                 	db	0
  1222  007764  00                 	db	0
  1223  007765  02                 	db	2
  1224  007766  03                 	db	3
  1225  007767  45                 	db	69
  1226  007768  7D                 	db	125
  1227  007769  7D                 	db	125
  1228  00776A  43                 	db	67
  1229  00776B  02                 	db	2
  1230  00776C  00                 	db	0
  1231  00776D  01                 	db	1
  1232  00776E  45                 	db	69
  1233  00776F  7D                 	db	125
  1234  007770  7C                 	db	124
  1235  007771  40                 	db	64
  1236  007772  00                 	db	0
  1237  007773  00                 	db	0
  1238  007774  00                 	db	0
  1239  007775  79                 	db	121
  1240  007776  7D                 	db	125
  1241  007777  16                 	db	22
  1242  007778  12                 	db	18
  1243  007779  16                 	db	22
  1244  00777A  7D                 	db	125
  1245  00777B  79                 	db	121
  1246  00777C  00                 	db	0
  1247  00777D  70                 	db	112
  1248  00777E  78                 	db	120
  1249  00777F  2B                 	db	43
  1250  007780  2B                 	db	43
  1251  007781  78                 	db	120
  1252  007782  70                 	db	112
  1253  007783  00                 	db	0
  1254  007784  00                 	db	0
  1255  007785  44                 	db	68
  1256  007786  7C                 	db	124
  1257  007787  7C                 	db	124
  1258  007788  55                 	db	85
  1259  007789  55                 	db	85
  1260  00778A  45                 	db	69
  1261  00778B  00                 	db	0
  1262  00778C  00                 	db	0
  1263  00778D  20                 	db	32
  1264  00778E  74                 	db	116
  1265  00778F  54                 	db	84
  1266  007790  54                 	db	84
  1267  007791  7C                 	db	124
  1268  007792  7C                 	db	124
  1269  007793  54                 	db	84
  1270  007794  54                 	db	84
  1271  007795  7C                 	db	124
  1272  007796  7E                 	db	126
  1273  007797  0B                 	db	11
  1274  007798  09                 	db	9
  1275  007799  7F                 	db	127
  1276  00779A  7F                 	db	127
  1277  00779B  49                 	db	73
  1278  00779C  00                 	db	0
  1279  00779D  32                 	db	50
  1280  00779E  7B                 	db	123
  1281  00779F  49                 	db	73
  1282  0077A0  49                 	db	73
  1283  0077A1  7B                 	db	123
  1284  0077A2  32                 	db	50
  1285  0077A3  00                 	db	0
  1286  0077A4  00                 	db	0
  1287  0077A5  32                 	db	50
  1288  0077A6  7A                 	db	122
  1289  0077A7  48                 	db	72
  1290  0077A8  48                 	db	72
  1291  0077A9  7A                 	db	122
  1292  0077AA  32                 	db	50
  1293  0077AB  00                 	db	0
  1294  0077AC  00                 	db	0
  1295  0077AD  32                 	db	50
  1296  0077AE  7A                 	db	122
  1297  0077AF  4A                 	db	74
  1298  0077B0  48                 	db	72
  1299  0077B1  78                 	db	120
  1300  0077B2  30                 	db	48
  1301  0077B3  00                 	db	0
  1302  0077B4  00                 	db	0
  1303  0077B5  3A                 	db	58
  1304  0077B6  7B                 	db	123
  1305  0077B7  41                 	db	65
  1306  0077B8  41                 	db	65
  1307  0077B9  7B                 	db	123
  1308  0077BA  7A                 	db	122
  1309  0077BB  40                 	db	64
  1310  0077BC  00                 	db	0
  1311  0077BD  3A                 	db	58
  1312  0077BE  7A                 	db	122
  1313  0077BF  42                 	db	66
  1314  0077C0  40                 	db	64
  1315  0077C1  78                 	db	120
  1316  0077C2  78                 	db	120
  1317  0077C3  40                 	db	64
  1318  0077C4  00                 	db	0
  1319  0077C5  9A                 	db	154
  1320  0077C6  BA                 	db	186
  1321  0077C7  A0                 	db	160
  1322  0077C8  A0                 	db	160
  1323  0077C9  FA                 	db	250
  1324  0077CA  7A                 	db	122
  1325  0077CB  00                 	db	0
  1326  0077CC  00                 	db	0
  1327  0077CD  01                 	db	1
  1328  0077CE  19                 	db	25
  1329  0077CF  3C                 	db	60
  1330  0077D0  66                 	db	102
  1331  0077D1  66                 	db	102
  1332  0077D2  3C                 	db	60
  1333  0077D3  19                 	db	25
  1334  0077D4  01                 	db	1
  1335  0077D5  3D                 	db	61
  1336  0077D6  7D                 	db	125
  1337  0077D7  40                 	db	64
  1338  0077D8  40                 	db	64
  1339  0077D9  7D                 	db	125
  1340  0077DA  3D                 	db	61
  1341  0077DB  00                 	db	0
  1342  0077DC  00                 	db	0
  1343  0077DD  18                 	db	24
  1344  0077DE  3C                 	db	60
  1345  0077DF  24                 	db	36
  1346  0077E0  E7                 	db	231
  1347  0077E1  E7                 	db	231
  1348  0077E2  24                 	db	36
  1349  0077E3  24                 	db	36
  1350  0077E4  00                 	db	0
  1351  0077E5  68                 	db	104
  1352  0077E6  7E                 	db	126
  1353  0077E7  7F                 	db	127
  1354  0077E8  49                 	db	73
  1355  0077E9  43                 	db	67
  1356  0077EA  66                 	db	102
  1357  0077EB  20                 	db	32
  1358  0077EC  00                 	db	0
  1359  0077ED  2B                 	db	43
  1360  0077EE  2F                 	db	47
  1361  0077EF  FC                 	db	252
  1362  0077F0  FC                 	db	252
  1363  0077F1  2F                 	db	47
  1364  0077F2  2B                 	db	43
  1365  0077F3  00                 	db	0
  1366  0077F4  00                 	db	0
  1367  0077F5  FF                 	db	255
  1368  0077F6  FF                 	db	255
  1369  0077F7  09                 	db	9
  1370  0077F8  09                 	db	9
  1371  0077F9  2F                 	db	47
  1372  0077FA  F6                 	db	246
  1373  0077FB  F8                 	db	248
  1374  0077FC  A0                 	db	160
  1375  0077FD  40                 	db	64
  1376  0077FE  C0                 	db	192
  1377  0077FF  88                 	db	136
  1378  007800  FE                 	db	254
  1379  007801  7F                 	db	127
  1380  007802  09                 	db	9
  1381  007803  03                 	db	3
  1382  007804  02                 	db	2
  1383  007805  20                 	db	32
  1384  007806  74                 	db	116
  1385  007807  54                 	db	84
  1386  007808  55                 	db	85
  1387  007809  7D                 	db	125
  1388  00780A  79                 	db	121
  1389  00780B  40                 	db	64
  1390  00780C  00                 	db	0
  1391  00780D  00                 	db	0
  1392  00780E  44                 	db	68
  1393  00780F  7D                 	db	125
  1394  007810  7D                 	db	125
  1395  007811  41                 	db	65
  1396  007812  00                 	db	0
  1397  007813  00                 	db	0
  1398  007814  00                 	db	0
  1399  007815  30                 	db	48
  1400  007816  78                 	db	120
  1401  007817  48                 	db	72
  1402  007818  4A                 	db	74
  1403  007819  7A                 	db	122
  1404  00781A  32                 	db	50
  1405  00781B  00                 	db	0
  1406  00781C  00                 	db	0
  1407  00781D  38                 	db	56
  1408  00781E  78                 	db	120
  1409  00781F  40                 	db	64
  1410  007820  42                 	db	66
  1411  007821  7A                 	db	122
  1412  007822  7A                 	db	122
  1413  007823  40                 	db	64
  1414  007824  00                 	db	0
  1415  007825  7A                 	db	122
  1416  007826  7A                 	db	122
  1417  007827  0A                 	db	10
  1418  007828  0A                 	db	10
  1419  007829  7A                 	db	122
  1420  00782A  70                 	db	112
  1421  00782B  00                 	db	0
  1422  00782C  00                 	db	0
  1423  00782D  7D                 	db	125
  1424  00782E  7D                 	db	125
  1425  00782F  19                 	db	25
  1426  007830  31                 	db	49
  1427  007831  7D                 	db	125
  1428  007832  7D                 	db	125
  1429  007833  00                 	db	0
  1430  007834  00                 	db	0
  1431  007835  00                 	db	0
  1432  007836  26                 	db	38
  1433  007837  2F                 	db	47
  1434  007838  29                 	db	41
  1435  007839  2F                 	db	47
  1436  00783A  2F                 	db	47
  1437  00783B  28                 	db	40
  1438  00783C  00                 	db	0
  1439  00783D  00                 	db	0
  1440  00783E  26                 	db	38
  1441  00783F  2F                 	db	47
  1442  007840  29                 	db	41
  1443  007841  2F                 	db	47
  1444  007842  26                 	db	38
  1445  007843  00                 	db	0
  1446  007844  00                 	db	0
  1447  007845  30                 	db	48
  1448  007846  78                 	db	120
  1449  007847  4D                 	db	77
  1450  007848  45                 	db	69
  1451  007849  60                 	db	96
  1452  00784A  20                 	db	32
  1453  00784B  00                 	db	0
  1454  00784C  00                 	db	0
  1455  00784D  38                 	db	56
  1456  00784E  38                 	db	56
  1457  00784F  08                 	db	8
  1458  007850  08                 	db	8
  1459  007851  08                 	db	8
  1460  007852  08                 	db	8
  1461  007853  00                 	db	0
  1462  007854  00                 	db	0
  1463  007855  08                 	db	8
  1464  007856  08                 	db	8
  1465  007857  08                 	db	8
  1466  007858  08                 	db	8
  1467  007859  38                 	db	56
  1468  00785A  38                 	db	56
  1469  00785B  00                 	db	0
  1470  00785C  00                 	db	0
  1471  00785D  4F                 	db	79
  1472  00785E  6F                 	db	111
  1473  00785F  30                 	db	48
  1474  007860  18                 	db	24
  1475  007861  CC                 	db	204
  1476  007862  EE                 	db	238
  1477  007863  BB                 	db	187
  1478  007864  91                 	db	145
  1479  007865  4F                 	db	79
  1480  007866  6F                 	db	111
  1481  007867  30                 	db	48
  1482  007868  18                 	db	24
  1483  007869  6C                 	db	108
  1484  00786A  76                 	db	118
  1485  00786B  FB                 	db	251
  1486  00786C  F9                 	db	249
  1487  00786D  00                 	db	0
  1488  00786E  00                 	db	0
  1489  00786F  00                 	db	0
  1490  007870  7B                 	db	123
  1491  007871  7B                 	db	123
  1492  007872  00                 	db	0
  1493  007873  00                 	db	0
  1494  007874  00                 	db	0
  1495  007875  08                 	db	8
  1496  007876  1C                 	db	28
  1497  007877  36                 	db	54
  1498  007878  22                 	db	34
  1499  007879  08                 	db	8
  1500  00787A  1C                 	db	28
  1501  00787B  36                 	db	54
  1502  00787C  22                 	db	34
  1503  00787D  22                 	db	34
  1504  00787E  36                 	db	54
  1505  00787F  1C                 	db	28
  1506  007880  08                 	db	8
  1507  007881  22                 	db	34
  1508  007882  36                 	db	54
  1509  007883  1C                 	db	28
  1510  007884  08                 	db	8
  1511  007885  AA                 	db	170
  1512  007886  00                 	db	0
  1513  007887  55                 	db	85
  1514  007888  00                 	db	0
  1515  007889  AA                 	db	170
  1516  00788A  00                 	db	0
  1517  00788B  55                 	db	85
  1518  00788C  00                 	db	0
  1519  00788D  AA                 	db	170
  1520  00788E  55                 	db	85
  1521  00788F  AA                 	db	170
  1522  007890  55                 	db	85
  1523  007891  AA                 	db	170
  1524  007892  55                 	db	85
  1525  007893  AA                 	db	170
  1526  007894  55                 	db	85
  1527  007895  DD                 	db	221
  1528  007896  FF                 	db	255
  1529  007897  AA                 	db	170
  1530  007898  77                 	db	119
  1531  007899  DD                 	db	221
  1532  00789A  AA                 	db	170
  1533  00789B  FF                 	db	255
  1534  00789C  77                 	db	119
  1535  00789D  00                 	db	0
  1536  00789E  00                 	db	0
  1537  00789F  00                 	db	0
  1538  0078A0  FF                 	db	255
  1539  0078A1  FF                 	db	255
  1540  0078A2  00                 	db	0
  1541  0078A3  00                 	db	0
  1542  0078A4  00                 	db	0
  1543  0078A5  10                 	db	16
  1544  0078A6  10                 	db	16
  1545  0078A7  10                 	db	16
  1546  0078A8  FF                 	db	255
  1547  0078A9  FF                 	db	255
  1548  0078AA  00                 	db	0
  1549  0078AB  00                 	db	0
  1550  0078AC  00                 	db	0
  1551  0078AD  14                 	db	20
  1552  0078AE  14                 	db	20
  1553  0078AF  14                 	db	20
  1554  0078B0  FF                 	db	255
  1555  0078B1  FF                 	db	255
  1556  0078B2  00                 	db	0
  1557  0078B3  00                 	db	0
  1558  0078B4  00                 	db	0
  1559  0078B5  10                 	db	16
  1560  0078B6  10                 	db	16
  1561  0078B7  FF                 	db	255
  1562  0078B8  FF                 	db	255
  1563  0078B9  00                 	db	0
  1564  0078BA  FF                 	db	255
  1565  0078BB  FF                 	db	255
  1566  0078BC  00                 	db	0
  1567  0078BD  10                 	db	16
  1568  0078BE  10                 	db	16
  1569  0078BF  F0                 	db	240
  1570  0078C0  F0                 	db	240
  1571  0078C1  10                 	db	16
  1572  0078C2  F0                 	db	240
  1573  0078C3  F0                 	db	240
  1574  0078C4  00                 	db	0
  1575  0078C5  14                 	db	20
  1576  0078C6  14                 	db	20
  1577  0078C7  14                 	db	20
  1578  0078C8  FC                 	db	252
  1579  0078C9  FC                 	db	252
  1580  0078CA  00                 	db	0
  1581  0078CB  00                 	db	0
  1582  0078CC  00                 	db	0
  1583  0078CD  14                 	db	20
  1584  0078CE  14                 	db	20
  1585  0078CF  F7                 	db	247
  1586  0078D0  F7                 	db	247
  1587  0078D1  00                 	db	0
  1588  0078D2  FF                 	db	255
  1589  0078D3  FF                 	db	255
  1590  0078D4  00                 	db	0
  1591  0078D5  00                 	db	0
  1592  0078D6  00                 	db	0
  1593  0078D7  FF                 	db	255
  1594  0078D8  FF                 	db	255
  1595  0078D9  00                 	db	0
  1596  0078DA  FF                 	db	255
  1597  0078DB  FF                 	db	255
  1598  0078DC  00                 	db	0
  1599  0078DD  14                 	db	20
  1600  0078DE  14                 	db	20
  1601  0078DF  F4                 	db	244
  1602  0078E0  F4                 	db	244
  1603  0078E1  04                 	db	4
  1604  0078E2  FC                 	db	252
  1605  0078E3  FC                 	db	252
  1606  0078E4  00                 	db	0
  1607  0078E5  14                 	db	20
  1608  0078E6  14                 	db	20
  1609  0078E7  17                 	db	23
  1610  0078E8  17                 	db	23
  1611  0078E9  10                 	db	16
  1612  0078EA  1F                 	db	31
  1613  0078EB  1F                 	db	31
  1614  0078EC  00                 	db	0
  1615  0078ED  10                 	db	16
  1616  0078EE  10                 	db	16
  1617  0078EF  1F                 	db	31
  1618  0078F0  1F                 	db	31
  1619  0078F1  10                 	db	16
  1620  0078F2  1F                 	db	31
  1621  0078F3  1F                 	db	31
  1622  0078F4  00                 	db	0
  1623  0078F5  14                 	db	20
  1624  0078F6  14                 	db	20
  1625  0078F7  14                 	db	20
  1626  0078F8  1F                 	db	31
  1627  0078F9  1F                 	db	31
  1628  0078FA  00                 	db	0
  1629  0078FB  00                 	db	0
  1630  0078FC  00                 	db	0
  1631  0078FD  10                 	db	16
  1632  0078FE  10                 	db	16
  1633  0078FF  10                 	db	16
  1634  007900  F0                 	db	240
  1635  007901  F0                 	db	240
  1636  007902  00                 	db	0
  1637  007903  00                 	db	0
  1638  007904  00                 	db	0
  1639  007905  00                 	db	0
  1640  007906  00                 	db	0
  1641  007907  00                 	db	0
  1642  007908  1F                 	db	31
  1643  007909  1F                 	db	31
  1644  00790A  10                 	db	16
  1645  00790B  10                 	db	16
  1646  00790C  10                 	db	16
  1647  00790D  10                 	db	16
  1648  00790E  10                 	db	16
  1649  00790F  10                 	db	16
  1650  007910  1F                 	db	31
  1651  007911  1F                 	db	31
  1652  007912  10                 	db	16
  1653  007913  10                 	db	16
  1654  007914  10                 	db	16
  1655  007915  10                 	db	16
  1656  007916  10                 	db	16
  1657  007917  10                 	db	16
  1658  007918  F0                 	db	240
  1659  007919  F0                 	db	240
  1660  00791A  10                 	db	16
  1661  00791B  10                 	db	16
  1662  00791C  10                 	db	16
  1663  00791D  00                 	db	0
  1664  00791E  00                 	db	0
  1665  00791F  00                 	db	0
  1666  007920  FF                 	db	255
  1667  007921  FF                 	db	255
  1668  007922  10                 	db	16
  1669  007923  10                 	db	16
  1670  007924  10                 	db	16
  1671  007925  10                 	db	16
  1672  007926  10                 	db	16
  1673  007927  10                 	db	16
  1674  007928  10                 	db	16
  1675  007929  10                 	db	16
  1676  00792A  10                 	db	16
  1677  00792B  10                 	db	16
  1678  00792C  10                 	db	16
  1679  00792D  10                 	db	16
  1680  00792E  10                 	db	16
  1681  00792F  10                 	db	16
  1682  007930  FF                 	db	255
  1683  007931  FF                 	db	255
  1684  007932  10                 	db	16
  1685  007933  10                 	db	16
  1686  007934  10                 	db	16
  1687  007935  00                 	db	0
  1688  007936  00                 	db	0
  1689  007937  00                 	db	0
  1690  007938  FF                 	db	255
  1691  007939  FF                 	db	255
  1692  00793A  14                 	db	20
  1693  00793B  14                 	db	20
  1694  00793C  14                 	db	20
  1695  00793D  00                 	db	0
  1696  00793E  00                 	db	0
  1697  00793F  FF                 	db	255
  1698  007940  FF                 	db	255
  1699  007941  00                 	db	0
  1700  007942  FF                 	db	255
  1701  007943  FF                 	db	255
  1702  007944  10                 	db	16
  1703  007945  00                 	db	0
  1704  007946  00                 	db	0
  1705  007947  1F                 	db	31
  1706  007948  1F                 	db	31
  1707  007949  10                 	db	16
  1708  00794A  17                 	db	23
  1709  00794B  17                 	db	23
  1710  00794C  14                 	db	20
  1711  00794D  00                 	db	0
  1712  00794E  00                 	db	0
  1713  00794F  FC                 	db	252
  1714  007950  FC                 	db	252
  1715  007951  04                 	db	4
  1716  007952  F4                 	db	244
  1717  007953  F4                 	db	244
  1718  007954  14                 	db	20
  1719  007955  14                 	db	20
  1720  007956  14                 	db	20
  1721  007957  17                 	db	23
  1722  007958  17                 	db	23
  1723  007959  10                 	db	16
  1724  00795A  17                 	db	23
  1725  00795B  17                 	db	23
  1726  00795C  14                 	db	20
  1727  00795D  14                 	db	20
  1728  00795E  14                 	db	20
  1729  00795F  F4                 	db	244
  1730  007960  F4                 	db	244
  1731  007961  04                 	db	4
  1732  007962  F4                 	db	244
  1733  007963  F4                 	db	244
  1734  007964  14                 	db	20
  1735  007965  00                 	db	0
  1736  007966  00                 	db	0
  1737  007967  FF                 	db	255
  1738  007968  FF                 	db	255
  1739  007969  00                 	db	0
  1740  00796A  F7                 	db	247
  1741  00796B  F7                 	db	247
  1742  00796C  14                 	db	20
  1743  00796D  14                 	db	20
  1744  00796E  14                 	db	20
  1745  00796F  14                 	db	20
  1746  007970  14                 	db	20
  1747  007971  14                 	db	20
  1748  007972  14                 	db	20
  1749  007973  14                 	db	20
  1750  007974  14                 	db	20
  1751  007975  14                 	db	20
  1752  007976  14                 	db	20
  1753  007977  F7                 	db	247
  1754  007978  F7                 	db	247
  1755  007979  00                 	db	0
  1756  00797A  F7                 	db	247
  1757  00797B  F7                 	db	247
  1758  00797C  14                 	db	20
  1759  00797D  14                 	db	20
  1760  00797E  14                 	db	20
  1761  00797F  14                 	db	20
  1762  007980  17                 	db	23
  1763  007981  17                 	db	23
  1764  007982  14                 	db	20
  1765  007983  14                 	db	20
  1766  007984  14                 	db	20
  1767  007985  10                 	db	16
  1768  007986  10                 	db	16
  1769  007987  1F                 	db	31
  1770  007988  1F                 	db	31
  1771  007989  10                 	db	16
  1772  00798A  1F                 	db	31
  1773  00798B  1F                 	db	31
  1774  00798C  10                 	db	16
  1775  00798D  14                 	db	20
  1776  00798E  14                 	db	20
  1777  00798F  14                 	db	20
  1778  007990  F4                 	db	244
  1779  007991  F4                 	db	244
  1780  007992  14                 	db	20
  1781  007993  14                 	db	20
  1782  007994  14                 	db	20
  1783  007995  10                 	db	16
  1784  007996  10                 	db	16
  1785  007997  F0                 	db	240
  1786  007998  F0                 	db	240
  1787  007999  10                 	db	16
  1788  00799A  F0                 	db	240
  1789  00799B  F0                 	db	240
  1790  00799C  10                 	db	16
  1791  00799D  00                 	db	0
  1792  00799E  00                 	db	0
  1793  00799F  1F                 	db	31
  1794  0079A0  1F                 	db	31
  1795  0079A1  10                 	db	16
  1796  0079A2  1F                 	db	31
  1797  0079A3  1F                 	db	31
  1798  0079A4  10                 	db	16
  1799  0079A5  00                 	db	0
  1800  0079A6  00                 	db	0
  1801  0079A7  00                 	db	0
  1802  0079A8  1F                 	db	31
  1803  0079A9  1F                 	db	31
  1804  0079AA  14                 	db	20
  1805  0079AB  14                 	db	20
  1806  0079AC  14                 	db	20
  1807  0079AD  00                 	db	0
  1808  0079AE  00                 	db	0
  1809  0079AF  00                 	db	0
  1810  0079B0  FC                 	db	252
  1811  0079B1  FC                 	db	252
  1812  0079B2  14                 	db	20
  1813  0079B3  14                 	db	20
  1814  0079B4  14                 	db	20
  1815  0079B5  00                 	db	0
  1816  0079B6  00                 	db	0
  1817  0079B7  F0                 	db	240
  1818  0079B8  F0                 	db	240
  1819  0079B9  10                 	db	16
  1820  0079BA  F0                 	db	240
  1821  0079BB  F0                 	db	240
  1822  0079BC  10                 	db	16
  1823  0079BD  10                 	db	16
  1824  0079BE  10                 	db	16
  1825  0079BF  FF                 	db	255
  1826  0079C0  FF                 	db	255
  1827  0079C1  10                 	db	16
  1828  0079C2  FF                 	db	255
  1829  0079C3  FF                 	db	255
  1830  0079C4  10                 	db	16
  1831  0079C5  14                 	db	20
  1832  0079C6  14                 	db	20
  1833  0079C7  14                 	db	20
  1834  0079C8  FF                 	db	255
  1835  0079C9  FF                 	db	255
  1836  0079CA  14                 	db	20
  1837  0079CB  14                 	db	20
  1838  0079CC  14                 	db	20
  1839  0079CD  10                 	db	16
  1840  0079CE  10                 	db	16
  1841  0079CF  10                 	db	16
  1842  0079D0  1F                 	db	31
  1843  0079D1  1F                 	db	31
  1844  0079D2  00                 	db	0
  1845  0079D3  00                 	db	0
  1846  0079D4  00                 	db	0
  1847  0079D5  00                 	db	0
  1848  0079D6  00                 	db	0
  1849  0079D7  00                 	db	0
  1850  0079D8  F0                 	db	240
  1851  0079D9  F0                 	db	240
  1852  0079DA  10                 	db	16
  1853  0079DB  10                 	db	16
  1854  0079DC  10                 	db	16
  1855  0079DD  FF                 	db	255
  1856  0079DE  FF                 	db	255
  1857  0079DF  FF                 	db	255
  1858  0079E0  FF                 	db	255
  1859  0079E1  FF                 	db	255
  1860  0079E2  FF                 	db	255
  1861  0079E3  FF                 	db	255
  1862  0079E4  FF                 	db	255
  1863  0079E5  F0                 	db	240
  1864  0079E6  F0                 	db	240
  1865  0079E7  F0                 	db	240
  1866  0079E8  F0                 	db	240
  1867  0079E9  F0                 	db	240
  1868  0079EA  F0                 	db	240
  1869  0079EB  F0                 	db	240
  1870  0079EC  F0                 	db	240
  1871  0079ED  FF                 	db	255
  1872  0079EE  FF                 	db	255
  1873  0079EF  FF                 	db	255
  1874  0079F0  FF                 	db	255
  1875  0079F1  00                 	db	0
  1876  0079F2  00                 	db	0
  1877  0079F3  00                 	db	0
  1878  0079F4  00                 	db	0
  1879  0079F5  00                 	db	0
  1880  0079F6  00                 	db	0
  1881  0079F7  00                 	db	0
  1882  0079F8  00                 	db	0
  1883  0079F9  FF                 	db	255
  1884  0079FA  FF                 	db	255
  1885  0079FB  FF                 	db	255
  1886  0079FC  FF                 	db	255
  1887  0079FD  0F                 	db	15
  1888  0079FE  0F                 	db	15
  1889  0079FF  0F                 	db	15
  1890  007A00  0F                 	db	15
  1891  007A01  0F                 	db	15
  1892  007A02  0F                 	db	15
  1893  007A03  0F                 	db	15
  1894  007A04  0F                 	db	15
  1895  007A05  38                 	db	56
  1896  007A06  7C                 	db	124
  1897  007A07  44                 	db	68
  1898  007A08  6C                 	db	108
  1899  007A09  38                 	db	56
  1900  007A0A  6C                 	db	108
  1901  007A0B  44                 	db	68
  1902  007A0C  00                 	db	0
  1903  007A0D  FC                 	db	252
  1904  007A0E  FE                 	db	254
  1905  007A0F  2A                 	db	42
  1906  007A10  2A                 	db	42
  1907  007A11  3E                 	db	62
  1908  007A12  14                 	db	20
  1909  007A13  00                 	db	0
  1910  007A14  00                 	db	0
  1911  007A15  7E                 	db	126
  1912  007A16  7E                 	db	126
  1913  007A17  02                 	db	2
  1914  007A18  02                 	db	2
  1915  007A19  06                 	db	6
  1916  007A1A  06                 	db	6
  1917  007A1B  00                 	db	0
  1918  007A1C  00                 	db	0
  1919  007A1D  02                 	db	2
  1920  007A1E  7E                 	db	126
  1921  007A1F  7E                 	db	126
  1922  007A20  02                 	db	2
  1923  007A21  7E                 	db	126
  1924  007A22  7E                 	db	126
  1925  007A23  02                 	db	2
  1926  007A24  00                 	db	0
  1927  007A25  63                 	db	99
  1928  007A26  77                 	db	119
  1929  007A27  5D                 	db	93
  1930  007A28  49                 	db	73
  1931  007A29  63                 	db	99
  1932  007A2A  63                 	db	99
  1933  007A2B  00                 	db	0
  1934  007A2C  00                 	db	0
  1935  007A2D  38                 	db	56
  1936  007A2E  7C                 	db	124
  1937  007A2F  44                 	db	68
  1938  007A30  7C                 	db	124
  1939  007A31  3C                 	db	60
  1940  007A32  04                 	db	4
  1941  007A33  04                 	db	4
  1942  007A34  00                 	db	0
  1943  007A35  80                 	db	128
  1944  007A36  FE                 	db	254
  1945  007A37  7E                 	db	126
  1946  007A38  20                 	db	32
  1947  007A39  20                 	db	32
  1948  007A3A  3E                 	db	62
  1949  007A3B  1E                 	db	30
  1950  007A3C  00                 	db	0
  1951  007A3D  04                 	db	4
  1952  007A3E  06                 	db	6
  1953  007A3F  02                 	db	2
  1954  007A40  7E                 	db	126
  1955  007A41  7C                 	db	124
  1956  007A42  06                 	db	6
  1957  007A43  02                 	db	2
  1958  007A44  00                 	db	0
  1959  007A45  99                 	db	153
  1960  007A46  BD                 	db	189
  1961  007A47  E7                 	db	231
  1962  007A48  E7                 	db	231
  1963  007A49  BD                 	db	189
  1964  007A4A  99                 	db	153
  1965  007A4B  00                 	db	0
  1966  007A4C  00                 	db	0
  1967  007A4D  1C                 	db	28
  1968  007A4E  3E                 	db	62
  1969  007A4F  6B                 	db	107
  1970  007A50  49                 	db	73
  1971  007A51  6B                 	db	107
  1972  007A52  3E                 	db	62
  1973  007A53  1C                 	db	28
  1974  007A54  00                 	db	0
  1975  007A55  4C                 	db	76
  1976  007A56  7E                 	db	126
  1977  007A57  73                 	db	115
  1978  007A58  01                 	db	1
  1979  007A59  73                 	db	115
  1980  007A5A  7E                 	db	126
  1981  007A5B  4C                 	db	76
  1982  007A5C  00                 	db	0
  1983  007A5D  30                 	db	48
  1984  007A5E  78                 	db	120
  1985  007A5F  4A                 	db	74
  1986  007A60  4F                 	db	79
  1987  007A61  7D                 	db	125
  1988  007A62  39                 	db	57
  1989  007A63  00                 	db	0
  1990  007A64  00                 	db	0
  1991  007A65  18                 	db	24
  1992  007A66  3C                 	db	60
  1993  007A67  24                 	db	36
  1994  007A68  3C                 	db	60
  1995  007A69  3C                 	db	60
  1996  007A6A  24                 	db	36
  1997  007A6B  3C                 	db	60
  1998  007A6C  18                 	db	24
  1999  007A6D  98                 	db	152
  2000  007A6E  FC                 	db	252
  2001  007A6F  64                 	db	100
  2002  007A70  3C                 	db	60
  2003  007A71  3E                 	db	62
  2004  007A72  27                 	db	39
  2005  007A73  3D                 	db	61
  2006  007A74  18                 	db	24
  2007  007A75  00                 	db	0
  2008  007A76  00                 	db	0
  2009  007A77  00                 	db	0
  2010  007A78  00                 	db	0
  2011  007A79  00                 	db	0
  2012  007A7A  00                 	db	0
  2013  007A7B  00                 	db	0
  2014  007A7C  00                 	db	0
  2015  007A7D  00                 	db	0
  2016  007A7E  00                 	db	0
  2017  007A7F  00                 	db	0
  2018  007A80  00                 	db	0
  2019  007A81  00                 	db	0
  2020  007A82  00                 	db	0
  2021  007A83  00                 	db	0
  2022  007A84  00                 	db	0
  2023  007A85  00                 	db	0
  2024  007A86  00                 	db	0
  2025  007A87  00                 	db	0
  2026  007A88  00                 	db	0
  2027  007A89  00                 	db	0
  2028  007A8A  00                 	db	0
  2029  007A8B  00                 	db	0
  2030  007A8C  00                 	db	0
  2031  007A8D  00                 	db	0
  2032  007A8E  00                 	db	0
  2033  007A8F  00                 	db	0
  2034  007A90  00                 	db	0
  2035  007A91  00                 	db	0
  2036  007A92  00                 	db	0
  2037  007A93  00                 	db	0
  2038  007A94  00                 	db	0
  2039  007A95  00                 	db	0
  2040  007A96  00                 	db	0
  2041  007A97  00                 	db	0
  2042  007A98  00                 	db	0
  2043  007A99  00                 	db	0
  2044  007A9A  00                 	db	0
  2045  007A9B  00                 	db	0
  2046  007A9C  00                 	db	0
  2047  007A9D  00                 	db	0
  2048  007A9E  00                 	db	0
  2049  007A9F  00                 	db	0
  2050  007AA0  00                 	db	0
  2051  007AA1  00                 	db	0
  2052  007AA2  00                 	db	0
  2053  007AA3  00                 	db	0
  2054  007AA4  00                 	db	0
  2055  007AA5  00                 	db	0
  2056  007AA6  00                 	db	0
  2057  007AA7  00                 	db	0
  2058  007AA8  00                 	db	0
  2059  007AA9  00                 	db	0
  2060  007AAA  00                 	db	0
  2061  007AAB  00                 	db	0
  2062  007AAC  00                 	db	0
  2063  007AAD  00                 	db	0
  2064  007AAE  00                 	db	0
  2065  007AAF  00                 	db	0
  2066  007AB0  00                 	db	0
  2067  007AB1  00                 	db	0
  2068  007AB2  00                 	db	0
  2069  007AB3  00                 	db	0
  2070  007AB4  00                 	db	0
  2071  007AB5  00                 	db	0
  2072  007AB6  00                 	db	0
  2073  007AB7  00                 	db	0
  2074  007AB8  00                 	db	0
  2075  007AB9  00                 	db	0
  2076  007ABA  00                 	db	0
  2077  007ABB  00                 	db	0
  2078  007ABC  00                 	db	0
  2079  007ABD  00                 	db	0
  2080  007ABE  00                 	db	0
  2081  007ABF  00                 	db	0
  2082  007AC0  00                 	db	0
  2083  007AC1  00                 	db	0
  2084  007AC2  00                 	db	0
  2085  007AC3  00                 	db	0
  2086  007AC4  00                 	db	0
  2087  007AC5  00                 	db	0
  2088  007AC6  00                 	db	0
  2089  007AC7  00                 	db	0
  2090  007AC8  00                 	db	0
  2091  007AC9  00                 	db	0
  2092  007ACA  00                 	db	0
  2093  007ACB  00                 	db	0
  2094  007ACC  00                 	db	0
  2095  007ACD  00                 	db	0
  2096  007ACE  00                 	db	0
  2097  007ACF  00                 	db	0
  2098  007AD0  00                 	db	0
  2099  007AD1  00                 	db	0
  2100  007AD2  00                 	db	0
  2101  007AD3  00                 	db	0
  2102  007AD4  00                 	db	0
  2103  007AD5  00                 	db	0
  2104  007AD6  00                 	db	0
  2105  007AD7  00                 	db	0
  2106  007AD8  00                 	db	0
  2107  007AD9  00                 	db	0
  2108  007ADA  00                 	db	0
  2109  007ADB  00                 	db	0
  2110  007ADC  00                 	db	0
  2111  007ADD  00                 	db	0
  2112  007ADE  00                 	db	0
  2113  007ADF  00                 	db	0
  2114  007AE0  00                 	db	0
  2115  007AE1  00                 	db	0
  2116  007AE2  00                 	db	0
  2117  007AE3  00                 	db	0
  2118  007AE4  00                 	db	0
  2119  007AE5  00                 	db	0
  2120  007AE6  00                 	db	0
  2121  007AE7  00                 	db	0
  2122  007AE8  00                 	db	0
  2123  007AE9  00                 	db	0
  2124  007AEA  00                 	db	0
  2125  007AEB  00                 	db	0
  2126  007AEC  00                 	db	0
  2127  007AED  00                 	db	0
  2128  007AEE  00                 	db	0
  2129  007AEF  00                 	db	0
  2130  007AF0  00                 	db	0
  2131  007AF1  00                 	db	0
  2132  007AF2  00                 	db	0
  2133  007AF3  00                 	db	0
  2134  007AF4  00                 	db	0
  2135  007AF5  00                 	db	0
  2136  007AF6  00                 	db	0
  2137  007AF7  00                 	db	0
  2138  007AF8  00                 	db	0
  2139  007AF9  00                 	db	0
  2140  007AFA  00                 	db	0
  2141  007AFB  00                 	db	0
  2142  007AFC  00                 	db	0
  2143  007AFD  00                 	db	0
  2144  007AFE  00                 	db	0
  2145  007AFF  00                 	db	0
  2146  007B00  00                 	db	0
  2147  007B01  00                 	db	0
  2148  007B02  00                 	db	0
  2149  007B03  00                 	db	0
  2150  007B04  00                 	db	0
  2151  007B05                     __end_of_Font8x8:
  2152                           	opt stack 0
  2153  007B05                     _accueil:
  2154                           	opt stack 0
  2155  007B05  FF                 	db	255
  2156  007B06  FF                 	db	255
  2157  007B07  FF                 	db	255
  2158  007B08  FF                 	db	255
  2159  007B09  FF                 	db	255
  2160  007B0A  FF                 	db	255
  2161  007B0B  FF                 	db	255
  2162  007B0C  FF                 	db	255
  2163  007B0D  FF                 	db	255
  2164  007B0E  FF                 	db	255
  2165  007B0F  FF                 	db	255
  2166  007B10  FF                 	db	255
  2167  007B11  FF                 	db	255
  2168  007B12  FF                 	db	255
  2169  007B13  FF                 	db	255
  2170  007B14  FF                 	db	255
  2171  007B15  FF                 	db	255
  2172  007B16  FF                 	db	255
  2173  007B17  FF                 	db	255
  2174  007B18  FF                 	db	255
  2175  007B19  FF                 	db	255
  2176  007B1A  FF                 	db	255
  2177  007B1B  FF                 	db	255
  2178  007B1C  FF                 	db	255
  2179  007B1D  FF                 	db	255
  2180  007B1E  FF                 	db	255
  2181  007B1F  FF                 	db	255
  2182  007B20  FF                 	db	255
  2183  007B21  FF                 	db	255
  2184  007B22  FF                 	db	255
  2185  007B23  FF                 	db	255
  2186  007B24  FF                 	db	255
  2187  007B25  FF                 	db	255
  2188  007B26  FF                 	db	255
  2189  007B27  FF                 	db	255
  2190  007B28  FF                 	db	255
  2191  007B29  FF                 	db	255
  2192  007B2A  FF                 	db	255
  2193  007B2B  FF                 	db	255
  2194  007B2C  FF                 	db	255
  2195  007B2D  FF                 	db	255
  2196  007B2E  FF                 	db	255
  2197  007B2F  FF                 	db	255
  2198  007B30  FF                 	db	255
  2199  007B31  FF                 	db	255
  2200  007B32  FF                 	db	255
  2201  007B33  FF                 	db	255
  2202  007B34  FF                 	db	255
  2203  007B35  FF                 	db	255
  2204  007B36  FF                 	db	255
  2205  007B37  FF                 	db	255
  2206  007B38  FF                 	db	255
  2207  007B39  FF                 	db	255
  2208  007B3A  FF                 	db	255
  2209  007B3B  FF                 	db	255
  2210  007B3C  FF                 	db	255
  2211  007B3D  FF                 	db	255
  2212  007B3E  FF                 	db	255
  2213  007B3F  FF                 	db	255
  2214  007B40  FF                 	db	255
  2215  007B41  FF                 	db	255
  2216  007B42  FF                 	db	255
  2217  007B43  FF                 	db	255
  2218  007B44  FF                 	db	255
  2219  007B45  FF                 	db	255
  2220  007B46  FF                 	db	255
  2221  007B47  FF                 	db	255
  2222  007B48  FF                 	db	255
  2223  007B49  FF                 	db	255
  2224  007B4A  FF                 	db	255
  2225  007B4B  FF                 	db	255
  2226  007B4C  FF                 	db	255
  2227  007B4D  FF                 	db	255
  2228  007B4E  FF                 	db	255
  2229  007B4F  FF                 	db	255
  2230  007B50  FF                 	db	255
  2231  007B51  FF                 	db	255
  2232  007B52  FF                 	db	255
  2233  007B53  FF                 	db	255
  2234  007B54  FF                 	db	255
  2235  007B55  FF                 	db	255
  2236  007B56  FF                 	db	255
  2237  007B57  FF                 	db	255
  2238  007B58  FF                 	db	255
  2239  007B59  FF                 	db	255
  2240  007B5A  FF                 	db	255
  2241  007B5B  FF                 	db	255
  2242  007B5C  FF                 	db	255
  2243  007B5D  FF                 	db	255
  2244  007B5E  FF                 	db	255
  2245  007B5F  FF                 	db	255
  2246  007B60  FF                 	db	255
  2247  007B61  FF                 	db	255
  2248  007B62  FF                 	db	255
  2249  007B63  FF                 	db	255
  2250  007B64  FF                 	db	255
  2251  007B65  FF                 	db	255
  2252  007B66  FF                 	db	255
  2253  007B67  FF                 	db	255
  2254  007B68  FF                 	db	255
  2255  007B69  FF                 	db	255
  2256  007B6A  FF                 	db	255
  2257  007B6B  FF                 	db	255
  2258  007B6C  FF                 	db	255
  2259  007B6D  FF                 	db	255
  2260  007B6E  FF                 	db	255
  2261  007B6F  FF                 	db	255
  2262  007B70  FF                 	db	255
  2263  007B71  FF                 	db	255
  2264  007B72  FF                 	db	255
  2265  007B73  FF                 	db	255
  2266  007B74  FF                 	db	255
  2267  007B75  FF                 	db	255
  2268  007B76  FF                 	db	255
  2269  007B77  FF                 	db	255
  2270  007B78  FF                 	db	255
  2271  007B79  FF                 	db	255
  2272  007B7A  FF                 	db	255
  2273  007B7B  FF                 	db	255
  2274  007B7C  FF                 	db	255
  2275  007B7D  FF                 	db	255
  2276  007B7E  FF                 	db	255
  2277  007B7F  FF                 	db	255
  2278  007B80  FF                 	db	255
  2279  007B81  FF                 	db	255
  2280  007B82  FF                 	db	255
  2281  007B83  FF                 	db	255
  2282  007B84  FF                 	db	255
  2283  007B85  FF                 	db	255
  2284  007B86  FF                 	db	255
  2285  007B87  FF                 	db	255
  2286  007B88  FF                 	db	255
  2287  007B89  FF                 	db	255
  2288  007B8A  FF                 	db	255
  2289  007B8B  FF                 	db	255
  2290  007B8C  FF                 	db	255
  2291  007B8D  FF                 	db	255
  2292  007B8E  FF                 	db	255
  2293  007B8F  FF                 	db	255
  2294  007B90  FF                 	db	255
  2295  007B91  FF                 	db	255
  2296  007B92  FF                 	db	255
  2297  007B93  FF                 	db	255
  2298  007B94  FF                 	db	255
  2299  007B95  FF                 	db	255
  2300  007B96  FF                 	db	255
  2301  007B97  FF                 	db	255
  2302  007B98  FF                 	db	255
  2303  007B99  FF                 	db	255
  2304  007B9A  FF                 	db	255
  2305  007B9B  FF                 	db	255
  2306  007B9C  FF                 	db	255
  2307  007B9D  FF                 	db	255
  2308  007B9E  FF                 	db	255
  2309  007B9F  FF                 	db	255
  2310  007BA0  FF                 	db	255
  2311  007BA1  FF                 	db	255
  2312  007BA2  07                 	db	7
  2313  007BA3  FB                 	db	251
  2314  007BA4  0B                 	db	11
  2315  007BA5  0B                 	db	11
  2316  007BA6  0B                 	db	11
  2317  007BA7  0B                 	db	11
  2318  007BA8  0B                 	db	11
  2319  007BA9  0B                 	db	11
  2320  007BAA  0B                 	db	11
  2321  007BAB  0B                 	db	11
  2322  007BAC  0B                 	db	11
  2323  007BAD  0B                 	db	11
  2324  007BAE  0B                 	db	11
  2325  007BAF  0B                 	db	11
  2326  007BB0  0B                 	db	11
  2327  007BB1  0B                 	db	11
  2328  007BB2  0B                 	db	11
  2329  007BB3  0B                 	db	11
  2330  007BB4  0B                 	db	11
  2331  007BB5  0B                 	db	11
  2332  007BB6  0B                 	db	11
  2333  007BB7  0B                 	db	11
  2334  007BB8  0B                 	db	11
  2335  007BB9  8B                 	db	139
  2336  007BBA  E3                 	db	227
  2337  007BBB  FB                 	db	251
  2338  007BBC  0B                 	db	11
  2339  007BBD  0B                 	db	11
  2340  007BBE  0B                 	db	11
  2341  007BBF  0B                 	db	11
  2342  007BC0  0B                 	db	11
  2343  007BC1  0B                 	db	11
  2344  007BC2  0B                 	db	11
  2345  007BC3  0B                 	db	11
  2346  007BC4  0B                 	db	11
  2347  007BC5  0B                 	db	11
  2348  007BC6  0B                 	db	11
  2349  007BC7  FB                 	db	251
  2350  007BC8  0B                 	db	11
  2351  007BC9  0B                 	db	11
  2352  007BCA  0B                 	db	11
  2353  007BCB  0B                 	db	11
  2354  007BCC  0B                 	db	11
  2355  007BCD  8B                 	db	139
  2356  007BCE  8B                 	db	139
  2357  007BCF  0B                 	db	11
  2358  007BD0  0B                 	db	11
  2359  007BD1  0B                 	db	11
  2360  007BD2  CB                 	db	203
  2361  007BD3  E3                 	db	227
  2362  007BD4  FB                 	db	251
  2363  007BD5  FB                 	db	251
  2364  007BD6  03                 	db	3
  2365  007BD7  03                 	db	3
  2366  007BD8  03                 	db	3
  2367  007BD9  03                 	db	3
  2368  007BDA  0B                 	db	11
  2369  007BDB  0B                 	db	11
  2370  007BDC  03                 	db	3
  2371  007BDD  03                 	db	3
  2372  007BDE  03                 	db	3
  2373  007BDF  03                 	db	3
  2374  007BE0  83                 	db	131
  2375  007BE1  83                 	db	131
  2376  007BE2  83                 	db	131
  2377  007BE3  83                 	db	131
  2378  007BE4  03                 	db	3
  2379  007BE5  C3                 	db	195
  2380  007BE6  FB                 	db	251
  2381  007BE7  07                 	db	7
  2382  007BE8  FF                 	db	255
  2383  007BE9  FF                 	db	255
  2384  007BEA  8F                 	db	143
  2385  007BEB  77                 	db	119
  2386  007BEC  0F                 	db	15
  2387  007BED  DB                 	db	219
  2388  007BEE  8B                 	db	139
  2389  007BEF  77                 	db	119
  2390  007BF0  0F                 	db	15
  2391  007BF1  FF                 	db	255
  2392  007BF2  FF                 	db	255
  2393  007BF3  FF                 	db	255
  2394  007BF4  FF                 	db	255
  2395  007BF5  FF                 	db	255
  2396  007BF6  FF                 	db	255
  2397  007BF7  FF                 	db	255
  2398  007BF8  FF                 	db	255
  2399  007BF9  FF                 	db	255
  2400  007BFA  FF                 	db	255
  2401  007BFB  FF                 	db	255
  2402  007BFC  FF                 	db	255
  2403  007BFD  FF                 	db	255
  2404  007BFE  FF                 	db	255
  2405  007BFF  FF                 	db	255
  2406  007C00  FF                 	db	255
  2407  007C01  FF                 	db	255
  2408  007C02  FF                 	db	255
  2409  007C03  FF                 	db	255
  2410  007C04  FF                 	db	255
  2411  007C05  FF                 	db	255
  2412  007C06  FF                 	db	255
  2413  007C07  FF                 	db	255
  2414  007C08  FF                 	db	255
  2415  007C09  FF                 	db	255
  2416  007C0A  FF                 	db	255
  2417  007C0B  FF                 	db	255
  2418  007C0C  FF                 	db	255
  2419  007C0D  FF                 	db	255
  2420  007C0E  FF                 	db	255
  2421  007C0F  FF                 	db	255
  2422  007C10  FF                 	db	255
  2423  007C11  FF                 	db	255
  2424  007C12  FF                 	db	255
  2425  007C13  FF                 	db	255
  2426  007C14  FF                 	db	255
  2427  007C15  FF                 	db	255
  2428  007C16  FF                 	db	255
  2429  007C17  FF                 	db	255
  2430  007C18  FF                 	db	255
  2431  007C19  FF                 	db	255
  2432  007C1A  FF                 	db	255
  2433  007C1B  FF                 	db	255
  2434  007C1C  FF                 	db	255
  2435  007C1D  FF                 	db	255
  2436  007C1E  FF                 	db	255
  2437  007C1F  FF                 	db	255
  2438  007C20  FF                 	db	255
  2439  007C21  FF                 	db	255
  2440  007C22  00                 	db	0
  2441  007C23  FF                 	db	255
  2442  007C24  FF                 	db	255
  2443  007C25  FF                 	db	255
  2444  007C26  FF                 	db	255
  2445  007C27  30                 	db	48
  2446  007C28  00                 	db	0
  2447  007C29  00                 	db	0
  2448  007C2A  00                 	db	0
  2449  007C2B  00                 	db	0
  2450  007C2C  FF                 	db	255
  2451  007C2D  FF                 	db	255
  2452  007C2E  FF                 	db	255
  2453  007C2F  FF                 	db	255
  2454  007C30  00                 	db	0
  2455  007C31  00                 	db	0
  2456  007C32  00                 	db	0
  2457  007C33  00                 	db	0
  2458  007C34  00                 	db	0
  2459  007C35  E3                 	db	227
  2460  007C36  E3                 	db	227
  2461  007C37  E3                 	db	227
  2462  007C38  FB                 	db	251
  2463  007C39  FF                 	db	255
  2464  007C3A  FF                 	db	255
  2465  007C3B  FF                 	db	255
  2466  007C3C  FF                 	db	255
  2467  007C3D  FF                 	db	255
  2468  007C3E  FF                 	db	255
  2469  007C3F  00                 	db	0
  2470  007C40  00                 	db	0
  2471  007C41  00                 	db	0
  2472  007C42  00                 	db	0
  2473  007C43  00                 	db	0
  2474  007C44  FF                 	db	255
  2475  007C45  FF                 	db	255
  2476  007C46  FF                 	db	255
  2477  007C47  FF                 	db	255
  2478  007C48  00                 	db	0
  2479  007C49  00                 	db	0
  2480  007C4A  00                 	db	0
  2481  007C4B  00                 	db	0
  2482  007C4C  00                 	db	0
  2483  007C4D  F1                 	db	241
  2484  007C4E  E0                 	db	224
  2485  007C4F  80                 	db	128
  2486  007C50  02                 	db	2
  2487  007C51  03                 	db	3
  2488  007C52  07                 	db	7
  2489  007C53  0F                 	db	15
  2490  007C54  3F                 	db	63
  2491  007C55  FF                 	db	255
  2492  007C56  01                 	db	1
  2493  007C57  01                 	db	1
  2494  007C58  01                 	db	1
  2495  007C59  01                 	db	1
  2496  007C5A  01                 	db	1
  2497  007C5B  FF                 	db	255
  2498  007C5C  FC                 	db	252
  2499  007C5D  F0                 	db	240
  2500  007C5E  C0                 	db	192
  2501  007C5F  00                 	db	0
  2502  007C60  00                 	db	0
  2503  007C61  03                 	db	3
  2504  007C62  0F                 	db	15
  2505  007C63  3F                 	db	63
  2506  007C64  7F                 	db	127
  2507  007C65  FF                 	db	255
  2508  007C66  FF                 	db	255
  2509  007C67  00                 	db	0
  2510  007C68  FF                 	db	255
  2511  007C69  FF                 	db	255
  2512  007C6A  FF                 	db	255
  2513  007C6B  FF                 	db	255
  2514  007C6C  FE                 	db	254
  2515  007C6D  FE                 	db	254
  2516  007C6E  FE                 	db	254
  2517  007C6F  FE                 	db	254
  2518  007C70  FF                 	db	255
  2519  007C71  FF                 	db	255
  2520  007C72  FF                 	db	255
  2521  007C73  FF                 	db	255
  2522  007C74  FF                 	db	255
  2523  007C75  FF                 	db	255
  2524  007C76  FF                 	db	255
  2525  007C77  FF                 	db	255
  2526  007C78  FF                 	db	255
  2527  007C79  FF                 	db	255
  2528  007C7A  FF                 	db	255
  2529  007C7B  FF                 	db	255
  2530  007C7C  FF                 	db	255
  2531  007C7D  FF                 	db	255
  2532  007C7E  FF                 	db	255
  2533  007C7F  FF                 	db	255
  2534  007C80  FF                 	db	255
  2535  007C81  FF                 	db	255
  2536  007C82  FF                 	db	255
  2537  007C83  FF                 	db	255
  2538  007C84  FF                 	db	255
  2539  007C85  FF                 	db	255
  2540  007C86  FF                 	db	255
  2541  007C87  FF                 	db	255
  2542  007C88  FF                 	db	255
  2543  007C89  FF                 	db	255
  2544  007C8A  FF                 	db	255
  2545  007C8B  FF                 	db	255
  2546  007C8C  FF                 	db	255
  2547  007C8D  FF                 	db	255
  2548  007C8E  FF                 	db	255
  2549  007C8F  FF                 	db	255
  2550  007C90  FF                 	db	255
  2551  007C91  FF                 	db	255
  2552  007C92  FF                 	db	255
  2553  007C93  FF                 	db	255
  2554  007C94  FF                 	db	255
  2555  007C95  FF                 	db	255
  2556  007C96  FF                 	db	255
  2557  007C97  FF                 	db	255
  2558  007C98  FF                 	db	255
  2559  007C99  FF                 	db	255
  2560  007C9A  FF                 	db	255
  2561  007C9B  FF                 	db	255
  2562  007C9C  FF                 	db	255
  2563  007C9D  FF                 	db	255
  2564  007C9E  FF                 	db	255
  2565  007C9F  FF                 	db	255
  2566  007CA0  FF                 	db	255
  2567  007CA1  FF                 	db	255
  2568  007CA2  00                 	db	0
  2569  007CA3  FF                 	db	255
  2570  007CA4  FF                 	db	255
  2571  007CA5  FF                 	db	255
  2572  007CA6  FF                 	db	255
  2573  007CA7  00                 	db	0
  2574  007CA8  00                 	db	0
  2575  007CA9  00                 	db	0
  2576  007CAA  00                 	db	0
  2577  007CAB  00                 	db	0
  2578  007CAC  FF                 	db	255
  2579  007CAD  FF                 	db	255
  2580  007CAE  FF                 	db	255
  2581  007CAF  FF                 	db	255
  2582  007CB0  00                 	db	0
  2583  007CB1  00                 	db	0
  2584  007CB2  00                 	db	0
  2585  007CB3  00                 	db	0
  2586  007CB4  00                 	db	0
  2587  007CB5  0F                 	db	15
  2588  007CB6  0F                 	db	15
  2589  007CB7  0F                 	db	15
  2590  007CB8  0F                 	db	15
  2591  007CB9  0F                 	db	15
  2592  007CBA  0F                 	db	15
  2593  007CBB  0F                 	db	15
  2594  007CBC  1F                 	db	31
  2595  007CBD  7F                 	db	127
  2596  007CBE  FF                 	db	255
  2597  007CBF  00                 	db	0
  2598  007CC0  00                 	db	0
  2599  007CC1  00                 	db	0
  2600  007CC2  00                 	db	0
  2601  007CC3  00                 	db	0
  2602  007CC4  FF                 	db	255
  2603  007CC5  FF                 	db	255
  2604  007CC6  FF                 	db	255
  2605  007CC7  FF                 	db	255
  2606  007CC8  00                 	db	0
  2607  007CC9  00                 	db	0
  2608  007CCA  00                 	db	0
  2609  007CCB  00                 	db	0
  2610  007CCC  00                 	db	0
  2611  007CCD  FF                 	db	255
  2612  007CCE  FF                 	db	255
  2613  007CCF  FF                 	db	255
  2614  007CD0  FE                 	db	254
  2615  007CD1  F8                 	db	248
  2616  007CD2  E0                 	db	224
  2617  007CD3  80                 	db	128
  2618  007CD4  00                 	db	0
  2619  007CD5  00                 	db	0
  2620  007CD6  02                 	db	2
  2621  007CD7  08                 	db	8
  2622  007CD8  20                 	db	32
  2623  007CD9  80                 	db	128
  2624  007CDA  00                 	db	0
  2625  007CDB  0F                 	db	15
  2626  007CDC  0F                 	db	15
  2627  007CDD  0F                 	db	15
  2628  007CDE  0F                 	db	15
  2629  007CDF  0F                 	db	15
  2630  007CE0  0C                 	db	12
  2631  007CE1  00                 	db	0
  2632  007CE2  00                 	db	0
  2633  007CE3  00                 	db	0
  2634  007CE4  00                 	db	0
  2635  007CE5  01                 	db	1
  2636  007CE6  FF                 	db	255
  2637  007CE7  00                 	db	0
  2638  007CE8  FF                 	db	255
  2639  007CE9  BF                 	db	191
  2640  007CEA  FF                 	db	255
  2641  007CEB  FF                 	db	255
  2642  007CEC  FF                 	db	255
  2643  007CED  FF                 	db	255
  2644  007CEE  FF                 	db	255
  2645  007CEF  FF                 	db	255
  2646  007CF0  FF                 	db	255
  2647  007CF1  FF                 	db	255
  2648  007CF2  FF                 	db	255
  2649  007CF3  FF                 	db	255
  2650  007CF4  FF                 	db	255
  2651  007CF5  FF                 	db	255
  2652  007CF6  FF                 	db	255
  2653  007CF7  FF                 	db	255
  2654  007CF8  FF                 	db	255
  2655  007CF9  FF                 	db	255
  2656  007CFA  FF                 	db	255
  2657  007CFB  FF                 	db	255
  2658  007CFC  FF                 	db	255
  2659  007CFD  FF                 	db	255
  2660  007CFE  FF                 	db	255
  2661  007CFF  FF                 	db	255
  2662  007D00  FF                 	db	255
  2663  007D01  FF                 	db	255
  2664  007D02  FF                 	db	255
  2665  007D03  FF                 	db	255
  2666  007D04  FF                 	db	255
  2667  007D05  0F                 	db	15
  2668  007D06  09                 	db	9
  2669  007D07  0B                 	db	11
  2670  007D08  0F                 	db	15
  2671  007D09  07                 	db	7
  2672  007D0A  07                 	db	7
  2673  007D0B  17                 	db	23
  2674  007D0C  17                 	db	23
  2675  007D0D  17                 	db	23
  2676  007D0E  07                 	db	7
  2677  007D0F  07                 	db	7
  2678  007D10  07                 	db	7
  2679  007D11  27                 	db	39
  2680  007D12  27                 	db	39
  2681  007D13  07                 	db	7
  2682  007D14  07                 	db	7
  2683  007D15  07                 	db	7
  2684  007D16  07                 	db	7
  2685  007D17  07                 	db	7
  2686  007D18  07                 	db	7
  2687  007D19  07                 	db	7
  2688  007D1A  07                 	db	7
  2689  007D1B  07                 	db	7
  2690  007D1C  07                 	db	7
  2691  007D1D  F7                 	db	247
  2692  007D1E  83                 	db	131
  2693  007D1F  C3                 	db	195
  2694  007D20  D0                 	db	208
  2695  007D21  D3                 	db	211
  2696  007D22  F6                 	db	246
  2697  007D23  1D                 	db	29
  2698  007D24  1D                 	db	29
  2699  007D25  1D                 	db	29
  2700  007D26  1D                 	db	29
  2701  007D27  1D                 	db	29
  2702  007D28  1C                 	db	28
  2703  007D29  1C                 	db	28
  2704  007D2A  1C                 	db	28
  2705  007D2B  1C                 	db	28
  2706  007D2C  1D                 	db	29
  2707  007D2D  1D                 	db	29
  2708  007D2E  1D                 	db	29
  2709  007D2F  1D                 	db	29
  2710  007D30  1D                 	db	29
  2711  007D31  1C                 	db	28
  2712  007D32  1C                 	db	28
  2713  007D33  1C                 	db	28
  2714  007D34  1C                 	db	28
  2715  007D35  1C                 	db	28
  2716  007D36  1C                 	db	28
  2717  007D37  FC                 	db	252
  2718  007D38  FC                 	db	252
  2719  007D39  02                 	db	2
  2720  007D3A  FE                 	db	254
  2721  007D3B  FE                 	db	254
  2722  007D3C  FE                 	db	254
  2723  007D3D  FE                 	db	254
  2724  007D3E  FF                 	db	255
  2725  007D3F  FE                 	db	254
  2726  007D40  FE                 	db	254
  2727  007D41  FE                 	db	254
  2728  007D42  FE                 	db	254
  2729  007D43  FE                 	db	254
  2730  007D44  FF                 	db	255
  2731  007D45  FF                 	db	255
  2732  007D46  FF                 	db	255
  2733  007D47  FF                 	db	255
  2734  007D48  FE                 	db	254
  2735  007D49  FE                 	db	254
  2736  007D4A  FE                 	db	254
  2737  007D4B  FE                 	db	254
  2738  007D4C  FE                 	db	254
  2739  007D4D  FF                 	db	255
  2740  007D4E  FF                 	db	255
  2741  007D4F  FF                 	db	255
  2742  007D50  FF                 	db	255
  2743  007D51  01                 	db	1
  2744  007D52  FD                 	db	253
  2745  007D53  1D                 	db	29
  2746  007D54  1D                 	db	29
  2747  007D55  1C                 	db	28
  2748  007D56  1C                 	db	28
  2749  007D57  1C                 	db	28
  2750  007D58  1C                 	db	28
  2751  007D59  1C                 	db	28
  2752  007D5A  1D                 	db	29
  2753  007D5B  1D                 	db	29
  2754  007D5C  1C                 	db	28
  2755  007D5D  1C                 	db	28
  2756  007D5E  1C                 	db	28
  2757  007D5F  1C                 	db	28
  2758  007D60  1C                 	db	28
  2759  007D61  1C                 	db	28
  2760  007D62  1C                 	db	28
  2761  007D63  1C                 	db	28
  2762  007D64  1C                 	db	28
  2763  007D65  1C                 	db	28
  2764  007D66  0D                 	db	13
  2765  007D67  04                 	db	4
  2766  007D68  03                 	db	3
  2767  007D69  00                 	db	0
  2768  007D6A  00                 	db	0
  2769  007D6B  00                 	db	0
  2770  007D6C  00                 	db	0
  2771  007D6D  00                 	db	0
  2772  007D6E  00                 	db	0
  2773  007D6F  00                 	db	0
  2774  007D70  00                 	db	0
  2775  007D71  00                 	db	0
  2776  007D72  00                 	db	0
  2777  007D73  01                 	db	1
  2778  007D74  01                 	db	1
  2779  007D75  01                 	db	1
  2780  007D76  C1                 	db	193
  2781  007D77  C1                 	db	193
  2782  007D78  C1                 	db	193
  2783  007D79  C1                 	db	193
  2784  007D7A  D1                 	db	209
  2785  007D7B  E1                 	db	225
  2786  007D7C  03                 	db	3
  2787  007D7D  03                 	db	3
  2788  007D7E  03                 	db	3
  2789  007D7F  03                 	db	3
  2790  007D80  83                 	db	131
  2791  007D81  03                 	db	3
  2792  007D82  05                 	db	5
  2793  007D83  07                 	db	7
  2794  007D84  07                 	db	7
  2795  007D85  3B                 	db	59
  2796  007D86  21                 	db	33
  2797  007D87  21                 	db	33
  2798  007D88  21                 	db	33
  2799  007D89  BA                 	db	186
  2800  007D8A  30                 	db	48
  2801  007D8B  21                 	db	33
  2802  007D8C  21                 	db	33
  2803  007D8D  21                 	db	33
  2804  007D8E  BB                 	db	187
  2805  007D8F  FC                 	db	252
  2806  007D90  E0                 	db	224
  2807  007D91  E0                 	db	224
  2808  007D92  E0                 	db	224
  2809  007D93  E0                 	db	224
  2810  007D94  E0                 	db	224
  2811  007D95  E0                 	db	224
  2812  007D96  E0                 	db	224
  2813  007D97  C0                 	db	192
  2814  007D98  FE                 	db	254
  2815  007D99  39                 	db	57
  2816  007D9A  BD                 	db	189
  2817  007D9B  BD                 	db	189
  2818  007D9C  B8                 	db	184
  2819  007D9D  FF                 	db	255
  2820  007D9E  39                 	db	57
  2821  007D9F  BD                 	db	189
  2822  007DA0  BD                 	db	189
  2823  007DA1  39                 	db	57
  2824  007DA2  FF                 	db	255
  2825  007DA3  20                 	db	32
  2826  007DA4  A9                 	db	169
  2827  007DA5  A9                 	db	169
  2828  007DA6  21                 	db	33
  2829  007DA7  FE                 	db	254
  2830  007DA8  20                 	db	32
  2831  007DA9  A0                 	db	160
  2832  007DAA  A0                 	db	160
  2833  007DAB  20                 	db	32
  2834  007DAC  FE                 	db	254
  2835  007DAD  21                 	db	33
  2836  007DAE  A9                 	db	169
  2837  007DAF  29                 	db	41
  2838  007DB0  39                 	db	57
  2839  007DB1  FE                 	db	254
  2840  007DB2  21                 	db	33
  2841  007DB3  A9                 	db	169
  2842  007DB4  A9                 	db	169
  2843  007DB5  39                 	db	57
  2844  007DB6  FE                 	db	254
  2845  007DB7  BF                 	db	191
  2846  007DB8  FF                 	db	255
  2847  007DB9  00                 	db	0
  2848  007DBA  FF                 	db	255
  2849  007DBB  FF                 	db	255
  2850  007DBC  FF                 	db	255
  2851  007DBD  FF                 	db	255
  2852  007DBE  FF                 	db	255
  2853  007DBF  FF                 	db	255
  2854  007DC0  FF                 	db	255
  2855  007DC1  FF                 	db	255
  2856  007DC2  FF                 	db	255
  2857  007DC3  FF                 	db	255
  2858  007DC4  FF                 	db	255
  2859  007DC5  FF                 	db	255
  2860  007DC6  FF                 	db	255
  2861  007DC7  FF                 	db	255
  2862  007DC8  FF                 	db	255
  2863  007DC9  FF                 	db	255
  2864  007DCA  FF                 	db	255
  2865  007DCB  FF                 	db	255
  2866  007DCC  FF                 	db	255
  2867  007DCD  FF                 	db	255
  2868  007DCE  FF                 	db	255
  2869  007DCF  FF                 	db	255
  2870  007DD0  FF                 	db	255
  2871  007DD1  1C                 	db	28
  2872  007DD2  FF                 	db	255
  2873  007DD3  E0                 	db	224
  2874  007DD4  A0                 	db	160
  2875  007DD5  A0                 	db	160
  2876  007DD6  A0                 	db	160
  2877  007DD7  A0                 	db	160
  2878  007DD8  FE                 	db	254
  2879  007DD9  21                 	db	33
  2880  007DDA  21                 	db	33
  2881  007DDB  A1                 	db	161
  2882  007DDC  21                 	db	33
  2883  007DDD  FE                 	db	254
  2884  007DDE  21                 	db	33
  2885  007DDF  21                 	db	33
  2886  007DE0  21                 	db	33
  2887  007DE1  21                 	db	33
  2888  007DE2  FE                 	db	254
  2889  007DE3  20                 	db	32
  2890  007DE4  B0                 	db	176
  2891  007DE5  A0                 	db	160
  2892  007DE6  20                 	db	32
  2893  007DE7  FE                 	db	254
  2894  007DE8  31                 	db	49
  2895  007DE9  A9                 	db	169
  2896  007DEA  A8                 	db	168
  2897  007DEB  20                 	db	32
  2898  007DEC  FE                 	db	254
  2899  007DED  20                 	db	32
  2900  007DEE  A0                 	db	160
  2901  007DEF  A0                 	db	160
  2902  007DF0  20                 	db	32
  2903  007DF1  FE                 	db	254
  2904  007DF2  39                 	db	57
  2905  007DF3  BD                 	db	189
  2906  007DF4  BD                 	db	189
  2907  007DF5  B8                 	db	184
  2908  007DF6  FF                 	db	255
  2909  007DF7  39                 	db	57
  2910  007DF8  BD                 	db	189
  2911  007DF9  BD                 	db	189
  2912  007DFA  39                 	db	57
  2913  007DFB  FF                 	db	255
  2914  007DFC  20                 	db	32
  2915  007DFD  A9                 	db	169
  2916  007DFE  A9                 	db	169
  2917  007DFF  38                 	db	56
  2918  007E00  FF                 	db	255
  2919  007E01  21                 	db	33
  2920  007E02  21                 	db	33
  2921  007E03  21                 	db	33
  2922  007E04  31                 	db	49
  2923  007E05  77                 	db	119
  2924  007E06  44                 	db	68
  2925  007E07  54                 	db	84
  2926  007E08  54                 	db	84
  2927  007E09  FF                 	db	255
  2928  007E0A  76                 	db	118
  2929  007E0B  54                 	db	84
  2930  007E0C  54                 	db	84
  2931  007E0D  54                 	db	84
  2932  007E0E  FF                 	db	255
  2933  007E0F  67                 	db	103
  2934  007E10  53                 	db	83
  2935  007E11  53                 	db	83
  2936  007E12  47                 	db	71
  2937  007E13  FF                 	db	255
  2938  007E14  73                 	db	115
  2939  007E15  73                 	db	115
  2940  007E16  77                 	db	119
  2941  007E17  77                 	db	119
  2942  007E18  FF                 	db	255
  2943  007E19  47                 	db	71
  2944  007E1A  47                 	db	71
  2945  007E1B  47                 	db	71
  2946  007E1C  47                 	db	71
  2947  007E1D  FF                 	db	255
  2948  007E1E  46                 	db	70
  2949  007E1F  57                 	db	87
  2950  007E20  47                 	db	71
  2951  007E21  46                 	db	70
  2952  007E22  FF                 	db	255
  2953  007E23  42                 	db	66
  2954  007E24  57                 	db	87
  2955  007E25  57                 	db	87
  2956  007E26  46                 	db	70
  2957  007E27  FF                 	db	255
  2958  007E28  44                 	db	68
  2959  007E29  55                 	db	85
  2960  007E2A  44                 	db	68
  2961  007E2B  44                 	db	68
  2962  007E2C  FF                 	db	255
  2963  007E2D  44                 	db	68
  2964  007E2E  55                 	db	85
  2965  007E2F  44                 	db	68
  2966  007E30  44                 	db	68
  2967  007E31  FF                 	db	255
  2968  007E32  46                 	db	70
  2969  007E33  77                 	db	119
  2970  007E34  57                 	db	87
  2971  007E35  56                 	db	86
  2972  007E36  FF                 	db	255
  2973  007E37  77                 	db	119
  2974  007E38  FF                 	db	255
  2975  007E39  00                 	db	0
  2976  007E3A  0F                 	db	15
  2977  007E3B  03                 	db	3
  2978  007E3C  03                 	db	3
  2979  007E3D  03                 	db	3
  2980  007E3E  03                 	db	3
  2981  007E3F  03                 	db	3
  2982  007E40  03                 	db	3
  2983  007E41  03                 	db	3
  2984  007E42  03                 	db	3
  2985  007E43  03                 	db	3
  2986  007E44  03                 	db	3
  2987  007E45  03                 	db	3
  2988  007E46  03                 	db	3
  2989  007E47  03                 	db	3
  2990  007E48  03                 	db	3
  2991  007E49  03                 	db	3
  2992  007E4A  03                 	db	3
  2993  007E4B  03                 	db	3
  2994  007E4C  03                 	db	3
  2995  007E4D  03                 	db	3
  2996  007E4E  03                 	db	3
  2997  007E4F  03                 	db	3
  2998  007E50  00                 	db	0
  2999  007E51  80                 	db	128
  3000  007E52  FF                 	db	255
  3001  007E53  FF                 	db	255
  3002  007E54  77                 	db	119
  3003  007E55  77                 	db	119
  3004  007E56  77                 	db	119
  3005  007E57  77                 	db	119
  3006  007E58  FF                 	db	255
  3007  007E59  74                 	db	116
  3008  007E5A  74                 	db	116
  3009  007E5B  74                 	db	116
  3010  007E5C  74                 	db	116
  3011  007E5D  FF                 	db	255
  3012  007E5E  64                 	db	100
  3013  007E5F  54                 	db	84
  3014  007E60  54                 	db	84
  3015  007E61  44                 	db	68
  3016  007E62  FF                 	db	255
  3017  007E63  46                 	db	70
  3018  007E64  77                 	db	119
  3019  007E65  55                 	db	85
  3020  007E66  46                 	db	70
  3021  007E67  FF                 	db	255
  3022  007E68  46                 	db	70
  3023  007E69  77                 	db	119
  3024  007E6A  77                 	db	119
  3025  007E6B  46                 	db	70
  3026  007E6C  FF                 	db	255
  3027  007E6D  66                 	db	102
  3028  007E6E  77                 	db	119
  3029  007E6F  75                 	db	117
  3030  007E70  76                 	db	118
  3031  007E71  FF                 	db	255
  3032  007E72  47                 	db	71
  3033  007E73  57                 	db	87
  3034  007E74  47                 	db	71
  3035  007E75  47                 	db	71
  3036  007E76  FF                 	db	255
  3037  007E77  46                 	db	70
  3038  007E78  57                 	db	87
  3039  007E79  47                 	db	71
  3040  007E7A  46                 	db	70
  3041  007E7B  FF                 	db	255
  3042  007E7C  46                 	db	70
  3043  007E7D  57                 	db	87
  3044  007E7E  57                 	db	87
  3045  007E7F  77                 	db	119
  3046  007E80  FF                 	db	255
  3047  007E81  C2                 	db	194
  3048  007E82  C0                 	db	192
  3049  007E83  C4                 	db	196
  3050  007E84  C6                 	db	198
  3051  007E85  EF                 	db	239
  3052  007E86  CA                 	db	202
  3053  007E87  EB                 	db	235
  3054  007E88  EA                 	db	234
  3055  007E89  FF                 	db	255
  3056  007E8A  EF                 	db	239
  3057  007E8B  EE                 	db	238
  3058  007E8C  EF                 	db	239
  3059  007E8D  EE                 	db	238
  3060  007E8E  FF                 	db	255
  3061  007E8F  EE                 	db	238
  3062  007E90  EE                 	db	238
  3063  007E91  EF                 	db	239
  3064  007E92  AE                 	db	174
  3065  007E93  FF                 	db	255
  3066  007E94  CE                 	db	206
  3067  007E95  EE                 	db	238
  3068  007E96  EF                 	db	239
  3069  007E97  EE                 	db	238
  3070  007E98  FF                 	db	255
  3071  007E99  C8                 	db	200
  3072  007E9A  E8                 	db	232
  3073  007E9B  E8                 	db	232
  3074  007E9C  88                 	db	136
  3075  007E9D  FF                 	db	255
  3076  007E9E  88                 	db	136
  3077  007E9F  EA                 	db	234
  3078  007EA0  E8                 	db	232
  3079  007EA1  88                 	db	136
  3080  007EA2  FF                 	db	255
  3081  007EA3  8C                 	db	140
  3082  007EA4  EA                 	db	234
  3083  007EA5  EB                 	db	235
  3084  007EA6  88                 	db	136
  3085  007EA7  FF                 	db	255
  3086  007EA8  CE                 	db	206
  3087  007EA9  EF                 	db	239
  3088  007EAA  EF                 	db	239
  3089  007EAB  EE                 	db	238
  3090  007EAC  FF                 	db	255
  3091  007EAD  C8                 	db	200
  3092  007EAE  E8                 	db	232
  3093  007EAF  E8                 	db	232
  3094  007EB0  E8                 	db	232
  3095  007EB1  FF                 	db	255
  3096  007EB2  C8                 	db	200
  3097  007EB3  E8                 	db	232
  3098  007EB4  E8                 	db	232
  3099  007EB5  E8                 	db	232
  3100  007EB6  FF                 	db	255
  3101  007EB7  88                 	db	136
  3102  007EB8  E9                 	db	233
  3103  007EB9  E9                 	db	233
  3104  007EBA  CD                 	db	205
  3105  007EBB  FF                 	db	255
  3106  007EBC  8B                 	db	139
  3107  007EBD  EF                 	db	239
  3108  007EBE  EF                 	db	239
  3109  007EBF  EF                 	db	239
  3110  007EC0  FF                 	db	255
  3111  007EC1  8F                 	db	143
  3112  007EC2  EF                 	db	239
  3113  007EC3  EF                 	db	239
  3114  007EC4  EF                 	db	239
  3115  007EC5  EF                 	db	239
  3116  007EC6  8F                 	db	143
  3117  007EC7  EF                 	db	239
  3118  007EC8  8F                 	db	143
  3119  007EC9  EF                 	db	239
  3120  007ECA  EF                 	db	239
  3121  007ECB  8F                 	db	143
  3122  007ECC  AF                 	db	175
  3123  007ECD  8B                 	db	139
  3124  007ECE  EF                 	db	239
  3125  007ECF  CF                 	db	207
  3126  007ED0  8F                 	db	143
  3127  007ED1  EF                 	db	239
  3128  007ED2  8E                 	db	142
  3129  007ED3  FF                 	db	255
  3130  007ED4  88                 	db	136
  3131  007ED5  08                 	db	8
  3132  007ED6  08                 	db	8
  3133  007ED7  08                 	db	8
  3134  007ED8  FF                 	db	255
  3135  007ED9  88                 	db	136
  3136  007EDA  08                 	db	8
  3137  007EDB  08                 	db	8
  3138  007EDC  08                 	db	8
  3139  007EDD  FF                 	db	255
  3140  007EDE  CC                 	db	204
  3141  007EDF  EA                 	db	234
  3142  007EE0  EB                 	db	235
  3143  007EE1  E8                 	db	232
  3144  007EE2  FF                 	db	255
  3145  007EE3  CE                 	db	206
  3146  007EE4  EE                 	db	238
  3147  007EE5  EF                 	db	239
  3148  007EE6  EE                 	db	238
  3149  007EE7  FF                 	db	255
  3150  007EE8  CE                 	db	206
  3151  007EE9  EF                 	db	239
  3152  007EEA  EF                 	db	239
  3153  007EEB  EE                 	db	238
  3154  007EEC  FF                 	db	255
  3155  007EED  CE                 	db	206
  3156  007EEE  EF                 	db	239
  3157  007EEF  EF                 	db	239
  3158  007EF0  EE                 	db	238
  3159  007EF1  FF                 	db	255
  3160  007EF2  88                 	db	136
  3161  007EF3  EA                 	db	234
  3162  007EF4  E8                 	db	232
  3163  007EF5  88                 	db	136
  3164  007EF6  FF                 	db	255
  3165  007EF7  88                 	db	136
  3166  007EF8  EA                 	db	234
  3167  007EF9  E8                 	db	232
  3168  007EFA  C8                 	db	200
  3169  007EFB  FF                 	db	255
  3170  007EFC  8C                 	db	140
  3171  007EFD  EB                 	db	235
  3172  007EFE  EA                 	db	234
  3173  007EFF  CE                 	db	206
  3174  007F00  FF                 	db	255
  3175  007F01  FF                 	db	255
  3176  007F02  FF                 	db	255
  3177  007F03  FF                 	db	255
  3178  007F04  FF                 	db	255
  3179  007F05                     __end_of_accueil:
  3180                           	opt stack 0
  3181  007F05                     _Font3x6:
  3182                           	opt stack 0
  3183  007F05  00                 	db	0
  3184  007F06  00                 	db	0
  3185  007F07  00                 	db	0
  3186  007F08  00                 	db	0
  3187  007F09  5C                 	db	92
  3188  007F0A  00                 	db	0
  3189  007F0B  0C                 	db	12
  3190  007F0C  00                 	db	0
  3191  007F0D  0C                 	db	12
  3192  007F0E  7C                 	db	124
  3193  007F0F  28                 	db	40
  3194  007F10  7C                 	db	124
  3195  007F11  7C                 	db	124
  3196  007F12  44                 	db	68
  3197  007F13  7C                 	db	124
  3198  007F14  24                 	db	36
  3199  007F15  10                 	db	16
  3200  007F16  48                 	db	72
  3201  007F17  28                 	db	40
  3202  007F18  54                 	db	84
  3203  007F19  08                 	db	8
  3204  007F1A  00                 	db	0
  3205  007F1B  0C                 	db	12
  3206  007F1C  00                 	db	0
  3207  007F1D  38                 	db	56
  3208  007F1E  44                 	db	68
  3209  007F1F  00                 	db	0
  3210  007F20  44                 	db	68
  3211  007F21  38                 	db	56
  3212  007F22  00                 	db	0
  3213  007F23  20                 	db	32
  3214  007F24  10                 	db	16
  3215  007F25  08                 	db	8
  3216  007F26  10                 	db	16
  3217  007F27  38                 	db	56
  3218  007F28  10                 	db	16
  3219  007F29  80                 	db	128
  3220  007F2A  40                 	db	64
  3221  007F2B  00                 	db	0
  3222  007F2C  10                 	db	16
  3223  007F2D  10                 	db	16
  3224  007F2E  10                 	db	16
  3225  007F2F  00                 	db	0
  3226  007F30  40                 	db	64
  3227  007F31  00                 	db	0
  3228  007F32  20                 	db	32
  3229  007F33  10                 	db	16
  3230  007F34  08                 	db	8
  3231  007F35  38                 	db	56
  3232  007F36  44                 	db	68
  3233  007F37  38                 	db	56
  3234  007F38  00                 	db	0
  3235  007F39  7C                 	db	124
  3236  007F3A  00                 	db	0
  3237  007F3B  64                 	db	100
  3238  007F3C  54                 	db	84
  3239  007F3D  48                 	db	72
  3240  007F3E  44                 	db	68
  3241  007F3F  54                 	db	84
  3242  007F40  28                 	db	40
  3243  007F41  1C                 	db	28
  3244  007F42  10                 	db	16
  3245  007F43  7C                 	db	124
  3246  007F44  4C                 	db	76
  3247  007F45  54                 	db	84
  3248  007F46  24                 	db	36
  3249  007F47  38                 	db	56
  3250  007F48  54                 	db	84
  3251  007F49  20                 	db	32
  3252  007F4A  04                 	db	4
  3253  007F4B  74                 	db	116
  3254  007F4C  0C                 	db	12
  3255  007F4D  28                 	db	40
  3256  007F4E  54                 	db	84
  3257  007F4F  28                 	db	40
  3258  007F50  08                 	db	8
  3259  007F51  54                 	db	84
  3260  007F52  38                 	db	56
  3261  007F53  00                 	db	0
  3262  007F54  50                 	db	80
  3263  007F55  00                 	db	0
  3264  007F56  80                 	db	128
  3265  007F57  50                 	db	80
  3266  007F58  00                 	db	0
  3267  007F59  10                 	db	16
  3268  007F5A  28                 	db	40
  3269  007F5B  44                 	db	68
  3270  007F5C  28                 	db	40
  3271  007F5D  28                 	db	40
  3272  007F5E  28                 	db	40
  3273  007F5F  44                 	db	68
  3274  007F60  28                 	db	40
  3275  007F61  10                 	db	16
  3276  007F62  04                 	db	4
  3277  007F63  54                 	db	84
  3278  007F64  08                 	db	8
  3279  007F65  38                 	db	56
  3280  007F66  4C                 	db	76
  3281  007F67  5C                 	db	92
  3282  007F68  78                 	db	120
  3283  007F69  14                 	db	20
  3284  007F6A  78                 	db	120
  3285  007F6B  7C                 	db	124
  3286  007F6C  54                 	db	84
  3287  007F6D  28                 	db	40
  3288  007F6E  38                 	db	56
  3289  007F6F  44                 	db	68
  3290  007F70  44                 	db	68
  3291  007F71  7C                 	db	124
  3292  007F72  44                 	db	68
  3293  007F73  38                 	db	56
  3294  007F74  7C                 	db	124
  3295  007F75  54                 	db	84
  3296  007F76  44                 	db	68
  3297  007F77  7C                 	db	124
  3298  007F78  14                 	db	20
  3299  007F79  04                 	db	4
  3300  007F7A  38                 	db	56
  3301  007F7B  44                 	db	68
  3302  007F7C  34                 	db	52
  3303  007F7D  7C                 	db	124
  3304  007F7E  10                 	db	16
  3305  007F7F  7C                 	db	124
  3306  007F80  00                 	db	0
  3307  007F81  7C                 	db	124
  3308  007F82  00                 	db	0
  3309  007F83  20                 	db	32
  3310  007F84  40                 	db	64
  3311  007F85  3C                 	db	60
  3312  007F86  7C                 	db	124
  3313  007F87  10                 	db	16
  3314  007F88  6C                 	db	108
  3315  007F89  7C                 	db	124
  3316  007F8A  40                 	db	64
  3317  007F8B  40                 	db	64
  3318  007F8C  7C                 	db	124
  3319  007F8D  08                 	db	8
  3320  007F8E  7C                 	db	124
  3321  007F8F  7C                 	db	124
  3322  007F90  04                 	db	4
  3323  007F91  7C                 	db	124
  3324  007F92  7C                 	db	124
  3325  007F93  44                 	db	68
  3326  007F94  7C                 	db	124
  3327  007F95  7C                 	db	124
  3328  007F96  14                 	db	20
  3329  007F97  08                 	db	8
  3330  007F98  38                 	db	56
  3331  007F99  44                 	db	68
  3332  007F9A  78                 	db	120
  3333  007F9B  7C                 	db	124
  3334  007F9C  14                 	db	20
  3335  007F9D  68                 	db	104
  3336  007F9E  48                 	db	72
  3337  007F9F  54                 	db	84
  3338  007FA0  24                 	db	36
  3339  007FA1  04                 	db	4
  3340  007FA2  7C                 	db	124
  3341  007FA3  04                 	db	4
  3342  007FA4  7C                 	db	124
  3343  007FA5  40                 	db	64
  3344  007FA6  7C                 	db	124
  3345  007FA7  3C                 	db	60
  3346  007FA8  40                 	db	64
  3347  007FA9  3C                 	db	60
  3348  007FAA  7C                 	db	124
  3349  007FAB  20                 	db	32
  3350  007FAC  7C                 	db	124
  3351  007FAD  6C                 	db	108
  3352  007FAE  10                 	db	16
  3353  007FAF  6C                 	db	108
  3354  007FB0  1C                 	db	28
  3355  007FB1  60                 	db	96
  3356  007FB2  1C                 	db	28
  3357  007FB3  64                 	db	100
  3358  007FB4  54                 	db	84
  3359  007FB5  4C                 	db	76
  3360  007FB6  7C                 	db	124
  3361  007FB7  44                 	db	68
  3362  007FB8  00                 	db	0
  3363  007FB9  08                 	db	8
  3364  007FBA  10                 	db	16
  3365  007FBB  20                 	db	32
  3366  007FBC  44                 	db	68
  3367  007FBD  7C                 	db	124
  3368  007FBE  00                 	db	0
  3369  007FBF  08                 	db	8
  3370  007FC0  04                 	db	4
  3371  007FC1  08                 	db	8
  3372  007FC2  80                 	db	128
  3373  007FC3  80                 	db	128
  3374  007FC4  80                 	db	128
  3375  007FC5  04                 	db	4
  3376  007FC6  08                 	db	8
  3377  007FC7  00                 	db	0
  3378  007FC8                     __end_of_Font3x6:
  3379                           	opt stack 0
  3380  007FC8                     _dpowers:
  3381                           	opt stack 0
  3382  007FC8  0001               	dw	1
  3383  007FCA  000A               	dw	10
  3384  007FCC  0064               	dw	100
  3385  007FCE  03E8               	dw	1000
  3386  007FD0  2710               	dw	10000
  3387  007FD2                     __end_of_dpowers:
  3388                           	opt stack 0
  3389  0000                     _CCPR1L	set	4030
  3390  0000                     _PR2	set	4043
  3391  0000                     _PIR1bits	set	3998
  3392  0000                     _PIE1bits	set	3997
  3393  0000                     _TMR2	set	4044
  3394  0000                     _CCP1CONbits	set	4029
  3395  0000                     _TRISCbits	set	3988
  3396  0000                     _PIR2bits	set	4001
  3397  0000                     _EECON2	set	4007
  3398  0000                     _INTCONbits	set	4082
  3399  0000                     _EEDATA	set	4008
  3400  0000                     _EECON1bits	set	4006
  3401  0000                     _EEADR	set	4009
  3402  0000                     _LATD	set	3980
  3403  0000                     _LATBbits	set	3978
  3404  0000                     _PORTD	set	3971
  3405  0000                     _TRISD	set	3989
  3406  0000                     _PORTB	set	3969
  3407  0000                     _TRISB	set	3987
  3408  0000                     _ADCON1	set	4033
  3409  0000                     _PORTA	set	3968
  3410  0000                     _TRISA	set	3986
  3411  0000                     _T2CONbits	set	4042
  3412  0000                     _PORTEbits	set	3972
  3413  0000                     _PORTE	set	3972
  3414  0000                     _TRISE	set	3990
  3415  007FD2                     STR_3:
  3416  007FD2  79                 	db	121	;'y'
  3417  007FD3  6F                 	db	111	;'o'
  3418  007FD4  75                 	db	117	;'u'
  3419  007FD5  20                 	db	32
  3420  007FD6  62                 	db	98	;'b'
  3421  007FD7  65                 	db	101	;'e'
  3422  007FD8  61                 	db	97	;'a'
  3423  007FD9  74                 	db	116	;'t'
  3424  007FDA  20                 	db	32
  3425  007FDB  79                 	db	121	;'y'
  3426  007FDC  6F                 	db	111	;'o'
  3427  007FDD  75                 	db	117	;'u'
  3428  007FDE  72                 	db	114	;'r'
  3429  007FDF  20                 	db	32
  3430  007FE0  62                 	db	98	;'b'
  3431  007FE1  65                 	db	101	;'e'
  3432  007FE2  73                 	db	115	;'s'
  3433  007FE3  74                 	db	116	;'t'
  3434  007FE4  20                 	db	32
  3435  007FE5  73                 	db	115	;'s'
  3436  007FE6  63                 	db	99	;'c'
  3437  007FE7  6F                 	db	111	;'o'
  3438  007FE8  72                 	db	114	;'r'
  3439  007FE9  65                 	db	101	;'e'
  3440  007FEA  20                 	db	32
  3441  007FEB  21                 	db	33
  3442  007FEC  00                 	db	0
  3443  007FED                     STR_2:
  3444  007FED  62                 	db	98	;'b'
  3445  007FEE  65                 	db	101	;'e'
  3446  007FEF  73                 	db	115	;'s'
  3447  007FF0  74                 	db	116	;'t'
  3448  007FF1  20                 	db	32
  3449  007FF2  73                 	db	115	;'s'
  3450  007FF3  63                 	db	99	;'c'
  3451  007FF4  6F                 	db	111	;'o'
  3452  007FF5  72                 	db	114	;'r'
  3453  007FF6  65                 	db	101	;'e'
  3454  007FF7  20                 	db	32
  3455  007FF8  3A                 	db	58	;':'
  3456  007FF9  20                 	db	32
  3457  007FFA  00                 	db	0
  3458  007FFB                     STR_1:
  3459  007FFB  25                 	db	37
  3460  007FFC  64                 	db	100	;'d'
  3461  007FFD  00                 	db	0
  3462                           
  3463                           ; #config settings
  3464  007FFE  00                 	db	0	; dummy byte at the end
  3465  0000                     
  3466                           	psect	cinit
  3467  003C6A                     __pcinit:
  3468                           	opt stack 0
  3469  003C6A                     start_initialization:
  3470                           	opt stack 0
  3471  003C6A                     __initialization:
  3472                           	opt stack 0
  3473                           
  3474                           ; Initialize objects allocated to COMRAM (4 bytes)
  3475                           ; load TBLPTR registers with __pidataCOMRAM
  3476  003C6A  0E86               	movlw	low __pidataCOMRAM
  3477  003C6C  6EF6               	movwf	tblptrl,c
  3478  003C6E  0E3A               	movlw	high __pidataCOMRAM
  3479  003C70  6EF7               	movwf	tblptrh,c
  3480  003C72  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3481  003C74  6EF8               	movwf	tblptru,c
  3482  003C76  EE00  F055         	lfsr	0,__pdataCOMRAM
  3483  003C7A  EE10 F004          	lfsr	1,4
  3484  003C7E                     copy_data0:
  3485  003C7E  0009               	tblrd		*+
  3486  003C80  CFF5 FFEE          	movff	tablat,postinc0
  3487  003C84  50E5               	movf	postdec1,w,c
  3488  003C86  50E1               	movf	fsr1l,w,c
  3489  003C88  E1FA               	bnz	copy_data0
  3490                           
  3491                           ; Clear objects allocated to BANK2 (216 bytes)
  3492  003C8A  EE02  F000         	lfsr	0,__pbssBANK2
  3493  003C8E  0ED8               	movlw	216
  3494  003C90                     clear_0:
  3495  003C90  6AEE               	clrf	postinc0,c
  3496  003C92  06E8               	decf	wreg,f,c
  3497  003C94  E1FD               	bnz	clear_0
  3498                           
  3499                           ; Clear objects allocated to BANK1 (180 bytes)
  3500  003C96  EE01  F000         	lfsr	0,__pbssBANK1
  3501  003C9A  0EB4               	movlw	180
  3502  003C9C                     clear_1:
  3503  003C9C  6AEE               	clrf	postinc0,c
  3504  003C9E  06E8               	decf	wreg,f,c
  3505  003CA0  E1FD               	bnz	clear_1
  3506                           
  3507                           ; Clear objects allocated to COMRAM (23 bytes)
  3508  003CA2  EE00  F03E         	lfsr	0,__pbssCOMRAM
  3509  003CA6  0E17               	movlw	23
  3510  003CA8                     clear_2:
  3511  003CA8  6AEE               	clrf	postinc0,c
  3512  003CAA  06E8               	decf	wreg,f,c
  3513  003CAC  E1FD               	bnz	clear_2
  3514  003CAE                     end_of_initialization:
  3515                           	opt stack 0
  3516  003CAE                     __end_of__initialization:
  3517                           	opt stack 0
  3518  003CAE  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3519  003CB0  6EF8               	movwf	tblptru,c
  3520  003CB2  0100               	movlb	0
  3521  003CB4  EF9B  F024         	goto	_main	;jump to C main() function
  3522                           tblptru	equ	0xFF8
  3523                           tblptrh	equ	0xFF7
  3524                           tblptrl	equ	0xFF6
  3525                           tablat	equ	0xFF5
  3526                           postinc0	equ	0xFEE
  3527                           wreg	equ	0xFE8
  3528                           postdec1	equ	0xFE5
  3529                           fsr1l	equ	0xFE1
  3530                           
  3531                           	psect	bssCOMRAM
  3532  00003E                     __pbssCOMRAM:
  3533                           	opt stack 0
  3534  00003E                     displayStartScore@F4364:
  3535                           	opt stack 0
  3536  00003E                     	ds	20
  3537  000052                     _y:
  3538                           	opt stack 0
  3539  000052                     	ds	1
  3540  000053                     _x:
  3541                           	opt stack 0
  3542  000053                     	ds	1
  3543  000054                     _score:
  3544                           	opt stack 0
  3545  000054                     	ds	1
  3546                           tblptru	equ	0xFF8
  3547                           tblptrh	equ	0xFF7
  3548                           tblptrl	equ	0xFF6
  3549                           tablat	equ	0xFF5
  3550                           postinc0	equ	0xFEE
  3551                           wreg	equ	0xFE8
  3552                           postdec1	equ	0xFE5
  3553                           fsr1l	equ	0xFE1
  3554                           
  3555                           	psect	dataCOMRAM
  3556  000055                     __pdataCOMRAM:
  3557                           	opt stack 0
  3558  000055                     _randx:
  3559                           	opt stack 0
  3560  000055                     	ds	4
  3561                           tblptru	equ	0xFF8
  3562                           tblptrh	equ	0xFF7
  3563                           tblptrl	equ	0xFF6
  3564                           tablat	equ	0xFF5
  3565                           postinc0	equ	0xFEE
  3566                           wreg	equ	0xFE8
  3567                           postdec1	equ	0xFE5
  3568                           fsr1l	equ	0xFE1
  3569                           
  3570                           	psect	bssBANK1
  3571  000100                     __pbssBANK1:
  3572                           	opt stack 0
  3573  000100                     _all_shapes:
  3574                           	opt stack 0
  3575  000100                     	ds	180
  3576                           tblptru	equ	0xFF8
  3577                           tblptrh	equ	0xFF7
  3578                           tblptrl	equ	0xFF6
  3579                           tablat	equ	0xFF5
  3580                           postinc0	equ	0xFEE
  3581                           wreg	equ	0xFE8
  3582                           postdec1	equ	0xFE5
  3583                           fsr1l	equ	0xFE1
  3584                           
  3585                           	psect	bssBANK2
  3586  000200                     __pbssBANK2:
  3587                           	opt stack 0
  3588  000200                     _array_data:
  3589                           	opt stack 0
  3590  000200                     	ds	216
  3591                           tblptru	equ	0xFF8
  3592                           tblptrh	equ	0xFF7
  3593                           tblptrl	equ	0xFF6
  3594                           tablat	equ	0xFF5
  3595                           postinc0	equ	0xFEE
  3596                           wreg	equ	0xFE8
  3597                           postdec1	equ	0xFE5
  3598                           fsr1l	equ	0xFE1
  3599                           
  3600                           	psect	cstackCOMRAM
  3601  000001                     __pcstackCOMRAM:
  3602                           	opt stack 0
  3603  000001                     ?___wmul:
  3604                           	opt stack 0
  3605  000001                     ?___awdiv:
  3606                           	opt stack 0
  3607  000001                     ?___lwdiv:
  3608                           	opt stack 0
  3609  000001                     ?___lmul:
  3610                           	opt stack 0
  3611  000001                     dontBelong2Shape@x:
  3612                           	opt stack 0
  3613  000001                     glcd_ReadByte@side:
  3614                           	opt stack 0
  3615  000001                     delay@c:
  3616                           	opt stack 0
  3617  000001                     delayHomeScreen@c:
  3618                           	opt stack 0
  3619  000001                     EEPROM_Read@address:
  3620                           	opt stack 0
  3621  000001                     EEPROM_Write@address:
  3622                           	opt stack 0
  3623  000001                     setupPWM@PR2value:
  3624                           	opt stack 0
  3625  000001                     ___wmul@multiplier:
  3626                           	opt stack 0
  3627  000001                     ___awdiv@dividend:
  3628                           	opt stack 0
  3629  000001                     ___lwdiv@dividend:
  3630                           	opt stack 0
  3631  000001                     ___lmul@multiplier:
  3632                           	opt stack 0
  3633                           
  3634                           ; 4 bytes @ 0x0
  3635  000001                     	ds	1
  3636  000002                     dontBelong2Shape@y:
  3637                           	opt stack 0
  3638  000002                     glcd_ReadByte@data:
  3639                           	opt stack 0
  3640                           
  3641                           ; 1 bytes @ 0x1
  3642  000002                     	ds	1
  3643  000003                     ??_dontBelong2Shape:
  3644  000003                     EEPROM_Write@data:
  3645                           	opt stack 0
  3646  000003                     delayHomeScreen@d:
  3647                           	opt stack 0
  3648  000003                     ___wmul@multiplicand:
  3649                           	opt stack 0
  3650  000003                     ___awdiv@divisor:
  3651                           	opt stack 0
  3652  000003                     ___lwdiv@divisor:
  3653                           	opt stack 0
  3654                           
  3655                           ; 2 bytes @ 0x2
  3656  000003                     	ds	1
  3657  000004                     
  3658                           ; 1 bytes @ 0x3
  3659  000004                     	ds	1
  3660  000005                     ___awdiv@counter:
  3661                           	opt stack 0
  3662  000005                     ___wmul@product:
  3663                           	opt stack 0
  3664  000005                     ___lwdiv@quotient:
  3665                           	opt stack 0
  3666  000005                     ___lmul@multiplicand:
  3667                           	opt stack 0
  3668                           
  3669                           ; 4 bytes @ 0x4
  3670  000005                     	ds	1
  3671  000006                     dontBelong2Shape@index:
  3672                           	opt stack 0
  3673  000006                     ___awdiv@sign:
  3674                           	opt stack 0
  3675                           
  3676                           ; 1 bytes @ 0x5
  3677  000006                     	ds	1
  3678  000007                     dontBelong2Shape@k:
  3679                           	opt stack 0
  3680  000007                     ___lwdiv@counter:
  3681                           	opt stack 0
  3682  000007                     ___awdiv@quotient:
  3683                           	opt stack 0
  3684                           
  3685                           ; 2 bytes @ 0x6
  3686  000007                     	ds	1
  3687  000008                     ??_gravity:
  3688  000008                     ??_moveRight:
  3689  000008                     ??_moveLeft:
  3690  000008                     ??_rotate:
  3691  000008                     ?___lwmod:
  3692                           	opt stack 0
  3693  000008                     ___lwmod@dividend:
  3694                           	opt stack 0
  3695                           
  3696                           ; 2 bytes @ 0x7
  3697  000008                     	ds	1
  3698  000009                     glcd_WriteByte@data:
  3699                           	opt stack 0
  3700  000009                     ___lmul@product:
  3701                           	opt stack 0
  3702                           
  3703                           ; 4 bytes @ 0x8
  3704  000009                     	ds	1
  3705  00000A                     glcd_WriteByte@side:
  3706                           	opt stack 0
  3707  00000A                     ___lwmod@divisor:
  3708                           	opt stack 0
  3709                           
  3710                           ; 2 bytes @ 0x9
  3711  00000A                     	ds	1
  3712  00000B                     glcd_PlotPixel@ypos:
  3713                           	opt stack 0
  3714  00000B                     glcd_FillScreen@color:
  3715                           	opt stack 0
  3716  00000B                     glcd_SetCursor@ypos:
  3717                           	opt stack 0
  3718  00000B                     glcd_WriteChar8X8@color:
  3719                           	opt stack 0
  3720  00000B                     glcd_WriteChar3x6@color:
  3721                           	opt stack 0
  3722  00000B                     glcd_Image@ptr:
  3723                           	opt stack 0
  3724                           
  3725                           ; 2 bytes @ 0xA
  3726  00000B                     	ds	1
  3727  00000C                     ??_glcd_WriteChar8X8:
  3728  00000C                     ??_glcd_WriteChar3x6:
  3729  00000C                     glcd_PlotPixel@color:
  3730                           	opt stack 0
  3731  00000C                     glcd_FillScreen@j:
  3732                           	opt stack 0
  3733  00000C                     glcd_SetCursor@side:
  3734                           	opt stack 0
  3735  00000C                     ___lwmod@counter:
  3736                           	opt stack 0
  3737                           
  3738                           ; 1 bytes @ 0xB
  3739  00000C                     	ds	1
  3740  00000D                     ??_glcd_PlotPixel:
  3741  00000D                     ?_rand:
  3742                           	opt stack 0
  3743  00000D                     ?_sprintf:
  3744                           	opt stack 0
  3745  00000D                     glcd_FillScreen@i:
  3746                           	opt stack 0
  3747  00000D                     glcd_SetCursor@xpos:
  3748                           	opt stack 0
  3749  00000D                     glcd_Image@j:
  3750                           	opt stack 0
  3751  00000D                     sprintf@sp:
  3752                           	opt stack 0
  3753                           
  3754                           ; 2 bytes @ 0xC
  3755  00000D                     	ds	1
  3756  00000E                     ??_glcd_Init:
  3757  00000E                     glcd_WriteChar3x6@xpos:
  3758                           	opt stack 0
  3759  00000E                     glcd_Image@i:
  3760                           	opt stack 0
  3761  00000E                     glcd_WriteChar8X8@chr:
  3762                           	opt stack 0
  3763                           
  3764                           ; 2 bytes @ 0xD
  3765  00000E                     	ds	1
  3766  00000F                     ?___awmod:
  3767                           	opt stack 0
  3768  00000F                     glcd_Init@mode:
  3769                           	opt stack 0
  3770  00000F                     glcd_PlotPixel@xpos:
  3771                           	opt stack 0
  3772  00000F                     glcd_WriteChar3x6@ch:
  3773                           	opt stack 0
  3774  00000F                     glcd_Image@cs:
  3775                           	opt stack 0
  3776  00000F                     sprintf@f:
  3777                           	opt stack 0
  3778  00000F                     ___awmod@dividend:
  3779                           	opt stack 0
  3780                           
  3781                           ; 2 bytes @ 0xE
  3782  00000F                     	ds	1
  3783  000010                     glcd_PlotPixel@data:
  3784                           	opt stack 0
  3785  000010                     glcd_WriteChar8X8@ch:
  3786                           	opt stack 0
  3787  000010                     glcd_WriteChar3x6@i:
  3788                           	opt stack 0
  3789  000010                     rotate@new_coord:
  3790                           	opt stack 0
  3791                           
  3792                           ; 8 bytes @ 0xF
  3793  000010                     	ds	1
  3794  000011                     moveRight@a:
  3795                           	opt stack 0
  3796  000011                     moveLeft@a:
  3797                           	opt stack 0
  3798  000011                     glcd_PlotPixel@side:
  3799                           	opt stack 0
  3800  000011                     glcd_WriteChar8X8@xpos:
  3801                           	opt stack 0
  3802  000011                     glcd_WriteChar3x6@side:
  3803                           	opt stack 0
  3804  000011                     ___awmod@divisor:
  3805                           	opt stack 0
  3806                           
  3807                           ; 2 bytes @ 0x10
  3808  000011                     	ds	1
  3809  000012                     ??_update_display_shapes:
  3810  000012                     display_grid@j:
  3811                           	opt stack 0
  3812  000012                     gravity@a:
  3813                           	opt stack 0
  3814  000012                     moveRight@b:
  3815                           	opt stack 0
  3816  000012                     moveLeft@b:
  3817                           	opt stack 0
  3818  000012                     glcd_WriteChar8X8@i:
  3819                           	opt stack 0
  3820                           
  3821                           ; 1 bytes @ 0x11
  3822  000012                     	ds	1
  3823  000013                     ??_sprintf:
  3824  000013                     display_grid@i:
  3825                           	opt stack 0
  3826  000013                     gravity@b:
  3827                           	opt stack 0
  3828  000013                     moveRight@ok:
  3829                           	opt stack 0
  3830  000013                     moveLeft@ok:
  3831                           	opt stack 0
  3832  000013                     glcd_WriteChar8X8@side:
  3833                           	opt stack 0
  3834  000013                     ___awmod@counter:
  3835                           	opt stack 0
  3836                           
  3837                           ; 1 bytes @ 0x12
  3838  000013                     	ds	1
  3839  000014                     gravity@ok:
  3840                           	opt stack 0
  3841  000014                     moveRight@j:
  3842                           	opt stack 0
  3843  000014                     moveLeft@j:
  3844                           	opt stack 0
  3845  000014                     ___awmod@sign:
  3846                           	opt stack 0
  3847  000014                     glcd_WriteString@str:
  3848                           	opt stack 0
  3849  000014                     sprintf@ap:
  3850                           	opt stack 0
  3851                           
  3852                           ; 2 bytes @ 0x13
  3853  000014                     	ds	1
  3854  000015                     ??_createRandomShape:
  3855  000015                     gravity@j_247:
  3856                           	opt stack 0
  3857  000015                     moveRight@j_255:
  3858                           	opt stack 0
  3859  000015                     moveLeft@j_264:
  3860                           	opt stack 0
  3861                           
  3862                           ; 1 bytes @ 0x14
  3863  000015                     	ds	1
  3864  000016                     gravity@j:
  3865                           	opt stack 0
  3866  000016                     moveRight@j_256:
  3867                           	opt stack 0
  3868  000016                     moveLeft@j_265:
  3869                           	opt stack 0
  3870  000016                     glcd_WriteString@font:
  3871                           	opt stack 0
  3872  000016                     sprintf@flag:
  3873                           	opt stack 0
  3874                           
  3875                           ; 1 bytes @ 0x15
  3876  000016                     	ds	1
  3877  000017                     update_display_shapes@operation:
  3878                           	opt stack 0
  3879  000017                     gravity@j_244:
  3880                           	opt stack 0
  3881  000017                     moveRight@i:
  3882                           	opt stack 0
  3883  000017                     moveLeft@i:
  3884                           	opt stack 0
  3885  000017                     glcd_WriteString@color:
  3886                           	opt stack 0
  3887  000017                     sprintf@prec:
  3888                           	opt stack 0
  3889                           
  3890                           ; 1 bytes @ 0x16
  3891  000017                     	ds	1
  3892  000018                     update_display_shapes@m:
  3893                           	opt stack 0
  3894  000018                     gravity@j_246:
  3895                           	opt stack 0
  3896  000018                     moveRight@index:
  3897                           	opt stack 0
  3898  000018                     moveLeft@index:
  3899                           	opt stack 0
  3900  000018                     rotate@temp_x:
  3901                           	opt stack 0
  3902  000018                     glcd_text_write@str:
  3903                           	opt stack 0
  3904  000018                     sprintf@val:
  3905                           	opt stack 0
  3906                           
  3907                           ; 2 bytes @ 0x17
  3908  000018                     	ds	1
  3909  000019                     update_display_shapes@n:
  3910                           	opt stack 0
  3911  000019                     gravity@i:
  3912                           	opt stack 0
  3913  000019                     rotate@temp_y:
  3914                           	opt stack 0
  3915                           
  3916                           ; 1 bytes @ 0x18
  3917  000019                     	ds	1
  3918  00001A                     update_display_shapes@m_230:
  3919                           	opt stack 0
  3920  00001A                     gravity@index:
  3921                           	opt stack 0
  3922  00001A                     rotate@ok:
  3923                           	opt stack 0
  3924  00001A                     glcd_text_write@x:
  3925                           	opt stack 0
  3926  00001A                     sprintf@c:
  3927                           	opt stack 0
  3928                           
  3929                           ; 1 bytes @ 0x19
  3930  00001A                     	ds	1
  3931  00001B                     update_display_shapes@n_231:
  3932                           	opt stack 0
  3933  00001B                     rotate@pivot_x:
  3934                           	opt stack 0
  3935  00001B                     glcd_text_write@y:
  3936                           	opt stack 0
  3937  00001B                     displayStartScore@string:
  3938                           	opt stack 0
  3939                           
  3940                           ; 20 bytes @ 0x1A
  3941  00001B                     	ds	1
  3942  00001C                     update_display_shapes@i:
  3943                           	opt stack 0
  3944  00001C                     rotate@pivot_y:
  3945                           	opt stack 0
  3946                           
  3947                           ; 1 bytes @ 0x1B
  3948  00001C                     	ds	1
  3949  00001D                     update_display_shapes@j:
  3950                           	opt stack 0
  3951  00001D                     createRandomShape@type:
  3952                           	opt stack 0
  3953  00001D                     rotate@k_319:
  3954                           	opt stack 0
  3955                           
  3956                           ; 1 bytes @ 0x1C
  3957  00001D                     	ds	1
  3958  00001E                     update_display_shapes@y:
  3959                           	opt stack 0
  3960  00001E                     createRandomShape@k:
  3961                           	opt stack 0
  3962  00001E                     rotate@index:
  3963                           	opt stack 0
  3964                           
  3965                           ; 1 bytes @ 0x1D
  3966  00001E                     	ds	1
  3967  00001F                     update_display_shapes@x:
  3968                           	opt stack 0
  3969  00001F                     createRandomShape@k_278:
  3970                           	opt stack 0
  3971  00001F                     rotate@k:
  3972                           	opt stack 0
  3973                           
  3974                           ; 1 bytes @ 0x1E
  3975  00001F                     	ds	1
  3976  000020                     ??_completedUpdate:
  3977  000020                     createRandomShape@k_279:
  3978                           	opt stack 0
  3979                           
  3980                           ; 1 bytes @ 0x1F
  3981  000020                     	ds	1
  3982  000021                     createRandomShape@k_280:
  3983                           	opt stack 0
  3984                           
  3985                           ; 1 bytes @ 0x20
  3986  000021                     	ds	1
  3987  000022                     createRandomShape@k_282:
  3988                           	opt stack 0
  3989                           
  3990                           ; 1 bytes @ 0x21
  3991  000022                     	ds	1
  3992  000023                     createRandomShape@k_283:
  3993                           	opt stack 0
  3994                           
  3995                           ; 1 bytes @ 0x22
  3996  000023                     	ds	1
  3997  000024                     createRandomShape@k_284:
  3998                           	opt stack 0
  3999                           
  4000                           ; 1 bytes @ 0x23
  4001  000024                     	ds	1
  4002  000025                     createRandomShape@k_285:
  4003                           	opt stack 0
  4004                           
  4005                           ; 1 bytes @ 0x24
  4006  000025                     	ds	1
  4007  000026                     createRandomShape@k_287:
  4008                           	opt stack 0
  4009                           
  4010                           ; 1 bytes @ 0x25
  4011  000026                     	ds	1
  4012  000027                     createRandomShape@k_288:
  4013                           	opt stack 0
  4014                           
  4015                           ; 1 bytes @ 0x26
  4016  000027                     	ds	1
  4017  000028                     createRandomShape@k_289:
  4018                           	opt stack 0
  4019  000028                     completedUpdate@line:
  4020                           	opt stack 0
  4021                           
  4022                           ; 1 bytes @ 0x27
  4023  000028                     	ds	1
  4024  000029                     createRandomShape@k_290:
  4025                           	opt stack 0
  4026  000029                     completedUpdate@j_301:
  4027                           	opt stack 0
  4028                           
  4029                           ; 1 bytes @ 0x28
  4030  000029                     	ds	1
  4031  00002A                     createRandomShape@k_292:
  4032                           	opt stack 0
  4033  00002A                     completedUpdate@j_302:
  4034                           	opt stack 0
  4035                           
  4036                           ; 1 bytes @ 0x29
  4037  00002A                     	ds	1
  4038  00002B                     createRandomShape@k_293:
  4039                           	opt stack 0
  4040  00002B                     completedUpdate@i_303:
  4041                           	opt stack 0
  4042                           
  4043                           ; 1 bytes @ 0x2A
  4044  00002B                     	ds	1
  4045  00002C                     createRandomShape@k_294:
  4046                           	opt stack 0
  4047  00002C                     completedUpdate@j:
  4048                           	opt stack 0
  4049                           
  4050                           ; 1 bytes @ 0x2B
  4051  00002C                     	ds	1
  4052  00002D                     createRandomShape@k_295:
  4053                           	opt stack 0
  4054  00002D                     completedUpdate@i:
  4055                           	opt stack 0
  4056                           
  4057                           ; 1 bytes @ 0x2C
  4058  00002D                     	ds	1
  4059  00002E                     ??_lineCompletedTest:
  4060  00002E                     createRandomShape@k_296:
  4061                           	opt stack 0
  4062                           
  4063                           ; 1 bytes @ 0x2D
  4064  00002E                     	ds	1
  4065  00002F                     createRandomShape@start:
  4066                           	opt stack 0
  4067  00002F                     displayStartScore@bestScore:
  4068                           	opt stack 0
  4069                           
  4070                           ; 1 bytes @ 0x2E
  4071  00002F                     	ds	1
  4072  000030                     createRandomShape@start_281:
  4073                           	opt stack 0
  4074                           
  4075                           ; 1 bytes @ 0x2F
  4076  000030                     	ds	1
  4077  000031                     createRandomShape@start_286:
  4078                           	opt stack 0
  4079  000031                     lineCompletedTest@completed:
  4080                           	opt stack 0
  4081                           
  4082                           ; 1 bytes @ 0x30
  4083  000031                     	ds	1
  4084  000032                     createRandomShape@start_291:
  4085                           	opt stack 0
  4086  000032                     lineCompletedTest@i:
  4087                           	opt stack 0
  4088                           
  4089                           ; 1 bytes @ 0x31
  4090  000032                     	ds	1
  4091  000033                     createRandomShape@orientation:
  4092                           	opt stack 0
  4093  000033                     lineCompletedTest@j:
  4094                           	opt stack 0
  4095                           
  4096                           ; 1 bytes @ 0x32
  4097  000033                     	ds	1
  4098  000034                     createRandomShape@i:
  4099                           	opt stack 0
  4100                           
  4101                           ; 1 bytes @ 0x33
  4102  000034                     	ds	1
  4103  000035                     ??_main:
  4104                           
  4105                           ; 1 bytes @ 0x34
  4106  000035                     	ds	2
  4107  000037                     main@bestScore:
  4108                           	opt stack 0
  4109                           
  4110                           ; 1 bytes @ 0x36
  4111  000037                     	ds	1
  4112  000038                     main@next:
  4113                           	opt stack 0
  4114                           
  4115                           ; 1 bytes @ 0x37
  4116  000038                     	ds	1
  4117  000039                     main@i_339:
  4118                           	opt stack 0
  4119                           
  4120                           ; 1 bytes @ 0x38
  4121  000039                     	ds	1
  4122  00003A                     main@y_340:
  4123                           	opt stack 0
  4124                           
  4125                           ; 1 bytes @ 0x39
  4126  00003A                     	ds	1
  4127  00003B                     main@i:
  4128                           	opt stack 0
  4129                           
  4130                           ; 1 bytes @ 0x3A
  4131  00003B                     	ds	1
  4132  00003C                     main@y:
  4133                           	opt stack 0
  4134                           
  4135                           ; 1 bytes @ 0x3B
  4136  00003C                     	ds	1
  4137  00003D                     main@index:
  4138                           	opt stack 0
  4139                           
  4140                           ; 1 bytes @ 0x3C
  4141  00003D                     	ds	1
  4142                           tblptru	equ	0xFF8
  4143                           tblptrh	equ	0xFF7
  4144                           tblptrl	equ	0xFF6
  4145                           tablat	equ	0xFF5
  4146                           postinc0	equ	0xFEE
  4147                           wreg	equ	0xFE8
  4148                           postdec1	equ	0xFE5
  4149                           fsr1l	equ	0xFE1
  4150                           
  4151 ;;
  4152 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4153 ;;
  4154 ;; *************** function _main *****************
  4155 ;; Defined at:
  4156 ;;		line 960 in file "main.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;		None
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  y               1   57[COMRAM] unsigned char 
  4161 ;;  y               1   59[COMRAM] unsigned char 
  4162 ;;  i               1   56[COMRAM] unsigned char 
  4163 ;;  i               1   58[COMRAM] unsigned char 
  4164 ;;  index           1   60[COMRAM] unsigned char 
  4165 ;;  next            1   55[COMRAM] char 
  4166 ;;  bestScore       1   54[COMRAM] unsigned char 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4176 ;;      Params:         0       0       0       0       0       0       0       0       0
  4177 ;;      Locals:         7       0       0       0       0       0       0       0       0
  4178 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4179 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4180 ;;Total ram usage:        9 bytes
  4181 ;; Hardware stack levels required when called:    5
  4182 ;; This function calls:
  4183 ;;		_EEPROM_Read
  4184 ;;		_EEPROM_Write
  4185 ;;		_createRandomShape
  4186 ;;		_delay
  4187 ;;		_delayHomeScreen
  4188 ;;		_displayStartScore
  4189 ;;		_display_grid
  4190 ;;		_glcd_FillScreen
  4191 ;;		_glcd_Image
  4192 ;;		_glcd_Init
  4193 ;;		_glcd_text_write
  4194 ;;		_gravity
  4195 ;;		_lineCompletedTest
  4196 ;;		_moveLeft
  4197 ;;		_moveRight
  4198 ;;		_pwmStart
  4199 ;;		_pwmStop
  4200 ;;		_rotate
  4201 ;;		_setupPWM
  4202 ;;		_update_display_shapes
  4203 ;; This function is called by:
  4204 ;;		Startup code after reset
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text0
  4209  004936                     __ptext0:
  4210                           	opt stack 0
  4211  004936                     _main:
  4212                           	opt stack 26
  4213                           
  4214                           ;main.c: 962: uint8_t index=-1;
  4215                           
  4216                           ;incstack = 0
  4217  004936  683D               	setf	main@index,c
  4218                           
  4219                           ;main.c: 963: int8_t next=1;
  4220  004938  0E01               	movlw	1
  4221  00493A  6E38               	movwf	main@next,c
  4222                           
  4223                           ;main.c: 964: TRISE = 0xFF;
  4224  00493C  6896               	setf	3990,c	;volatile
  4225                           
  4226                           ;main.c: 965: PORTE = 0x00;
  4227  00493E  0E00               	movlw	0
  4228  004940  6E84               	movwf	3972,c	;volatile
  4229                           
  4230                           ;main.c: 966: char bestScore = EEPROM_Read(0x00);
  4231  004942  0E00               	movlw	0
  4232  004944  6E02               	movwf	EEPROM_Read@address+1,c
  4233  004946  0E00               	movlw	0
  4234  004948  6E01               	movwf	EEPROM_Read@address,c
  4235  00494A  EC45  F01D         	call	_EEPROM_Read	;wreg free
  4236  00494E  6E37               	movwf	main@bestScore,c
  4237                           
  4238                           ;main.c: 968: glcd_Init(1);
  4239  004950  0E01               	movlw	1
  4240  004952  EC09  F021         	call	_glcd_Init
  4241                           
  4242                           ;main.c: 969: glcd_Image();
  4243  004956  ECB4  F01F         	call	_glcd_Image	;wreg free
  4244                           
  4245                           ;main.c: 970: delayHomeScreen();
  4246  00495A  ECA0  F01D         	call	_delayHomeScreen	;wreg free
  4247                           
  4248                           ;main.c: 971: glcd_FillScreen(0);
  4249  00495E  0E00               	movlw	0
  4250  004960  EC45  F01F         	call	_glcd_FillScreen
  4251                           
  4252                           ;main.c: 972: displayStartScore(bestScore);
  4253  004964  5037               	movf	main@bestScore,w,c
  4254  004966  ECD9  F01E         	call	_displayStartScore
  4255                           
  4256                           ;main.c: 973: display_grid();
  4257  00496A  ECE4  F022         	call	_display_grid	;wreg free
  4258                           
  4259                           ;main.c: 974: setupPWM(131);
  4260  00496E  0E00               	movlw	0
  4261  004970  6E02               	movwf	setupPWM@PR2value+1,c
  4262  004972  0E83               	movlw	131
  4263  004974  6E01               	movwf	setupPWM@PR2value,c
  4264  004976  EC7B  F01D         	call	_setupPWM	;wreg free
  4265                           
  4266                           ;main.c: 976: for(uint8_t i=0;i<20;i++){
  4267  00497A  0E00               	movlw	0
  4268  00497C  6E3B               	movwf	main@i,c
  4269  00497E                     l4609:
  4270  00497E  0E13               	movlw	19
  4271  004980  643B               	cpfsgt	main@i,c
  4272  004982  D001               	goto	l344
  4273  004984  D036               	goto	u5000
  4274  004986                     l344:
  4275                           
  4276                           ;main.c: 977: for(uint8_t y=0;y<4;y++){
  4277  004986  0E00               	movlw	0
  4278  004988  6E3C               	movwf	main@y,c
  4279  00498A                     l4615:
  4280  00498A  0E03               	movlw	3
  4281  00498C  643C               	cpfsgt	main@y,c
  4282  00498E  D001               	goto	l346
  4283  004990  D02E               	goto	u4990
  4284  004992                     l346:
  4285                           
  4286                           ;main.c: 978: all_shapes[i].index[y].x=99;
  4287  004992  503B               	movf	main@i,w,c
  4288  004994  0D09               	mullw	9
  4289  004996  0E00               	movlw	low _all_shapes
  4290  004998  6E35               	movwf	??_main& (0+255),c
  4291  00499A  0E01               	movlw	high _all_shapes
  4292  00499C  6E36               	movwf	(??_main+1)& (0+255),c
  4293  00499E  50F3               	movf	prodl,w,c
  4294  0049A0  2635               	addwf	??_main,f,c
  4295  0049A2  50F4               	movf	prodh,w,c
  4296  0049A4  2236               	addwfc	??_main+1,f,c
  4297  0049A6  503C               	movf	main@y,w,c
  4298  0049A8  0D02               	mullw	2
  4299  0049AA  50F3               	movf	prodl,w,c
  4300  0049AC  2435               	addwf	??_main,w,c
  4301  0049AE  6ED9               	movwf	fsr2l,c
  4302  0049B0  50F4               	movf	prodh,w,c
  4303  0049B2  2036               	addwfc	??_main+1,w,c
  4304  0049B4  6EDA               	movwf	fsr2h,c
  4305  0049B6  0E63               	movlw	99
  4306  0049B8  6EDF               	movwf	indf2,c
  4307                           
  4308                           ;main.c: 979: all_shapes[i].index[y].y=99;
  4309  0049BA  503B               	movf	main@i,w,c
  4310  0049BC  0D09               	mullw	9
  4311  0049BE  0E00               	movlw	low _all_shapes
  4312  0049C0  6E35               	movwf	??_main& (0+255),c
  4313  0049C2  0E01               	movlw	high _all_shapes
  4314  0049C4  6E36               	movwf	(??_main+1)& (0+255),c
  4315  0049C6  50F3               	movf	prodl,w,c
  4316  0049C8  2635               	addwf	??_main,f,c
  4317  0049CA  50F4               	movf	prodh,w,c
  4318  0049CC  2236               	addwfc	??_main+1,f,c
  4319  0049CE  503C               	movf	main@y,w,c
  4320  0049D0  0D02               	mullw	2
  4321  0049D2  50F3               	movf	prodl,w,c
  4322  0049D4  2635               	addwf	??_main,f,c
  4323  0049D6  50F4               	movf	prodh,w,c
  4324  0049D8  2236               	addwfc	??_main+1,f,c
  4325  0049DA  0E01               	movlw	1
  4326  0049DC  2435               	addwf	??_main,w,c
  4327  0049DE  6ED9               	movwf	fsr2l,c
  4328  0049E0  0E00               	movlw	0
  4329  0049E2  2036               	addwfc	??_main+1,w,c
  4330  0049E4  6EDA               	movwf	fsr2h,c
  4331  0049E6  0E63               	movlw	99
  4332  0049E8  6EDF               	movwf	indf2,c
  4333  0049EA  2A3C               	incf	main@y,f,c
  4334  0049EC  D7CE               	goto	l4615
  4335  0049EE                     u4990:
  4336  0049EE  2A3B               	incf	main@i,f,c
  4337  0049F0  D7C6               	goto	l4609
  4338  0049F2                     u5000:
  4339                           
  4340                           ;main.c: 980: }
  4341                           ;main.c: 981: }
  4342                           ;main.c: 983: for(uint8_t i=0;i<18;i++){
  4343  0049F2  0E00               	movlw	0
  4344  0049F4  6E39               	movwf	main@i_339,c
  4345  0049F6                     l4631:
  4346  0049F6  0E11               	movlw	17
  4347  0049F8  6439               	cpfsgt	main@i_339,c
  4348  0049FA  D001               	goto	l348
  4349  0049FC  D01E               	goto	u5040
  4350  0049FE                     l348:
  4351                           
  4352                           ;main.c: 984: for(uint8_t y=0;y<12;y++){
  4353  0049FE  0E00               	movlw	0
  4354  004A00  6E3A               	movwf	main@y_340,c
  4355  004A02                     l4637:
  4356  004A02  0E0B               	movlw	11
  4357  004A04  643A               	cpfsgt	main@y_340,c
  4358  004A06  D001               	goto	l350
  4359  004A08  D016               	goto	u5030
  4360  004A0A                     l350:
  4361                           
  4362                           ;main.c: 985: array_data[i][y]='0';
  4363  004A0A  5039               	movf	main@i_339,w,c
  4364  004A0C  0D0C               	mullw	12
  4365  004A0E  0E00               	movlw	low _array_data
  4366  004A10  6E35               	movwf	??_main& (0+255),c
  4367  004A12  0E02               	movlw	high _array_data
  4368  004A14  6E36               	movwf	(??_main+1)& (0+255),c
  4369  004A16  50F3               	movf	prodl,w,c
  4370  004A18  2635               	addwf	??_main,f,c
  4371  004A1A  50F4               	movf	prodh,w,c
  4372  004A1C  2236               	addwfc	??_main+1,f,c
  4373  004A1E  503A               	movf	main@y_340,w,c
  4374  004A20  0D01               	mullw	1
  4375  004A22  50F3               	movf	prodl,w,c
  4376  004A24  2435               	addwf	??_main,w,c
  4377  004A26  6ED9               	movwf	fsr2l,c
  4378  004A28  50F4               	movf	prodh,w,c
  4379  004A2A  2036               	addwfc	??_main+1,w,c
  4380  004A2C  6EDA               	movwf	fsr2h,c
  4381  004A2E  0E30               	movlw	48
  4382  004A30  6EDF               	movwf	indf2,c
  4383  004A32  2A3A               	incf	main@y_340,f,c
  4384  004A34  D7E6               	goto	l4637
  4385  004A36                     u5030:
  4386  004A36  2A39               	incf	main@i_339,f,c
  4387  004A38  D7DE               	goto	l4631
  4388  004A3A                     u5040:
  4389                           
  4390                           ;main.c: 990: if(next==-1){
  4391                           
  4392                           ;main.c: 986: }
  4393                           ;main.c: 987: }
  4394                           ;main.c: 989: while (1){
  4395  004A3A  2838               	incf	main@next,w,c
  4396  004A3C  B4D8               	btfsc	status,2,c
  4397  004A3E  D046               	goto	l354
  4398                           
  4399                           ;main.c: 992: }
  4400                           ;main.c: 993: if (next){
  4401                           
  4402                           ;main.c: 991: break;
  4403  004A40  5038               	movf	main@next,w,c
  4404  004A42  B4D8               	btfsc	status,2,c
  4405  004A44  D007               	goto	l355
  4406                           
  4407                           ;main.c: 994: index++;
  4408  004A46  2A3D               	incf	main@index,f,c
  4409                           
  4410                           ;main.c: 995: createRandomShape(index);
  4411  004A48  503D               	movf	main@index,w,c
  4412  004A4A  EC32  F02F         	call	_createRandomShape
  4413                           
  4414                           ;main.c: 996: next=0;
  4415  004A4E  0E00               	movlw	0
  4416  004A50  6E38               	movwf	main@next,c
  4417                           
  4418                           ;main.c: 997: score++;
  4419  004A52  2A54               	incf	_score,f,c
  4420  004A54                     l355:
  4421                           
  4422                           ;main.c: 998: }
  4423                           ;main.c: 1000: if(PORTEbits.RE0 ==1){
  4424  004A54  A084               	btfss	3972,0,c	;volatile
  4425  004A56  D003               	goto	l356
  4426                           
  4427                           ;main.c: 1001: moveRight(index);
  4428  004A58  503D               	movf	main@index,w,c
  4429  004A5A  ECB6  F02A         	call	_moveRight
  4430  004A5E                     l356:
  4431                           
  4432                           ;main.c: 1002: }
  4433                           ;main.c: 1004: if(PORTEbits.RE1 ==1){
  4434  004A5E  A284               	btfss	3972,1,c	;volatile
  4435  004A60  D003               	goto	l357
  4436                           
  4437                           ;main.c: 1005: moveLeft(index);
  4438  004A62  503D               	movf	main@index,w,c
  4439  004A64  EC90  F028         	call	_moveLeft
  4440  004A68                     l357:
  4441                           
  4442                           ;main.c: 1006: }
  4443                           ;main.c: 1008: if(PORTEbits.RE2 ==1){
  4444  004A68  A484               	btfss	3972,2,c	;volatile
  4445  004A6A  D003               	goto	l358
  4446                           
  4447                           ;main.c: 1009: rotate(index);
  4448  004A6C  503D               	movf	main@index,w,c
  4449  004A6E  ECD6  F026         	call	_rotate
  4450  004A72                     l358:
  4451                           
  4452                           ;main.c: 1010: }
  4453                           ;main.c: 1012: update_display_shapes('1');
  4454  004A72  0E31               	movlw	49
  4455  004A74  EC81  F025         	call	_update_display_shapes
  4456                           
  4457                           ;main.c: 1013: delay();
  4458  004A78  EC4C  F01D         	call	_delay	;wreg free
  4459                           
  4460                           ;main.c: 1014: update_display_shapes('0');
  4461  004A7C  0E30               	movlw	48
  4462  004A7E  EC81  F025         	call	_update_display_shapes
  4463                           
  4464                           ;main.c: 1017: if(PORTEbits.RE0 ==1){
  4465  004A82  A084               	btfss	3972,0,c	;volatile
  4466  004A84  D006               	goto	l360
  4467                           
  4468                           ;main.c: 1018: moveRight(index);
  4469  004A86  503D               	movf	main@index,w,c
  4470  004A88  ECB6  F02A         	call	_moveRight
  4471                           
  4472                           ;main.c: 1019: if(T2CONbits.TMR2ON == 0)
  4473  004A8C  A4CA               	btfss	4042,2,c	;volatile
  4474                           
  4475                           ;main.c: 1020: {
  4476                           ;main.c: 1021: pwmStart();
  4477  004A8E  EC3F  F01D         	call	_pwmStart	;wreg free
  4478  004A92                     l360:
  4479                           
  4480                           ;main.c: 1022: }
  4481                           ;main.c: 1024: }
  4482                           ;main.c: 1026: if(PORTEbits.RE1 ==1){
  4483  004A92  A284               	btfss	3972,1,c	;volatile
  4484  004A94  D006               	goto	l362
  4485                           
  4486                           ;main.c: 1027: moveLeft(index);
  4487  004A96  503D               	movf	main@index,w,c
  4488  004A98  EC90  F028         	call	_moveLeft
  4489                           
  4490                           ;main.c: 1028: if(T2CONbits.TMR2ON == 0)
  4491  004A9C  A4CA               	btfss	4042,2,c	;volatile
  4492                           
  4493                           ;main.c: 1029: {
  4494                           ;main.c: 1030: pwmStart();
  4495  004A9E  EC3F  F01D         	call	_pwmStart	;wreg free
  4496  004AA2                     l362:
  4497                           
  4498                           ;main.c: 1031: }
  4499                           ;main.c: 1032: }
  4500                           ;main.c: 1034: if(PORTEbits.RE2 ==1){
  4501  004AA2  A484               	btfss	3972,2,c	;volatile
  4502  004AA4  D006               	goto	l364
  4503                           
  4504                           ;main.c: 1035: rotate(index);
  4505  004AA6  503D               	movf	main@index,w,c
  4506  004AA8  ECD6  F026         	call	_rotate
  4507                           
  4508                           ;main.c: 1036: if(T2CONbits.TMR2ON == 0)
  4509  004AAC  A4CA               	btfss	4042,2,c	;volatile
  4510                           
  4511                           ;main.c: 1037: {
  4512                           ;main.c: 1038: pwmStart();
  4513  004AAE  EC3F  F01D         	call	_pwmStart	;wreg free
  4514  004AB2                     l364:
  4515                           
  4516                           ;main.c: 1039: }
  4517                           ;main.c: 1040: }
  4518                           ;main.c: 1041: if( (PORTEbits.RE0 != 1) && (PORTEbits.RE1 != 1) && (PORTEbits.RE2 != 1) 
      +                          )
  4519  004AB2  A084               	btfss	3972,0,c	;volatile
  4520  004AB4  B284               	btfsc	3972,1,c	;volatile
  4521  004AB6  D003               	goto	l365
  4522  004AB8  A484               	btfss	3972,2,c	;volatile
  4523                           
  4524                           ;main.c: 1042: {
  4525                           ;main.c: 1043: pwmStop();
  4526  004ABA  EC41  F01D         	call	_pwmStop	;wreg free
  4527  004ABE                     l365:
  4528                           
  4529                           ;main.c: 1044: }
  4530                           ;main.c: 1046: next=gravity(index);
  4531  004ABE  503D               	movf	main@index,w,c
  4532  004AC0  ECDC  F02C         	call	_gravity
  4533  004AC4  6E38               	movwf	main@next,c
  4534                           
  4535                           ;main.c: 1047: lineCompletedTest();
  4536  004AC6  EC0F  F01F         	call	_lineCompletedTest	;wreg free
  4537  004ACA  D7B7               	goto	u5040
  4538  004ACC                     l354:
  4539                           
  4540                           ;main.c: 1049: }
  4541                           ;main.c: 1052: glcd_FillScreen(0);
  4542  004ACC  0E00               	movlw	0
  4543  004ACE  EC45  F01F         	call	_glcd_FillScreen
  4544                           
  4545                           ;main.c: 1053: if(score >= bestScore )
  4546  004AD2  5037               	movf	main@bestScore,w,c
  4547  004AD4  5C54               	subwf	_score,w,c
  4548  004AD6  A0D8               	btfss	status,0,c
  4549  004AD8  D00A               	goto	l367
  4550                           
  4551                           ;main.c: 1054: {
  4552                           ;main.c: 1055: glcd_text_write("you beat your best score !",1,1);
  4553  004ADA  0ED2               	movlw	low STR_3
  4554  004ADC  6E18               	movwf	glcd_text_write@str,c
  4555  004ADE  0E7F               	movlw	high STR_3
  4556  004AE0  6E19               	movwf	glcd_text_write@str+1,c
  4557  004AE2  0E01               	movlw	1
  4558  004AE4  6E1A               	movwf	glcd_text_write@x,c
  4559  004AE6  0E01               	movlw	1
  4560  004AE8  6E1B               	movwf	glcd_text_write@y,c
  4561  004AEA  EC59  F01D         	call	_glcd_text_write	;wreg free
  4562  004AEE                     l367:
  4563                           
  4564                           ;main.c: 1056: }
  4565                           ;main.c: 1057: EEPROM_Write(0x00, score);
  4566  004AEE  0E00               	movlw	0
  4567  004AF0  6E02               	movwf	EEPROM_Write@address+1,c
  4568  004AF2  0E00               	movlw	0
  4569  004AF4  6E01               	movwf	EEPROM_Write@address,c
  4570  004AF6  C054  F003         	movff	_score,EEPROM_Write@data
  4571  004AFA  EC69  F01D         	call	_EEPROM_Write	;wreg free
  4572                           
  4573                           ;main.c: 1059: return;
  4574  004AFE  EF00  F000         	goto	start
  4575  004B02                     __end_of_main:
  4576                           	opt stack 0
  4577                           tblptru	equ	0xFF8
  4578                           tblptrh	equ	0xFF7
  4579                           tblptrl	equ	0xFF6
  4580                           tablat	equ	0xFF5
  4581                           prodh	equ	0xFF4
  4582                           prodl	equ	0xFF3
  4583                           postinc0	equ	0xFEE
  4584                           wreg	equ	0xFE8
  4585                           postdec1	equ	0xFE5
  4586                           fsr1l	equ	0xFE1
  4587                           indf2	equ	0xFDF
  4588                           fsr2h	equ	0xFDA
  4589                           fsr2l	equ	0xFD9
  4590                           status	equ	0xFD8
  4591                           
  4592 ;; *************** function _setupPWM *****************
  4593 ;; Defined at:
  4594 ;;		line 38 in file "glcd_library/mcu.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  PR2value        2    0[COMRAM] int 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4608 ;;      Params:         2       0       0       0       0       0       0       0       0
  4609 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4611 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4612 ;;Total ram usage:        2 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_main
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text1
  4622  003AF6                     __ptext1:
  4623                           	opt stack 0
  4624  003AF6                     _setupPWM:
  4625                           	opt stack 30
  4626                           
  4627                           ;mcu.c: 40: TRISCbits.RC2 = 0;
  4628                           
  4629                           ;incstack = 0
  4630  003AF6  9494               	bcf	3988,2,c	;volatile
  4631                           
  4632                           ;mcu.c: 43: CCP1CONbits.CCP1M3 = 1;
  4633  003AF8  86BD               	bsf	4029,3,c	;volatile
  4634                           
  4635                           ;mcu.c: 44: CCP1CONbits.CCP1M2 = 1;
  4636  003AFA  84BD               	bsf	4029,2,c	;volatile
  4637                           
  4638                           ;mcu.c: 48: INTCONbits.GIE = 1;
  4639  003AFC  8EF2               	bsf	intcon,7,c	;volatile
  4640                           
  4641                           ;mcu.c: 49: INTCONbits.PEIE = 1;
  4642  003AFE  8CF2               	bsf	intcon,6,c	;volatile
  4643                           
  4644                           ;mcu.c: 52: TMR2 = 0;
  4645  003B00  0E00               	movlw	0
  4646  003B02  6ECC               	movwf	4044,c	;volatile
  4647                           
  4648                           ;mcu.c: 53: PIE1bits.TMR2IE = 1;
  4649  003B04  829D               	bsf	3997,1,c	;volatile
  4650                           
  4651                           ;mcu.c: 54: PIR1bits.TMR2IF = 0;
  4652  003B06  929E               	bcf	3998,1,c	;volatile
  4653                           
  4654                           ;mcu.c: 56: T2CONbits.T2CKPS1 = 0;
  4655  003B08  92CA               	bcf	4042,1,c	;volatile
  4656                           
  4657                           ;mcu.c: 57: T2CONbits.T2CKPS0 = 1;
  4658  003B0A  80CA               	bsf	4042,0,c	;volatile
  4659                           
  4660                           ;mcu.c: 59: PR2 = PR2value;
  4661  003B0C  C001  FFCB         	movff	setupPWM@PR2value,4043	;volatile
  4662                           
  4663                           ;mcu.c: 62: CCPR1L = 0b00000000;
  4664  003B10  0E00               	movlw	0
  4665  003B12  6EBE               	movwf	4030,c	;volatile
  4666                           
  4667                           ;mcu.c: 63: CCP1CONbits.DC1B1 = 0;
  4668  003B14  9ABD               	bcf	4029,5,c	;volatile
  4669                           
  4670                           ;mcu.c: 64: CCP1CONbits.DC1B0 = 1;
  4671  003B16  88BD               	bsf	4029,4,c	;volatile
  4672  003B18  0012               	return		;funcret
  4673  003B1A                     __end_of_setupPWM:
  4674                           	opt stack 0
  4675                           tblptru	equ	0xFF8
  4676                           tblptrh	equ	0xFF7
  4677                           tblptrl	equ	0xFF6
  4678                           tablat	equ	0xFF5
  4679                           prodh	equ	0xFF4
  4680                           prodl	equ	0xFF3
  4681                           intcon	equ	0xFF2
  4682                           postinc0	equ	0xFEE
  4683                           wreg	equ	0xFE8
  4684                           postdec1	equ	0xFE5
  4685                           fsr1l	equ	0xFE1
  4686                           indf2	equ	0xFDF
  4687                           fsr2h	equ	0xFDA
  4688                           fsr2l	equ	0xFD9
  4689                           status	equ	0xFD8
  4690                           
  4691 ;; *************** function _rotate *****************
  4692 ;; Defined at:
  4693 ;;		line 907 in file "main.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  index           1    wreg     unsigned char 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;  index           1   29[COMRAM] unsigned char 
  4698 ;;  k               1   28[COMRAM] unsigned char 
  4699 ;;  k               1   30[COMRAM] unsigned char 
  4700 ;;  new_coord       8   15[COMRAM] unsigned char [8]
  4701 ;;  pivot_y         1   27[COMRAM] unsigned char 
  4702 ;;  pivot_x         1   26[COMRAM] unsigned char 
  4703 ;;  ok              1   25[COMRAM] unsigned char 
  4704 ;;  temp_y          1   24[COMRAM] unsigned char 
  4705 ;;  temp_x          1   23[COMRAM] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4715 ;;      Params:         0       0       0       0       0       0       0       0       0
  4716 ;;      Locals:        16       0       0       0       0       0       0       0       0
  4717 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4718 ;;      Totals:        24       0       0       0       0       0       0       0       0
  4719 ;;Total ram usage:       24 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    1
  4722 ;; This function calls:
  4723 ;;		_dontBelong2Shape
  4724 ;; This function is called by:
  4725 ;;		_main
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text2
  4730  004DAC                     __ptext2:
  4731                           	opt stack 0
  4732  004DAC                     _rotate:
  4733                           	opt stack 29
  4734                           
  4735                           ;incstack = 0
  4736                           ;rotate@index stored from wreg
  4737  004DAC  6E1E               	movwf	rotate@index,c
  4738                           
  4739                           ;main.c: 909: uint8_t temp_x,temp_y,ok;
  4740                           ;main.c: 910: uint8_t new_coord[8];
  4741                           ;main.c: 911: uint8_t pivot_x=all_shapes[index].index[1].x;
  4742  004DAE  501E               	movf	rotate@index,w,c
  4743  004DB0  0D09               	mullw	9
  4744  004DB2  0E02               	movlw	2
  4745  004DB4  26F3               	addwf	prodl,f,c
  4746  004DB6  0E00               	movlw	0
  4747  004DB8  22F4               	addwfc	prodh,f,c
  4748  004DBA  0E00               	movlw	low _all_shapes
  4749  004DBC  24F3               	addwf	prodl,w,c
  4750  004DBE  6ED9               	movwf	fsr2l,c
  4751  004DC0  0E01               	movlw	high _all_shapes
  4752  004DC2  20F4               	addwfc	prodh,w,c
  4753  004DC4  6EDA               	movwf	fsr2h,c
  4754  004DC6  50DF               	movf	indf2,w,c
  4755  004DC8  6E1B               	movwf	rotate@pivot_x,c
  4756                           
  4757                           ;main.c: 912: uint8_t pivot_y=all_shapes[index].index[1].y;
  4758  004DCA  501E               	movf	rotate@index,w,c
  4759  004DCC  0D09               	mullw	9
  4760  004DCE  0E03               	movlw	3
  4761  004DD0  26F3               	addwf	prodl,f,c
  4762  004DD2  0E00               	movlw	0
  4763  004DD4  22F4               	addwfc	prodh,f,c
  4764  004DD6  0E00               	movlw	low _all_shapes
  4765  004DD8  24F3               	addwf	prodl,w,c
  4766  004DDA  6ED9               	movwf	fsr2l,c
  4767  004DDC  0E01               	movlw	high _all_shapes
  4768  004DDE  20F4               	addwfc	prodh,w,c
  4769  004DE0  6EDA               	movwf	fsr2h,c
  4770  004DE2  50DF               	movf	indf2,w,c
  4771  004DE4  6E1C               	movwf	rotate@pivot_y,c
  4772                           
  4773                           ;main.c: 915: for (uint8_t k=0;k<4;k++){
  4774  004DE6  0E00               	movlw	0
  4775  004DE8  6E1F               	movwf	rotate@k,c
  4776  004DEA                     l4403:
  4777  004DEA  0E03               	movlw	3
  4778  004DEC  641F               	cpfsgt	rotate@k,c
  4779  004DEE  D001               	goto	l325
  4780  004DF0  D0C8               	goto	u4840
  4781  004DF2                     l325:
  4782                           
  4783                           ;main.c: 916: temp_x=all_shapes[index].index[k].x;
  4784  004DF2  501E               	movf	rotate@index,w,c
  4785  004DF4  0D09               	mullw	9
  4786  004DF6  0E00               	movlw	low _all_shapes
  4787  004DF8  6E08               	movwf	??_rotate& (0+255),c
  4788  004DFA  0E01               	movlw	high _all_shapes
  4789  004DFC  6E09               	movwf	(??_rotate+1)& (0+255),c
  4790  004DFE  50F3               	movf	prodl,w,c
  4791  004E00  2608               	addwf	??_rotate,f,c
  4792  004E02  50F4               	movf	prodh,w,c
  4793  004E04  2209               	addwfc	??_rotate+1,f,c
  4794  004E06  501F               	movf	rotate@k,w,c
  4795  004E08  0D02               	mullw	2
  4796  004E0A  50F3               	movf	prodl,w,c
  4797  004E0C  2408               	addwf	??_rotate,w,c
  4798  004E0E  6ED9               	movwf	fsr2l,c
  4799  004E10  50F4               	movf	prodh,w,c
  4800  004E12  2009               	addwfc	??_rotate+1,w,c
  4801  004E14  6EDA               	movwf	fsr2h,c
  4802  004E16  50DF               	movf	indf2,w,c
  4803  004E18  6E18               	movwf	rotate@temp_x,c
  4804                           
  4805                           ;main.c: 917: temp_y=all_shapes[index].index[k].y;
  4806  004E1A  501E               	movf	rotate@index,w,c
  4807  004E1C  0D09               	mullw	9
  4808  004E1E  0E00               	movlw	low _all_shapes
  4809  004E20  6E08               	movwf	??_rotate& (0+255),c
  4810  004E22  0E01               	movlw	high _all_shapes
  4811  004E24  6E09               	movwf	(??_rotate+1)& (0+255),c
  4812  004E26  50F3               	movf	prodl,w,c
  4813  004E28  2608               	addwf	??_rotate,f,c
  4814  004E2A  50F4               	movf	prodh,w,c
  4815  004E2C  2209               	addwfc	??_rotate+1,f,c
  4816  004E2E  501F               	movf	rotate@k,w,c
  4817  004E30  0D02               	mullw	2
  4818  004E32  50F3               	movf	prodl,w,c
  4819  004E34  2608               	addwf	??_rotate,f,c
  4820  004E36  50F4               	movf	prodh,w,c
  4821  004E38  2209               	addwfc	??_rotate+1,f,c
  4822  004E3A  0E01               	movlw	1
  4823  004E3C  2408               	addwf	??_rotate,w,c
  4824  004E3E  6ED9               	movwf	fsr2l,c
  4825  004E40  0E00               	movlw	0
  4826  004E42  2009               	addwfc	??_rotate+1,w,c
  4827  004E44  6EDA               	movwf	fsr2h,c
  4828  004E46  50DF               	movf	indf2,w,c
  4829  004E48  6E19               	movwf	rotate@temp_y,c
  4830                           
  4831                           ;main.c: 918: new_coord[2*k]=pivot_x - pivot_y + temp_y;
  4832  004E4A  501F               	movf	rotate@k,w,c
  4833  004E4C  0D02               	mullw	2
  4834  004E4E  0E10               	movlw	low rotate@new_coord
  4835  004E50  24F3               	addwf	prodl,w,c
  4836  004E52  6ED9               	movwf	fsr2l,c
  4837  004E54  0E00               	movlw	high rotate@new_coord
  4838  004E56  20F4               	addwfc	prodh,w,c
  4839  004E58  6EDA               	movwf	fsr2h,c
  4840  004E5A  501C               	movf	rotate@pivot_y,w,c
  4841  004E5C  0800               	sublw	0
  4842  004E5E  241B               	addwf	rotate@pivot_x,w,c
  4843  004E60  2419               	addwf	rotate@temp_y,w,c
  4844  004E62  6EDF               	movwf	indf2,c
  4845                           
  4846                           ;main.c: 919: new_coord[2*k+1]=pivot_x + pivot_y - temp_x;
  4847  004E64  501F               	movf	rotate@k,w,c
  4848  004E66  6E08               	movwf	??_rotate& (0+255),c
  4849  004E68  6A09               	clrf	(??_rotate+1)& (0+255),c
  4850  004E6A  90D8               	bcf	status,0,c
  4851  004E6C  3608               	rlcf	??_rotate,f,c
  4852  004E6E  3609               	rlcf	??_rotate+1,f,c
  4853  004E70  0E01               	movlw	1
  4854  004E72  2608               	addwf	??_rotate,f,c
  4855  004E74  0E00               	movlw	0
  4856  004E76  2209               	addwfc	??_rotate+1,f,c
  4857  004E78  0E10               	movlw	low rotate@new_coord
  4858  004E7A  2408               	addwf	??_rotate,w,c
  4859  004E7C  6ED9               	movwf	fsr2l,c
  4860  004E7E  0E00               	movlw	high rotate@new_coord
  4861  004E80  2009               	addwfc	??_rotate+1,w,c
  4862  004E82  6EDA               	movwf	fsr2h,c
  4863  004E84  5018               	movf	rotate@temp_x,w,c
  4864  004E86  0800               	sublw	0
  4865  004E88  241B               	addwf	rotate@pivot_x,w,c
  4866  004E8A  241C               	addwf	rotate@pivot_y,w,c
  4867  004E8C  6EDF               	movwf	indf2,c
  4868                           
  4869                           ;main.c: 922: if(new_coord[2*k] >= 0 && new_coord[2*k] <=17 && new_coord[2*k+1] >= 0 && 
      +                          new_coord[2*k+1] <=11 && (array_data[new_coord[2*k]][new_coord[2*k+1]]!='1' || dontBelon
      +                          g2Shape(index,new_coord[2*k],new_coord[2*k+1]))){
  4870  004E8E  501F               	movf	rotate@k,w,c
  4871  004E90  0D02               	mullw	2
  4872  004E92  0E10               	movlw	low rotate@new_coord
  4873  004E94  24F3               	addwf	prodl,w,c
  4874  004E96  6ED9               	movwf	fsr2l,c
  4875  004E98  0E00               	movlw	high rotate@new_coord
  4876  004E9A  20F4               	addwfc	prodh,w,c
  4877  004E9C  6EDA               	movwf	fsr2h,c
  4878  004E9E  0E12               	movlw	18
  4879  004EA0  60DF               	cpfslt	indf2,c
  4880  004EA2  D06A               	goto	l327
  4881  004EA4  501F               	movf	rotate@k,w,c
  4882  004EA6  6E08               	movwf	??_rotate& (0+255),c
  4883  004EA8  6A09               	clrf	(??_rotate+1)& (0+255),c
  4884  004EAA  90D8               	bcf	status,0,c
  4885  004EAC  3608               	rlcf	??_rotate,f,c
  4886  004EAE  3609               	rlcf	??_rotate+1,f,c
  4887  004EB0  0E01               	movlw	1
  4888  004EB2  2608               	addwf	??_rotate,f,c
  4889  004EB4  0E00               	movlw	0
  4890  004EB6  2209               	addwfc	??_rotate+1,f,c
  4891  004EB8  0E10               	movlw	low rotate@new_coord
  4892  004EBA  2408               	addwf	??_rotate,w,c
  4893  004EBC  6ED9               	movwf	fsr2l,c
  4894  004EBE  0E00               	movlw	high rotate@new_coord
  4895  004EC0  2009               	addwfc	??_rotate+1,w,c
  4896  004EC2  6EDA               	movwf	fsr2h,c
  4897  004EC4  0E0C               	movlw	12
  4898  004EC6  60DF               	cpfslt	indf2,c
  4899  004EC8  D057               	goto	l327
  4900  004ECA  501F               	movf	rotate@k,w,c
  4901  004ECC  0D02               	mullw	2
  4902  004ECE  0E10               	movlw	low rotate@new_coord
  4903  004ED0  24F3               	addwf	prodl,w,c
  4904  004ED2  6ED9               	movwf	fsr2l,c
  4905  004ED4  0E00               	movlw	high rotate@new_coord
  4906  004ED6  20F4               	addwfc	prodh,w,c
  4907  004ED8  6EDA               	movwf	fsr2h,c
  4908  004EDA  50DF               	movf	indf2,w,c
  4909  004EDC  6E08               	movwf	??_rotate& (0+255),c
  4910  004EDE  5008               	movf	??_rotate,w,c
  4911  004EE0  0D0C               	mullw	12
  4912  004EE2  0E00               	movlw	low _array_data
  4913  004EE4  6E09               	movwf	(??_rotate+1)& (0+255),c
  4914  004EE6  0E02               	movlw	high _array_data
  4915  004EE8  6E0A               	movwf	(??_rotate+2)& (0+255),c
  4916  004EEA  50F3               	movf	prodl,w,c
  4917  004EEC  2609               	addwf	??_rotate+1,f,c
  4918  004EEE  50F4               	movf	prodh,w,c
  4919  004EF0  220A               	addwfc	??_rotate+2,f,c
  4920  004EF2  501F               	movf	rotate@k,w,c
  4921  004EF4  6E0B               	movwf	(??_rotate+3)& (0+255),c
  4922  004EF6  6A0C               	clrf	(??_rotate+4)& (0+255),c
  4923  004EF8  90D8               	bcf	status,0,c
  4924  004EFA  360B               	rlcf	??_rotate+3,f,c
  4925  004EFC  360C               	rlcf	??_rotate+4,f,c
  4926  004EFE  0E01               	movlw	1
  4927  004F00  260B               	addwf	??_rotate+3,f,c
  4928  004F02  0E00               	movlw	0
  4929  004F04  220C               	addwfc	??_rotate+4,f,c
  4930  004F06  0E10               	movlw	low rotate@new_coord
  4931  004F08  240B               	addwf	??_rotate+3,w,c
  4932  004F0A  6ED9               	movwf	fsr2l,c
  4933  004F0C  0E00               	movlw	high rotate@new_coord
  4934  004F0E  200C               	addwfc	??_rotate+4,w,c
  4935  004F10  6EDA               	movwf	fsr2h,c
  4936  004F12  50DF               	movf	indf2,w,c
  4937  004F14  6E0D               	movwf	(??_rotate+5)& (0+255),c
  4938  004F16  500D               	movf	??_rotate+5,w,c
  4939  004F18  0D01               	mullw	1
  4940  004F1A  50F3               	movf	prodl,w,c
  4941  004F1C  2409               	addwf	??_rotate+1,w,c
  4942  004F1E  6ED9               	movwf	fsr2l,c
  4943  004F20  50F4               	movf	prodh,w,c
  4944  004F22  200A               	addwfc	??_rotate+2,w,c
  4945  004F24  6EDA               	movwf	fsr2h,c
  4946  004F26  0E31               	movlw	49
  4947  004F28  18DE               	xorwf	postinc2,w,c
  4948  004F2A  A4D8               	btfss	status,2,c
  4949  004F2C  D022               	goto	u4830
  4950  004F2E  501F               	movf	rotate@k,w,c
  4951  004F30  0D02               	mullw	2
  4952  004F32  0E10               	movlw	low rotate@new_coord
  4953  004F34  24F3               	addwf	prodl,w,c
  4954  004F36  6ED9               	movwf	fsr2l,c
  4955  004F38  0E00               	movlw	high rotate@new_coord
  4956  004F3A  20F4               	addwfc	prodh,w,c
  4957  004F3C  6EDA               	movwf	fsr2h,c
  4958  004F3E  50DF               	movf	indf2,w,c
  4959  004F40  6E01               	movwf	dontBelong2Shape@x,c
  4960  004F42  501F               	movf	rotate@k,w,c
  4961  004F44  6E08               	movwf	??_rotate& (0+255),c
  4962  004F46  6A09               	clrf	(??_rotate+1)& (0+255),c
  4963  004F48  90D8               	bcf	status,0,c
  4964  004F4A  3608               	rlcf	??_rotate,f,c
  4965  004F4C  3609               	rlcf	??_rotate+1,f,c
  4966  004F4E  0E01               	movlw	1
  4967  004F50  2608               	addwf	??_rotate,f,c
  4968  004F52  0E00               	movlw	0
  4969  004F54  2209               	addwfc	??_rotate+1,f,c
  4970  004F56  0E10               	movlw	low rotate@new_coord
  4971  004F58  2408               	addwf	??_rotate,w,c
  4972  004F5A  6ED9               	movwf	fsr2l,c
  4973  004F5C  0E00               	movlw	high rotate@new_coord
  4974  004F5E  2009               	addwfc	??_rotate+1,w,c
  4975  004F60  6EDA               	movwf	fsr2h,c
  4976  004F62  50DF               	movf	indf2,w,c
  4977  004F64  6E02               	movwf	dontBelong2Shape@y,c
  4978  004F66  501E               	movf	rotate@index,w,c
  4979  004F68  ECEE  F01F         	call	_dontBelong2Shape
  4980  004F6C  0900               	iorlw	0
  4981  004F6E  B4D8               	btfsc	status,2,c
  4982  004F70  D003               	goto	l327
  4983  004F72                     u4830:
  4984                           
  4985                           ;main.c: 923: ok=1;
  4986  004F72  0E01               	movlw	1
  4987  004F74  6E1A               	movwf	rotate@ok,c
  4988                           
  4989                           ;main.c: 924: }
  4990  004F76  D003               	goto	l330
  4991  004F78                     l327:
  4992                           
  4993                           ;main.c: 925: else {
  4994                           ;main.c: 926: ok=0;
  4995  004F78  0E00               	movlw	0
  4996  004F7A  6E1A               	movwf	rotate@ok,c
  4997                           
  4998                           ;main.c: 927: break;
  4999  004F7C  D002               	goto	u4840
  5000  004F7E                     l330:
  5001  004F7E  2A1F               	incf	rotate@k,f,c
  5002  004F80  D734               	goto	l4403
  5003  004F82                     u4840:
  5004                           
  5005                           ;main.c: 928: }
  5006                           ;main.c: 929: }
  5007                           ;main.c: 931: if(ok){
  5008  004F82  501A               	movf	rotate@ok,w,c
  5009  004F84  B4D8               	btfsc	status,2,c
  5010  004F86  0012               	return	
  5011                           
  5012                           ;main.c: 933: for (uint8_t k=0;k<4;k++){
  5013  004F88  0E00               	movlw	0
  5014  004F8A  6E1D               	movwf	rotate@k_319,c
  5015  004F8C                     l4431:
  5016  004F8C  0E03               	movlw	3
  5017  004F8E  641D               	cpfsgt	rotate@k_319,c
  5018  004F90  D001               	goto	l332
  5019  004F92  0012               	return	
  5020  004F94                     l332:
  5021                           
  5022                           ;main.c: 934: array_data[all_shapes[index].index[k].x][all_shapes[index].index[k].y]='0'
      +                          ;
  5023  004F94  501E               	movf	rotate@index,w,c
  5024  004F96  0D09               	mullw	9
  5025  004F98  0E00               	movlw	low _all_shapes
  5026  004F9A  6E08               	movwf	??_rotate& (0+255),c
  5027  004F9C  0E01               	movlw	high _all_shapes
  5028  004F9E  6E09               	movwf	(??_rotate+1)& (0+255),c
  5029  004FA0  50F3               	movf	prodl,w,c
  5030  004FA2  2608               	addwf	??_rotate,f,c
  5031  004FA4  50F4               	movf	prodh,w,c
  5032  004FA6  2209               	addwfc	??_rotate+1,f,c
  5033  004FA8  501D               	movf	rotate@k_319,w,c
  5034  004FAA  0D02               	mullw	2
  5035  004FAC  50F3               	movf	prodl,w,c
  5036  004FAE  2408               	addwf	??_rotate,w,c
  5037  004FB0  6ED9               	movwf	fsr2l,c
  5038  004FB2  50F4               	movf	prodh,w,c
  5039  004FB4  2009               	addwfc	??_rotate+1,w,c
  5040  004FB6  6EDA               	movwf	fsr2h,c
  5041  004FB8  50DF               	movf	indf2,w,c
  5042  004FBA  6E0A               	movwf	(??_rotate+2)& (0+255),c
  5043  004FBC  500A               	movf	??_rotate+2,w,c
  5044  004FBE  0D0C               	mullw	12
  5045  004FC0  0E00               	movlw	low _array_data
  5046  004FC2  6E0B               	movwf	(??_rotate+3)& (0+255),c
  5047  004FC4  0E02               	movlw	high _array_data
  5048  004FC6  6E0C               	movwf	(??_rotate+4)& (0+255),c
  5049  004FC8  50F3               	movf	prodl,w,c
  5050  004FCA  260B               	addwf	??_rotate+3,f,c
  5051  004FCC  50F4               	movf	prodh,w,c
  5052  004FCE  220C               	addwfc	??_rotate+4,f,c
  5053  004FD0  501E               	movf	rotate@index,w,c
  5054  004FD2  0D09               	mullw	9
  5055  004FD4  0E00               	movlw	low _all_shapes
  5056  004FD6  6E0D               	movwf	(??_rotate+5)& (0+255),c
  5057  004FD8  0E01               	movlw	high _all_shapes
  5058  004FDA  6E0E               	movwf	(??_rotate+6)& (0+255),c
  5059  004FDC  50F3               	movf	prodl,w,c
  5060  004FDE  260D               	addwf	??_rotate+5,f,c
  5061  004FE0  50F4               	movf	prodh,w,c
  5062  004FE2  220E               	addwfc	??_rotate+6,f,c
  5063  004FE4  501D               	movf	rotate@k_319,w,c
  5064  004FE6  0D02               	mullw	2
  5065  004FE8  50F3               	movf	prodl,w,c
  5066  004FEA  260D               	addwf	??_rotate+5,f,c
  5067  004FEC  50F4               	movf	prodh,w,c
  5068  004FEE  220E               	addwfc	??_rotate+6,f,c
  5069  004FF0  0E01               	movlw	1
  5070  004FF2  240D               	addwf	??_rotate+5,w,c
  5071  004FF4  6ED9               	movwf	fsr2l,c
  5072  004FF6  0E00               	movlw	0
  5073  004FF8  200E               	addwfc	??_rotate+6,w,c
  5074  004FFA  6EDA               	movwf	fsr2h,c
  5075  004FFC  50DF               	movf	indf2,w,c
  5076  004FFE  6E0F               	movwf	(??_rotate+7)& (0+255),c
  5077  005000  500F               	movf	??_rotate+7,w,c
  5078  005002  0D01               	mullw	1
  5079  005004  50F3               	movf	prodl,w,c
  5080  005006  240B               	addwf	??_rotate+3,w,c
  5081  005008  6ED9               	movwf	fsr2l,c
  5082  00500A  50F4               	movf	prodh,w,c
  5083  00500C  200C               	addwfc	??_rotate+4,w,c
  5084  00500E  6EDA               	movwf	fsr2h,c
  5085  005010  0E30               	movlw	48
  5086  005012  6EDF               	movwf	indf2,c
  5087                           
  5088                           ;main.c: 935: all_shapes[index].index[k].x=new_coord[2*k];
  5089  005014  501D               	movf	rotate@k_319,w,c
  5090  005016  0D02               	mullw	2
  5091  005018  0E10               	movlw	low rotate@new_coord
  5092  00501A  24F3               	addwf	prodl,w,c
  5093  00501C  6ED9               	movwf	fsr2l,c
  5094  00501E  0E00               	movlw	high rotate@new_coord
  5095  005020  20F4               	addwfc	prodh,w,c
  5096  005022  6EDA               	movwf	fsr2h,c
  5097  005024  501E               	movf	rotate@index,w,c
  5098  005026  0D09               	mullw	9
  5099  005028  0E00               	movlw	low _all_shapes
  5100  00502A  6E08               	movwf	??_rotate& (0+255),c
  5101  00502C  0E01               	movlw	high _all_shapes
  5102  00502E  6E09               	movwf	(??_rotate+1)& (0+255),c
  5103  005030  50F3               	movf	prodl,w,c
  5104  005032  2608               	addwf	??_rotate,f,c
  5105  005034  50F4               	movf	prodh,w,c
  5106  005036  2209               	addwfc	??_rotate+1,f,c
  5107  005038  501D               	movf	rotate@k_319,w,c
  5108  00503A  0D02               	mullw	2
  5109  00503C  50F3               	movf	prodl,w,c
  5110  00503E  2408               	addwf	??_rotate,w,c
  5111  005040  6EE1               	movwf	fsr1l,c
  5112  005042  50F4               	movf	prodh,w,c
  5113  005044  2009               	addwfc	??_rotate+1,w,c
  5114  005046  6EE2               	movwf	fsr1h,c
  5115  005048  CFDF FFE7          	movff	indf2,indf1
  5116                           
  5117                           ;main.c: 936: all_shapes[index].index[k].y=new_coord[2*k+1];
  5118  00504C  501D               	movf	rotate@k_319,w,c
  5119  00504E  6E08               	movwf	??_rotate& (0+255),c
  5120  005050  6A09               	clrf	(??_rotate+1)& (0+255),c
  5121  005052  90D8               	bcf	status,0,c
  5122  005054  3608               	rlcf	??_rotate,f,c
  5123  005056  3609               	rlcf	??_rotate+1,f,c
  5124  005058  0E01               	movlw	1
  5125  00505A  2608               	addwf	??_rotate,f,c
  5126  00505C  0E00               	movlw	0
  5127  00505E  2209               	addwfc	??_rotate+1,f,c
  5128  005060  0E10               	movlw	low rotate@new_coord
  5129  005062  2408               	addwf	??_rotate,w,c
  5130  005064  6ED9               	movwf	fsr2l,c
  5131  005066  0E00               	movlw	high rotate@new_coord
  5132  005068  2009               	addwfc	??_rotate+1,w,c
  5133  00506A  6EDA               	movwf	fsr2h,c
  5134  00506C  501E               	movf	rotate@index,w,c
  5135  00506E  0D09               	mullw	9
  5136  005070  0E00               	movlw	low _all_shapes
  5137  005072  6E0A               	movwf	(??_rotate+2)& (0+255),c
  5138  005074  0E01               	movlw	high _all_shapes
  5139  005076  6E0B               	movwf	(??_rotate+3)& (0+255),c
  5140  005078  50F3               	movf	prodl,w,c
  5141  00507A  260A               	addwf	??_rotate+2,f,c
  5142  00507C  50F4               	movf	prodh,w,c
  5143  00507E  220B               	addwfc	??_rotate+3,f,c
  5144  005080  501D               	movf	rotate@k_319,w,c
  5145  005082  0D02               	mullw	2
  5146  005084  50F3               	movf	prodl,w,c
  5147  005086  260A               	addwf	??_rotate+2,f,c
  5148  005088  50F4               	movf	prodh,w,c
  5149  00508A  220B               	addwfc	??_rotate+3,f,c
  5150  00508C  0E01               	movlw	1
  5151  00508E  240A               	addwf	??_rotate+2,w,c
  5152  005090  6EE1               	movwf	fsr1l,c
  5153  005092  0E00               	movlw	0
  5154  005094  200B               	addwfc	??_rotate+3,w,c
  5155  005096  6EE2               	movwf	fsr1h,c
  5156  005098  CFDF FFE7          	movff	indf2,indf1
  5157                           
  5158                           ;main.c: 937: array_data[all_shapes[index].index[k].x][all_shapes[index].index[k].y]='1'
      +                          ;
  5159  00509C  501E               	movf	rotate@index,w,c
  5160  00509E  0D09               	mullw	9
  5161  0050A0  0E00               	movlw	low _all_shapes
  5162  0050A2  6E08               	movwf	??_rotate& (0+255),c
  5163  0050A4  0E01               	movlw	high _all_shapes
  5164  0050A6  6E09               	movwf	(??_rotate+1)& (0+255),c
  5165  0050A8  50F3               	movf	prodl,w,c
  5166  0050AA  2608               	addwf	??_rotate,f,c
  5167  0050AC  50F4               	movf	prodh,w,c
  5168  0050AE  2209               	addwfc	??_rotate+1,f,c
  5169  0050B0  501D               	movf	rotate@k_319,w,c
  5170  0050B2  0D02               	mullw	2
  5171  0050B4  50F3               	movf	prodl,w,c
  5172  0050B6  2408               	addwf	??_rotate,w,c
  5173  0050B8  6ED9               	movwf	fsr2l,c
  5174  0050BA  50F4               	movf	prodh,w,c
  5175  0050BC  2009               	addwfc	??_rotate+1,w,c
  5176  0050BE  6EDA               	movwf	fsr2h,c
  5177  0050C0  50DF               	movf	indf2,w,c
  5178  0050C2  6E0A               	movwf	(??_rotate+2)& (0+255),c
  5179  0050C4  500A               	movf	??_rotate+2,w,c
  5180  0050C6  0D0C               	mullw	12
  5181  0050C8  0E00               	movlw	low _array_data
  5182  0050CA  6E0B               	movwf	(??_rotate+3)& (0+255),c
  5183  0050CC  0E02               	movlw	high _array_data
  5184  0050CE  6E0C               	movwf	(??_rotate+4)& (0+255),c
  5185  0050D0  50F3               	movf	prodl,w,c
  5186  0050D2  260B               	addwf	??_rotate+3,f,c
  5187  0050D4  50F4               	movf	prodh,w,c
  5188  0050D6  220C               	addwfc	??_rotate+4,f,c
  5189  0050D8  501E               	movf	rotate@index,w,c
  5190  0050DA  0D09               	mullw	9
  5191  0050DC  0E00               	movlw	low _all_shapes
  5192  0050DE  6E0D               	movwf	(??_rotate+5)& (0+255),c
  5193  0050E0  0E01               	movlw	high _all_shapes
  5194  0050E2  6E0E               	movwf	(??_rotate+6)& (0+255),c
  5195  0050E4  50F3               	movf	prodl,w,c
  5196  0050E6  260D               	addwf	??_rotate+5,f,c
  5197  0050E8  50F4               	movf	prodh,w,c
  5198  0050EA  220E               	addwfc	??_rotate+6,f,c
  5199  0050EC  501D               	movf	rotate@k_319,w,c
  5200  0050EE  0D02               	mullw	2
  5201  0050F0  50F3               	movf	prodl,w,c
  5202  0050F2  260D               	addwf	??_rotate+5,f,c
  5203  0050F4  50F4               	movf	prodh,w,c
  5204  0050F6  220E               	addwfc	??_rotate+6,f,c
  5205  0050F8  0E01               	movlw	1
  5206  0050FA  240D               	addwf	??_rotate+5,w,c
  5207  0050FC  6ED9               	movwf	fsr2l,c
  5208  0050FE  0E00               	movlw	0
  5209  005100  200E               	addwfc	??_rotate+6,w,c
  5210  005102  6EDA               	movwf	fsr2h,c
  5211  005104  50DF               	movf	indf2,w,c
  5212  005106  6E0F               	movwf	(??_rotate+7)& (0+255),c
  5213  005108  500F               	movf	??_rotate+7,w,c
  5214  00510A  0D01               	mullw	1
  5215  00510C  50F3               	movf	prodl,w,c
  5216  00510E  240B               	addwf	??_rotate+3,w,c
  5217  005110  6ED9               	movwf	fsr2l,c
  5218  005112  50F4               	movf	prodh,w,c
  5219  005114  200C               	addwfc	??_rotate+4,w,c
  5220  005116  6EDA               	movwf	fsr2h,c
  5221  005118  0E31               	movlw	49
  5222  00511A  6EDF               	movwf	indf2,c
  5223  00511C  2A1D               	incf	rotate@k_319,f,c
  5224  00511E  D736               	goto	l4431
  5225  005120                     __end_of_rotate:
  5226                           	opt stack 0
  5227                           tblptru	equ	0xFF8
  5228                           tblptrh	equ	0xFF7
  5229                           tblptrl	equ	0xFF6
  5230                           tablat	equ	0xFF5
  5231                           prodh	equ	0xFF4
  5232                           prodl	equ	0xFF3
  5233                           intcon	equ	0xFF2
  5234                           postinc0	equ	0xFEE
  5235                           wreg	equ	0xFE8
  5236                           indf1	equ	0xFE7
  5237                           postdec1	equ	0xFE5
  5238                           fsr1h	equ	0xFE2
  5239                           fsr1l	equ	0xFE1
  5240                           indf2	equ	0xFDF
  5241                           postinc2	equ	0xFDE
  5242                           fsr2h	equ	0xFDA
  5243                           fsr2l	equ	0xFD9
  5244                           status	equ	0xFD8
  5245                           
  5246 ;; *************** function _pwmStop *****************
  5247 ;; Defined at:
  5248 ;;		line 77 in file "glcd_library/mcu.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;		None
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;		None
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  1    wreg      void 
  5255 ;; Registers used:
  5256 ;;		None
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5262 ;;      Params:         0       0       0       0       0       0       0       0       0
  5263 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5265 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5266 ;;Total ram usage:        0 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_main
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text3
  5276  003A82                     __ptext3:
  5277                           	opt stack 0
  5278  003A82                     _pwmStop:
  5279                           	opt stack 30
  5280                           
  5281                           ;mcu.c: 79: T2CONbits.TMR2ON = 0;
  5282                           
  5283                           ;incstack = 0
  5284  003A82  94CA               	bcf	4042,2,c	;volatile
  5285  003A84  0012               	return		;funcret
  5286  003A86                     __end_of_pwmStop:
  5287                           	opt stack 0
  5288                           tblptru	equ	0xFF8
  5289                           tblptrh	equ	0xFF7
  5290                           tblptrl	equ	0xFF6
  5291                           tablat	equ	0xFF5
  5292                           prodh	equ	0xFF4
  5293                           prodl	equ	0xFF3
  5294                           intcon	equ	0xFF2
  5295                           postinc0	equ	0xFEE
  5296                           wreg	equ	0xFE8
  5297                           indf1	equ	0xFE7
  5298                           postdec1	equ	0xFE5
  5299                           fsr1h	equ	0xFE2
  5300                           fsr1l	equ	0xFE1
  5301                           indf2	equ	0xFDF
  5302                           postinc2	equ	0xFDE
  5303                           fsr2h	equ	0xFDA
  5304                           fsr2l	equ	0xFD9
  5305                           status	equ	0xFD8
  5306                           
  5307 ;; *************** function _pwmStart *****************
  5308 ;; Defined at:
  5309 ;;		line 71 in file "glcd_library/mcu.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;		None
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;		None
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  1    wreg      void 
  5316 ;; Registers used:
  5317 ;;		None
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5323 ;;      Params:         0       0       0       0       0       0       0       0       0
  5324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5325 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5326 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5327 ;;Total ram usage:        0 bytes
  5328 ;; Hardware stack levels used:    1
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_main
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text4
  5337  003A7E                     __ptext4:
  5338                           	opt stack 0
  5339  003A7E                     _pwmStart:
  5340                           	opt stack 30
  5341                           
  5342                           ;mcu.c: 73: T2CONbits.TMR2ON = 1;
  5343                           
  5344                           ;incstack = 0
  5345  003A7E  84CA               	bsf	4042,2,c	;volatile
  5346  003A80  0012               	return		;funcret
  5347  003A82                     __end_of_pwmStart:
  5348                           	opt stack 0
  5349                           tblptru	equ	0xFF8
  5350                           tblptrh	equ	0xFF7
  5351                           tblptrl	equ	0xFF6
  5352                           tablat	equ	0xFF5
  5353                           prodh	equ	0xFF4
  5354                           prodl	equ	0xFF3
  5355                           intcon	equ	0xFF2
  5356                           postinc0	equ	0xFEE
  5357                           wreg	equ	0xFE8
  5358                           indf1	equ	0xFE7
  5359                           postdec1	equ	0xFE5
  5360                           fsr1h	equ	0xFE2
  5361                           fsr1l	equ	0xFE1
  5362                           indf2	equ	0xFDF
  5363                           postinc2	equ	0xFDE
  5364                           fsr2h	equ	0xFDA
  5365                           fsr2l	equ	0xFD9
  5366                           status	equ	0xFD8
  5367                           
  5368 ;; *************** function _moveRight *****************
  5369 ;; Defined at:
  5370 ;;		line 418 in file "main.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;  index           1    wreg     unsigned char 
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;  index           1   23[COMRAM] unsigned char 
  5375 ;;  j               1   19[COMRAM] unsigned char 
  5376 ;;  j               1   21[COMRAM] unsigned char 
  5377 ;;  j               1   20[COMRAM] unsigned char 
  5378 ;;  i               1   22[COMRAM] unsigned char 
  5379 ;;  ok              1   18[COMRAM] unsigned char 
  5380 ;;  b               1   17[COMRAM] unsigned char 
  5381 ;;  a               1   16[COMRAM] unsigned char 
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  1    wreg      void 
  5384 ;; Registers used:
  5385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5391 ;;      Params:         0       0       0       0       0       0       0       0       0
  5392 ;;      Locals:         8       0       0       0       0       0       0       0       0
  5393 ;;      Temps:          9       0       0       0       0       0       0       0       0
  5394 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5395 ;;Total ram usage:       17 bytes
  5396 ;; Hardware stack levels used:    1
  5397 ;; Hardware stack levels required when called:    1
  5398 ;; This function calls:
  5399 ;;		___wmul
  5400 ;;		_dontBelong2Shape
  5401 ;; This function is called by:
  5402 ;;		_main
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text5
  5407  00556C                     __ptext5:
  5408                           	opt stack 0
  5409  00556C                     _moveRight:
  5410                           	opt stack 29
  5411                           
  5412                           ;incstack = 0
  5413                           ;moveRight@index stored from wreg
  5414  00556C  6E18               	movwf	moveRight@index,c
  5415                           
  5416                           ;main.c: 423: uint8_t a,b,ok;
  5417                           ;main.c: 424: for (uint8_t i = 0; i < 4; ++i){
  5418  00556E  0E00               	movlw	0
  5419  005570  6E17               	movwf	moveRight@i,c
  5420  005572                     l3831:
  5421  005572  0E03               	movlw	3
  5422  005574  6417               	cpfsgt	moveRight@i,c
  5423  005576  D001               	goto	l154
  5424  005578  D0DE               	goto	u4150
  5425  00557A                     l154:
  5426                           
  5427                           ;main.c: 425: for (uint8_t j = i + 1; j < 4; ++j){
  5428  00557A  2817               	incf	moveRight@i,w,c
  5429  00557C  6E14               	movwf	moveRight@j,c
  5430  00557E  0E03               	movlw	3
  5431  005580  6414               	cpfsgt	moveRight@j,c
  5432  005582  D001               	goto	l156
  5433  005584  D0D6               	goto	u4140
  5434  005586                     l156:
  5435                           
  5436                           ;main.c: 426: if (all_shapes[index].index[i].x < all_shapes[index].index[j].x){
  5437  005586  5018               	movf	moveRight@index,w,c
  5438  005588  0D09               	mullw	9
  5439  00558A  0E00               	movlw	low _all_shapes
  5440  00558C  6E08               	movwf	??_moveRight& (0+255),c
  5441  00558E  0E01               	movlw	high _all_shapes
  5442  005590  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5443  005592  50F3               	movf	prodl,w,c
  5444  005594  2608               	addwf	??_moveRight,f,c
  5445  005596  50F4               	movf	prodh,w,c
  5446  005598  2209               	addwfc	??_moveRight+1,f,c
  5447  00559A  5014               	movf	moveRight@j,w,c
  5448  00559C  0D02               	mullw	2
  5449  00559E  50F3               	movf	prodl,w,c
  5450  0055A0  2408               	addwf	??_moveRight,w,c
  5451  0055A2  6ED9               	movwf	fsr2l,c
  5452  0055A4  50F4               	movf	prodh,w,c
  5453  0055A6  2009               	addwfc	??_moveRight+1,w,c
  5454  0055A8  6EDA               	movwf	fsr2h,c
  5455  0055AA  5018               	movf	moveRight@index,w,c
  5456  0055AC  0D09               	mullw	9
  5457  0055AE  0E00               	movlw	low _all_shapes
  5458  0055B0  6E0B               	movwf	(??_moveRight+3)& (0+255),c
  5459  0055B2  0E01               	movlw	high _all_shapes
  5460  0055B4  6E0C               	movwf	(??_moveRight+4)& (0+255),c
  5461  0055B6  50F3               	movf	prodl,w,c
  5462  0055B8  260B               	addwf	??_moveRight+3,f,c
  5463  0055BA  50F4               	movf	prodh,w,c
  5464  0055BC  220C               	addwfc	??_moveRight+4,f,c
  5465  0055BE  5017               	movf	moveRight@i,w,c
  5466  0055C0  0D02               	mullw	2
  5467  0055C2  50F3               	movf	prodl,w,c
  5468  0055C4  240B               	addwf	??_moveRight+3,w,c
  5469  0055C6  6EE1               	movwf	fsr1l,c
  5470  0055C8  50F4               	movf	prodh,w,c
  5471  0055CA  200C               	addwfc	??_moveRight+4,w,c
  5472  0055CC  6EE2               	movwf	fsr1h,c
  5473  0055CE  50DE               	movf	postinc2,w,c
  5474  0055D0  5CE6               	subwf	postinc1,w,c
  5475  0055D2  B0D8               	btfsc	status,0,c
  5476  0055D4  D0AC               	goto	l158
  5477                           
  5478                           ;main.c: 427: a = all_shapes[index].index[i].y;
  5479  0055D6  5018               	movf	moveRight@index,w,c
  5480  0055D8  0D09               	mullw	9
  5481  0055DA  0E00               	movlw	low _all_shapes
  5482  0055DC  6E08               	movwf	??_moveRight& (0+255),c
  5483  0055DE  0E01               	movlw	high _all_shapes
  5484  0055E0  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5485  0055E2  50F3               	movf	prodl,w,c
  5486  0055E4  2608               	addwf	??_moveRight,f,c
  5487  0055E6  50F4               	movf	prodh,w,c
  5488  0055E8  2209               	addwfc	??_moveRight+1,f,c
  5489  0055EA  5017               	movf	moveRight@i,w,c
  5490  0055EC  0D02               	mullw	2
  5491  0055EE  50F3               	movf	prodl,w,c
  5492  0055F0  2608               	addwf	??_moveRight,f,c
  5493  0055F2  50F4               	movf	prodh,w,c
  5494  0055F4  2209               	addwfc	??_moveRight+1,f,c
  5495  0055F6  0E01               	movlw	1
  5496  0055F8  2408               	addwf	??_moveRight,w,c
  5497  0055FA  6ED9               	movwf	fsr2l,c
  5498  0055FC  0E00               	movlw	0
  5499  0055FE  2009               	addwfc	??_moveRight+1,w,c
  5500  005600  6EDA               	movwf	fsr2h,c
  5501  005602  50DF               	movf	indf2,w,c
  5502  005604  6E11               	movwf	moveRight@a,c
  5503                           
  5504                           ;main.c: 428: b = all_shapes[index].index[i].x;
  5505  005606  5018               	movf	moveRight@index,w,c
  5506  005608  0D09               	mullw	9
  5507  00560A  0E00               	movlw	low _all_shapes
  5508  00560C  6E08               	movwf	??_moveRight& (0+255),c
  5509  00560E  0E01               	movlw	high _all_shapes
  5510  005610  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5511  005612  50F3               	movf	prodl,w,c
  5512  005614  2608               	addwf	??_moveRight,f,c
  5513  005616  50F4               	movf	prodh,w,c
  5514  005618  2209               	addwfc	??_moveRight+1,f,c
  5515  00561A  5017               	movf	moveRight@i,w,c
  5516  00561C  0D02               	mullw	2
  5517  00561E  50F3               	movf	prodl,w,c
  5518  005620  2408               	addwf	??_moveRight,w,c
  5519  005622  6ED9               	movwf	fsr2l,c
  5520  005624  50F4               	movf	prodh,w,c
  5521  005626  2009               	addwfc	??_moveRight+1,w,c
  5522  005628  6EDA               	movwf	fsr2h,c
  5523  00562A  50DF               	movf	indf2,w,c
  5524  00562C  6E12               	movwf	moveRight@b,c
  5525                           
  5526                           ;main.c: 429: all_shapes[index].index[i].y = all_shapes[index].index[j].y;
  5527  00562E  5018               	movf	moveRight@index,w,c
  5528  005630  0D09               	mullw	9
  5529  005632  0E00               	movlw	low _all_shapes
  5530  005634  6E08               	movwf	??_moveRight& (0+255),c
  5531  005636  0E01               	movlw	high _all_shapes
  5532  005638  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5533  00563A  50F3               	movf	prodl,w,c
  5534  00563C  2608               	addwf	??_moveRight,f,c
  5535  00563E  50F4               	movf	prodh,w,c
  5536  005640  2209               	addwfc	??_moveRight+1,f,c
  5537  005642  5014               	movf	moveRight@j,w,c
  5538  005644  0D02               	mullw	2
  5539  005646  50F3               	movf	prodl,w,c
  5540  005648  2608               	addwf	??_moveRight,f,c
  5541  00564A  50F4               	movf	prodh,w,c
  5542  00564C  2209               	addwfc	??_moveRight+1,f,c
  5543  00564E  0E01               	movlw	1
  5544  005650  2408               	addwf	??_moveRight,w,c
  5545  005652  6ED9               	movwf	fsr2l,c
  5546  005654  0E00               	movlw	0
  5547  005656  2009               	addwfc	??_moveRight+1,w,c
  5548  005658  6EDA               	movwf	fsr2h,c
  5549  00565A  5018               	movf	moveRight@index,w,c
  5550  00565C  0D09               	mullw	9
  5551  00565E  0E00               	movlw	low _all_shapes
  5552  005660  6E0A               	movwf	(??_moveRight+2)& (0+255),c
  5553  005662  0E01               	movlw	high _all_shapes
  5554  005664  6E0B               	movwf	(??_moveRight+3)& (0+255),c
  5555  005666  50F3               	movf	prodl,w,c
  5556  005668  260A               	addwf	??_moveRight+2,f,c
  5557  00566A  50F4               	movf	prodh,w,c
  5558  00566C  220B               	addwfc	??_moveRight+3,f,c
  5559  00566E  5017               	movf	moveRight@i,w,c
  5560  005670  0D02               	mullw	2
  5561  005672  50F3               	movf	prodl,w,c
  5562  005674  260A               	addwf	??_moveRight+2,f,c
  5563  005676  50F4               	movf	prodh,w,c
  5564  005678  220B               	addwfc	??_moveRight+3,f,c
  5565  00567A  0E01               	movlw	1
  5566  00567C  240A               	addwf	??_moveRight+2,w,c
  5567  00567E  6EE1               	movwf	fsr1l,c
  5568  005680  0E00               	movlw	0
  5569  005682  200B               	addwfc	??_moveRight+3,w,c
  5570  005684  6EE2               	movwf	fsr1h,c
  5571  005686  CFDF FFE7          	movff	indf2,indf1
  5572                           
  5573                           ;main.c: 430: all_shapes[index].index[i].x = all_shapes[index].index[j].x;
  5574  00568A  5018               	movf	moveRight@index,w,c
  5575  00568C  0D09               	mullw	9
  5576  00568E  0E00               	movlw	low _all_shapes
  5577  005690  6E08               	movwf	??_moveRight& (0+255),c
  5578  005692  0E01               	movlw	high _all_shapes
  5579  005694  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5580  005696  50F3               	movf	prodl,w,c
  5581  005698  2608               	addwf	??_moveRight,f,c
  5582  00569A  50F4               	movf	prodh,w,c
  5583  00569C  2209               	addwfc	??_moveRight+1,f,c
  5584  00569E  5014               	movf	moveRight@j,w,c
  5585  0056A0  0D02               	mullw	2
  5586  0056A2  50F3               	movf	prodl,w,c
  5587  0056A4  2408               	addwf	??_moveRight,w,c
  5588  0056A6  6ED9               	movwf	fsr2l,c
  5589  0056A8  50F4               	movf	prodh,w,c
  5590  0056AA  2009               	addwfc	??_moveRight+1,w,c
  5591  0056AC  6EDA               	movwf	fsr2h,c
  5592  0056AE  5018               	movf	moveRight@index,w,c
  5593  0056B0  0D09               	mullw	9
  5594  0056B2  0E00               	movlw	low _all_shapes
  5595  0056B4  6E0A               	movwf	(??_moveRight+2)& (0+255),c
  5596  0056B6  0E01               	movlw	high _all_shapes
  5597  0056B8  6E0B               	movwf	(??_moveRight+3)& (0+255),c
  5598  0056BA  50F3               	movf	prodl,w,c
  5599  0056BC  260A               	addwf	??_moveRight+2,f,c
  5600  0056BE  50F4               	movf	prodh,w,c
  5601  0056C0  220B               	addwfc	??_moveRight+3,f,c
  5602  0056C2  5017               	movf	moveRight@i,w,c
  5603  0056C4  0D02               	mullw	2
  5604  0056C6  50F3               	movf	prodl,w,c
  5605  0056C8  240A               	addwf	??_moveRight+2,w,c
  5606  0056CA  6EE1               	movwf	fsr1l,c
  5607  0056CC  50F4               	movf	prodh,w,c
  5608  0056CE  200B               	addwfc	??_moveRight+3,w,c
  5609  0056D0  6EE2               	movwf	fsr1h,c
  5610  0056D2  CFDF FFE7          	movff	indf2,indf1
  5611                           
  5612                           ;main.c: 431: all_shapes[index].index[j].y = a;
  5613  0056D6  5018               	movf	moveRight@index,w,c
  5614  0056D8  0D09               	mullw	9
  5615  0056DA  0E00               	movlw	low _all_shapes
  5616  0056DC  6E08               	movwf	??_moveRight& (0+255),c
  5617  0056DE  0E01               	movlw	high _all_shapes
  5618  0056E0  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5619  0056E2  50F3               	movf	prodl,w,c
  5620  0056E4  2608               	addwf	??_moveRight,f,c
  5621  0056E6  50F4               	movf	prodh,w,c
  5622  0056E8  2209               	addwfc	??_moveRight+1,f,c
  5623  0056EA  5014               	movf	moveRight@j,w,c
  5624  0056EC  0D02               	mullw	2
  5625  0056EE  50F3               	movf	prodl,w,c
  5626  0056F0  2608               	addwf	??_moveRight,f,c
  5627  0056F2  50F4               	movf	prodh,w,c
  5628  0056F4  2209               	addwfc	??_moveRight+1,f,c
  5629  0056F6  0E01               	movlw	1
  5630  0056F8  2408               	addwf	??_moveRight,w,c
  5631  0056FA  6ED9               	movwf	fsr2l,c
  5632  0056FC  0E00               	movlw	0
  5633  0056FE  2009               	addwfc	??_moveRight+1,w,c
  5634  005700  6EDA               	movwf	fsr2h,c
  5635  005702  C011  FFDF         	movff	moveRight@a,indf2
  5636                           
  5637                           ;main.c: 432: all_shapes[index].index[j].x = b;
  5638  005706  5018               	movf	moveRight@index,w,c
  5639  005708  0D09               	mullw	9
  5640  00570A  0E00               	movlw	low _all_shapes
  5641  00570C  6E08               	movwf	??_moveRight& (0+255),c
  5642  00570E  0E01               	movlw	high _all_shapes
  5643  005710  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5644  005712  50F3               	movf	prodl,w,c
  5645  005714  2608               	addwf	??_moveRight,f,c
  5646  005716  50F4               	movf	prodh,w,c
  5647  005718  2209               	addwfc	??_moveRight+1,f,c
  5648  00571A  5014               	movf	moveRight@j,w,c
  5649  00571C  0D02               	mullw	2
  5650  00571E  50F3               	movf	prodl,w,c
  5651  005720  2408               	addwf	??_moveRight,w,c
  5652  005722  6ED9               	movwf	fsr2l,c
  5653  005724  50F4               	movf	prodh,w,c
  5654  005726  2009               	addwfc	??_moveRight+1,w,c
  5655  005728  6EDA               	movwf	fsr2h,c
  5656  00572A  C012  FFDF         	movff	moveRight@b,indf2
  5657  00572E                     l158:
  5658  00572E  2A14               	incf	moveRight@j,f,c
  5659  005730  D726               	goto	L1
  5660  005732                     u4140:
  5661  005732  2A17               	incf	moveRight@i,f,c
  5662  005734  D71E               	goto	l3831
  5663  005736                     u4150:
  5664                           
  5665                           ;main.c: 433: }
  5666                           ;main.c: 434: }
  5667                           ;main.c: 435: }
  5668                           ;main.c: 438: for(uint8_t j=0;j<4;j++){
  5669  005736  0E00               	movlw	0
  5670  005738  6E15               	movwf	moveRight@j_255,c
  5671  00573A                     l3857:
  5672  00573A  0E03               	movlw	3
  5673  00573C  6415               	cpfsgt	moveRight@j_255,c
  5674  00573E  D001               	goto	l159
  5675  005740  D09D               	goto	u4200
  5676  005742                     l159:
  5677                           
  5678                           ;main.c: 440: if(all_shapes[index].index[j].x <17 && (array_data[(all_shapes[index].inde
      +                          x[j].x)+1][all_shapes[index].index[j].y]!='1' || dontBelong2Shape(index,(all_shapes[inde
      +                          x].index[j].x)+1,all_shapes[index].index[j].y))){
  5679  005742  5018               	movf	moveRight@index,w,c
  5680  005744  0D09               	mullw	9
  5681  005746  0E00               	movlw	low _all_shapes
  5682  005748  6E08               	movwf	??_moveRight& (0+255),c
  5683  00574A  0E01               	movlw	high _all_shapes
  5684  00574C  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5685  00574E  50F3               	movf	prodl,w,c
  5686  005750  2608               	addwf	??_moveRight,f,c
  5687  005752  50F4               	movf	prodh,w,c
  5688  005754  2209               	addwfc	??_moveRight+1,f,c
  5689  005756  5015               	movf	moveRight@j_255,w,c
  5690  005758  0D02               	mullw	2
  5691  00575A  50F3               	movf	prodl,w,c
  5692  00575C  2408               	addwf	??_moveRight,w,c
  5693  00575E  6ED9               	movwf	fsr2l,c
  5694  005760  50F4               	movf	prodh,w,c
  5695  005762  2009               	addwfc	??_moveRight+1,w,c
  5696  005764  6EDA               	movwf	fsr2h,c
  5697  005766  0E11               	movlw	17
  5698  005768  60DF               	cpfslt	indf2,c
  5699  00576A  D083               	goto	l161
  5700  00576C  5018               	movf	moveRight@index,w,c
  5701  00576E  0D09               	mullw	9
  5702  005770  0E00               	movlw	low _all_shapes
  5703  005772  6E08               	movwf	??_moveRight& (0+255),c
  5704  005774  0E01               	movlw	high _all_shapes
  5705  005776  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5706  005778  50F3               	movf	prodl,w,c
  5707  00577A  2608               	addwf	??_moveRight,f,c
  5708  00577C  50F4               	movf	prodh,w,c
  5709  00577E  2209               	addwfc	??_moveRight+1,f,c
  5710  005780  5015               	movf	moveRight@j_255,w,c
  5711  005782  0D02               	mullw	2
  5712  005784  50F3               	movf	prodl,w,c
  5713  005786  2408               	addwf	??_moveRight,w,c
  5714  005788  6ED9               	movwf	fsr2l,c
  5715  00578A  50F4               	movf	prodh,w,c
  5716  00578C  2009               	addwfc	??_moveRight+1,w,c
  5717  00578E  6EDA               	movwf	fsr2h,c
  5718  005790  50DF               	movf	indf2,w,c
  5719  005792  6E0A               	movwf	(??_moveRight+2)& (0+255),c
  5720  005794  0E01               	movlw	1
  5721  005796  240A               	addwf	??_moveRight+2,w,c
  5722  005798  6E01               	movwf	___wmul@multiplier,c
  5723  00579A  6A02               	clrf	___wmul@multiplier+1,c
  5724  00579C  0E00               	movlw	0
  5725  00579E  2202               	addwfc	___wmul@multiplier+1,f,c
  5726  0057A0  0E00               	movlw	0
  5727  0057A2  6E04               	movwf	___wmul@multiplicand+1,c
  5728  0057A4  0E0C               	movlw	12
  5729  0057A6  6E03               	movwf	___wmul@multiplicand,c
  5730  0057A8  EC8D  F01D         	call	___wmul	;wreg free
  5731  0057AC  0E00               	movlw	low _array_data
  5732  0057AE  6E0B               	movwf	(??_moveRight+3)& (0+255),c
  5733  0057B0  0E02               	movlw	high _array_data
  5734  0057B2  6E0C               	movwf	(??_moveRight+4)& (0+255),c
  5735  0057B4  5001               	movf	?___wmul,w,c
  5736  0057B6  260B               	addwf	??_moveRight+3,f,c
  5737  0057B8  5002               	movf	?___wmul+1,w,c
  5738  0057BA  220C               	addwfc	??_moveRight+4,f,c
  5739  0057BC  5018               	movf	moveRight@index,w,c
  5740  0057BE  0D09               	mullw	9
  5741  0057C0  0E00               	movlw	low _all_shapes
  5742  0057C2  6E0D               	movwf	(??_moveRight+5)& (0+255),c
  5743  0057C4  0E01               	movlw	high _all_shapes
  5744  0057C6  6E0E               	movwf	(??_moveRight+6)& (0+255),c
  5745  0057C8  50F3               	movf	prodl,w,c
  5746  0057CA  260D               	addwf	??_moveRight+5,f,c
  5747  0057CC  50F4               	movf	prodh,w,c
  5748  0057CE  220E               	addwfc	??_moveRight+6,f,c
  5749  0057D0  5015               	movf	moveRight@j_255,w,c
  5750  0057D2  0D02               	mullw	2
  5751  0057D4  50F3               	movf	prodl,w,c
  5752  0057D6  260D               	addwf	??_moveRight+5,f,c
  5753  0057D8  50F4               	movf	prodh,w,c
  5754  0057DA  220E               	addwfc	??_moveRight+6,f,c
  5755  0057DC  0E01               	movlw	1
  5756  0057DE  240D               	addwf	??_moveRight+5,w,c
  5757  0057E0  6ED9               	movwf	fsr2l,c
  5758  0057E2  0E00               	movlw	0
  5759  0057E4  200E               	addwfc	??_moveRight+6,w,c
  5760  0057E6  6EDA               	movwf	fsr2h,c
  5761  0057E8  50DF               	movf	indf2,w,c
  5762  0057EA  6E0F               	movwf	(??_moveRight+7)& (0+255),c
  5763  0057EC  500F               	movf	??_moveRight+7,w,c
  5764  0057EE  0D01               	mullw	1
  5765  0057F0  50F3               	movf	prodl,w,c
  5766  0057F2  240B               	addwf	??_moveRight+3,w,c
  5767  0057F4  6ED9               	movwf	fsr2l,c
  5768  0057F6  50F4               	movf	prodh,w,c
  5769  0057F8  200C               	addwfc	??_moveRight+4,w,c
  5770  0057FA  6EDA               	movwf	fsr2h,c
  5771  0057FC  0E31               	movlw	49
  5772  0057FE  18DE               	xorwf	postinc2,w,c
  5773  005800  A4D8               	btfss	status,2,c
  5774  005802  D034               	goto	u4190
  5775  005804  5018               	movf	moveRight@index,w,c
  5776  005806  0D09               	mullw	9
  5777  005808  0E00               	movlw	low _all_shapes
  5778  00580A  6E08               	movwf	??_moveRight& (0+255),c
  5779  00580C  0E01               	movlw	high _all_shapes
  5780  00580E  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5781  005810  50F3               	movf	prodl,w,c
  5782  005812  2608               	addwf	??_moveRight,f,c
  5783  005814  50F4               	movf	prodh,w,c
  5784  005816  2209               	addwfc	??_moveRight+1,f,c
  5785  005818  5015               	movf	moveRight@j_255,w,c
  5786  00581A  0D02               	mullw	2
  5787  00581C  50F3               	movf	prodl,w,c
  5788  00581E  2408               	addwf	??_moveRight,w,c
  5789  005820  6ED9               	movwf	fsr2l,c
  5790  005822  50F4               	movf	prodh,w,c
  5791  005824  2009               	addwfc	??_moveRight+1,w,c
  5792  005826  6EDA               	movwf	fsr2h,c
  5793  005828  50DF               	movf	indf2,w,c
  5794  00582A  6E0A               	movwf	(??_moveRight+2)& (0+255),c
  5795  00582C  280A               	incf	??_moveRight+2,w,c
  5796  00582E  6E01               	movwf	dontBelong2Shape@x,c
  5797  005830  5018               	movf	moveRight@index,w,c
  5798  005832  0D09               	mullw	9
  5799  005834  0E00               	movlw	low _all_shapes
  5800  005836  6E0B               	movwf	(??_moveRight+3)& (0+255),c
  5801  005838  0E01               	movlw	high _all_shapes
  5802  00583A  6E0C               	movwf	(??_moveRight+4)& (0+255),c
  5803  00583C  50F3               	movf	prodl,w,c
  5804  00583E  260B               	addwf	??_moveRight+3,f,c
  5805  005840  50F4               	movf	prodh,w,c
  5806  005842  220C               	addwfc	??_moveRight+4,f,c
  5807  005844  5015               	movf	moveRight@j_255,w,c
  5808  005846  0D02               	mullw	2
  5809  005848  50F3               	movf	prodl,w,c
  5810  00584A  260B               	addwf	??_moveRight+3,f,c
  5811  00584C  50F4               	movf	prodh,w,c
  5812  00584E  220C               	addwfc	??_moveRight+4,f,c
  5813  005850  0E01               	movlw	1
  5814  005852  240B               	addwf	??_moveRight+3,w,c
  5815  005854  6ED9               	movwf	fsr2l,c
  5816  005856  0E00               	movlw	0
  5817  005858  200C               	addwfc	??_moveRight+4,w,c
  5818  00585A  6EDA               	movwf	fsr2h,c
  5819  00585C  50DF               	movf	indf2,w,c
  5820  00585E  6E02               	movwf	dontBelong2Shape@y,c
  5821  005860  5018               	movf	moveRight@index,w,c
  5822  005862  ECEE  F01F         	call	_dontBelong2Shape
  5823  005866  0900               	iorlw	0
  5824  005868  B4D8               	btfsc	status,2,c
  5825  00586A  D003               	goto	l161
  5826  00586C                     u4190:
  5827                           
  5828                           ;main.c: 441: ok=1;
  5829  00586C  0E01               	movlw	1
  5830  00586E  6E13               	movwf	moveRight@ok,c
  5831                           
  5832                           ;main.c: 442: }
  5833  005870  D003               	goto	l164
  5834  005872                     l161:
  5835                           
  5836                           ;main.c: 443: else {
  5837                           ;main.c: 444: ok=0;
  5838  005872  0E00               	movlw	0
  5839  005874  6E13               	movwf	moveRight@ok,c
  5840                           
  5841                           ;main.c: 445: break;
  5842  005876  D002               	goto	u4200
  5843  005878                     l164:
  5844  005878  2A15               	incf	moveRight@j_255,f,c
  5845  00587A  D75F               	goto	l3857
  5846  00587C                     u4200:
  5847                           
  5848                           ;main.c: 446: }
  5849                           ;main.c: 447: }
  5850                           ;main.c: 448: if(ok==1){
  5851  00587C  0413               	decf	moveRight@ok,w,c
  5852  00587E  A4D8               	btfss	status,2,c
  5853  005880  0012               	return	
  5854                           
  5855                           ;main.c: 449: for(uint8_t j=0;j<4;j++){
  5856  005882  0E00               	movlw	0
  5857  005884  6E16               	movwf	moveRight@j_256,c
  5858  005886                     l3879:
  5859  005886  0E03               	movlw	3
  5860  005888  6416               	cpfsgt	moveRight@j_256,c
  5861  00588A  D001               	goto	l166
  5862  00588C  0012               	return	
  5863  00588E                     l166:
  5864                           
  5865                           ;main.c: 450: array_data[all_shapes[index].index[j].x][all_shapes[index].index[j].y]='0'
      +                          ;
  5866  00588E  5018               	movf	moveRight@index,w,c
  5867  005890  0D09               	mullw	9
  5868  005892  0E00               	movlw	low _all_shapes
  5869  005894  6E08               	movwf	??_moveRight& (0+255),c
  5870  005896  0E01               	movlw	high _all_shapes
  5871  005898  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5872  00589A  50F3               	movf	prodl,w,c
  5873  00589C  2608               	addwf	??_moveRight,f,c
  5874  00589E  50F4               	movf	prodh,w,c
  5875  0058A0  2209               	addwfc	??_moveRight+1,f,c
  5876  0058A2  5016               	movf	moveRight@j_256,w,c
  5877  0058A4  0D02               	mullw	2
  5878  0058A6  50F3               	movf	prodl,w,c
  5879  0058A8  2408               	addwf	??_moveRight,w,c
  5880  0058AA  6ED9               	movwf	fsr2l,c
  5881  0058AC  50F4               	movf	prodh,w,c
  5882  0058AE  2009               	addwfc	??_moveRight+1,w,c
  5883  0058B0  6EDA               	movwf	fsr2h,c
  5884  0058B2  50DF               	movf	indf2,w,c
  5885  0058B4  6E0A               	movwf	(??_moveRight+2)& (0+255),c
  5886  0058B6  500A               	movf	??_moveRight+2,w,c
  5887  0058B8  0D0C               	mullw	12
  5888  0058BA  0E00               	movlw	low _array_data
  5889  0058BC  6E0B               	movwf	(??_moveRight+3)& (0+255),c
  5890  0058BE  0E02               	movlw	high _array_data
  5891  0058C0  6E0C               	movwf	(??_moveRight+4)& (0+255),c
  5892  0058C2  50F3               	movf	prodl,w,c
  5893  0058C4  260B               	addwf	??_moveRight+3,f,c
  5894  0058C6  50F4               	movf	prodh,w,c
  5895  0058C8  220C               	addwfc	??_moveRight+4,f,c
  5896  0058CA  5018               	movf	moveRight@index,w,c
  5897  0058CC  0D09               	mullw	9
  5898  0058CE  0E00               	movlw	low _all_shapes
  5899  0058D0  6E0D               	movwf	(??_moveRight+5)& (0+255),c
  5900  0058D2  0E01               	movlw	high _all_shapes
  5901  0058D4  6E0E               	movwf	(??_moveRight+6)& (0+255),c
  5902  0058D6  50F3               	movf	prodl,w,c
  5903  0058D8  260D               	addwf	??_moveRight+5,f,c
  5904  0058DA  50F4               	movf	prodh,w,c
  5905  0058DC  220E               	addwfc	??_moveRight+6,f,c
  5906  0058DE  5016               	movf	moveRight@j_256,w,c
  5907  0058E0  0D02               	mullw	2
  5908  0058E2  50F3               	movf	prodl,w,c
  5909  0058E4  260D               	addwf	??_moveRight+5,f,c
  5910  0058E6  50F4               	movf	prodh,w,c
  5911  0058E8  220E               	addwfc	??_moveRight+6,f,c
  5912  0058EA  0E01               	movlw	1
  5913  0058EC  240D               	addwf	??_moveRight+5,w,c
  5914  0058EE  6ED9               	movwf	fsr2l,c
  5915  0058F0  0E00               	movlw	0
  5916  0058F2  200E               	addwfc	??_moveRight+6,w,c
  5917  0058F4  6EDA               	movwf	fsr2h,c
  5918  0058F6  50DF               	movf	indf2,w,c
  5919  0058F8  6E0F               	movwf	(??_moveRight+7)& (0+255),c
  5920  0058FA  500F               	movf	??_moveRight+7,w,c
  5921  0058FC  0D01               	mullw	1
  5922  0058FE  50F3               	movf	prodl,w,c
  5923  005900  240B               	addwf	??_moveRight+3,w,c
  5924  005902  6ED9               	movwf	fsr2l,c
  5925  005904  50F4               	movf	prodh,w,c
  5926  005906  200C               	addwfc	??_moveRight+4,w,c
  5927  005908  6EDA               	movwf	fsr2h,c
  5928  00590A  0E30               	movlw	48
  5929  00590C  6EDF               	movwf	indf2,c
  5930                           
  5931                           ;main.c: 451: all_shapes[index].index[j].x +=1;
  5932  00590E  5018               	movf	moveRight@index,w,c
  5933  005910  0D09               	mullw	9
  5934  005912  0E00               	movlw	low _all_shapes
  5935  005914  6E08               	movwf	??_moveRight& (0+255),c
  5936  005916  0E01               	movlw	high _all_shapes
  5937  005918  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5938  00591A  50F3               	movf	prodl,w,c
  5939  00591C  2608               	addwf	??_moveRight,f,c
  5940  00591E  50F4               	movf	prodh,w,c
  5941  005920  2209               	addwfc	??_moveRight+1,f,c
  5942  005922  5016               	movf	moveRight@j_256,w,c
  5943  005924  0D02               	mullw	2
  5944  005926  50F3               	movf	prodl,w,c
  5945  005928  2408               	addwf	??_moveRight,w,c
  5946  00592A  6ED9               	movwf	fsr2l,c
  5947  00592C  50F4               	movf	prodh,w,c
  5948  00592E  2009               	addwfc	??_moveRight+1,w,c
  5949  005930  6EDA               	movwf	fsr2h,c
  5950  005932  2ADF               	incf	indf2,f,c
  5951                           
  5952                           ;main.c: 452: array_data[all_shapes[index].index[j].x][all_shapes[index].index[j].y]='1'
      +                          ;
  5953  005934  5018               	movf	moveRight@index,w,c
  5954  005936  0D09               	mullw	9
  5955  005938  0E00               	movlw	low _all_shapes
  5956  00593A  6E08               	movwf	??_moveRight& (0+255),c
  5957  00593C  0E01               	movlw	high _all_shapes
  5958  00593E  6E09               	movwf	(??_moveRight+1)& (0+255),c
  5959  005940  50F3               	movf	prodl,w,c
  5960  005942  2608               	addwf	??_moveRight,f,c
  5961  005944  50F4               	movf	prodh,w,c
  5962  005946  2209               	addwfc	??_moveRight+1,f,c
  5963  005948  5016               	movf	moveRight@j_256,w,c
  5964  00594A  0D02               	mullw	2
  5965  00594C  50F3               	movf	prodl,w,c
  5966  00594E  2408               	addwf	??_moveRight,w,c
  5967  005950  6ED9               	movwf	fsr2l,c
  5968  005952  50F4               	movf	prodh,w,c
  5969  005954  2009               	addwfc	??_moveRight+1,w,c
  5970  005956  6EDA               	movwf	fsr2h,c
  5971  005958  50DF               	movf	indf2,w,c
  5972  00595A  6E0A               	movwf	(??_moveRight+2)& (0+255),c
  5973  00595C  500A               	movf	??_moveRight+2,w,c
  5974  00595E  0D0C               	mullw	12
  5975  005960  0E00               	movlw	low _array_data
  5976  005962  6E0B               	movwf	(??_moveRight+3)& (0+255),c
  5977  005964  0E02               	movlw	high _array_data
  5978  005966  6E0C               	movwf	(??_moveRight+4)& (0+255),c
  5979  005968  50F3               	movf	prodl,w,c
  5980  00596A  260B               	addwf	??_moveRight+3,f,c
  5981  00596C  50F4               	movf	prodh,w,c
  5982  00596E  220C               	addwfc	??_moveRight+4,f,c
  5983  005970  5018               	movf	moveRight@index,w,c
  5984  005972  0D09               	mullw	9
  5985  005974  0E00               	movlw	low _all_shapes
  5986  005976  6E0D               	movwf	(??_moveRight+5)& (0+255),c
  5987  005978  0E01               	movlw	high _all_shapes
  5988  00597A  6E0E               	movwf	(??_moveRight+6)& (0+255),c
  5989  00597C  50F3               	movf	prodl,w,c
  5990  00597E  260D               	addwf	??_moveRight+5,f,c
  5991  005980  50F4               	movf	prodh,w,c
  5992  005982  220E               	addwfc	??_moveRight+6,f,c
  5993  005984  5016               	movf	moveRight@j_256,w,c
  5994  005986  0D02               	mullw	2
  5995  005988  50F3               	movf	prodl,w,c
  5996  00598A  260D               	addwf	??_moveRight+5,f,c
  5997  00598C  50F4               	movf	prodh,w,c
  5998  00598E  220E               	addwfc	??_moveRight+6,f,c
  5999  005990  0E01               	movlw	1
  6000  005992  240D               	addwf	??_moveRight+5,w,c
  6001  005994  6ED9               	movwf	fsr2l,c
  6002  005996  0E00               	movlw	0
  6003  005998  200E               	addwfc	??_moveRight+6,w,c
  6004  00599A  6EDA               	movwf	fsr2h,c
  6005  00599C  50DF               	movf	indf2,w,c
  6006  00599E  6E0F               	movwf	(??_moveRight+7)& (0+255),c
  6007  0059A0  500F               	movf	??_moveRight+7,w,c
  6008  0059A2  0D01               	mullw	1
  6009  0059A4  50F3               	movf	prodl,w,c
  6010  0059A6  240B               	addwf	??_moveRight+3,w,c
  6011  0059A8  6ED9               	movwf	fsr2l,c
  6012  0059AA  50F4               	movf	prodh,w,c
  6013  0059AC  200C               	addwfc	??_moveRight+4,w,c
  6014  0059AE  6EDA               	movwf	fsr2h,c
  6015  0059B0  0E31               	movlw	49
  6016  0059B2  6EDF               	movwf	indf2,c
  6017  0059B4  2A16               	incf	moveRight@j_256,f,c
  6018  0059B6  D767               	goto	l3879
  6019  0059B8                     __end_of_moveRight:
  6020                           	opt stack 0
  6021                           tblptru	equ	0xFF8
  6022                           tblptrh	equ	0xFF7
  6023                           tblptrl	equ	0xFF6
  6024                           tablat	equ	0xFF5
  6025                           prodh	equ	0xFF4
  6026                           prodl	equ	0xFF3
  6027                           intcon	equ	0xFF2
  6028                           postinc0	equ	0xFEE
  6029                           wreg	equ	0xFE8
  6030                           indf1	equ	0xFE7
  6031                           postinc1	equ	0xFE6
  6032                           postdec1	equ	0xFE5
  6033                           fsr1h	equ	0xFE2
  6034                           fsr1l	equ	0xFE1
  6035                           indf2	equ	0xFDF
  6036                           postinc2	equ	0xFDE
  6037                           fsr2h	equ	0xFDA
  6038                           fsr2l	equ	0xFD9
  6039                           status	equ	0xFD8
  6040                           
  6041 ;; *************** function _moveLeft *****************
  6042 ;; Defined at:
  6043 ;;		line 457 in file "main.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;  index           1    wreg     unsigned char 
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;  index           1   23[COMRAM] unsigned char 
  6048 ;;  j               1   19[COMRAM] unsigned char 
  6049 ;;  j               1   21[COMRAM] unsigned char 
  6050 ;;  j               1   20[COMRAM] unsigned char 
  6051 ;;  i               1   22[COMRAM] unsigned char 
  6052 ;;  ok              1   18[COMRAM] unsigned char 
  6053 ;;  b               1   17[COMRAM] unsigned char 
  6054 ;;  a               1   16[COMRAM] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      void 
  6057 ;; Registers used:
  6058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6064 ;;      Params:         0       0       0       0       0       0       0       0       0
  6065 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6066 ;;      Temps:          9       0       0       0       0       0       0       0       0
  6067 ;;      Totals:        17       0       0       0       0       0       0       0       0
  6068 ;;Total ram usage:       17 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; Hardware stack levels required when called:    1
  6071 ;; This function calls:
  6072 ;;		___wmul
  6073 ;;		_dontBelong2Shape
  6074 ;; This function is called by:
  6075 ;;		_main
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text6
  6080  005120                     __ptext6:
  6081                           	opt stack 0
  6082  005120                     _moveLeft:
  6083                           	opt stack 29
  6084                           
  6085                           ;incstack = 0
  6086                           ;moveLeft@index stored from wreg
  6087  005120  6E18               	movwf	moveLeft@index,c
  6088                           
  6089                           ;main.c: 462: uint8_t a,b,ok;
  6090                           ;main.c: 463: for (uint8_t i = 0; i < 4; ++i){
  6091  005122  0E00               	movlw	0
  6092  005124  6E17               	movwf	moveLeft@i,c
  6093  005126                     l3891:
  6094  005126  0E03               	movlw	3
  6095  005128  6417               	cpfsgt	moveLeft@i,c
  6096  00512A  D001               	goto	l171
  6097  00512C  D0DE               	goto	u4280
  6098  00512E                     l171:
  6099                           
  6100                           ;main.c: 464: for (uint8_t j = i + 1; j < 4; ++j){
  6101  00512E  2817               	incf	moveLeft@i,w,c
  6102  005130  6E14               	movwf	moveLeft@j,c
  6103  005132  0E03               	movlw	3
  6104  005134  6414               	cpfsgt	moveLeft@j,c
  6105  005136  D001               	goto	l173
  6106  005138  D0D6               	goto	u4270
  6107  00513A                     l173:
  6108                           
  6109                           ;main.c: 465: if (all_shapes[index].index[i].x > all_shapes[index].index[j].x){
  6110  00513A  5018               	movf	moveLeft@index,w,c
  6111  00513C  0D09               	mullw	9
  6112  00513E  0E00               	movlw	low _all_shapes
  6113  005140  6E08               	movwf	??_moveLeft& (0+255),c
  6114  005142  0E01               	movlw	high _all_shapes
  6115  005144  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6116  005146  50F3               	movf	prodl,w,c
  6117  005148  2608               	addwf	??_moveLeft,f,c
  6118  00514A  50F4               	movf	prodh,w,c
  6119  00514C  2209               	addwfc	??_moveLeft+1,f,c
  6120  00514E  5017               	movf	moveLeft@i,w,c
  6121  005150  0D02               	mullw	2
  6122  005152  50F3               	movf	prodl,w,c
  6123  005154  2408               	addwf	??_moveLeft,w,c
  6124  005156  6ED9               	movwf	fsr2l,c
  6125  005158  50F4               	movf	prodh,w,c
  6126  00515A  2009               	addwfc	??_moveLeft+1,w,c
  6127  00515C  6EDA               	movwf	fsr2h,c
  6128  00515E  5018               	movf	moveLeft@index,w,c
  6129  005160  0D09               	mullw	9
  6130  005162  0E00               	movlw	low _all_shapes
  6131  005164  6E0B               	movwf	(??_moveLeft+3)& (0+255),c
  6132  005166  0E01               	movlw	high _all_shapes
  6133  005168  6E0C               	movwf	(??_moveLeft+4)& (0+255),c
  6134  00516A  50F3               	movf	prodl,w,c
  6135  00516C  260B               	addwf	??_moveLeft+3,f,c
  6136  00516E  50F4               	movf	prodh,w,c
  6137  005170  220C               	addwfc	??_moveLeft+4,f,c
  6138  005172  5014               	movf	moveLeft@j,w,c
  6139  005174  0D02               	mullw	2
  6140  005176  50F3               	movf	prodl,w,c
  6141  005178  240B               	addwf	??_moveLeft+3,w,c
  6142  00517A  6EE1               	movwf	fsr1l,c
  6143  00517C  50F4               	movf	prodh,w,c
  6144  00517E  200C               	addwfc	??_moveLeft+4,w,c
  6145  005180  6EE2               	movwf	fsr1h,c
  6146  005182  50DE               	movf	postinc2,w,c
  6147  005184  5CE6               	subwf	postinc1,w,c
  6148  005186  B0D8               	btfsc	status,0,c
  6149  005188  D0AC               	goto	l175
  6150                           
  6151                           ;main.c: 466: a = all_shapes[index].index[i].y;
  6152  00518A  5018               	movf	moveLeft@index,w,c
  6153  00518C  0D09               	mullw	9
  6154  00518E  0E00               	movlw	low _all_shapes
  6155  005190  6E08               	movwf	??_moveLeft& (0+255),c
  6156  005192  0E01               	movlw	high _all_shapes
  6157  005194  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6158  005196  50F3               	movf	prodl,w,c
  6159  005198  2608               	addwf	??_moveLeft,f,c
  6160  00519A  50F4               	movf	prodh,w,c
  6161  00519C  2209               	addwfc	??_moveLeft+1,f,c
  6162  00519E  5017               	movf	moveLeft@i,w,c
  6163  0051A0  0D02               	mullw	2
  6164  0051A2  50F3               	movf	prodl,w,c
  6165  0051A4  2608               	addwf	??_moveLeft,f,c
  6166  0051A6  50F4               	movf	prodh,w,c
  6167  0051A8  2209               	addwfc	??_moveLeft+1,f,c
  6168  0051AA  0E01               	movlw	1
  6169  0051AC  2408               	addwf	??_moveLeft,w,c
  6170  0051AE  6ED9               	movwf	fsr2l,c
  6171  0051B0  0E00               	movlw	0
  6172  0051B2  2009               	addwfc	??_moveLeft+1,w,c
  6173  0051B4  6EDA               	movwf	fsr2h,c
  6174  0051B6  50DF               	movf	indf2,w,c
  6175  0051B8  6E11               	movwf	moveLeft@a,c
  6176                           
  6177                           ;main.c: 467: b = all_shapes[index].index[i].x;
  6178  0051BA  5018               	movf	moveLeft@index,w,c
  6179  0051BC  0D09               	mullw	9
  6180  0051BE  0E00               	movlw	low _all_shapes
  6181  0051C0  6E08               	movwf	??_moveLeft& (0+255),c
  6182  0051C2  0E01               	movlw	high _all_shapes
  6183  0051C4  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6184  0051C6  50F3               	movf	prodl,w,c
  6185  0051C8  2608               	addwf	??_moveLeft,f,c
  6186  0051CA  50F4               	movf	prodh,w,c
  6187  0051CC  2209               	addwfc	??_moveLeft+1,f,c
  6188  0051CE  5017               	movf	moveLeft@i,w,c
  6189  0051D0  0D02               	mullw	2
  6190  0051D2  50F3               	movf	prodl,w,c
  6191  0051D4  2408               	addwf	??_moveLeft,w,c
  6192  0051D6  6ED9               	movwf	fsr2l,c
  6193  0051D8  50F4               	movf	prodh,w,c
  6194  0051DA  2009               	addwfc	??_moveLeft+1,w,c
  6195  0051DC  6EDA               	movwf	fsr2h,c
  6196  0051DE  50DF               	movf	indf2,w,c
  6197  0051E0  6E12               	movwf	moveLeft@b,c
  6198                           
  6199                           ;main.c: 468: all_shapes[index].index[i].y = all_shapes[index].index[j].y;
  6200  0051E2  5018               	movf	moveLeft@index,w,c
  6201  0051E4  0D09               	mullw	9
  6202  0051E6  0E00               	movlw	low _all_shapes
  6203  0051E8  6E08               	movwf	??_moveLeft& (0+255),c
  6204  0051EA  0E01               	movlw	high _all_shapes
  6205  0051EC  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6206  0051EE  50F3               	movf	prodl,w,c
  6207  0051F0  2608               	addwf	??_moveLeft,f,c
  6208  0051F2  50F4               	movf	prodh,w,c
  6209  0051F4  2209               	addwfc	??_moveLeft+1,f,c
  6210  0051F6  5014               	movf	moveLeft@j,w,c
  6211  0051F8  0D02               	mullw	2
  6212  0051FA  50F3               	movf	prodl,w,c
  6213  0051FC  2608               	addwf	??_moveLeft,f,c
  6214  0051FE  50F4               	movf	prodh,w,c
  6215  005200  2209               	addwfc	??_moveLeft+1,f,c
  6216  005202  0E01               	movlw	1
  6217  005204  2408               	addwf	??_moveLeft,w,c
  6218  005206  6ED9               	movwf	fsr2l,c
  6219  005208  0E00               	movlw	0
  6220  00520A  2009               	addwfc	??_moveLeft+1,w,c
  6221  00520C  6EDA               	movwf	fsr2h,c
  6222  00520E  5018               	movf	moveLeft@index,w,c
  6223  005210  0D09               	mullw	9
  6224  005212  0E00               	movlw	low _all_shapes
  6225  005214  6E0A               	movwf	(??_moveLeft+2)& (0+255),c
  6226  005216  0E01               	movlw	high _all_shapes
  6227  005218  6E0B               	movwf	(??_moveLeft+3)& (0+255),c
  6228  00521A  50F3               	movf	prodl,w,c
  6229  00521C  260A               	addwf	??_moveLeft+2,f,c
  6230  00521E  50F4               	movf	prodh,w,c
  6231  005220  220B               	addwfc	??_moveLeft+3,f,c
  6232  005222  5017               	movf	moveLeft@i,w,c
  6233  005224  0D02               	mullw	2
  6234  005226  50F3               	movf	prodl,w,c
  6235  005228  260A               	addwf	??_moveLeft+2,f,c
  6236  00522A  50F4               	movf	prodh,w,c
  6237  00522C  220B               	addwfc	??_moveLeft+3,f,c
  6238  00522E  0E01               	movlw	1
  6239  005230  240A               	addwf	??_moveLeft+2,w,c
  6240  005232  6EE1               	movwf	fsr1l,c
  6241  005234  0E00               	movlw	0
  6242  005236  200B               	addwfc	??_moveLeft+3,w,c
  6243  005238  6EE2               	movwf	fsr1h,c
  6244  00523A  CFDF FFE7          	movff	indf2,indf1
  6245                           
  6246                           ;main.c: 469: all_shapes[index].index[i].x = all_shapes[index].index[j].x;
  6247  00523E  5018               	movf	moveLeft@index,w,c
  6248  005240  0D09               	mullw	9
  6249  005242  0E00               	movlw	low _all_shapes
  6250  005244  6E08               	movwf	??_moveLeft& (0+255),c
  6251  005246  0E01               	movlw	high _all_shapes
  6252  005248  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6253  00524A  50F3               	movf	prodl,w,c
  6254  00524C  2608               	addwf	??_moveLeft,f,c
  6255  00524E  50F4               	movf	prodh,w,c
  6256  005250  2209               	addwfc	??_moveLeft+1,f,c
  6257  005252  5014               	movf	moveLeft@j,w,c
  6258  005254  0D02               	mullw	2
  6259  005256  50F3               	movf	prodl,w,c
  6260  005258  2408               	addwf	??_moveLeft,w,c
  6261  00525A  6ED9               	movwf	fsr2l,c
  6262  00525C  50F4               	movf	prodh,w,c
  6263  00525E  2009               	addwfc	??_moveLeft+1,w,c
  6264  005260  6EDA               	movwf	fsr2h,c
  6265  005262  5018               	movf	moveLeft@index,w,c
  6266  005264  0D09               	mullw	9
  6267  005266  0E00               	movlw	low _all_shapes
  6268  005268  6E0A               	movwf	(??_moveLeft+2)& (0+255),c
  6269  00526A  0E01               	movlw	high _all_shapes
  6270  00526C  6E0B               	movwf	(??_moveLeft+3)& (0+255),c
  6271  00526E  50F3               	movf	prodl,w,c
  6272  005270  260A               	addwf	??_moveLeft+2,f,c
  6273  005272  50F4               	movf	prodh,w,c
  6274  005274  220B               	addwfc	??_moveLeft+3,f,c
  6275  005276  5017               	movf	moveLeft@i,w,c
  6276  005278  0D02               	mullw	2
  6277  00527A  50F3               	movf	prodl,w,c
  6278  00527C  240A               	addwf	??_moveLeft+2,w,c
  6279  00527E  6EE1               	movwf	fsr1l,c
  6280  005280  50F4               	movf	prodh,w,c
  6281  005282  200B               	addwfc	??_moveLeft+3,w,c
  6282  005284  6EE2               	movwf	fsr1h,c
  6283  005286  CFDF FFE7          	movff	indf2,indf1
  6284                           
  6285                           ;main.c: 470: all_shapes[index].index[j].y = a;
  6286  00528A  5018               	movf	moveLeft@index,w,c
  6287  00528C  0D09               	mullw	9
  6288  00528E  0E00               	movlw	low _all_shapes
  6289  005290  6E08               	movwf	??_moveLeft& (0+255),c
  6290  005292  0E01               	movlw	high _all_shapes
  6291  005294  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6292  005296  50F3               	movf	prodl,w,c
  6293  005298  2608               	addwf	??_moveLeft,f,c
  6294  00529A  50F4               	movf	prodh,w,c
  6295  00529C  2209               	addwfc	??_moveLeft+1,f,c
  6296  00529E  5014               	movf	moveLeft@j,w,c
  6297  0052A0  0D02               	mullw	2
  6298  0052A2  50F3               	movf	prodl,w,c
  6299  0052A4  2608               	addwf	??_moveLeft,f,c
  6300  0052A6  50F4               	movf	prodh,w,c
  6301  0052A8  2209               	addwfc	??_moveLeft+1,f,c
  6302  0052AA  0E01               	movlw	1
  6303  0052AC  2408               	addwf	??_moveLeft,w,c
  6304  0052AE  6ED9               	movwf	fsr2l,c
  6305  0052B0  0E00               	movlw	0
  6306  0052B2  2009               	addwfc	??_moveLeft+1,w,c
  6307  0052B4  6EDA               	movwf	fsr2h,c
  6308  0052B6  C011  FFDF         	movff	moveLeft@a,indf2
  6309                           
  6310                           ;main.c: 471: all_shapes[index].index[j].x = b;
  6311  0052BA  5018               	movf	moveLeft@index,w,c
  6312  0052BC  0D09               	mullw	9
  6313  0052BE  0E00               	movlw	low _all_shapes
  6314  0052C0  6E08               	movwf	??_moveLeft& (0+255),c
  6315  0052C2  0E01               	movlw	high _all_shapes
  6316  0052C4  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6317  0052C6  50F3               	movf	prodl,w,c
  6318  0052C8  2608               	addwf	??_moveLeft,f,c
  6319  0052CA  50F4               	movf	prodh,w,c
  6320  0052CC  2209               	addwfc	??_moveLeft+1,f,c
  6321  0052CE  5014               	movf	moveLeft@j,w,c
  6322  0052D0  0D02               	mullw	2
  6323  0052D2  50F3               	movf	prodl,w,c
  6324  0052D4  2408               	addwf	??_moveLeft,w,c
  6325  0052D6  6ED9               	movwf	fsr2l,c
  6326  0052D8  50F4               	movf	prodh,w,c
  6327  0052DA  2009               	addwfc	??_moveLeft+1,w,c
  6328  0052DC  6EDA               	movwf	fsr2h,c
  6329  0052DE  C012  FFDF         	movff	moveLeft@b,indf2
  6330  0052E2                     l175:
  6331  0052E2  2A14               	incf	moveLeft@j,f,c
  6332  0052E4  D726               	goto	L2
  6333  0052E6                     u4270:
  6334  0052E6  2A17               	incf	moveLeft@i,f,c
  6335  0052E8  D71E               	goto	l3891
  6336  0052EA                     u4280:
  6337                           
  6338                           ;main.c: 472: }
  6339                           ;main.c: 473: }
  6340                           ;main.c: 474: }
  6341                           ;main.c: 477: for(uint8_t j=0;j<4;j++){
  6342  0052EA  0E00               	movlw	0
  6343  0052EC  6E15               	movwf	moveLeft@j_264,c
  6344  0052EE                     l3917:
  6345  0052EE  0E03               	movlw	3
  6346  0052F0  6415               	cpfsgt	moveLeft@j_264,c
  6347  0052F2  D001               	goto	l176
  6348  0052F4  D09D               	goto	u4330
  6349  0052F6                     l176:
  6350                           
  6351                           ;main.c: 479: if(all_shapes[index].index[j].x >0 && (array_data[(all_shapes[index].index
      +                          [j].x)-1][all_shapes[index].index[j].y]!='1' || dontBelong2Shape(index,(all_shapes[index
      +                          ].index[j].x)-1,all_shapes[index].index[j].y))){
  6352  0052F6  5018               	movf	moveLeft@index,w,c
  6353  0052F8  0D09               	mullw	9
  6354  0052FA  0E00               	movlw	low _all_shapes
  6355  0052FC  6E08               	movwf	??_moveLeft& (0+255),c
  6356  0052FE  0E01               	movlw	high _all_shapes
  6357  005300  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6358  005302  50F3               	movf	prodl,w,c
  6359  005304  2608               	addwf	??_moveLeft,f,c
  6360  005306  50F4               	movf	prodh,w,c
  6361  005308  2209               	addwfc	??_moveLeft+1,f,c
  6362  00530A  5015               	movf	moveLeft@j_264,w,c
  6363  00530C  0D02               	mullw	2
  6364  00530E  50F3               	movf	prodl,w,c
  6365  005310  2408               	addwf	??_moveLeft,w,c
  6366  005312  6ED9               	movwf	fsr2l,c
  6367  005314  50F4               	movf	prodh,w,c
  6368  005316  2009               	addwfc	??_moveLeft+1,w,c
  6369  005318  6EDA               	movwf	fsr2h,c
  6370  00531A  50DF               	movf	indf2,w,c
  6371  00531C  B4D8               	btfsc	status,2,c
  6372  00531E  D083               	goto	l178
  6373  005320  5018               	movf	moveLeft@index,w,c
  6374  005322  0D09               	mullw	9
  6375  005324  0E00               	movlw	low _all_shapes
  6376  005326  6E08               	movwf	??_moveLeft& (0+255),c
  6377  005328  0E01               	movlw	high _all_shapes
  6378  00532A  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6379  00532C  50F3               	movf	prodl,w,c
  6380  00532E  2608               	addwf	??_moveLeft,f,c
  6381  005330  50F4               	movf	prodh,w,c
  6382  005332  2209               	addwfc	??_moveLeft+1,f,c
  6383  005334  5015               	movf	moveLeft@j_264,w,c
  6384  005336  0D02               	mullw	2
  6385  005338  50F3               	movf	prodl,w,c
  6386  00533A  2408               	addwf	??_moveLeft,w,c
  6387  00533C  6ED9               	movwf	fsr2l,c
  6388  00533E  50F4               	movf	prodh,w,c
  6389  005340  2009               	addwfc	??_moveLeft+1,w,c
  6390  005342  6EDA               	movwf	fsr2h,c
  6391  005344  50DF               	movf	indf2,w,c
  6392  005346  6E0A               	movwf	(??_moveLeft+2)& (0+255),c
  6393  005348  0EFF               	movlw	255
  6394  00534A  240A               	addwf	??_moveLeft+2,w,c
  6395  00534C  6E01               	movwf	___wmul@multiplier,c
  6396  00534E  6A02               	clrf	___wmul@multiplier+1,c
  6397  005350  0EFF               	movlw	255
  6398  005352  2202               	addwfc	___wmul@multiplier+1,f,c
  6399  005354  0E00               	movlw	0
  6400  005356  6E04               	movwf	___wmul@multiplicand+1,c
  6401  005358  0E0C               	movlw	12
  6402  00535A  6E03               	movwf	___wmul@multiplicand,c
  6403  00535C  EC8D  F01D         	call	___wmul	;wreg free
  6404  005360  0E00               	movlw	low _array_data
  6405  005362  6E0B               	movwf	(??_moveLeft+3)& (0+255),c
  6406  005364  0E02               	movlw	high _array_data
  6407  005366  6E0C               	movwf	(??_moveLeft+4)& (0+255),c
  6408  005368  5001               	movf	?___wmul,w,c
  6409  00536A  260B               	addwf	??_moveLeft+3,f,c
  6410  00536C  5002               	movf	?___wmul+1,w,c
  6411  00536E  220C               	addwfc	??_moveLeft+4,f,c
  6412  005370  5018               	movf	moveLeft@index,w,c
  6413  005372  0D09               	mullw	9
  6414  005374  0E00               	movlw	low _all_shapes
  6415  005376  6E0D               	movwf	(??_moveLeft+5)& (0+255),c
  6416  005378  0E01               	movlw	high _all_shapes
  6417  00537A  6E0E               	movwf	(??_moveLeft+6)& (0+255),c
  6418  00537C  50F3               	movf	prodl,w,c
  6419  00537E  260D               	addwf	??_moveLeft+5,f,c
  6420  005380  50F4               	movf	prodh,w,c
  6421  005382  220E               	addwfc	??_moveLeft+6,f,c
  6422  005384  5015               	movf	moveLeft@j_264,w,c
  6423  005386  0D02               	mullw	2
  6424  005388  50F3               	movf	prodl,w,c
  6425  00538A  260D               	addwf	??_moveLeft+5,f,c
  6426  00538C  50F4               	movf	prodh,w,c
  6427  00538E  220E               	addwfc	??_moveLeft+6,f,c
  6428  005390  0E01               	movlw	1
  6429  005392  240D               	addwf	??_moveLeft+5,w,c
  6430  005394  6ED9               	movwf	fsr2l,c
  6431  005396  0E00               	movlw	0
  6432  005398  200E               	addwfc	??_moveLeft+6,w,c
  6433  00539A  6EDA               	movwf	fsr2h,c
  6434  00539C  50DF               	movf	indf2,w,c
  6435  00539E  6E0F               	movwf	(??_moveLeft+7)& (0+255),c
  6436  0053A0  500F               	movf	??_moveLeft+7,w,c
  6437  0053A2  0D01               	mullw	1
  6438  0053A4  50F3               	movf	prodl,w,c
  6439  0053A6  240B               	addwf	??_moveLeft+3,w,c
  6440  0053A8  6ED9               	movwf	fsr2l,c
  6441  0053AA  50F4               	movf	prodh,w,c
  6442  0053AC  200C               	addwfc	??_moveLeft+4,w,c
  6443  0053AE  6EDA               	movwf	fsr2h,c
  6444  0053B0  0E31               	movlw	49
  6445  0053B2  18DE               	xorwf	postinc2,w,c
  6446  0053B4  A4D8               	btfss	status,2,c
  6447  0053B6  D034               	goto	u4320
  6448  0053B8  5018               	movf	moveLeft@index,w,c
  6449  0053BA  0D09               	mullw	9
  6450  0053BC  0E00               	movlw	low _all_shapes
  6451  0053BE  6E08               	movwf	??_moveLeft& (0+255),c
  6452  0053C0  0E01               	movlw	high _all_shapes
  6453  0053C2  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6454  0053C4  50F3               	movf	prodl,w,c
  6455  0053C6  2608               	addwf	??_moveLeft,f,c
  6456  0053C8  50F4               	movf	prodh,w,c
  6457  0053CA  2209               	addwfc	??_moveLeft+1,f,c
  6458  0053CC  5015               	movf	moveLeft@j_264,w,c
  6459  0053CE  0D02               	mullw	2
  6460  0053D0  50F3               	movf	prodl,w,c
  6461  0053D2  2408               	addwf	??_moveLeft,w,c
  6462  0053D4  6ED9               	movwf	fsr2l,c
  6463  0053D6  50F4               	movf	prodh,w,c
  6464  0053D8  2009               	addwfc	??_moveLeft+1,w,c
  6465  0053DA  6EDA               	movwf	fsr2h,c
  6466  0053DC  50DF               	movf	indf2,w,c
  6467  0053DE  6E0A               	movwf	(??_moveLeft+2)& (0+255),c
  6468  0053E0  040A               	decf	??_moveLeft+2,w,c
  6469  0053E2  6E01               	movwf	dontBelong2Shape@x,c
  6470  0053E4  5018               	movf	moveLeft@index,w,c
  6471  0053E6  0D09               	mullw	9
  6472  0053E8  0E00               	movlw	low _all_shapes
  6473  0053EA  6E0B               	movwf	(??_moveLeft+3)& (0+255),c
  6474  0053EC  0E01               	movlw	high _all_shapes
  6475  0053EE  6E0C               	movwf	(??_moveLeft+4)& (0+255),c
  6476  0053F0  50F3               	movf	prodl,w,c
  6477  0053F2  260B               	addwf	??_moveLeft+3,f,c
  6478  0053F4  50F4               	movf	prodh,w,c
  6479  0053F6  220C               	addwfc	??_moveLeft+4,f,c
  6480  0053F8  5015               	movf	moveLeft@j_264,w,c
  6481  0053FA  0D02               	mullw	2
  6482  0053FC  50F3               	movf	prodl,w,c
  6483  0053FE  260B               	addwf	??_moveLeft+3,f,c
  6484  005400  50F4               	movf	prodh,w,c
  6485  005402  220C               	addwfc	??_moveLeft+4,f,c
  6486  005404  0E01               	movlw	1
  6487  005406  240B               	addwf	??_moveLeft+3,w,c
  6488  005408  6ED9               	movwf	fsr2l,c
  6489  00540A  0E00               	movlw	0
  6490  00540C  200C               	addwfc	??_moveLeft+4,w,c
  6491  00540E  6EDA               	movwf	fsr2h,c
  6492  005410  50DF               	movf	indf2,w,c
  6493  005412  6E02               	movwf	dontBelong2Shape@y,c
  6494  005414  5018               	movf	moveLeft@index,w,c
  6495  005416  ECEE  F01F         	call	_dontBelong2Shape
  6496  00541A  0900               	iorlw	0
  6497  00541C  B4D8               	btfsc	status,2,c
  6498  00541E  D003               	goto	l178
  6499  005420                     u4320:
  6500                           
  6501                           ;main.c: 480: ok=1;
  6502  005420  0E01               	movlw	1
  6503  005422  6E13               	movwf	moveLeft@ok,c
  6504                           
  6505                           ;main.c: 481: }
  6506  005424  D003               	goto	l181
  6507  005426                     l178:
  6508                           
  6509                           ;main.c: 482: else {
  6510                           ;main.c: 483: ok=0;
  6511  005426  0E00               	movlw	0
  6512  005428  6E13               	movwf	moveLeft@ok,c
  6513                           
  6514                           ;main.c: 484: break;
  6515  00542A  D002               	goto	u4330
  6516  00542C                     l181:
  6517  00542C  2A15               	incf	moveLeft@j_264,f,c
  6518  00542E  D75F               	goto	l3917
  6519  005430                     u4330:
  6520                           
  6521                           ;main.c: 485: }
  6522                           ;main.c: 486: }
  6523                           ;main.c: 487: if(ok==1){
  6524  005430  0413               	decf	moveLeft@ok,w,c
  6525  005432  A4D8               	btfss	status,2,c
  6526  005434  0012               	return	
  6527                           
  6528                           ;main.c: 488: for(uint8_t j=0;j<4;j++){
  6529  005436  0E00               	movlw	0
  6530  005438  6E16               	movwf	moveLeft@j_265,c
  6531  00543A                     l3939:
  6532  00543A  0E03               	movlw	3
  6533  00543C  6416               	cpfsgt	moveLeft@j_265,c
  6534  00543E  D001               	goto	l183
  6535  005440  0012               	return	
  6536  005442                     l183:
  6537                           
  6538                           ;main.c: 489: array_data[all_shapes[index].index[j].x][all_shapes[index].index[j].y]='0'
      +                          ;
  6539  005442  5018               	movf	moveLeft@index,w,c
  6540  005444  0D09               	mullw	9
  6541  005446  0E00               	movlw	low _all_shapes
  6542  005448  6E08               	movwf	??_moveLeft& (0+255),c
  6543  00544A  0E01               	movlw	high _all_shapes
  6544  00544C  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6545  00544E  50F3               	movf	prodl,w,c
  6546  005450  2608               	addwf	??_moveLeft,f,c
  6547  005452  50F4               	movf	prodh,w,c
  6548  005454  2209               	addwfc	??_moveLeft+1,f,c
  6549  005456  5016               	movf	moveLeft@j_265,w,c
  6550  005458  0D02               	mullw	2
  6551  00545A  50F3               	movf	prodl,w,c
  6552  00545C  2408               	addwf	??_moveLeft,w,c
  6553  00545E  6ED9               	movwf	fsr2l,c
  6554  005460  50F4               	movf	prodh,w,c
  6555  005462  2009               	addwfc	??_moveLeft+1,w,c
  6556  005464  6EDA               	movwf	fsr2h,c
  6557  005466  50DF               	movf	indf2,w,c
  6558  005468  6E0A               	movwf	(??_moveLeft+2)& (0+255),c
  6559  00546A  500A               	movf	??_moveLeft+2,w,c
  6560  00546C  0D0C               	mullw	12
  6561  00546E  0E00               	movlw	low _array_data
  6562  005470  6E0B               	movwf	(??_moveLeft+3)& (0+255),c
  6563  005472  0E02               	movlw	high _array_data
  6564  005474  6E0C               	movwf	(??_moveLeft+4)& (0+255),c
  6565  005476  50F3               	movf	prodl,w,c
  6566  005478  260B               	addwf	??_moveLeft+3,f,c
  6567  00547A  50F4               	movf	prodh,w,c
  6568  00547C  220C               	addwfc	??_moveLeft+4,f,c
  6569  00547E  5018               	movf	moveLeft@index,w,c
  6570  005480  0D09               	mullw	9
  6571  005482  0E00               	movlw	low _all_shapes
  6572  005484  6E0D               	movwf	(??_moveLeft+5)& (0+255),c
  6573  005486  0E01               	movlw	high _all_shapes
  6574  005488  6E0E               	movwf	(??_moveLeft+6)& (0+255),c
  6575  00548A  50F3               	movf	prodl,w,c
  6576  00548C  260D               	addwf	??_moveLeft+5,f,c
  6577  00548E  50F4               	movf	prodh,w,c
  6578  005490  220E               	addwfc	??_moveLeft+6,f,c
  6579  005492  5016               	movf	moveLeft@j_265,w,c
  6580  005494  0D02               	mullw	2
  6581  005496  50F3               	movf	prodl,w,c
  6582  005498  260D               	addwf	??_moveLeft+5,f,c
  6583  00549A  50F4               	movf	prodh,w,c
  6584  00549C  220E               	addwfc	??_moveLeft+6,f,c
  6585  00549E  0E01               	movlw	1
  6586  0054A0  240D               	addwf	??_moveLeft+5,w,c
  6587  0054A2  6ED9               	movwf	fsr2l,c
  6588  0054A4  0E00               	movlw	0
  6589  0054A6  200E               	addwfc	??_moveLeft+6,w,c
  6590  0054A8  6EDA               	movwf	fsr2h,c
  6591  0054AA  50DF               	movf	indf2,w,c
  6592  0054AC  6E0F               	movwf	(??_moveLeft+7)& (0+255),c
  6593  0054AE  500F               	movf	??_moveLeft+7,w,c
  6594  0054B0  0D01               	mullw	1
  6595  0054B2  50F3               	movf	prodl,w,c
  6596  0054B4  240B               	addwf	??_moveLeft+3,w,c
  6597  0054B6  6ED9               	movwf	fsr2l,c
  6598  0054B8  50F4               	movf	prodh,w,c
  6599  0054BA  200C               	addwfc	??_moveLeft+4,w,c
  6600  0054BC  6EDA               	movwf	fsr2h,c
  6601  0054BE  0E30               	movlw	48
  6602  0054C0  6EDF               	movwf	indf2,c
  6603                           
  6604                           ;main.c: 490: all_shapes[index].index[j].x -=1;
  6605  0054C2  5018               	movf	moveLeft@index,w,c
  6606  0054C4  0D09               	mullw	9
  6607  0054C6  0E00               	movlw	low _all_shapes
  6608  0054C8  6E08               	movwf	??_moveLeft& (0+255),c
  6609  0054CA  0E01               	movlw	high _all_shapes
  6610  0054CC  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6611  0054CE  50F3               	movf	prodl,w,c
  6612  0054D0  2608               	addwf	??_moveLeft,f,c
  6613  0054D2  50F4               	movf	prodh,w,c
  6614  0054D4  2209               	addwfc	??_moveLeft+1,f,c
  6615  0054D6  5016               	movf	moveLeft@j_265,w,c
  6616  0054D8  0D02               	mullw	2
  6617  0054DA  50F3               	movf	prodl,w,c
  6618  0054DC  2408               	addwf	??_moveLeft,w,c
  6619  0054DE  6ED9               	movwf	fsr2l,c
  6620  0054E0  50F4               	movf	prodh,w,c
  6621  0054E2  2009               	addwfc	??_moveLeft+1,w,c
  6622  0054E4  6EDA               	movwf	fsr2h,c
  6623  0054E6  06DF               	decf	indf2,f,c
  6624                           
  6625                           ;main.c: 491: array_data[all_shapes[index].index[j].x][all_shapes[index].index[j].y]='1'
      +                          ;
  6626  0054E8  5018               	movf	moveLeft@index,w,c
  6627  0054EA  0D09               	mullw	9
  6628  0054EC  0E00               	movlw	low _all_shapes
  6629  0054EE  6E08               	movwf	??_moveLeft& (0+255),c
  6630  0054F0  0E01               	movlw	high _all_shapes
  6631  0054F2  6E09               	movwf	(??_moveLeft+1)& (0+255),c
  6632  0054F4  50F3               	movf	prodl,w,c
  6633  0054F6  2608               	addwf	??_moveLeft,f,c
  6634  0054F8  50F4               	movf	prodh,w,c
  6635  0054FA  2209               	addwfc	??_moveLeft+1,f,c
  6636  0054FC  5016               	movf	moveLeft@j_265,w,c
  6637  0054FE  0D02               	mullw	2
  6638  005500  50F3               	movf	prodl,w,c
  6639  005502  2408               	addwf	??_moveLeft,w,c
  6640  005504  6ED9               	movwf	fsr2l,c
  6641  005506  50F4               	movf	prodh,w,c
  6642  005508  2009               	addwfc	??_moveLeft+1,w,c
  6643  00550A  6EDA               	movwf	fsr2h,c
  6644  00550C  50DF               	movf	indf2,w,c
  6645  00550E  6E0A               	movwf	(??_moveLeft+2)& (0+255),c
  6646  005510  500A               	movf	??_moveLeft+2,w,c
  6647  005512  0D0C               	mullw	12
  6648  005514  0E00               	movlw	low _array_data
  6649  005516  6E0B               	movwf	(??_moveLeft+3)& (0+255),c
  6650  005518  0E02               	movlw	high _array_data
  6651  00551A  6E0C               	movwf	(??_moveLeft+4)& (0+255),c
  6652  00551C  50F3               	movf	prodl,w,c
  6653  00551E  260B               	addwf	??_moveLeft+3,f,c
  6654  005520  50F4               	movf	prodh,w,c
  6655  005522  220C               	addwfc	??_moveLeft+4,f,c
  6656  005524  5018               	movf	moveLeft@index,w,c
  6657  005526  0D09               	mullw	9
  6658  005528  0E00               	movlw	low _all_shapes
  6659  00552A  6E0D               	movwf	(??_moveLeft+5)& (0+255),c
  6660  00552C  0E01               	movlw	high _all_shapes
  6661  00552E  6E0E               	movwf	(??_moveLeft+6)& (0+255),c
  6662  005530  50F3               	movf	prodl,w,c
  6663  005532  260D               	addwf	??_moveLeft+5,f,c
  6664  005534  50F4               	movf	prodh,w,c
  6665  005536  220E               	addwfc	??_moveLeft+6,f,c
  6666  005538  5016               	movf	moveLeft@j_265,w,c
  6667  00553A  0D02               	mullw	2
  6668  00553C  50F3               	movf	prodl,w,c
  6669  00553E  260D               	addwf	??_moveLeft+5,f,c
  6670  005540  50F4               	movf	prodh,w,c
  6671  005542  220E               	addwfc	??_moveLeft+6,f,c
  6672  005544  0E01               	movlw	1
  6673  005546  240D               	addwf	??_moveLeft+5,w,c
  6674  005548  6ED9               	movwf	fsr2l,c
  6675  00554A  0E00               	movlw	0
  6676  00554C  200E               	addwfc	??_moveLeft+6,w,c
  6677  00554E  6EDA               	movwf	fsr2h,c
  6678  005550  50DF               	movf	indf2,w,c
  6679  005552  6E0F               	movwf	(??_moveLeft+7)& (0+255),c
  6680  005554  500F               	movf	??_moveLeft+7,w,c
  6681  005556  0D01               	mullw	1
  6682  005558  50F3               	movf	prodl,w,c
  6683  00555A  240B               	addwf	??_moveLeft+3,w,c
  6684  00555C  6ED9               	movwf	fsr2l,c
  6685  00555E  50F4               	movf	prodh,w,c
  6686  005560  200C               	addwfc	??_moveLeft+4,w,c
  6687  005562  6EDA               	movwf	fsr2h,c
  6688  005564  0E31               	movlw	49
  6689  005566  6EDF               	movwf	indf2,c
  6690  005568  2A16               	incf	moveLeft@j_265,f,c
  6691  00556A  D767               	goto	l3939
  6692  00556C                     __end_of_moveLeft:
  6693                           	opt stack 0
  6694                           tblptru	equ	0xFF8
  6695                           tblptrh	equ	0xFF7
  6696                           tblptrl	equ	0xFF6
  6697                           tablat	equ	0xFF5
  6698                           prodh	equ	0xFF4
  6699                           prodl	equ	0xFF3
  6700                           intcon	equ	0xFF2
  6701                           postinc0	equ	0xFEE
  6702                           wreg	equ	0xFE8
  6703                           indf1	equ	0xFE7
  6704                           postinc1	equ	0xFE6
  6705                           postdec1	equ	0xFE5
  6706                           fsr1h	equ	0xFE2
  6707                           fsr1l	equ	0xFE1
  6708                           indf2	equ	0xFDF
  6709                           postinc2	equ	0xFDE
  6710                           fsr2h	equ	0xFDA
  6711                           fsr2l	equ	0xFD9
  6712                           status	equ	0xFD8
  6713                           
  6714 ;; *************** function ___wmul *****************
  6715 ;; Defined at:
  6716 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;  multiplier      2    0[COMRAM] unsigned int 
  6719 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;  product         2    4[COMRAM] unsigned int 
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  2    0[COMRAM] unsigned int 
  6724 ;; Registers used:
  6725 ;;		wreg, status,2, status,0, prodl, prodh
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6731 ;;      Params:         4       0       0       0       0       0       0       0       0
  6732 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6734 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6735 ;;Total ram usage:        6 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; This function calls:
  6738 ;;		Nothing
  6739 ;; This function is called by:
  6740 ;;		_moveRight
  6741 ;;		_moveLeft
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           	psect	text7
  6746  003B1A                     __ptext7:
  6747                           	opt stack 0
  6748  003B1A                     ___wmul:
  6749                           	opt stack 29
  6750                           
  6751                           ;incstack = 0
  6752  003B1A  5001               	movf	___wmul@multiplier,w,c
  6753  003B1C  0203               	mulwf	___wmul@multiplicand,c
  6754  003B1E  CFF3 F005          	movff	prodl,___wmul@product
  6755  003B22  CFF4 F006          	movff	prodh,___wmul@product+1
  6756  003B26  5001               	movf	___wmul@multiplier,w,c
  6757  003B28  0204               	mulwf	___wmul@multiplicand+1,c
  6758  003B2A  50F3               	movf	prodl,w,c
  6759  003B2C  2606               	addwf	___wmul@product+1,f,c
  6760  003B2E  5002               	movf	___wmul@multiplier+1,w,c
  6761  003B30  0203               	mulwf	___wmul@multiplicand,c
  6762  003B32  50F3               	movf	prodl,w,c
  6763  003B34  2606               	addwf	___wmul@product+1,f,c
  6764  003B36  C005  F001         	movff	___wmul@product,?___wmul
  6765  003B3A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6766  003B3E  0012               	return	
  6767  003B40                     __end_of___wmul:
  6768                           	opt stack 0
  6769                           tblptru	equ	0xFF8
  6770                           tblptrh	equ	0xFF7
  6771                           tblptrl	equ	0xFF6
  6772                           tablat	equ	0xFF5
  6773                           prodh	equ	0xFF4
  6774                           prodl	equ	0xFF3
  6775                           intcon	equ	0xFF2
  6776                           postinc0	equ	0xFEE
  6777                           wreg	equ	0xFE8
  6778                           indf1	equ	0xFE7
  6779                           postinc1	equ	0xFE6
  6780                           postdec1	equ	0xFE5
  6781                           fsr1h	equ	0xFE2
  6782                           fsr1l	equ	0xFE1
  6783                           indf2	equ	0xFDF
  6784                           postinc2	equ	0xFDE
  6785                           fsr2h	equ	0xFDA
  6786                           fsr2l	equ	0xFD9
  6787                           status	equ	0xFD8
  6788                           
  6789 ;; *************** function _lineCompletedTest *****************
  6790 ;; Defined at:
  6791 ;;		line 887 in file "main.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;		None
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  i               1   49[COMRAM] unsigned char 
  6796 ;;  j               1   50[COMRAM] unsigned char 
  6797 ;;  completed       1   48[COMRAM] unsigned char 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  1    wreg      void 
  6800 ;; Registers used:
  6801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6807 ;;      Params:         0       0       0       0       0       0       0       0       0
  6808 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6809 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6810 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6811 ;;Total ram usage:        6 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:    4
  6814 ;; This function calls:
  6815 ;;		_completedUpdate
  6816 ;; This function is called by:
  6817 ;;		_main
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           	psect	text8
  6822  003E1E                     __ptext8:
  6823                           	opt stack 0
  6824  003E1E                     _lineCompletedTest:
  6825                           	opt stack 26
  6826                           
  6827                           ;main.c: 889: uint8_t completed=0;
  6828                           
  6829                           ;incstack = 0
  6830  003E1E  0E00               	movlw	0
  6831  003E20  6E31               	movwf	lineCompletedTest@completed,c
  6832                           
  6833                           ;main.c: 890: for(uint8_t j=0;j<11;j++){
  6834  003E22  0E00               	movlw	0
  6835  003E24  6E33               	movwf	lineCompletedTest@j,c
  6836  003E26                     l4369:
  6837  003E26  0E0A               	movlw	10
  6838  003E28  6433               	cpfsgt	lineCompletedTest@j,c
  6839  003E2A  D001               	goto	l315
  6840  003E2C  0012               	return	
  6841  003E2E                     l315:
  6842                           
  6843                           ;main.c: 891: for(uint8_t i=0;i<17;i++){
  6844  003E2E  0E00               	movlw	0
  6845  003E30  6E32               	movwf	lineCompletedTest@i,c
  6846  003E32                     l4375:
  6847  003E32  0E10               	movlw	16
  6848  003E34  6432               	cpfsgt	lineCompletedTest@i,c
  6849  003E36  D001               	goto	l317
  6850  003E38  D01E               	goto	u4760
  6851  003E3A                     l317:
  6852                           
  6853                           ;main.c: 892: if(array_data[i][j]=='1')
  6854  003E3A  5032               	movf	lineCompletedTest@i,w,c
  6855  003E3C  0D0C               	mullw	12
  6856  003E3E  0E00               	movlw	low _array_data
  6857  003E40  6E2E               	movwf	??_lineCompletedTest& (0+255),c
  6858  003E42  0E02               	movlw	high _array_data
  6859  003E44  6E2F               	movwf	(??_lineCompletedTest+1)& (0+255),c
  6860  003E46  50F3               	movf	prodl,w,c
  6861  003E48  262E               	addwf	??_lineCompletedTest,f,c
  6862  003E4A  50F4               	movf	prodh,w,c
  6863  003E4C  222F               	addwfc	??_lineCompletedTest+1,f,c
  6864  003E4E  5033               	movf	lineCompletedTest@j,w,c
  6865  003E50  0D01               	mullw	1
  6866  003E52  50F3               	movf	prodl,w,c
  6867  003E54  242E               	addwf	??_lineCompletedTest,w,c
  6868  003E56  6ED9               	movwf	fsr2l,c
  6869  003E58  50F4               	movf	prodh,w,c
  6870  003E5A  202F               	addwfc	??_lineCompletedTest+1,w,c
  6871  003E5C  6EDA               	movwf	fsr2h,c
  6872  003E5E  0E31               	movlw	49
  6873  003E60  18DE               	xorwf	postinc2,w,c
  6874  003E62  A4D8               	btfss	status,2,c
  6875  003E64  D003               	goto	l319
  6876                           
  6877                           ;main.c: 893: completed=1;
  6878  003E66  0E01               	movlw	1
  6879  003E68  6E31               	movwf	lineCompletedTest@completed,c
  6880  003E6A  D003               	goto	l320
  6881  003E6C                     l319:
  6882                           
  6883                           ;main.c: 894: else{
  6884                           ;main.c: 895: completed=0;
  6885  003E6C  0E00               	movlw	0
  6886  003E6E  6E31               	movwf	lineCompletedTest@completed,c
  6887                           
  6888                           ;main.c: 896: break;
  6889  003E70  D002               	goto	u4760
  6890  003E72                     l320:
  6891  003E72  2A32               	incf	lineCompletedTest@i,f,c
  6892  003E74  D7DE               	goto	l4375
  6893  003E76                     u4760:
  6894                           
  6895                           ;main.c: 897: }
  6896                           ;main.c: 898: }
  6897                           ;main.c: 899: if(completed==1){
  6898  003E76  0431               	decf	lineCompletedTest@completed,w,c
  6899  003E78  A4D8               	btfss	status,2,c
  6900  003E7A  D005               	goto	l321
  6901                           
  6902                           ;main.c: 900: completedUpdate(j);
  6903  003E7C  5033               	movf	lineCompletedTest@j,w,c
  6904  003E7E  ECB5  F023         	call	_completedUpdate
  6905                           
  6906                           ;main.c: 901: score+=10;
  6907  003E82  0E0A               	movlw	10
  6908  003E84  2654               	addwf	_score,f,c
  6909  003E86                     l321:
  6910  003E86  2A33               	incf	lineCompletedTest@j,f,c
  6911  003E88  D7CE               	goto	l4369
  6912  003E8A                     __end_of_lineCompletedTest:
  6913                           	opt stack 0
  6914                           tblptru	equ	0xFF8
  6915                           tblptrh	equ	0xFF7
  6916                           tblptrl	equ	0xFF6
  6917                           tablat	equ	0xFF5
  6918                           prodh	equ	0xFF4
  6919                           prodl	equ	0xFF3
  6920                           intcon	equ	0xFF2
  6921                           postinc0	equ	0xFEE
  6922                           wreg	equ	0xFE8
  6923                           indf1	equ	0xFE7
  6924                           postinc1	equ	0xFE6
  6925                           postdec1	equ	0xFE5
  6926                           fsr1h	equ	0xFE2
  6927                           fsr1l	equ	0xFE1
  6928                           indf2	equ	0xFDF
  6929                           postinc2	equ	0xFDE
  6930                           fsr2h	equ	0xFDA
  6931                           fsr2l	equ	0xFD9
  6932                           status	equ	0xFD8
  6933                           
  6934 ;; *************** function _completedUpdate *****************
  6935 ;; Defined at:
  6936 ;;		line 855 in file "main.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;  line            1    wreg     unsigned char 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  line            1   39[COMRAM] unsigned char 
  6941 ;;  i               1   42[COMRAM] unsigned char 
  6942 ;;  j               1   40[COMRAM] unsigned char 
  6943 ;;  j               1   43[COMRAM] unsigned char 
  6944 ;;  j               1   41[COMRAM] unsigned char 
  6945 ;;  i               1   44[COMRAM] unsigned char 
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  1    wreg      void 
  6948 ;; Registers used:
  6949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6955 ;;      Params:         0       0       0       0       0       0       0       0       0
  6956 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6957 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6958 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6959 ;;Total ram usage:       14 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; Hardware stack levels required when called:    3
  6962 ;; This function calls:
  6963 ;;		_update_display_shapes
  6964 ;; This function is called by:
  6965 ;;		_lineCompletedTest
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           	psect	text9
  6970  00476A                     __ptext9:
  6971                           	opt stack 0
  6972  00476A                     _completedUpdate:
  6973                           	opt stack 26
  6974                           
  6975                           ;incstack = 0
  6976                           ;completedUpdate@line stored from wreg
  6977  00476A  6E28               	movwf	completedUpdate@line,c
  6978                           
  6979                           ;main.c: 857: uint8_t i=0;
  6980  00476C  0E00               	movlw	0
  6981  00476E  6E2D               	movwf	completedUpdate@i,c
  6982                           
  6983                           ;main.c: 858: while (all_shapes[i].index[0].x != 99){
  6984  004770  D04E               	goto	u3150
  6985  004772                     
  6986                           ;main.c: 859: for(uint8_t j=0;j<4;j++){
  6987  004772  0E00               	movlw	0
  6988  004774  6E2C               	movwf	completedUpdate@j,c
  6989  004776                     l3415:
  6990  004776  0E03               	movlw	3
  6991  004778  642C               	cpfsgt	completedUpdate@j,c
  6992  00477A  D001               	goto	l298
  6993  00477C  D048               	goto	u3150
  6994  00477E                     l298:
  6995                           
  6996                           ;main.c: 860: if(all_shapes[i].index[j].y==line){
  6997  00477E  502D               	movf	completedUpdate@i,w,c
  6998  004780  0D09               	mullw	9
  6999  004782  0E00               	movlw	low _all_shapes
  7000  004784  6E20               	movwf	??_completedUpdate& (0+255),c
  7001  004786  0E01               	movlw	high _all_shapes
  7002  004788  6E21               	movwf	(??_completedUpdate+1)& (0+255),c
  7003  00478A  50F3               	movf	prodl,w,c
  7004  00478C  2620               	addwf	??_completedUpdate,f,c
  7005  00478E  50F4               	movf	prodh,w,c
  7006  004790  2221               	addwfc	??_completedUpdate+1,f,c
  7007  004792  502C               	movf	completedUpdate@j,w,c
  7008  004794  0D02               	mullw	2
  7009  004796  50F3               	movf	prodl,w,c
  7010  004798  2620               	addwf	??_completedUpdate,f,c
  7011  00479A  50F4               	movf	prodh,w,c
  7012  00479C  2221               	addwfc	??_completedUpdate+1,f,c
  7013  00479E  0E01               	movlw	1
  7014  0047A0  2420               	addwf	??_completedUpdate,w,c
  7015  0047A2  6ED9               	movwf	fsr2l,c
  7016  0047A4  0E00               	movlw	0
  7017  0047A6  2021               	addwfc	??_completedUpdate+1,w,c
  7018  0047A8  6EDA               	movwf	fsr2h,c
  7019  0047AA  5028               	movf	completedUpdate@line,w,c
  7020  0047AC  18DE               	xorwf	postinc2,w,c
  7021  0047AE  A4D8               	btfss	status,2,c
  7022  0047B0  D02C               	goto	l300
  7023                           
  7024                           ;main.c: 861: all_shapes[i].index[j].x=-1;
  7025  0047B2  502D               	movf	completedUpdate@i,w,c
  7026  0047B4  0D09               	mullw	9
  7027  0047B6  0E00               	movlw	low _all_shapes
  7028  0047B8  6E20               	movwf	??_completedUpdate& (0+255),c
  7029  0047BA  0E01               	movlw	high _all_shapes
  7030  0047BC  6E21               	movwf	(??_completedUpdate+1)& (0+255),c
  7031  0047BE  50F3               	movf	prodl,w,c
  7032  0047C0  2620               	addwf	??_completedUpdate,f,c
  7033  0047C2  50F4               	movf	prodh,w,c
  7034  0047C4  2221               	addwfc	??_completedUpdate+1,f,c
  7035  0047C6  502C               	movf	completedUpdate@j,w,c
  7036  0047C8  0D02               	mullw	2
  7037  0047CA  50F3               	movf	prodl,w,c
  7038  0047CC  2420               	addwf	??_completedUpdate,w,c
  7039  0047CE  6ED9               	movwf	fsr2l,c
  7040  0047D0  50F4               	movf	prodh,w,c
  7041  0047D2  2021               	addwfc	??_completedUpdate+1,w,c
  7042  0047D4  6EDA               	movwf	fsr2h,c
  7043  0047D6  0EFF               	movlw	255
  7044  0047D8  6EDF               	movwf	indf2,c
  7045                           
  7046                           ;main.c: 862: all_shapes[i].index[j].y=-1;
  7047  0047DA  502D               	movf	completedUpdate@i,w,c
  7048  0047DC  0D09               	mullw	9
  7049  0047DE  0E00               	movlw	low _all_shapes
  7050  0047E0  6E20               	movwf	??_completedUpdate& (0+255),c
  7051  0047E2  0E01               	movlw	high _all_shapes
  7052  0047E4  6E21               	movwf	(??_completedUpdate+1)& (0+255),c
  7053  0047E6  50F3               	movf	prodl,w,c
  7054  0047E8  2620               	addwf	??_completedUpdate,f,c
  7055  0047EA  50F4               	movf	prodh,w,c
  7056  0047EC  2221               	addwfc	??_completedUpdate+1,f,c
  7057  0047EE  502C               	movf	completedUpdate@j,w,c
  7058  0047F0  0D02               	mullw	2
  7059  0047F2  50F3               	movf	prodl,w,c
  7060  0047F4  2620               	addwf	??_completedUpdate,f,c
  7061  0047F6  50F4               	movf	prodh,w,c
  7062  0047F8  2221               	addwfc	??_completedUpdate+1,f,c
  7063  0047FA  0E01               	movlw	1
  7064  0047FC  2420               	addwf	??_completedUpdate,w,c
  7065  0047FE  6ED9               	movwf	fsr2l,c
  7066  004800  0E00               	movlw	0
  7067  004802  2021               	addwfc	??_completedUpdate+1,w,c
  7068  004804  6EDA               	movwf	fsr2h,c
  7069  004806  0EFF               	movlw	255
  7070  004808  6EDF               	movwf	indf2,c
  7071  00480A                     l300:
  7072  00480A  2A2C               	incf	completedUpdate@j,f,c
  7073  00480C  D7B4               	goto	l3415
  7074  00480E                     u3150:
  7075  00480E  502D               	movf	completedUpdate@i,w,c
  7076  004810  0D09               	mullw	9
  7077  004812  0E00               	movlw	low _all_shapes
  7078  004814  24F3               	addwf	prodl,w,c
  7079  004816  6ED9               	movwf	fsr2l,c
  7080  004818  0E01               	movlw	high _all_shapes
  7081  00481A  20F4               	addwfc	prodh,w,c
  7082  00481C  6EDA               	movwf	fsr2h,c
  7083  00481E  0E63               	movlw	99
  7084  004820  18DE               	xorwf	postinc2,w,c
  7085  004822  B4D8               	btfsc	status,2,c
  7086  004824  D03A               	goto	u3190
  7087  004826  D7A5               	goto	l297
  7088  004828                     
  7089                           ;main.c: 869: for(uint8_t j=0;j<4;j++){
  7090  004828  0E00               	movlw	0
  7091  00482A  6E29               	movwf	completedUpdate@j_301,c
  7092  00482C                     l3431:
  7093  00482C  0E03               	movlw	3
  7094  00482E  6429               	cpfsgt	completedUpdate@j_301,c
  7095  004830  D001               	goto	l304
  7096  004832  D033               	goto	u3190
  7097  004834                     l304:
  7098                           
  7099                           ;main.c: 870: if(all_shapes[i].index[j].y < line && all_shapes[i].index[j].y!=-1){
  7100  004834  502D               	movf	completedUpdate@i,w,c
  7101  004836  0D09               	mullw	9
  7102  004838  0E00               	movlw	low _all_shapes
  7103  00483A  6E20               	movwf	??_completedUpdate& (0+255),c
  7104  00483C  0E01               	movlw	high _all_shapes
  7105  00483E  6E21               	movwf	(??_completedUpdate+1)& (0+255),c
  7106  004840  50F3               	movf	prodl,w,c
  7107  004842  2620               	addwf	??_completedUpdate,f,c
  7108  004844  50F4               	movf	prodh,w,c
  7109  004846  2221               	addwfc	??_completedUpdate+1,f,c
  7110  004848  5029               	movf	completedUpdate@j_301,w,c
  7111  00484A  0D02               	mullw	2
  7112  00484C  50F3               	movf	prodl,w,c
  7113  00484E  2620               	addwf	??_completedUpdate,f,c
  7114  004850  50F4               	movf	prodh,w,c
  7115  004852  2221               	addwfc	??_completedUpdate+1,f,c
  7116  004854  0E01               	movlw	1
  7117  004856  2420               	addwf	??_completedUpdate,w,c
  7118  004858  6ED9               	movwf	fsr2l,c
  7119  00485A  0E00               	movlw	0
  7120  00485C  2021               	addwfc	??_completedUpdate+1,w,c
  7121  00485E  6EDA               	movwf	fsr2h,c
  7122  004860  5028               	movf	completedUpdate@line,w,c
  7123  004862  5CDE               	subwf	postinc2,w,c
  7124  004864  B0D8               	btfsc	status,0,c
  7125  004866  D017               	goto	l306
  7126                           
  7127                           ;main.c: 871: all_shapes[i].index[j].y+=1;
  7128  004868  502D               	movf	completedUpdate@i,w,c
  7129  00486A  0D09               	mullw	9
  7130  00486C  0E00               	movlw	low _all_shapes
  7131  00486E  6E20               	movwf	??_completedUpdate& (0+255),c
  7132  004870  0E01               	movlw	high _all_shapes
  7133  004872  6E21               	movwf	(??_completedUpdate+1)& (0+255),c
  7134  004874  50F3               	movf	prodl,w,c
  7135  004876  2620               	addwf	??_completedUpdate,f,c
  7136  004878  50F4               	movf	prodh,w,c
  7137  00487A  2221               	addwfc	??_completedUpdate+1,f,c
  7138  00487C  5029               	movf	completedUpdate@j_301,w,c
  7139  00487E  0D02               	mullw	2
  7140  004880  50F3               	movf	prodl,w,c
  7141  004882  2620               	addwf	??_completedUpdate,f,c
  7142  004884  50F4               	movf	prodh,w,c
  7143  004886  2221               	addwfc	??_completedUpdate+1,f,c
  7144  004888  0E01               	movlw	1
  7145  00488A  2420               	addwf	??_completedUpdate,w,c
  7146  00488C  6ED9               	movwf	fsr2l,c
  7147  00488E  0E00               	movlw	0
  7148  004890  2021               	addwfc	??_completedUpdate+1,w,c
  7149  004892  6EDA               	movwf	fsr2h,c
  7150  004894  2ADF               	incf	indf2,f,c
  7151  004896                     l306:
  7152  004896  2A29               	incf	completedUpdate@j_301,f,c
  7153  004898  D7C9               	goto	l3431
  7154  00489A                     u3190:
  7155  00489A  502D               	movf	completedUpdate@i,w,c
  7156  00489C  0D09               	mullw	9
  7157  00489E  0E00               	movlw	low _all_shapes
  7158  0048A0  24F3               	addwf	prodl,w,c
  7159  0048A2  6ED9               	movwf	fsr2l,c
  7160  0048A4  0E01               	movlw	high _all_shapes
  7161  0048A6  20F4               	addwfc	prodh,w,c
  7162  0048A8  6EDA               	movwf	fsr2h,c
  7163  0048AA  0E63               	movlw	99
  7164  0048AC  18DE               	xorwf	postinc2,w,c
  7165  0048AE  A4D8               	btfss	status,2,c
  7166  0048B0  D7BB               	goto	l303
  7167                           
  7168                           ;main.c: 872: }
  7169                           ;main.c: 873: }
  7170                           ;main.c: 874: }
  7171                           ;main.c: 877: for(uint8_t j=line;j>0;j--){
  7172  0048B2  C028  F02A         	movff	completedUpdate@line,completedUpdate@j_302
  7173  0048B6                     l3445:
  7174  0048B6  502A               	movf	completedUpdate@j_302,w,c
  7175  0048B8  B4D8               	btfsc	status,2,c
  7176  0048BA  D039               	goto	u3240
  7177                           
  7178                           ;main.c: 878: for(uint8_t i=0;i<17;i++){
  7179  0048BC  0E00               	movlw	0
  7180  0048BE  6E2B               	movwf	completedUpdate@i_303,c
  7181  0048C0                     l3451:
  7182  0048C0  0E10               	movlw	16
  7183  0048C2  642B               	cpfsgt	completedUpdate@i_303,c
  7184  0048C4  D001               	goto	l310
  7185  0048C6  D031               	goto	u3230
  7186  0048C8                     l310:
  7187                           
  7188                           ;main.c: 879: array_data[i][j]=array_data[i][j-1];
  7189  0048C8  502B               	movf	completedUpdate@i_303,w,c
  7190  0048CA  0D0C               	mullw	12
  7191  0048CC  0EFF               	movlw	255
  7192  0048CE  6E20               	movwf	??_completedUpdate& (0+255),c
  7193  0048D0  0EFF               	movlw	255
  7194  0048D2  6E21               	movwf	(??_completedUpdate+1)& (0+255),c
  7195  0048D4  502A               	movf	completedUpdate@j_302,w,c
  7196  0048D6  6E22               	movwf	(??_completedUpdate+2)& (0+255),c
  7197  0048D8  6A23               	clrf	(??_completedUpdate+3)& (0+255),c
  7198  0048DA  5020               	movf	??_completedUpdate,w,c
  7199  0048DC  2622               	addwf	??_completedUpdate+2,f,c
  7200  0048DE  5021               	movf	??_completedUpdate+1,w,c
  7201  0048E0  2223               	addwfc	??_completedUpdate+3,f,c
  7202  0048E2  0E00               	movlw	low _array_data
  7203  0048E4  6E24               	movwf	(??_completedUpdate+4)& (0+255),c
  7204  0048E6  0E02               	movlw	high _array_data
  7205  0048E8  6E25               	movwf	(??_completedUpdate+5)& (0+255),c
  7206  0048EA  5022               	movf	??_completedUpdate+2,w,c
  7207  0048EC  2624               	addwf	??_completedUpdate+4,f,c
  7208  0048EE  5023               	movf	??_completedUpdate+3,w,c
  7209  0048F0  2225               	addwfc	??_completedUpdate+5,f,c
  7210  0048F2  50F3               	movf	prodl,w,c
  7211  0048F4  2424               	addwf	??_completedUpdate+4,w,c
  7212  0048F6  6ED9               	movwf	fsr2l,c
  7213  0048F8  50F4               	movf	prodh,w,c
  7214  0048FA  2025               	addwfc	??_completedUpdate+5,w,c
  7215  0048FC  6EDA               	movwf	fsr2h,c
  7216  0048FE  502B               	movf	completedUpdate@i_303,w,c
  7217  004900  0D0C               	mullw	12
  7218  004902  0E00               	movlw	low _array_data
  7219  004904  6E26               	movwf	(??_completedUpdate+6)& (0+255),c
  7220  004906  0E02               	movlw	high _array_data
  7221  004908  6E27               	movwf	(??_completedUpdate+7)& (0+255),c
  7222  00490A  50F3               	movf	prodl,w,c
  7223  00490C  2626               	addwf	??_completedUpdate+6,f,c
  7224  00490E  50F4               	movf	prodh,w,c
  7225  004910  2227               	addwfc	??_completedUpdate+7,f,c
  7226  004912  502A               	movf	completedUpdate@j_302,w,c
  7227  004914  0D01               	mullw	1
  7228  004916  50F3               	movf	prodl,w,c
  7229  004918  2426               	addwf	??_completedUpdate+6,w,c
  7230  00491A  6EE1               	movwf	fsr1l,c
  7231  00491C  50F4               	movf	prodh,w,c
  7232  00491E  2027               	addwfc	??_completedUpdate+7,w,c
  7233  004920  6EE2               	movwf	fsr1h,c
  7234  004922  CFDF FFE7          	movff	indf2,indf1
  7235  004926  2A2B               	incf	completedUpdate@i_303,f,c
  7236  004928  D7CB               	goto	l3451
  7237  00492A                     u3230:
  7238  00492A  062A               	decf	completedUpdate@j_302,f,c
  7239  00492C  D7C4               	goto	l3445
  7240  00492E                     u3240:
  7241                           
  7242                           ;main.c: 880: }
  7243                           ;main.c: 881: }
  7244                           ;main.c: 883: update_display_shapes('1');
  7245  00492E  0E31               	movlw	49
  7246  004930  EC81  F025         	call	_update_display_shapes
  7247  004934  0012               	return		;funcret
  7248  004936                     __end_of_completedUpdate:
  7249                           	opt stack 0
  7250                           tblptru	equ	0xFF8
  7251                           tblptrh	equ	0xFF7
  7252                           tblptrl	equ	0xFF6
  7253                           tablat	equ	0xFF5
  7254                           prodh	equ	0xFF4
  7255                           prodl	equ	0xFF3
  7256                           intcon	equ	0xFF2
  7257                           postinc0	equ	0xFEE
  7258                           wreg	equ	0xFE8
  7259                           indf1	equ	0xFE7
  7260                           postinc1	equ	0xFE6
  7261                           postdec1	equ	0xFE5
  7262                           fsr1h	equ	0xFE2
  7263                           fsr1l	equ	0xFE1
  7264                           indf2	equ	0xFDF
  7265                           postinc2	equ	0xFDE
  7266                           fsr2h	equ	0xFDA
  7267                           fsr2l	equ	0xFD9
  7268                           status	equ	0xFD8
  7269                           
  7270 ;; *************** function _update_display_shapes *****************
  7271 ;; Defined at:
  7272 ;;		line 216 in file "main.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  operation       1    wreg     unsigned char 
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;  operation       1   22[COMRAM] unsigned char 
  7277 ;;  n               1   26[COMRAM] unsigned char 
  7278 ;;  n               1   24[COMRAM] unsigned char 
  7279 ;;  m               1   25[COMRAM] unsigned char 
  7280 ;;  m               1   23[COMRAM] unsigned char 
  7281 ;;  j               1   28[COMRAM] unsigned char 
  7282 ;;  x               1   30[COMRAM] unsigned char 
  7283 ;;  y               1   29[COMRAM] unsigned char 
  7284 ;;  i               1   27[COMRAM] unsigned char 
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1    wreg      void 
  7287 ;; Registers used:
  7288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7294 ;;      Params:         0       0       0       0       0       0       0       0       0
  7295 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7296 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7297 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7298 ;;Total ram usage:       14 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:    2
  7301 ;; This function calls:
  7302 ;;		_glcd_PlotPixel
  7303 ;; This function is called by:
  7304 ;;		_completedUpdate
  7305 ;;		_main
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	text10
  7310  004B02                     __ptext10:
  7311                           	opt stack 0
  7312  004B02                     _update_display_shapes:
  7313                           	opt stack 28
  7314                           
  7315                           ;incstack = 0
  7316                           ;update_display_shapes@operation stored from wreg
  7317  004B02  6E17               	movwf	update_display_shapes@operation,c
  7318                           
  7319                           ;main.c: 218: uint8_t x,y,i=0;
  7320  004B04  0E00               	movlw	0
  7321  004B06  6E1C               	movwf	update_display_shapes@i,c
  7322                           
  7323                           ;main.c: 220: while (all_shapes[i].index[0].x != 99){
  7324  004B08  D144               	goto	l66
  7325  004B0A                     
  7326                           ;main.c: 221: for(uint8_t j=0;j<4;j++){
  7327  004B0A  0E00               	movlw	0
  7328  004B0C  6E1D               	movwf	update_display_shapes@j,c
  7329  004B0E                     l3105:
  7330  004B0E  0E03               	movlw	3
  7331  004B10  641D               	cpfsgt	update_display_shapes@j,c
  7332  004B12  D028               	goto	l70
  7333  004B14  D13D               	goto	u2830
  7334  004B16                     
  7335                           ;main.c: 225: x=2;
  7336  004B16  0E02               	movlw	2
  7337  004B18  D021               	goto	L19
  7338  004B1A                     
  7339                           ;main.c: 228: x=7;
  7340  004B1A  0E07               	movlw	7
  7341  004B1C  D01F               	goto	L19
  7342  004B1E                     
  7343                           ;main.c: 231: x=12;
  7344  004B1E  0E0C               	movlw	12
  7345  004B20  D01D               	goto	L19
  7346  004B22                     
  7347                           ;main.c: 234: x=17;
  7348  004B22  0E11               	movlw	17
  7349  004B24  D01B               	goto	L19
  7350  004B26                     
  7351                           ;main.c: 237: x=22;
  7352  004B26  0E16               	movlw	22
  7353  004B28  D019               	goto	L19
  7354  004B2A                     
  7355                           ;main.c: 240: x=27;
  7356  004B2A  0E1B               	movlw	27
  7357  004B2C  D017               	goto	L19
  7358  004B2E                     
  7359                           ;main.c: 243: x=32;
  7360  004B2E  0E20               	movlw	32
  7361  004B30  D015               	goto	L19
  7362  004B32                     
  7363                           ;main.c: 246: x=37;
  7364  004B32  0E25               	movlw	37
  7365  004B34  D013               	goto	L19
  7366  004B36                     
  7367                           ;main.c: 249: x=42;
  7368  004B36  0E2A               	movlw	42
  7369  004B38  D011               	goto	L19
  7370  004B3A                     
  7371                           ;main.c: 252: x=47;
  7372  004B3A  0E2F               	movlw	47
  7373  004B3C  D00F               	goto	L19
  7374  004B3E                     
  7375                           ;main.c: 255: x=52;
  7376  004B3E  0E34               	movlw	52
  7377  004B40  D00D               	goto	L19
  7378  004B42                     
  7379                           ;main.c: 258: x=57;
  7380  004B42  0E39               	movlw	57
  7381  004B44  D00B               	goto	L19
  7382  004B46                     
  7383                           ;main.c: 261: x=62;
  7384  004B46  0E3E               	movlw	62
  7385  004B48  D009               	goto	L19
  7386  004B4A                     
  7387                           ;main.c: 264: x=67;
  7388  004B4A  0E43               	movlw	67
  7389  004B4C  D007               	goto	L19
  7390  004B4E                     
  7391                           ;main.c: 267: x=72;
  7392  004B4E  0E48               	movlw	72
  7393  004B50  D005               	goto	L19
  7394  004B52                     
  7395                           ;main.c: 270: x=77;
  7396  004B52  0E4D               	movlw	77
  7397  004B54  D003               	goto	L19
  7398  004B56                     
  7399                           ;main.c: 273: x=82;
  7400  004B56  0E52               	movlw	82
  7401  004B58  D001               	goto	L19
  7402  004B5A                     
  7403                           ;main.c: 276: x=87;
  7404  004B5A  0E57               	movlw	87
  7405  004B5C                     L19:
  7406  004B5C  6E1F               	movwf	update_display_shapes@x,c
  7407                           
  7408                           ;main.c: 277: break;
  7409  004B5E  D067               	goto	l91
  7410  004B60                     l90:
  7411                           
  7412                           ;main.c: 279: x=-1;
  7413  004B60  681F               	setf	update_display_shapes@x,c
  7414                           
  7415                           ;main.c: 281: }
  7416                           
  7417                           ;main.c: 280: break;
  7418  004B62  D065               	goto	l91
  7419  004B64                     l70:
  7420  004B64  501C               	movf	update_display_shapes@i,w,c
  7421  004B66  0D09               	mullw	9
  7422  004B68  0E00               	movlw	low _all_shapes
  7423  004B6A  6E12               	movwf	??_update_display_shapes& (0+255),c
  7424  004B6C  0E01               	movlw	high _all_shapes
  7425  004B6E  6E13               	movwf	(??_update_display_shapes+1)& (0+255),c
  7426  004B70  50F3               	movf	prodl,w,c
  7427  004B72  2612               	addwf	??_update_display_shapes,f,c
  7428  004B74  50F4               	movf	prodh,w,c
  7429  004B76  2213               	addwfc	??_update_display_shapes+1,f,c
  7430  004B78  501D               	movf	update_display_shapes@j,w,c
  7431  004B7A  0D02               	mullw	2
  7432  004B7C  50F3               	movf	prodl,w,c
  7433  004B7E  2412               	addwf	??_update_display_shapes,w,c
  7434  004B80  6ED9               	movwf	fsr2l,c
  7435  004B82  50F4               	movf	prodh,w,c
  7436  004B84  2013               	addwfc	??_update_display_shapes+1,w,c
  7437  004B86  6EDA               	movwf	fsr2h,c
  7438  004B88  50DF               	movf	indf2,w,c
  7439                           
  7440                           ; Switch size 1, requested type "space"
  7441                           ; Number of cases is 18, Range of values is 0 to 17
  7442                           ; switch strategies available:
  7443                           ; Name         Instructions Cycles
  7444                           ; simple_byte           55    28 (average)
  7445                           ;	Chosen strategy is simple_byte
  7446  004B8A  0A00               	xorlw	0	; case 0
  7447  004B8C  B4D8               	btfsc	status,2,c
  7448  004B8E  D7C3               	goto	l71
  7449  004B90  0A01               	xorlw	1	; case 1
  7450  004B92  B4D8               	btfsc	status,2,c
  7451  004B94  D7C2               	goto	l73
  7452  004B96  0A03               	xorlw	3	; case 2
  7453  004B98  B4D8               	btfsc	status,2,c
  7454  004B9A  D7C1               	goto	l74
  7455  004B9C  0A01               	xorlw	1	; case 3
  7456  004B9E  B4D8               	btfsc	status,2,c
  7457  004BA0  D7C0               	goto	l75
  7458  004BA2  0A07               	xorlw	7	; case 4
  7459  004BA4  B4D8               	btfsc	status,2,c
  7460  004BA6  D7BF               	goto	l76
  7461  004BA8  0A01               	xorlw	1	; case 5
  7462  004BAA  B4D8               	btfsc	status,2,c
  7463  004BAC  D7BE               	goto	l77
  7464  004BAE  0A03               	xorlw	3	; case 6
  7465  004BB0  B4D8               	btfsc	status,2,c
  7466  004BB2  D7BD               	goto	l78
  7467  004BB4  0A01               	xorlw	1	; case 7
  7468  004BB6  B4D8               	btfsc	status,2,c
  7469  004BB8  D7BC               	goto	l79
  7470  004BBA  0A0F               	xorlw	15	; case 8
  7471  004BBC  B4D8               	btfsc	status,2,c
  7472  004BBE  D7BB               	goto	l80
  7473  004BC0  0A01               	xorlw	1	; case 9
  7474  004BC2  B4D8               	btfsc	status,2,c
  7475  004BC4  D7BA               	goto	l81
  7476  004BC6  0A03               	xorlw	3	; case 10
  7477  004BC8  B4D8               	btfsc	status,2,c
  7478  004BCA  D7B9               	goto	l82
  7479  004BCC  0A01               	xorlw	1	; case 11
  7480  004BCE  B4D8               	btfsc	status,2,c
  7481  004BD0  D7B8               	goto	l83
  7482  004BD2  0A07               	xorlw	7	; case 12
  7483  004BD4  B4D8               	btfsc	status,2,c
  7484  004BD6  D7B7               	goto	l84
  7485  004BD8  0A01               	xorlw	1	; case 13
  7486  004BDA  B4D8               	btfsc	status,2,c
  7487  004BDC  D7B6               	goto	l85
  7488  004BDE  0A03               	xorlw	3	; case 14
  7489  004BE0  B4D8               	btfsc	status,2,c
  7490  004BE2  D7B5               	goto	l86
  7491  004BE4  0A01               	xorlw	1	; case 15
  7492  004BE6  B4D8               	btfsc	status,2,c
  7493  004BE8  D7B4               	goto	l87
  7494  004BEA  0A1F               	xorlw	31	; case 16
  7495  004BEC  B4D8               	btfsc	status,2,c
  7496  004BEE  D7B3               	goto	l88
  7497  004BF0  0A01               	xorlw	1	; case 17
  7498  004BF2  B4D8               	btfsc	status,2,c
  7499  004BF4  D7B2               	goto	l89
  7500  004BF6  D7B4               	goto	l90
  7501  004BF8                     
  7502                           ;main.c: 284: y=2;
  7503  004BF8  0E02               	movlw	2
  7504  004BFA  D015               	goto	L30
  7505  004BFC                     
  7506                           ;main.c: 287: y=7;
  7507  004BFC  0E07               	movlw	7
  7508  004BFE  D013               	goto	L30
  7509  004C00                     
  7510                           ;main.c: 290: y=12;
  7511  004C00  0E0C               	movlw	12
  7512  004C02  D011               	goto	L30
  7513  004C04                     
  7514                           ;main.c: 293: y=17;
  7515  004C04  0E11               	movlw	17
  7516  004C06  D00F               	goto	L30
  7517  004C08                     
  7518                           ;main.c: 296: y=22;
  7519  004C08  0E16               	movlw	22
  7520  004C0A  D00D               	goto	L30
  7521  004C0C                     
  7522                           ;main.c: 299: y=27;
  7523  004C0C  0E1B               	movlw	27
  7524  004C0E  D00B               	goto	L30
  7525  004C10                     
  7526                           ;main.c: 302: y=32;
  7527  004C10  0E20               	movlw	32
  7528  004C12  D009               	goto	L30
  7529  004C14                     
  7530                           ;main.c: 305: y=37;
  7531  004C14  0E25               	movlw	37
  7532  004C16  D007               	goto	L30
  7533  004C18                     
  7534                           ;main.c: 308: y=42;
  7535  004C18  0E2A               	movlw	42
  7536  004C1A  D005               	goto	L30
  7537  004C1C                     
  7538                           ;main.c: 311: y=47;
  7539  004C1C  0E2F               	movlw	47
  7540  004C1E  D003               	goto	L30
  7541  004C20                     
  7542                           ;main.c: 314: y=52;
  7543  004C20  0E34               	movlw	52
  7544  004C22  D001               	goto	L30
  7545  004C24                     
  7546                           ;main.c: 317: y=57;
  7547  004C24  0E39               	movlw	57
  7548  004C26                     L30:
  7549  004C26  6E1E               	movwf	update_display_shapes@y,c
  7550                           
  7551                           ;main.c: 318: break;
  7552  004C28  D03E               	goto	l93
  7553  004C2A                     l105:
  7554                           
  7555                           ;main.c: 320: y=-1;
  7556  004C2A  681E               	setf	update_display_shapes@y,c
  7557                           
  7558                           ;main.c: 322: }
  7559                           
  7560                           ;main.c: 321: break;
  7561  004C2C  D03C               	goto	l93
  7562  004C2E                     l91:
  7563  004C2E  501C               	movf	update_display_shapes@i,w,c
  7564  004C30  0D09               	mullw	9
  7565  004C32  0E00               	movlw	low _all_shapes
  7566  004C34  6E12               	movwf	??_update_display_shapes& (0+255),c
  7567  004C36  0E01               	movlw	high _all_shapes
  7568  004C38  6E13               	movwf	(??_update_display_shapes+1)& (0+255),c
  7569  004C3A  50F3               	movf	prodl,w,c
  7570  004C3C  2612               	addwf	??_update_display_shapes,f,c
  7571  004C3E  50F4               	movf	prodh,w,c
  7572  004C40  2213               	addwfc	??_update_display_shapes+1,f,c
  7573  004C42  501D               	movf	update_display_shapes@j,w,c
  7574  004C44  0D02               	mullw	2
  7575  004C46  50F3               	movf	prodl,w,c
  7576  004C48  2612               	addwf	??_update_display_shapes,f,c
  7577  004C4A  50F4               	movf	prodh,w,c
  7578  004C4C  2213               	addwfc	??_update_display_shapes+1,f,c
  7579  004C4E  0E01               	movlw	1
  7580  004C50  2412               	addwf	??_update_display_shapes,w,c
  7581  004C52  6ED9               	movwf	fsr2l,c
  7582  004C54  0E00               	movlw	0
  7583  004C56  2013               	addwfc	??_update_display_shapes+1,w,c
  7584  004C58  6EDA               	movwf	fsr2h,c
  7585  004C5A  50DF               	movf	indf2,w,c
  7586                           
  7587                           ; Switch size 1, requested type "space"
  7588                           ; Number of cases is 12, Range of values is 0 to 11
  7589                           ; switch strategies available:
  7590                           ; Name         Instructions Cycles
  7591                           ; simple_byte           37    19 (average)
  7592                           ;	Chosen strategy is simple_byte
  7593  004C5C  0A00               	xorlw	0	; case 0
  7594  004C5E  B4D8               	btfsc	status,2,c
  7595  004C60  D7CB               	goto	l92
  7596  004C62  0A01               	xorlw	1	; case 1
  7597  004C64  B4D8               	btfsc	status,2,c
  7598  004C66  D7CA               	goto	l94
  7599  004C68  0A03               	xorlw	3	; case 2
  7600  004C6A  B4D8               	btfsc	status,2,c
  7601  004C6C  D7C9               	goto	l95
  7602  004C6E  0A01               	xorlw	1	; case 3
  7603  004C70  B4D8               	btfsc	status,2,c
  7604  004C72  D7C8               	goto	l96
  7605  004C74  0A07               	xorlw	7	; case 4
  7606  004C76  B4D8               	btfsc	status,2,c
  7607  004C78  D7C7               	goto	l97
  7608  004C7A  0A01               	xorlw	1	; case 5
  7609  004C7C  B4D8               	btfsc	status,2,c
  7610  004C7E  D7C6               	goto	l98
  7611  004C80  0A03               	xorlw	3	; case 6
  7612  004C82  B4D8               	btfsc	status,2,c
  7613  004C84  D7C5               	goto	l99
  7614  004C86  0A01               	xorlw	1	; case 7
  7615  004C88  B4D8               	btfsc	status,2,c
  7616  004C8A  D7C4               	goto	l100
  7617  004C8C  0A0F               	xorlw	15	; case 8
  7618  004C8E  B4D8               	btfsc	status,2,c
  7619  004C90  D7C3               	goto	l101
  7620  004C92  0A01               	xorlw	1	; case 9
  7621  004C94  B4D8               	btfsc	status,2,c
  7622  004C96  D7C2               	goto	l102
  7623  004C98  0A03               	xorlw	3	; case 10
  7624  004C9A  B4D8               	btfsc	status,2,c
  7625  004C9C  D7C1               	goto	l103
  7626  004C9E  0A01               	xorlw	1	; case 11
  7627  004CA0  B4D8               	btfsc	status,2,c
  7628  004CA2  D7C0               	goto	l104
  7629  004CA4  D7C2               	goto	l105
  7630  004CA6                     l93:
  7631                           
  7632                           ;main.c: 325: if(operation=='1'){
  7633  004CA6  0E31               	movlw	49
  7634  004CA8  1817               	xorwf	update_display_shapes@operation,w,c
  7635  004CAA  A4D8               	btfss	status,2,c
  7636  004CAC  D038               	goto	l107
  7637                           
  7638                           ;main.c: 327: for(uint8_t m=x;m<x+4;m++){
  7639  004CAE  C01F  F018         	movff	update_display_shapes@x,update_display_shapes@m
  7640  004CB2  D020               	goto	l108
  7641  004CB4                     l109:
  7642                           
  7643                           ;main.c: 328: for(uint8_t n=y;n<y+4;n++){
  7644  004CB4  C01E  F019         	movff	update_display_shapes@y,update_display_shapes@n
  7645  004CB8  D008               	goto	l110
  7646  004CBA                     
  7647                           ;main.c: 329: glcd_PlotPixel(m,n,1);
  7648  004CBA  C019  F00B         	movff	update_display_shapes@n,glcd_PlotPixel@ypos
  7649  004CBE  0E01               	movlw	1
  7650  004CC0  6E0C               	movwf	glcd_PlotPixel@color,c
  7651  004CC2  5018               	movf	update_display_shapes@m,w,c
  7652  004CC4  ECB0  F020         	call	_glcd_PlotPixel
  7653  004CC8  2A19               	incf	update_display_shapes@n,f,c
  7654  004CCA                     l110:
  7655  004CCA  501E               	movf	update_display_shapes@y,w,c
  7656  004CCC  6E12               	movwf	??_update_display_shapes& (0+255),c
  7657  004CCE  6A13               	clrf	(??_update_display_shapes+1)& (0+255),c
  7658  004CD0  0E04               	movlw	4
  7659  004CD2  2612               	addwf	??_update_display_shapes,f,c
  7660  004CD4  0E00               	movlw	0
  7661  004CD6  2213               	addwfc	??_update_display_shapes+1,f,c
  7662  004CD8  5019               	movf	update_display_shapes@n,w,c
  7663  004CDA  6E14               	movwf	(??_update_display_shapes+2)& (0+255),c
  7664  004CDC  6A15               	clrf	(??_update_display_shapes+3)& (0+255),c
  7665  004CDE  5012               	movf	??_update_display_shapes,w,c
  7666  004CE0  5C14               	subwf	??_update_display_shapes+2,w,c
  7667  004CE2  5015               	movf	??_update_display_shapes+3,w,c
  7668  004CE4  0A80               	xorlw	128
  7669  004CE6  6E16               	movwf	(??_update_display_shapes+4)& (0+255),c
  7670  004CE8  5013               	movf	??_update_display_shapes+1,w,c
  7671  004CEA  0A80               	xorlw	128
  7672  004CEC  5816               	subwfb	(??_update_display_shapes+4)& (0+255),w,c
  7673  004CEE  A0D8               	btfss	status,0,c
  7674  004CF0  D7E4               	goto	l111
  7675  004CF2  2A18               	incf	update_display_shapes@m,f,c
  7676  004CF4                     l108:
  7677  004CF4  501F               	movf	update_display_shapes@x,w,c
  7678  004CF6  6E12               	movwf	??_update_display_shapes& (0+255),c
  7679  004CF8  6A13               	clrf	(??_update_display_shapes+1)& (0+255),c
  7680  004CFA  0E04               	movlw	4
  7681  004CFC  2612               	addwf	??_update_display_shapes,f,c
  7682  004CFE  0E00               	movlw	0
  7683  004D00  2213               	addwfc	??_update_display_shapes+1,f,c
  7684  004D02  5018               	movf	update_display_shapes@m,w,c
  7685  004D04  6E14               	movwf	(??_update_display_shapes+2)& (0+255),c
  7686  004D06  6A15               	clrf	(??_update_display_shapes+3)& (0+255),c
  7687  004D08  5012               	movf	??_update_display_shapes,w,c
  7688  004D0A  5C14               	subwf	??_update_display_shapes+2,w,c
  7689  004D0C  5015               	movf	??_update_display_shapes+3,w,c
  7690  004D0E  0A80               	xorlw	128
  7691  004D10  6E16               	movwf	(??_update_display_shapes+4)& (0+255),c
  7692  004D12  5013               	movf	??_update_display_shapes+1,w,c
  7693  004D14  0A80               	xorlw	128
  7694  004D16  5816               	subwfb	(??_update_display_shapes+4)& (0+255),w,c
  7695  004D18  B0D8               	btfsc	status,0,c
  7696  004D1A  D038               	goto	u2820
  7697  004D1C  D7CB               	goto	l109
  7698  004D1E                     l107:
  7699                           
  7700                           ;main.c: 333: else {
  7701                           ;main.c: 335: for(uint8_t m=x;m<x+4;m++){
  7702  004D1E  C01F  F01A         	movff	update_display_shapes@x,update_display_shapes@m_230
  7703  004D22  D020               	goto	l115
  7704  004D24                     l116:
  7705                           
  7706                           ;main.c: 336: for(uint8_t n=y;n<y+4;n++){
  7707  004D24  C01E  F01B         	movff	update_display_shapes@y,update_display_shapes@n_231
  7708  004D28  D008               	goto	l117
  7709  004D2A                     
  7710                           ;main.c: 337: glcd_PlotPixel(m,n,0);
  7711  004D2A  C01B  F00B         	movff	update_display_shapes@n_231,glcd_PlotPixel@ypos
  7712  004D2E  0E00               	movlw	0
  7713  004D30  6E0C               	movwf	glcd_PlotPixel@color,c
  7714  004D32  501A               	movf	update_display_shapes@m_230,w,c
  7715  004D34  ECB0  F020         	call	_glcd_PlotPixel
  7716  004D38  2A1B               	incf	update_display_shapes@n_231,f,c
  7717  004D3A                     l117:
  7718  004D3A  501E               	movf	update_display_shapes@y,w,c
  7719  004D3C  6E12               	movwf	??_update_display_shapes& (0+255),c
  7720  004D3E  6A13               	clrf	(??_update_display_shapes+1)& (0+255),c
  7721  004D40  0E04               	movlw	4
  7722  004D42  2612               	addwf	??_update_display_shapes,f,c
  7723  004D44  0E00               	movlw	0
  7724  004D46  2213               	addwfc	??_update_display_shapes+1,f,c
  7725  004D48  501B               	movf	update_display_shapes@n_231,w,c
  7726  004D4A  6E14               	movwf	(??_update_display_shapes+2)& (0+255),c
  7727  004D4C  6A15               	clrf	(??_update_display_shapes+3)& (0+255),c
  7728  004D4E  5012               	movf	??_update_display_shapes,w,c
  7729  004D50  5C14               	subwf	??_update_display_shapes+2,w,c
  7730  004D52  5015               	movf	??_update_display_shapes+3,w,c
  7731  004D54  0A80               	xorlw	128
  7732  004D56  6E16               	movwf	(??_update_display_shapes+4)& (0+255),c
  7733  004D58  5013               	movf	??_update_display_shapes+1,w,c
  7734  004D5A  0A80               	xorlw	128
  7735  004D5C  5816               	subwfb	(??_update_display_shapes+4)& (0+255),w,c
  7736  004D5E  A0D8               	btfss	status,0,c
  7737  004D60  D7E4               	goto	l118
  7738  004D62  2A1A               	incf	update_display_shapes@m_230,f,c
  7739  004D64                     l115:
  7740  004D64  501F               	movf	update_display_shapes@x,w,c
  7741  004D66  6E12               	movwf	??_update_display_shapes& (0+255),c
  7742  004D68  6A13               	clrf	(??_update_display_shapes+1)& (0+255),c
  7743  004D6A  0E04               	movlw	4
  7744  004D6C  2612               	addwf	??_update_display_shapes,f,c
  7745  004D6E  0E00               	movlw	0
  7746  004D70  2213               	addwfc	??_update_display_shapes+1,f,c
  7747  004D72  501A               	movf	update_display_shapes@m_230,w,c
  7748  004D74  6E14               	movwf	(??_update_display_shapes+2)& (0+255),c
  7749  004D76  6A15               	clrf	(??_update_display_shapes+3)& (0+255),c
  7750  004D78  5012               	movf	??_update_display_shapes,w,c
  7751  004D7A  5C14               	subwf	??_update_display_shapes+2,w,c
  7752  004D7C  5015               	movf	??_update_display_shapes+3,w,c
  7753  004D7E  0A80               	xorlw	128
  7754  004D80  6E16               	movwf	(??_update_display_shapes+4)& (0+255),c
  7755  004D82  5013               	movf	??_update_display_shapes+1,w,c
  7756  004D84  0A80               	xorlw	128
  7757  004D86  5816               	subwfb	(??_update_display_shapes+4)& (0+255),w,c
  7758  004D88  A0D8               	btfss	status,0,c
  7759  004D8A  D7CC               	goto	l116
  7760  004D8C                     u2820:
  7761  004D8C  2A1D               	incf	update_display_shapes@j,f,c
  7762  004D8E  D6BF               	goto	l3105
  7763  004D90                     u2830:
  7764                           
  7765                           ;main.c: 338: }
  7766                           ;main.c: 339: }
  7767                           ;main.c: 340: }
  7768                           ;main.c: 341: }
  7769                           ;main.c: 342: }
  7770                           ;main.c: 343: i++;
  7771  004D90  2A1C               	incf	update_display_shapes@i,f,c
  7772  004D92                     l66:
  7773  004D92  501C               	movf	update_display_shapes@i,w,c
  7774  004D94  0D09               	mullw	9
  7775  004D96  0E00               	movlw	low _all_shapes
  7776  004D98  24F3               	addwf	prodl,w,c
  7777  004D9A  6ED9               	movwf	fsr2l,c
  7778  004D9C  0E01               	movlw	high _all_shapes
  7779  004D9E  20F4               	addwfc	prodh,w,c
  7780  004DA0  6EDA               	movwf	fsr2h,c
  7781  004DA2  0E63               	movlw	99
  7782  004DA4  18DE               	xorwf	postinc2,w,c
  7783  004DA6  B4D8               	btfsc	status,2,c
  7784  004DA8  0012               	return	
  7785  004DAA  D6AF               	goto	l67
  7786  004DAC                     __end_of_update_display_shapes:
  7787                           	opt stack 0
  7788                           tblptru	equ	0xFF8
  7789                           tblptrh	equ	0xFF7
  7790                           tblptrl	equ	0xFF6
  7791                           tablat	equ	0xFF5
  7792                           prodh	equ	0xFF4
  7793                           prodl	equ	0xFF3
  7794                           intcon	equ	0xFF2
  7795                           postinc0	equ	0xFEE
  7796                           wreg	equ	0xFE8
  7797                           indf1	equ	0xFE7
  7798                           postinc1	equ	0xFE6
  7799                           postdec1	equ	0xFE5
  7800                           fsr1h	equ	0xFE2
  7801                           fsr1l	equ	0xFE1
  7802                           indf2	equ	0xFDF
  7803                           postinc2	equ	0xFDE
  7804                           fsr2h	equ	0xFDA
  7805                           fsr2l	equ	0xFD9
  7806                           status	equ	0xFD8
  7807                           
  7808 ;; *************** function _gravity *****************
  7809 ;; Defined at:
  7810 ;;		line 363 in file "main.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;  index           1    wreg     unsigned char 
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;  index           1   25[COMRAM] unsigned char 
  7815 ;;  j               1   21[COMRAM] unsigned char 
  7816 ;;  j               1   20[COMRAM] unsigned char 
  7817 ;;  j               1   23[COMRAM] unsigned char 
  7818 ;;  j               1   22[COMRAM] unsigned char 
  7819 ;;  i               1   24[COMRAM] unsigned char 
  7820 ;;  ok              1   19[COMRAM] unsigned char 
  7821 ;;  b               1   18[COMRAM] unsigned char 
  7822 ;;  a               1   17[COMRAM] unsigned char 
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  1    wreg      unsigned char 
  7825 ;; Registers used:
  7826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7832 ;;      Params:         0       0       0       0       0       0       0       0       0
  7833 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7834 ;;      Temps:         10       0       0       0       0       0       0       0       0
  7835 ;;      Totals:        19       0       0       0       0       0       0       0       0
  7836 ;;Total ram usage:       19 bytes
  7837 ;; Hardware stack levels used:    1
  7838 ;; Hardware stack levels required when called:    1
  7839 ;; This function calls:
  7840 ;;		_dontBelong2Shape
  7841 ;; This function is called by:
  7842 ;;		_main
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           	psect	text11
  7847  0059B8                     __ptext11:
  7848                           	opt stack 0
  7849  0059B8                     _gravity:
  7850                           	opt stack 29
  7851                           
  7852                           ;incstack = 0
  7853                           ;gravity@index stored from wreg
  7854  0059B8  6E1A               	movwf	gravity@index,c
  7855                           
  7856                           ;main.c: 368: uint8_t a,b,ok;
  7857                           ;main.c: 369: for (uint8_t i = 0; i < 4; ++i){
  7858  0059BA  0E00               	movlw	0
  7859  0059BC  6E19               	movwf	gravity@i,c
  7860  0059BE                     l3745:
  7861  0059BE  0E03               	movlw	3
  7862  0059C0  6419               	cpfsgt	gravity@i,c
  7863  0059C2  D001               	goto	l131
  7864  0059C4  D0E6               	goto	u3990
  7865  0059C6                     l131:
  7866                           
  7867                           ;main.c: 370: for (uint8_t j = i + 1; j < 4; ++j){
  7868  0059C6  2819               	incf	gravity@i,w,c
  7869  0059C8  6E16               	movwf	gravity@j,c
  7870  0059CA  0E03               	movlw	3
  7871  0059CC  6416               	cpfsgt	gravity@j,c
  7872  0059CE  D001               	goto	l133
  7873  0059D0  D0DE               	goto	u3980
  7874  0059D2                     l133:
  7875                           
  7876                           ;main.c: 371: if (all_shapes[index].index[i].y < all_shapes[index].index[j].y){
  7877  0059D2  501A               	movf	gravity@index,w,c
  7878  0059D4  0D09               	mullw	9
  7879  0059D6  0E00               	movlw	low _all_shapes
  7880  0059D8  6E08               	movwf	??_gravity& (0+255),c
  7881  0059DA  0E01               	movlw	high _all_shapes
  7882  0059DC  6E09               	movwf	(??_gravity+1)& (0+255),c
  7883  0059DE  50F3               	movf	prodl,w,c
  7884  0059E0  2608               	addwf	??_gravity,f,c
  7885  0059E2  50F4               	movf	prodh,w,c
  7886  0059E4  2209               	addwfc	??_gravity+1,f,c
  7887  0059E6  5016               	movf	gravity@j,w,c
  7888  0059E8  0D02               	mullw	2
  7889  0059EA  50F3               	movf	prodl,w,c
  7890  0059EC  2608               	addwf	??_gravity,f,c
  7891  0059EE  50F4               	movf	prodh,w,c
  7892  0059F0  2209               	addwfc	??_gravity+1,f,c
  7893  0059F2  0E01               	movlw	1
  7894  0059F4  2408               	addwf	??_gravity,w,c
  7895  0059F6  6ED9               	movwf	fsr2l,c
  7896  0059F8  0E00               	movlw	0
  7897  0059FA  2009               	addwfc	??_gravity+1,w,c
  7898  0059FC  6EDA               	movwf	fsr2h,c
  7899  0059FE  501A               	movf	gravity@index,w,c
  7900  005A00  0D09               	mullw	9
  7901  005A02  0E00               	movlw	low _all_shapes
  7902  005A04  6E0B               	movwf	(??_gravity+3)& (0+255),c
  7903  005A06  0E01               	movlw	high _all_shapes
  7904  005A08  6E0C               	movwf	(??_gravity+4)& (0+255),c
  7905  005A0A  50F3               	movf	prodl,w,c
  7906  005A0C  260B               	addwf	??_gravity+3,f,c
  7907  005A0E  50F4               	movf	prodh,w,c
  7908  005A10  220C               	addwfc	??_gravity+4,f,c
  7909  005A12  5019               	movf	gravity@i,w,c
  7910  005A14  0D02               	mullw	2
  7911  005A16  50F3               	movf	prodl,w,c
  7912  005A18  260B               	addwf	??_gravity+3,f,c
  7913  005A1A  50F4               	movf	prodh,w,c
  7914  005A1C  220C               	addwfc	??_gravity+4,f,c
  7915  005A1E  0E01               	movlw	1
  7916  005A20  240B               	addwf	??_gravity+3,w,c
  7917  005A22  6EE1               	movwf	fsr1l,c
  7918  005A24  0E00               	movlw	0
  7919  005A26  200C               	addwfc	??_gravity+4,w,c
  7920  005A28  6EE2               	movwf	fsr1h,c
  7921  005A2A  50DE               	movf	postinc2,w,c
  7922  005A2C  5CE6               	subwf	postinc1,w,c
  7923  005A2E  B0D8               	btfsc	status,0,c
  7924  005A30  D0AC               	goto	l135
  7925                           
  7926                           ;main.c: 372: a = all_shapes[index].index[i].y;
  7927  005A32  501A               	movf	gravity@index,w,c
  7928  005A34  0D09               	mullw	9
  7929  005A36  0E00               	movlw	low _all_shapes
  7930  005A38  6E08               	movwf	??_gravity& (0+255),c
  7931  005A3A  0E01               	movlw	high _all_shapes
  7932  005A3C  6E09               	movwf	(??_gravity+1)& (0+255),c
  7933  005A3E  50F3               	movf	prodl,w,c
  7934  005A40  2608               	addwf	??_gravity,f,c
  7935  005A42  50F4               	movf	prodh,w,c
  7936  005A44  2209               	addwfc	??_gravity+1,f,c
  7937  005A46  5019               	movf	gravity@i,w,c
  7938  005A48  0D02               	mullw	2
  7939  005A4A  50F3               	movf	prodl,w,c
  7940  005A4C  2608               	addwf	??_gravity,f,c
  7941  005A4E  50F4               	movf	prodh,w,c
  7942  005A50  2209               	addwfc	??_gravity+1,f,c
  7943  005A52  0E01               	movlw	1
  7944  005A54  2408               	addwf	??_gravity,w,c
  7945  005A56  6ED9               	movwf	fsr2l,c
  7946  005A58  0E00               	movlw	0
  7947  005A5A  2009               	addwfc	??_gravity+1,w,c
  7948  005A5C  6EDA               	movwf	fsr2h,c
  7949  005A5E  50DF               	movf	indf2,w,c
  7950  005A60  6E12               	movwf	gravity@a,c
  7951                           
  7952                           ;main.c: 373: b = all_shapes[index].index[i].x;
  7953  005A62  501A               	movf	gravity@index,w,c
  7954  005A64  0D09               	mullw	9
  7955  005A66  0E00               	movlw	low _all_shapes
  7956  005A68  6E08               	movwf	??_gravity& (0+255),c
  7957  005A6A  0E01               	movlw	high _all_shapes
  7958  005A6C  6E09               	movwf	(??_gravity+1)& (0+255),c
  7959  005A6E  50F3               	movf	prodl,w,c
  7960  005A70  2608               	addwf	??_gravity,f,c
  7961  005A72  50F4               	movf	prodh,w,c
  7962  005A74  2209               	addwfc	??_gravity+1,f,c
  7963  005A76  5019               	movf	gravity@i,w,c
  7964  005A78  0D02               	mullw	2
  7965  005A7A  50F3               	movf	prodl,w,c
  7966  005A7C  2408               	addwf	??_gravity,w,c
  7967  005A7E  6ED9               	movwf	fsr2l,c
  7968  005A80  50F4               	movf	prodh,w,c
  7969  005A82  2009               	addwfc	??_gravity+1,w,c
  7970  005A84  6EDA               	movwf	fsr2h,c
  7971  005A86  50DF               	movf	indf2,w,c
  7972  005A88  6E13               	movwf	gravity@b,c
  7973                           
  7974                           ;main.c: 374: all_shapes[index].index[i].y = all_shapes[index].index[j].y;
  7975  005A8A  501A               	movf	gravity@index,w,c
  7976  005A8C  0D09               	mullw	9
  7977  005A8E  0E00               	movlw	low _all_shapes
  7978  005A90  6E08               	movwf	??_gravity& (0+255),c
  7979  005A92  0E01               	movlw	high _all_shapes
  7980  005A94  6E09               	movwf	(??_gravity+1)& (0+255),c
  7981  005A96  50F3               	movf	prodl,w,c
  7982  005A98  2608               	addwf	??_gravity,f,c
  7983  005A9A  50F4               	movf	prodh,w,c
  7984  005A9C  2209               	addwfc	??_gravity+1,f,c
  7985  005A9E  5016               	movf	gravity@j,w,c
  7986  005AA0  0D02               	mullw	2
  7987  005AA2  50F3               	movf	prodl,w,c
  7988  005AA4  2608               	addwf	??_gravity,f,c
  7989  005AA6  50F4               	movf	prodh,w,c
  7990  005AA8  2209               	addwfc	??_gravity+1,f,c
  7991  005AAA  0E01               	movlw	1
  7992  005AAC  2408               	addwf	??_gravity,w,c
  7993  005AAE  6ED9               	movwf	fsr2l,c
  7994  005AB0  0E00               	movlw	0
  7995  005AB2  2009               	addwfc	??_gravity+1,w,c
  7996  005AB4  6EDA               	movwf	fsr2h,c
  7997  005AB6  501A               	movf	gravity@index,w,c
  7998  005AB8  0D09               	mullw	9
  7999  005ABA  0E00               	movlw	low _all_shapes
  8000  005ABC  6E0A               	movwf	(??_gravity+2)& (0+255),c
  8001  005ABE  0E01               	movlw	high _all_shapes
  8002  005AC0  6E0B               	movwf	(??_gravity+3)& (0+255),c
  8003  005AC2  50F3               	movf	prodl,w,c
  8004  005AC4  260A               	addwf	??_gravity+2,f,c
  8005  005AC6  50F4               	movf	prodh,w,c
  8006  005AC8  220B               	addwfc	??_gravity+3,f,c
  8007  005ACA  5019               	movf	gravity@i,w,c
  8008  005ACC  0D02               	mullw	2
  8009  005ACE  50F3               	movf	prodl,w,c
  8010  005AD0  260A               	addwf	??_gravity+2,f,c
  8011  005AD2  50F4               	movf	prodh,w,c
  8012  005AD4  220B               	addwfc	??_gravity+3,f,c
  8013  005AD6  0E01               	movlw	1
  8014  005AD8  240A               	addwf	??_gravity+2,w,c
  8015  005ADA  6EE1               	movwf	fsr1l,c
  8016  005ADC  0E00               	movlw	0
  8017  005ADE  200B               	addwfc	??_gravity+3,w,c
  8018  005AE0  6EE2               	movwf	fsr1h,c
  8019  005AE2  CFDF FFE7          	movff	indf2,indf1
  8020                           
  8021                           ;main.c: 375: all_shapes[index].index[i].x = all_shapes[index].index[j].x;
  8022  005AE6  501A               	movf	gravity@index,w,c
  8023  005AE8  0D09               	mullw	9
  8024  005AEA  0E00               	movlw	low _all_shapes
  8025  005AEC  6E08               	movwf	??_gravity& (0+255),c
  8026  005AEE  0E01               	movlw	high _all_shapes
  8027  005AF0  6E09               	movwf	(??_gravity+1)& (0+255),c
  8028  005AF2  50F3               	movf	prodl,w,c
  8029  005AF4  2608               	addwf	??_gravity,f,c
  8030  005AF6  50F4               	movf	prodh,w,c
  8031  005AF8  2209               	addwfc	??_gravity+1,f,c
  8032  005AFA  5016               	movf	gravity@j,w,c
  8033  005AFC  0D02               	mullw	2
  8034  005AFE  50F3               	movf	prodl,w,c
  8035  005B00  2408               	addwf	??_gravity,w,c
  8036  005B02  6ED9               	movwf	fsr2l,c
  8037  005B04  50F4               	movf	prodh,w,c
  8038  005B06  2009               	addwfc	??_gravity+1,w,c
  8039  005B08  6EDA               	movwf	fsr2h,c
  8040  005B0A  501A               	movf	gravity@index,w,c
  8041  005B0C  0D09               	mullw	9
  8042  005B0E  0E00               	movlw	low _all_shapes
  8043  005B10  6E0A               	movwf	(??_gravity+2)& (0+255),c
  8044  005B12  0E01               	movlw	high _all_shapes
  8045  005B14  6E0B               	movwf	(??_gravity+3)& (0+255),c
  8046  005B16  50F3               	movf	prodl,w,c
  8047  005B18  260A               	addwf	??_gravity+2,f,c
  8048  005B1A  50F4               	movf	prodh,w,c
  8049  005B1C  220B               	addwfc	??_gravity+3,f,c
  8050  005B1E  5019               	movf	gravity@i,w,c
  8051  005B20  0D02               	mullw	2
  8052  005B22  50F3               	movf	prodl,w,c
  8053  005B24  240A               	addwf	??_gravity+2,w,c
  8054  005B26  6EE1               	movwf	fsr1l,c
  8055  005B28  50F4               	movf	prodh,w,c
  8056  005B2A  200B               	addwfc	??_gravity+3,w,c
  8057  005B2C  6EE2               	movwf	fsr1h,c
  8058  005B2E  CFDF FFE7          	movff	indf2,indf1
  8059                           
  8060                           ;main.c: 376: all_shapes[index].index[j].y = a;
  8061  005B32  501A               	movf	gravity@index,w,c
  8062  005B34  0D09               	mullw	9
  8063  005B36  0E00               	movlw	low _all_shapes
  8064  005B38  6E08               	movwf	??_gravity& (0+255),c
  8065  005B3A  0E01               	movlw	high _all_shapes
  8066  005B3C  6E09               	movwf	(??_gravity+1)& (0+255),c
  8067  005B3E  50F3               	movf	prodl,w,c
  8068  005B40  2608               	addwf	??_gravity,f,c
  8069  005B42  50F4               	movf	prodh,w,c
  8070  005B44  2209               	addwfc	??_gravity+1,f,c
  8071  005B46  5016               	movf	gravity@j,w,c
  8072  005B48  0D02               	mullw	2
  8073  005B4A  50F3               	movf	prodl,w,c
  8074  005B4C  2608               	addwf	??_gravity,f,c
  8075  005B4E  50F4               	movf	prodh,w,c
  8076  005B50  2209               	addwfc	??_gravity+1,f,c
  8077  005B52  0E01               	movlw	1
  8078  005B54  2408               	addwf	??_gravity,w,c
  8079  005B56  6ED9               	movwf	fsr2l,c
  8080  005B58  0E00               	movlw	0
  8081  005B5A  2009               	addwfc	??_gravity+1,w,c
  8082  005B5C  6EDA               	movwf	fsr2h,c
  8083  005B5E  C012  FFDF         	movff	gravity@a,indf2
  8084                           
  8085                           ;main.c: 377: all_shapes[index].index[j].x = b;
  8086  005B62  501A               	movf	gravity@index,w,c
  8087  005B64  0D09               	mullw	9
  8088  005B66  0E00               	movlw	low _all_shapes
  8089  005B68  6E08               	movwf	??_gravity& (0+255),c
  8090  005B6A  0E01               	movlw	high _all_shapes
  8091  005B6C  6E09               	movwf	(??_gravity+1)& (0+255),c
  8092  005B6E  50F3               	movf	prodl,w,c
  8093  005B70  2608               	addwf	??_gravity,f,c
  8094  005B72  50F4               	movf	prodh,w,c
  8095  005B74  2209               	addwfc	??_gravity+1,f,c
  8096  005B76  5016               	movf	gravity@j,w,c
  8097  005B78  0D02               	mullw	2
  8098  005B7A  50F3               	movf	prodl,w,c
  8099  005B7C  2408               	addwf	??_gravity,w,c
  8100  005B7E  6ED9               	movwf	fsr2l,c
  8101  005B80  50F4               	movf	prodh,w,c
  8102  005B82  2009               	addwfc	??_gravity+1,w,c
  8103  005B84  6EDA               	movwf	fsr2h,c
  8104  005B86  C013  FFDF         	movff	gravity@b,indf2
  8105  005B8A                     l135:
  8106  005B8A  2A16               	incf	gravity@j,f,c
  8107  005B8C  D71E               	goto	L31
  8108  005B8E                     u3980:
  8109  005B8E  2A19               	incf	gravity@i,f,c
  8110  005B90  D716               	goto	l3745
  8111  005B92                     u3990:
  8112                           
  8113                           ;main.c: 378: }
  8114                           ;main.c: 379: }
  8115                           ;main.c: 380: }
  8116                           ;main.c: 383: for(uint8_t j=0;j<4;j++){
  8117  005B92  0E00               	movlw	0
  8118  005B94  6E17               	movwf	gravity@j_244,c
  8119  005B96                     l3771:
  8120  005B96  0E03               	movlw	3
  8121  005B98  6417               	cpfsgt	gravity@j_244,c
  8122  005B9A  D001               	goto	l136
  8123  005B9C  D09A               	goto	u4040
  8124  005B9E                     l136:
  8125                           
  8126                           ;main.c: 387: if(all_shapes[index].index[j].y <11 && (array_data[all_shapes[index].index
      +                          [j].x][(all_shapes[index].index[j].y)+1]!='1' || dontBelong2Shape(index,all_shapes[index
      +                          ].index[j].x,(all_shapes[index].index[j].y)+1))){
  8127  005B9E  501A               	movf	gravity@index,w,c
  8128  005BA0  0D09               	mullw	9
  8129  005BA2  0E00               	movlw	low _all_shapes
  8130  005BA4  6E08               	movwf	??_gravity& (0+255),c
  8131  005BA6  0E01               	movlw	high _all_shapes
  8132  005BA8  6E09               	movwf	(??_gravity+1)& (0+255),c
  8133  005BAA  50F3               	movf	prodl,w,c
  8134  005BAC  2608               	addwf	??_gravity,f,c
  8135  005BAE  50F4               	movf	prodh,w,c
  8136  005BB0  2209               	addwfc	??_gravity+1,f,c
  8137  005BB2  5017               	movf	gravity@j_244,w,c
  8138  005BB4  0D02               	mullw	2
  8139  005BB6  50F3               	movf	prodl,w,c
  8140  005BB8  2608               	addwf	??_gravity,f,c
  8141  005BBA  50F4               	movf	prodh,w,c
  8142  005BBC  2209               	addwfc	??_gravity+1,f,c
  8143  005BBE  0E01               	movlw	1
  8144  005BC0  2408               	addwf	??_gravity,w,c
  8145  005BC2  6ED9               	movwf	fsr2l,c
  8146  005BC4  0E00               	movlw	0
  8147  005BC6  2009               	addwfc	??_gravity+1,w,c
  8148  005BC8  6EDA               	movwf	fsr2h,c
  8149  005BCA  0E0B               	movlw	11
  8150  005BCC  60DF               	cpfslt	indf2,c
  8151  005BCE  D07C               	goto	l139
  8152  005BD0  501A               	movf	gravity@index,w,c
  8153  005BD2  0D09               	mullw	9
  8154  005BD4  0E00               	movlw	low _all_shapes
  8155  005BD6  6E08               	movwf	??_gravity& (0+255),c
  8156  005BD8  0E01               	movlw	high _all_shapes
  8157  005BDA  6E09               	movwf	(??_gravity+1)& (0+255),c
  8158  005BDC  50F3               	movf	prodl,w,c
  8159  005BDE  2608               	addwf	??_gravity,f,c
  8160  005BE0  50F4               	movf	prodh,w,c
  8161  005BE2  2209               	addwfc	??_gravity+1,f,c
  8162  005BE4  5017               	movf	gravity@j_244,w,c
  8163  005BE6  0D02               	mullw	2
  8164  005BE8  50F3               	movf	prodl,w,c
  8165  005BEA  2608               	addwf	??_gravity,f,c
  8166  005BEC  50F4               	movf	prodh,w,c
  8167  005BEE  2209               	addwfc	??_gravity+1,f,c
  8168  005BF0  0E01               	movlw	1
  8169  005BF2  2408               	addwf	??_gravity,w,c
  8170  005BF4  6ED9               	movwf	fsr2l,c
  8171  005BF6  0E00               	movlw	0
  8172  005BF8  2009               	addwfc	??_gravity+1,w,c
  8173  005BFA  6EDA               	movwf	fsr2h,c
  8174  005BFC  50DF               	movf	indf2,w,c
  8175  005BFE  6E0A               	movwf	(??_gravity+2)& (0+255),c
  8176  005C00  6A0B               	clrf	(??_gravity+3)& (0+255),c
  8177  005C02  0E01               	movlw	1
  8178  005C04  260A               	addwf	??_gravity+2,f,c
  8179  005C06  0E00               	movlw	0
  8180  005C08  220B               	addwfc	??_gravity+3,f,c
  8181  005C0A  0E00               	movlw	low _array_data
  8182  005C0C  6E0C               	movwf	(??_gravity+4)& (0+255),c
  8183  005C0E  0E02               	movlw	high _array_data
  8184  005C10  6E0D               	movwf	(??_gravity+5)& (0+255),c
  8185  005C12  500A               	movf	??_gravity+2,w,c
  8186  005C14  260C               	addwf	??_gravity+4,f,c
  8187  005C16  500B               	movf	??_gravity+3,w,c
  8188  005C18  220D               	addwfc	??_gravity+5,f,c
  8189  005C1A  501A               	movf	gravity@index,w,c
  8190  005C1C  0D09               	mullw	9
  8191  005C1E  0E00               	movlw	low _all_shapes
  8192  005C20  6E0E               	movwf	(??_gravity+6)& (0+255),c
  8193  005C22  0E01               	movlw	high _all_shapes
  8194  005C24  6E0F               	movwf	(??_gravity+7)& (0+255),c
  8195  005C26  50F3               	movf	prodl,w,c
  8196  005C28  260E               	addwf	??_gravity+6,f,c
  8197  005C2A  50F4               	movf	prodh,w,c
  8198  005C2C  220F               	addwfc	??_gravity+7,f,c
  8199  005C2E  5017               	movf	gravity@j_244,w,c
  8200  005C30  0D02               	mullw	2
  8201  005C32  50F3               	movf	prodl,w,c
  8202  005C34  240E               	addwf	??_gravity+6,w,c
  8203  005C36  6ED9               	movwf	fsr2l,c
  8204  005C38  50F4               	movf	prodh,w,c
  8205  005C3A  200F               	addwfc	??_gravity+7,w,c
  8206  005C3C  6EDA               	movwf	fsr2h,c
  8207  005C3E  50DF               	movf	indf2,w,c
  8208  005C40  6E10               	movwf	(??_gravity+8)& (0+255),c
  8209  005C42  5010               	movf	??_gravity+8,w,c
  8210  005C44  0D0C               	mullw	12
  8211  005C46  50F3               	movf	prodl,w,c
  8212  005C48  240C               	addwf	??_gravity+4,w,c
  8213  005C4A  6ED9               	movwf	fsr2l,c
  8214  005C4C  50F4               	movf	prodh,w,c
  8215  005C4E  200D               	addwfc	??_gravity+5,w,c
  8216  005C50  6EDA               	movwf	fsr2h,c
  8217  005C52  0E31               	movlw	49
  8218  005C54  18DE               	xorwf	postinc2,w,c
  8219  005C56  A4D8               	btfss	status,2,c
  8220  005C58  D034               	goto	u4030
  8221  005C5A  501A               	movf	gravity@index,w,c
  8222  005C5C  0D09               	mullw	9
  8223  005C5E  0E00               	movlw	low _all_shapes
  8224  005C60  6E08               	movwf	??_gravity& (0+255),c
  8225  005C62  0E01               	movlw	high _all_shapes
  8226  005C64  6E09               	movwf	(??_gravity+1)& (0+255),c
  8227  005C66  50F3               	movf	prodl,w,c
  8228  005C68  2608               	addwf	??_gravity,f,c
  8229  005C6A  50F4               	movf	prodh,w,c
  8230  005C6C  2209               	addwfc	??_gravity+1,f,c
  8231  005C6E  5017               	movf	gravity@j_244,w,c
  8232  005C70  0D02               	mullw	2
  8233  005C72  50F3               	movf	prodl,w,c
  8234  005C74  2408               	addwf	??_gravity,w,c
  8235  005C76  6ED9               	movwf	fsr2l,c
  8236  005C78  50F4               	movf	prodh,w,c
  8237  005C7A  2009               	addwfc	??_gravity+1,w,c
  8238  005C7C  6EDA               	movwf	fsr2h,c
  8239  005C7E  50DF               	movf	indf2,w,c
  8240  005C80  6E01               	movwf	dontBelong2Shape@x,c
  8241  005C82  501A               	movf	gravity@index,w,c
  8242  005C84  0D09               	mullw	9
  8243  005C86  0E00               	movlw	low _all_shapes
  8244  005C88  6E0A               	movwf	(??_gravity+2)& (0+255),c
  8245  005C8A  0E01               	movlw	high _all_shapes
  8246  005C8C  6E0B               	movwf	(??_gravity+3)& (0+255),c
  8247  005C8E  50F3               	movf	prodl,w,c
  8248  005C90  260A               	addwf	??_gravity+2,f,c
  8249  005C92  50F4               	movf	prodh,w,c
  8250  005C94  220B               	addwfc	??_gravity+3,f,c
  8251  005C96  5017               	movf	gravity@j_244,w,c
  8252  005C98  0D02               	mullw	2
  8253  005C9A  50F3               	movf	prodl,w,c
  8254  005C9C  260A               	addwf	??_gravity+2,f,c
  8255  005C9E  50F4               	movf	prodh,w,c
  8256  005CA0  220B               	addwfc	??_gravity+3,f,c
  8257  005CA2  0E01               	movlw	1
  8258  005CA4  240A               	addwf	??_gravity+2,w,c
  8259  005CA6  6ED9               	movwf	fsr2l,c
  8260  005CA8  0E00               	movlw	0
  8261  005CAA  200B               	addwfc	??_gravity+3,w,c
  8262  005CAC  6EDA               	movwf	fsr2h,c
  8263  005CAE  50DF               	movf	indf2,w,c
  8264  005CB0  6E0C               	movwf	(??_gravity+4)& (0+255),c
  8265  005CB2  280C               	incf	??_gravity+4,w,c
  8266  005CB4  6E02               	movwf	dontBelong2Shape@y,c
  8267  005CB6  501A               	movf	gravity@index,w,c
  8268  005CB8  ECEE  F01F         	call	_dontBelong2Shape
  8269  005CBC  0900               	iorlw	0
  8270  005CBE  B4D8               	btfsc	status,2,c
  8271  005CC0  D003               	goto	l139
  8272  005CC2                     u4030:
  8273                           
  8274                           ;main.c: 388: ok=1;
  8275  005CC2  0E01               	movlw	1
  8276  005CC4  6E14               	movwf	gravity@ok,c
  8277                           
  8278                           ;main.c: 389: }
  8279  005CC6  D003               	goto	l142
  8280  005CC8                     l139:
  8281                           
  8282                           ;main.c: 390: else {
  8283                           ;main.c: 391: ok=0;
  8284  005CC8  0E00               	movlw	0
  8285  005CCA  6E14               	movwf	gravity@ok,c
  8286                           
  8287                           ;main.c: 392: break;
  8288  005CCC  D002               	goto	u4040
  8289  005CCE                     l142:
  8290  005CCE  2A17               	incf	gravity@j_244,f,c
  8291  005CD0  D762               	goto	l3771
  8292  005CD2                     u4040:
  8293                           
  8294                           ;main.c: 393: }
  8295                           ;main.c: 394: }
  8296                           ;main.c: 396: }
  8297                           ;main.c: 397: if(ok==1){
  8298  005CD2  0414               	decf	gravity@ok,w,c
  8299  005CD4  A4D8               	btfss	status,2,c
  8300  005CD6  D0A1               	goto	l143
  8301                           
  8302                           ;main.c: 398: for(uint8_t j=0;j<4;j++){
  8303  005CD8  0E00               	movlw	0
  8304  005CDA  6E18               	movwf	gravity@j_246,c
  8305  005CDC                     l3793:
  8306  005CDC  0E03               	movlw	3
  8307  005CDE  6418               	cpfsgt	gravity@j_246,c
  8308  005CE0  D001               	goto	l144
  8309  005CE2  D099               	goto	u4070
  8310  005CE4                     l144:
  8311                           
  8312                           ;main.c: 400: array_data[all_shapes[index].index[j].x][all_shapes[index].index[j].y]='0'
      +                          ;
  8313  005CE4  501A               	movf	gravity@index,w,c
  8314  005CE6  0D09               	mullw	9
  8315  005CE8  0E00               	movlw	low _all_shapes
  8316  005CEA  6E08               	movwf	??_gravity& (0+255),c
  8317  005CEC  0E01               	movlw	high _all_shapes
  8318  005CEE  6E09               	movwf	(??_gravity+1)& (0+255),c
  8319  005CF0  50F3               	movf	prodl,w,c
  8320  005CF2  2608               	addwf	??_gravity,f,c
  8321  005CF4  50F4               	movf	prodh,w,c
  8322  005CF6  2209               	addwfc	??_gravity+1,f,c
  8323  005CF8  5018               	movf	gravity@j_246,w,c
  8324  005CFA  0D02               	mullw	2
  8325  005CFC  50F3               	movf	prodl,w,c
  8326  005CFE  2408               	addwf	??_gravity,w,c
  8327  005D00  6ED9               	movwf	fsr2l,c
  8328  005D02  50F4               	movf	prodh,w,c
  8329  005D04  2009               	addwfc	??_gravity+1,w,c
  8330  005D06  6EDA               	movwf	fsr2h,c
  8331  005D08  50DF               	movf	indf2,w,c
  8332  005D0A  6E0A               	movwf	(??_gravity+2)& (0+255),c
  8333  005D0C  500A               	movf	??_gravity+2,w,c
  8334  005D0E  0D0C               	mullw	12
  8335  005D10  0E00               	movlw	low _array_data
  8336  005D12  6E0B               	movwf	(??_gravity+3)& (0+255),c
  8337  005D14  0E02               	movlw	high _array_data
  8338  005D16  6E0C               	movwf	(??_gravity+4)& (0+255),c
  8339  005D18  50F3               	movf	prodl,w,c
  8340  005D1A  260B               	addwf	??_gravity+3,f,c
  8341  005D1C  50F4               	movf	prodh,w,c
  8342  005D1E  220C               	addwfc	??_gravity+4,f,c
  8343  005D20  501A               	movf	gravity@index,w,c
  8344  005D22  0D09               	mullw	9
  8345  005D24  0E00               	movlw	low _all_shapes
  8346  005D26  6E0D               	movwf	(??_gravity+5)& (0+255),c
  8347  005D28  0E01               	movlw	high _all_shapes
  8348  005D2A  6E0E               	movwf	(??_gravity+6)& (0+255),c
  8349  005D2C  50F3               	movf	prodl,w,c
  8350  005D2E  260D               	addwf	??_gravity+5,f,c
  8351  005D30  50F4               	movf	prodh,w,c
  8352  005D32  220E               	addwfc	??_gravity+6,f,c
  8353  005D34  5018               	movf	gravity@j_246,w,c
  8354  005D36  0D02               	mullw	2
  8355  005D38  50F3               	movf	prodl,w,c
  8356  005D3A  260D               	addwf	??_gravity+5,f,c
  8357  005D3C  50F4               	movf	prodh,w,c
  8358  005D3E  220E               	addwfc	??_gravity+6,f,c
  8359  005D40  0E01               	movlw	1
  8360  005D42  240D               	addwf	??_gravity+5,w,c
  8361  005D44  6ED9               	movwf	fsr2l,c
  8362  005D46  0E00               	movlw	0
  8363  005D48  200E               	addwfc	??_gravity+6,w,c
  8364  005D4A  6EDA               	movwf	fsr2h,c
  8365  005D4C  50DF               	movf	indf2,w,c
  8366  005D4E  6E0F               	movwf	(??_gravity+7)& (0+255),c
  8367  005D50  500F               	movf	??_gravity+7,w,c
  8368  005D52  0D01               	mullw	1
  8369  005D54  50F3               	movf	prodl,w,c
  8370  005D56  240B               	addwf	??_gravity+3,w,c
  8371  005D58  6ED9               	movwf	fsr2l,c
  8372  005D5A  50F4               	movf	prodh,w,c
  8373  005D5C  200C               	addwfc	??_gravity+4,w,c
  8374  005D5E  6EDA               	movwf	fsr2h,c
  8375  005D60  0E30               	movlw	48
  8376  005D62  6EDF               	movwf	indf2,c
  8377                           
  8378                           ;main.c: 401: all_shapes[index].index[j].y +=1;
  8379  005D64  501A               	movf	gravity@index,w,c
  8380  005D66  0D09               	mullw	9
  8381  005D68  0E00               	movlw	low _all_shapes
  8382  005D6A  6E08               	movwf	??_gravity& (0+255),c
  8383  005D6C  0E01               	movlw	high _all_shapes
  8384  005D6E  6E09               	movwf	(??_gravity+1)& (0+255),c
  8385  005D70  50F3               	movf	prodl,w,c
  8386  005D72  2608               	addwf	??_gravity,f,c
  8387  005D74  50F4               	movf	prodh,w,c
  8388  005D76  2209               	addwfc	??_gravity+1,f,c
  8389  005D78  5018               	movf	gravity@j_246,w,c
  8390  005D7A  0D02               	mullw	2
  8391  005D7C  50F3               	movf	prodl,w,c
  8392  005D7E  2608               	addwf	??_gravity,f,c
  8393  005D80  50F4               	movf	prodh,w,c
  8394  005D82  2209               	addwfc	??_gravity+1,f,c
  8395  005D84  0E01               	movlw	1
  8396  005D86  2408               	addwf	??_gravity,w,c
  8397  005D88  6ED9               	movwf	fsr2l,c
  8398  005D8A  0E00               	movlw	0
  8399  005D8C  2009               	addwfc	??_gravity+1,w,c
  8400  005D8E  6EDA               	movwf	fsr2h,c
  8401  005D90  2ADF               	incf	indf2,f,c
  8402                           
  8403                           ;main.c: 402: array_data[all_shapes[index].index[j].x][all_shapes[index].index[j].y]='1'
      +                          ;
  8404  005D92  501A               	movf	gravity@index,w,c
  8405  005D94  0D09               	mullw	9
  8406  005D96  0E00               	movlw	low _all_shapes
  8407  005D98  6E08               	movwf	??_gravity& (0+255),c
  8408  005D9A  0E01               	movlw	high _all_shapes
  8409  005D9C  6E09               	movwf	(??_gravity+1)& (0+255),c
  8410  005D9E  50F3               	movf	prodl,w,c
  8411  005DA0  2608               	addwf	??_gravity,f,c
  8412  005DA2  50F4               	movf	prodh,w,c
  8413  005DA4  2209               	addwfc	??_gravity+1,f,c
  8414  005DA6  5018               	movf	gravity@j_246,w,c
  8415  005DA8  0D02               	mullw	2
  8416  005DAA  50F3               	movf	prodl,w,c
  8417  005DAC  2408               	addwf	??_gravity,w,c
  8418  005DAE  6ED9               	movwf	fsr2l,c
  8419  005DB0  50F4               	movf	prodh,w,c
  8420  005DB2  2009               	addwfc	??_gravity+1,w,c
  8421  005DB4  6EDA               	movwf	fsr2h,c
  8422  005DB6  50DF               	movf	indf2,w,c
  8423  005DB8  6E0A               	movwf	(??_gravity+2)& (0+255),c
  8424  005DBA  500A               	movf	??_gravity+2,w,c
  8425  005DBC  0D0C               	mullw	12
  8426  005DBE  0E00               	movlw	low _array_data
  8427  005DC0  6E0B               	movwf	(??_gravity+3)& (0+255),c
  8428  005DC2  0E02               	movlw	high _array_data
  8429  005DC4  6E0C               	movwf	(??_gravity+4)& (0+255),c
  8430  005DC6  50F3               	movf	prodl,w,c
  8431  005DC8  260B               	addwf	??_gravity+3,f,c
  8432  005DCA  50F4               	movf	prodh,w,c
  8433  005DCC  220C               	addwfc	??_gravity+4,f,c
  8434  005DCE  501A               	movf	gravity@index,w,c
  8435  005DD0  0D09               	mullw	9
  8436  005DD2  0E00               	movlw	low _all_shapes
  8437  005DD4  6E0D               	movwf	(??_gravity+5)& (0+255),c
  8438  005DD6  0E01               	movlw	high _all_shapes
  8439  005DD8  6E0E               	movwf	(??_gravity+6)& (0+255),c
  8440  005DDA  50F3               	movf	prodl,w,c
  8441  005DDC  260D               	addwf	??_gravity+5,f,c
  8442  005DDE  50F4               	movf	prodh,w,c
  8443  005DE0  220E               	addwfc	??_gravity+6,f,c
  8444  005DE2  5018               	movf	gravity@j_246,w,c
  8445  005DE4  0D02               	mullw	2
  8446  005DE6  50F3               	movf	prodl,w,c
  8447  005DE8  260D               	addwf	??_gravity+5,f,c
  8448  005DEA  50F4               	movf	prodh,w,c
  8449  005DEC  220E               	addwfc	??_gravity+6,f,c
  8450  005DEE  0E01               	movlw	1
  8451  005DF0  240D               	addwf	??_gravity+5,w,c
  8452  005DF2  6ED9               	movwf	fsr2l,c
  8453  005DF4  0E00               	movlw	0
  8454  005DF6  200E               	addwfc	??_gravity+6,w,c
  8455  005DF8  6EDA               	movwf	fsr2h,c
  8456  005DFA  50DF               	movf	indf2,w,c
  8457  005DFC  6E0F               	movwf	(??_gravity+7)& (0+255),c
  8458  005DFE  500F               	movf	??_gravity+7,w,c
  8459  005E00  0D01               	mullw	1
  8460  005E02  50F3               	movf	prodl,w,c
  8461  005E04  240B               	addwf	??_gravity+3,w,c
  8462  005E06  6ED9               	movwf	fsr2l,c
  8463  005E08  50F4               	movf	prodh,w,c
  8464  005E0A  200C               	addwfc	??_gravity+4,w,c
  8465  005E0C  6EDA               	movwf	fsr2h,c
  8466  005E0E  0E31               	movlw	49
  8467  005E10  6EDF               	movwf	indf2,c
  8468  005E12  2A18               	incf	gravity@j_246,f,c
  8469  005E14  D763               	goto	l3793
  8470  005E16                     u4070:
  8471                           
  8472                           ;main.c: 403: }
  8473                           ;main.c: 404: }
  8474                           ;main.c: 405: return 0;
  8475  005E16  0E00               	movlw	0
  8476                           
  8477                           ;main.c: 406: }
  8478  005E18  0012               	return	
  8479  005E1A                     l143:
  8480                           
  8481                           ;main.c: 407: else{
  8482                           ;main.c: 408: for(uint8_t j=0;j<4;j++){
  8483  005E1A  0E00               	movlw	0
  8484  005E1C  6E15               	movwf	gravity@j_247,c
  8485  005E1E                     l3811:
  8486  005E1E  0E03               	movlw	3
  8487  005E20  6415               	cpfsgt	gravity@j_247,c
  8488  005E22  D001               	goto	l149
  8489  005E24  D01D               	goto	u4100
  8490  005E26                     l149:
  8491                           
  8492                           ;main.c: 409: if(all_shapes[index].index[j].y ==0){
  8493  005E26  501A               	movf	gravity@index,w,c
  8494  005E28  0D09               	mullw	9
  8495  005E2A  0E00               	movlw	low _all_shapes
  8496  005E2C  6E08               	movwf	??_gravity& (0+255),c
  8497  005E2E  0E01               	movlw	high _all_shapes
  8498  005E30  6E09               	movwf	(??_gravity+1)& (0+255),c
  8499  005E32  50F3               	movf	prodl,w,c
  8500  005E34  2608               	addwf	??_gravity,f,c
  8501  005E36  50F4               	movf	prodh,w,c
  8502  005E38  2209               	addwfc	??_gravity+1,f,c
  8503  005E3A  5015               	movf	gravity@j_247,w,c
  8504  005E3C  0D02               	mullw	2
  8505  005E3E  50F3               	movf	prodl,w,c
  8506  005E40  2608               	addwf	??_gravity,f,c
  8507  005E42  50F4               	movf	prodh,w,c
  8508  005E44  2209               	addwfc	??_gravity+1,f,c
  8509  005E46  0E01               	movlw	1
  8510  005E48  2408               	addwf	??_gravity,w,c
  8511  005E4A  6ED9               	movwf	fsr2l,c
  8512  005E4C  0E00               	movlw	0
  8513  005E4E  2009               	addwfc	??_gravity+1,w,c
  8514  005E50  6EDA               	movwf	fsr2h,c
  8515  005E52  50DF               	movf	indf2,w,c
  8516  005E54  A4D8               	btfss	status,2,c
  8517  005E56  D002               	goto	l151
  8518                           
  8519                           ;main.c: 410: return -1;
  8520  005E58  0EFF               	movlw	255
  8521  005E5A  0012               	return	
  8522  005E5C                     l151:
  8523  005E5C  2A15               	incf	gravity@j_247,f,c
  8524  005E5E  D7DF               	goto	l3811
  8525  005E60                     u4100:
  8526                           
  8527                           ;main.c: 411: }
  8528                           ;main.c: 412: }
  8529                           ;main.c: 413: return 1;
  8530  005E60  0E01               	movlw	1
  8531  005E62  0012               	return	
  8532  005E64                     __end_of_gravity:
  8533                           	opt stack 0
  8534                           tblptru	equ	0xFF8
  8535                           tblptrh	equ	0xFF7
  8536                           tblptrl	equ	0xFF6
  8537                           tablat	equ	0xFF5
  8538                           prodh	equ	0xFF4
  8539                           prodl	equ	0xFF3
  8540                           intcon	equ	0xFF2
  8541                           postinc0	equ	0xFEE
  8542                           wreg	equ	0xFE8
  8543                           indf1	equ	0xFE7
  8544                           postinc1	equ	0xFE6
  8545                           postdec1	equ	0xFE5
  8546                           fsr1h	equ	0xFE2
  8547                           fsr1l	equ	0xFE1
  8548                           indf2	equ	0xFDF
  8549                           postinc2	equ	0xFDE
  8550                           fsr2h	equ	0xFDA
  8551                           fsr2l	equ	0xFD9
  8552                           status	equ	0xFD8
  8553                           
  8554 ;; *************** function _dontBelong2Shape *****************
  8555 ;; Defined at:
  8556 ;;		line 349 in file "main.c"
  8557 ;; Parameters:    Size  Location     Type
  8558 ;;  index           1    wreg     unsigned char 
  8559 ;;  x               1    0[COMRAM] unsigned char 
  8560 ;;  y               1    1[COMRAM] unsigned char 
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;  index           1    5[COMRAM] unsigned char 
  8563 ;;  k               1    6[COMRAM] unsigned char 
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      unsigned char 
  8566 ;; Registers used:
  8567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8573 ;;      Params:         2       0       0       0       0       0       0       0       0
  8574 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8575 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8576 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8577 ;;Total ram usage:        7 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; This function calls:
  8580 ;;		Nothing
  8581 ;; This function is called by:
  8582 ;;		_gravity
  8583 ;;		_moveRight
  8584 ;;		_moveLeft
  8585 ;;		_rotate
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text12
  8590  003FDC                     __ptext12:
  8591                           	opt stack 0
  8592  003FDC                     _dontBelong2Shape:
  8593                           	opt stack 29
  8594                           
  8595                           ;incstack = 0
  8596                           ;dontBelong2Shape@index stored from wreg
  8597  003FDC  6E06               	movwf	dontBelong2Shape@index,c
  8598                           
  8599                           ;main.c: 351: for(uint8_t k=0;k<4;k++){
  8600  003FDE  0E00               	movlw	0
  8601  003FE0  6E07               	movwf	dontBelong2Shape@k,c
  8602  003FE2                     l3363:
  8603  003FE2  0E03               	movlw	3
  8604  003FE4  6407               	cpfsgt	dontBelong2Shape@k,c
  8605  003FE6  D001               	goto	l125
  8606  003FE8  D034               	goto	u3080
  8607  003FEA                     l125:
  8608                           
  8609                           ;main.c: 352: if(all_shapes[index].index[k].x == x && all_shapes[index].index[k].y == y)
      +                          {
  8610  003FEA  5006               	movf	dontBelong2Shape@index,w,c
  8611  003FEC  0D09               	mullw	9
  8612  003FEE  0E00               	movlw	low _all_shapes
  8613  003FF0  6E03               	movwf	??_dontBelong2Shape& (0+255),c
  8614  003FF2  0E01               	movlw	high _all_shapes
  8615  003FF4  6E04               	movwf	(??_dontBelong2Shape+1)& (0+255),c
  8616  003FF6  50F3               	movf	prodl,w,c
  8617  003FF8  2603               	addwf	??_dontBelong2Shape,f,c
  8618  003FFA  50F4               	movf	prodh,w,c
  8619  003FFC  2204               	addwfc	??_dontBelong2Shape+1,f,c
  8620  003FFE  5007               	movf	dontBelong2Shape@k,w,c
  8621  004000  0D02               	mullw	2
  8622  004002  50F3               	movf	prodl,w,c
  8623  004004  2403               	addwf	??_dontBelong2Shape,w,c
  8624  004006  6ED9               	movwf	fsr2l,c
  8625  004008  50F4               	movf	prodh,w,c
  8626  00400A  2004               	addwfc	??_dontBelong2Shape+1,w,c
  8627  00400C  6EDA               	movwf	fsr2h,c
  8628  00400E  5001               	movf	dontBelong2Shape@x,w,c
  8629  004010  18DE               	xorwf	postinc2,w,c
  8630  004012  A4D8               	btfss	status,2,c
  8631  004014  D01C               	goto	l127
  8632  004016  5006               	movf	dontBelong2Shape@index,w,c
  8633  004018  0D09               	mullw	9
  8634  00401A  0E00               	movlw	low _all_shapes
  8635  00401C  6E03               	movwf	??_dontBelong2Shape& (0+255),c
  8636  00401E  0E01               	movlw	high _all_shapes
  8637  004020  6E04               	movwf	(??_dontBelong2Shape+1)& (0+255),c
  8638  004022  50F3               	movf	prodl,w,c
  8639  004024  2603               	addwf	??_dontBelong2Shape,f,c
  8640  004026  50F4               	movf	prodh,w,c
  8641  004028  2204               	addwfc	??_dontBelong2Shape+1,f,c
  8642  00402A  5007               	movf	dontBelong2Shape@k,w,c
  8643  00402C  0D02               	mullw	2
  8644  00402E  50F3               	movf	prodl,w,c
  8645  004030  2603               	addwf	??_dontBelong2Shape,f,c
  8646  004032  50F4               	movf	prodh,w,c
  8647  004034  2204               	addwfc	??_dontBelong2Shape+1,f,c
  8648  004036  0E01               	movlw	1
  8649  004038  2403               	addwf	??_dontBelong2Shape,w,c
  8650  00403A  6ED9               	movwf	fsr2l,c
  8651  00403C  0E00               	movlw	0
  8652  00403E  2004               	addwfc	??_dontBelong2Shape+1,w,c
  8653  004040  6EDA               	movwf	fsr2h,c
  8654  004042  5002               	movf	dontBelong2Shape@y,w,c
  8655  004044  18DE               	xorwf	postinc2,w,c
  8656  004046  A4D8               	btfss	status,2,c
  8657  004048  D002               	goto	l127
  8658                           
  8659                           ;main.c: 353: return 1;
  8660  00404A  0E01               	movlw	1
  8661  00404C  0012               	return	
  8662  00404E                     l127:
  8663  00404E  2A07               	incf	dontBelong2Shape@k,f,c
  8664  004050  D7C8               	goto	l3363
  8665  004052                     u3080:
  8666                           
  8667                           ;main.c: 354: }
  8668                           ;main.c: 355: }
  8669                           ;main.c: 356: return 0;
  8670  004052  0E00               	movlw	0
  8671  004054  0012               	return	
  8672  004056                     __end_of_dontBelong2Shape:
  8673                           	opt stack 0
  8674                           tblptru	equ	0xFF8
  8675                           tblptrh	equ	0xFF7
  8676                           tblptrl	equ	0xFF6
  8677                           tablat	equ	0xFF5
  8678                           prodh	equ	0xFF4
  8679                           prodl	equ	0xFF3
  8680                           intcon	equ	0xFF2
  8681                           postinc0	equ	0xFEE
  8682                           wreg	equ	0xFE8
  8683                           indf1	equ	0xFE7
  8684                           postinc1	equ	0xFE6
  8685                           postdec1	equ	0xFE5
  8686                           fsr1h	equ	0xFE2
  8687                           fsr1l	equ	0xFE1
  8688                           indf2	equ	0xFDF
  8689                           postinc2	equ	0xFDE
  8690                           fsr2h	equ	0xFDA
  8691                           fsr2l	equ	0xFD9
  8692                           status	equ	0xFD8
  8693                           
  8694 ;; *************** function _glcd_text_write *****************
  8695 ;; Defined at:
  8696 ;;		line 685 in file "glcd_library/glcd.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;  str             2   23[COMRAM] PTR const unsigned char 
  8699 ;;		 -> STR_3(27), 
  8700 ;;  x               1   25[COMRAM] unsigned char 
  8701 ;;  y               1   26[COMRAM] unsigned char 
  8702 ;; Auto vars:     Size  Location     Type
  8703 ;;		None
  8704 ;; Return value:  Size  Location     Type
  8705 ;;                  1    wreg      void 
  8706 ;; Registers used:
  8707 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8708 ;; Tracked objects:
  8709 ;;		On entry : 0/0
  8710 ;;		On exit  : 0/0
  8711 ;;		Unchanged: 0/0
  8712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8713 ;;      Params:         4       0       0       0       0       0       0       0       0
  8714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8716 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8717 ;;Total ram usage:        4 bytes
  8718 ;; Hardware stack levels used:    1
  8719 ;; Hardware stack levels required when called:    3
  8720 ;; This function calls:
  8721 ;;		_glcd_SetCursor
  8722 ;;		_glcd_WriteString
  8723 ;; This function is called by:
  8724 ;;		_main
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           	psect	text13
  8729  003AB2                     __ptext13:
  8730                           	opt stack 0
  8731  003AB2                     _glcd_text_write:
  8732                           	opt stack 27
  8733                           
  8734                           ;glcd.c: 688: glcd_SetCursor(x, y);
  8735                           
  8736                           ;incstack = 0
  8737  003AB2  C01B  F00B         	movff	glcd_text_write@y,glcd_SetCursor@ypos
  8738  003AB6  501A               	movf	glcd_text_write@x,w,c
  8739  003AB8  EC11  F01E         	call	_glcd_SetCursor
  8740                           
  8741                           ;glcd.c: 689: glcd_WriteString(str, 1, 1);
  8742  003ABC  C018  F014         	movff	glcd_text_write@str,glcd_WriteString@str
  8743  003AC0  C019  F015         	movff	glcd_text_write@str+1,glcd_WriteString@str+1
  8744  003AC4  0E01               	movlw	1
  8745  003AC6  6E16               	movwf	glcd_WriteString@font,c
  8746  003AC8  0E01               	movlw	1
  8747  003ACA  6E17               	movwf	glcd_WriteString@color,c
  8748  003ACC  EC6D  F020         	call	_glcd_WriteString	;wreg free
  8749  003AD0  0012               	return		;funcret
  8750  003AD2                     __end_of_glcd_text_write:
  8751                           	opt stack 0
  8752                           tblptru	equ	0xFF8
  8753                           tblptrh	equ	0xFF7
  8754                           tblptrl	equ	0xFF6
  8755                           tablat	equ	0xFF5
  8756                           prodh	equ	0xFF4
  8757                           prodl	equ	0xFF3
  8758                           intcon	equ	0xFF2
  8759                           postinc0	equ	0xFEE
  8760                           wreg	equ	0xFE8
  8761                           indf1	equ	0xFE7
  8762                           postinc1	equ	0xFE6
  8763                           postdec1	equ	0xFE5
  8764                           fsr1h	equ	0xFE2
  8765                           fsr1l	equ	0xFE1
  8766                           indf2	equ	0xFDF
  8767                           postinc2	equ	0xFDE
  8768                           fsr2h	equ	0xFDA
  8769                           fsr2l	equ	0xFD9
  8770                           status	equ	0xFD8
  8771                           
  8772 ;; *************** function _glcd_SetCursor *****************
  8773 ;; Defined at:
  8774 ;;		line 554 in file "glcd_library/glcd.c"
  8775 ;; Parameters:    Size  Location     Type
  8776 ;;  xpos            1    wreg     unsigned char 
  8777 ;;  ypos            1   10[COMRAM] unsigned char 
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;  xpos            1   12[COMRAM] unsigned char 
  8780 ;;  side            1   11[COMRAM] unsigned char 
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      void 
  8783 ;; Registers used:
  8784 ;;		wreg, status,2, status,0, cstack
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8790 ;;      Params:         1       0       0       0       0       0       0       0       0
  8791 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8792 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8793 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8794 ;;Total ram usage:        3 bytes
  8795 ;; Hardware stack levels used:    1
  8796 ;; Hardware stack levels required when called:    1
  8797 ;; This function calls:
  8798 ;;		_glcd_WriteByte
  8799 ;; This function is called by:
  8800 ;;		_glcd_text_write
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804                           	psect	text14
  8805  003C22                     __ptext14:
  8806                           	opt stack 0
  8807  003C22                     _glcd_SetCursor:
  8808                           	opt stack 28
  8809                           
  8810                           ;incstack = 0
  8811                           ;glcd_SetCursor@xpos stored from wreg
  8812  003C22  6E0D               	movwf	glcd_SetCursor@xpos,c
  8813                           
  8814                           ;glcd.c: 556: unsigned char side = 0;
  8815  003C24  0E00               	movlw	0
  8816  003C26  6E0C               	movwf	glcd_SetCursor@side,c
  8817                           
  8818                           ;glcd.c: 558: if(xpos > 127 | ypos > 7)
  8819  003C28  0E80               	movlw	128
  8820  003C2A  600D               	cpfslt	glcd_SetCursor@xpos,c
  8821  003C2C  0012               	return	
  8822  003C2E  0E07               	movlw	7
  8823  003C30  640B               	cpfsgt	glcd_SetCursor@ypos,c
  8824  003C32  D001               	goto	l455
  8825  003C34  0012               	return	
  8826  003C36                     l455:
  8827                           
  8828                           ;glcd.c: 561: x = xpos;
  8829  003C36  C00D  F053         	movff	glcd_SetCursor@xpos,_x
  8830                           
  8831                           ;glcd.c: 562: y = ypos;
  8832  003C3A  C00B  F052         	movff	glcd_SetCursor@ypos,_y
  8833                           
  8834                           ;glcd.c: 564: if(xpos > 63)
  8835  003C3E  0E3F               	movlw	63
  8836  003C40  640D               	cpfsgt	glcd_SetCursor@xpos,c
  8837  003C42  D004               	goto	l459
  8838                           
  8839                           ;glcd.c: 565: {
  8840                           ;glcd.c: 566: xpos -= 64;
  8841  003C44  0E40               	movlw	64
  8842  003C46  5E0D               	subwf	glcd_SetCursor@xpos,f,c
  8843                           
  8844                           ;glcd.c: 567: side = 1;
  8845  003C48  0E01               	movlw	1
  8846  003C4A  6E0C               	movwf	glcd_SetCursor@side,c
  8847  003C4C                     l459:
  8848                           
  8849                           ;glcd.c: 568: }
  8850                           ;glcd.c: 570: LATBbits.LATB2=0;
  8851  003C4C  948A               	bcf	3978,2,c	;volatile
  8852                           
  8853                           ;glcd.c: 571: glcd_WriteByte(side, 0x40 | xpos);
  8854  003C4E  500D               	movf	glcd_SetCursor@xpos,w,c
  8855  003C50  0940               	iorlw	64
  8856  003C52  6E09               	movwf	glcd_WriteByte@data,c
  8857  003C54  500C               	movf	glcd_SetCursor@side,w,c
  8858  003C56  ECBA  F01D         	call	_glcd_WriteByte
  8859                           
  8860                           ;glcd.c: 572: glcd_WriteByte(side, 0xB8 | ypos);
  8861  003C5A  500B               	movf	glcd_SetCursor@ypos,w,c
  8862  003C5C  09B8               	iorlw	184
  8863  003C5E  6E09               	movwf	glcd_WriteByte@data,c
  8864  003C60  500C               	movf	glcd_SetCursor@side,w,c
  8865  003C62  ECBA  F01D         	call	_glcd_WriteByte
  8866                           
  8867                           ;glcd.c: 573: LATBbits.LATB2=1;
  8868  003C66  848A               	bsf	3978,2,c	;volatile
  8869  003C68  0012               	return		;funcret
  8870  003C6A                     __end_of_glcd_SetCursor:
  8871                           	opt stack 0
  8872                           tblptru	equ	0xFF8
  8873                           tblptrh	equ	0xFF7
  8874                           tblptrl	equ	0xFF6
  8875                           tablat	equ	0xFF5
  8876                           prodh	equ	0xFF4
  8877                           prodl	equ	0xFF3
  8878                           intcon	equ	0xFF2
  8879                           postinc0	equ	0xFEE
  8880                           wreg	equ	0xFE8
  8881                           indf1	equ	0xFE7
  8882                           postinc1	equ	0xFE6
  8883                           postdec1	equ	0xFE5
  8884                           fsr1h	equ	0xFE2
  8885                           fsr1l	equ	0xFE1
  8886                           indf2	equ	0xFDF
  8887                           postinc2	equ	0xFDE
  8888                           fsr2h	equ	0xFDA
  8889                           fsr2l	equ	0xFD9
  8890                           status	equ	0xFD8
  8891                           
  8892 ;; *************** function _glcd_Init *****************
  8893 ;; Defined at:
  8894 ;;		line 340 in file "glcd_library/glcd.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;  mode            1    wreg     unsigned char 
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;  mode            1   14[COMRAM] unsigned char 
  8899 ;;  k               1    0        unsigned char 
  8900 ;;  j               1    0        unsigned char 
  8901 ;;  i               1    0        unsigned char 
  8902 ;; Return value:  Size  Location     Type
  8903 ;;                  1    wreg      void 
  8904 ;; Registers used:
  8905 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8906 ;; Tracked objects:
  8907 ;;		On entry : 0/0
  8908 ;;		On exit  : 0/0
  8909 ;;		Unchanged: 0/0
  8910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8911 ;;      Params:         0       0       0       0       0       0       0       0       0
  8912 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8913 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8914 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8915 ;;Total ram usage:        2 bytes
  8916 ;; Hardware stack levels used:    1
  8917 ;; Hardware stack levels required when called:    2
  8918 ;; This function calls:
  8919 ;;		_glcd_FillScreen
  8920 ;;		_glcd_WriteByte
  8921 ;; This function is called by:
  8922 ;;		_main
  8923 ;; This function uses a non-reentrant model
  8924 ;;
  8925                           
  8926                           	psect	text15
  8927  004212                     __ptext15:
  8928                           	opt stack 0
  8929  004212                     _glcd_Init:
  8930                           	opt stack 28
  8931                           
  8932                           ;incstack = 0
  8933                           ;glcd_Init@mode stored from wreg
  8934  004212  6E0F               	movwf	glcd_Init@mode,c
  8935                           
  8936                           ;glcd.c: 342: TRISA = 0xFF;
  8937  004214  6892               	setf	3986,c	;volatile
  8938                           
  8939                           ;glcd.c: 343: PORTA = 0x00;
  8940  004216  0E00               	movlw	0
  8941  004218  6E80               	movwf	3968,c	;volatile
  8942                           
  8943                           ;glcd.c: 344: ADCON1 = 0x0F;
  8944  00421A  0E0F               	movlw	15
  8945  00421C  6EC1               	movwf	4033,c	;volatile
  8946                           
  8947                           ;glcd.c: 346: TRISB = 0x00;
  8948  00421E  0E00               	movlw	0
  8949  004220  6E93               	movwf	3987,c	;volatile
  8950                           
  8951                           ;glcd.c: 347: PORTB = 0x00;
  8952  004222  0E00               	movlw	0
  8953  004224  6E81               	movwf	3969,c	;volatile
  8954                           
  8955                           ;glcd.c: 349: TRISD = 0x00;
  8956  004226  0E00               	movlw	0
  8957  004228  6E95               	movwf	3989,c	;volatile
  8958                           
  8959                           ;glcd.c: 350: PORTD = 0x00;
  8960  00422A  0E00               	movlw	0
  8961  00422C  6E83               	movwf	3971,c	;volatile
  8962                           
  8963                           ;glcd.c: 352: unsigned char i, j, k;
  8964                           ;glcd.c: 355: PORTD = 0x00;
  8965  00422E  0E00               	movlw	0
  8966  004230  6E83               	movwf	3971,c	;volatile
  8967                           
  8968                           ;glcd.c: 356: LATBbits.LATB5 = 0;
  8969  004232  9A8A               	bcf	3978,5,c	;volatile
  8970                           
  8971                           ;glcd.c: 358: _delay((unsigned long)((1500)*(100000/4000.0)));
  8972  004234  0E31               	movlw	49
  8973  004236  6E0E               	movwf	??_glcd_Init& (0+255),c
  8974  004238  0EB2               	movlw	178
  8975  00423A                     u5287:
  8976  00423A  2EE8               	decfsz	wreg,f,c
  8977  00423C  D7FE               	bra	u5287
  8978  00423E  2E0E               	decfsz	??_glcd_Init& (0+255),f,c
  8979  004240  D7FC               	bra	u5287
  8980  004242  D000               	nop2	
  8981                           
  8982                           ;glcd.c: 359: LATBbits.LATB5 = 1;
  8983  004244  8A8A               	bsf	3978,5,c	;volatile
  8984                           
  8985                           ;glcd.c: 361: LATBbits.LATB4=0;
  8986  004246  988A               	bcf	3978,4,c	;volatile
  8987                           
  8988                           ;glcd.c: 362: LATBbits.LATB0=0;
  8989  004248  908A               	bcf	3978,0,c	;volatile
  8990                           
  8991                           ;glcd.c: 363: LATBbits.LATB1=0;
  8992  00424A  928A               	bcf	3978,1,c	;volatile
  8993                           
  8994                           ;glcd.c: 364: LATBbits.LATB2=0;
  8995  00424C  948A               	bcf	3978,2,c	;volatile
  8996                           
  8997                           ;glcd.c: 367: _delay((unsigned long)((10)*(100000/4000.0)));
  8998  00424E  0E53               	movlw	83
  8999  004250                     u5297:
  9000  004250  2EE8               	decfsz	wreg,f,c
  9001  004252  D7FE               	bra	u5297
  9002  004254  F000               	nop	
  9003                           
  9004                           ;glcd.c: 368: glcd_WriteByte(0, 0xC0);
  9005  004256  0EC0               	movlw	192
  9006  004258  6E09               	movwf	glcd_WriteByte@data,c
  9007  00425A  0E00               	movlw	0
  9008  00425C  ECBA  F01D         	call	_glcd_WriteByte
  9009                           
  9010                           ;glcd.c: 369: glcd_WriteByte(1, 0xC0);
  9011  004260  0EC0               	movlw	192
  9012  004262  6E09               	movwf	glcd_WriteByte@data,c
  9013  004264  0E01               	movlw	1
  9014  004266  ECBA  F01D         	call	_glcd_WriteByte
  9015                           
  9016                           ;glcd.c: 370: glcd_WriteByte(0, 0x40);
  9017  00426A  0E40               	movlw	64
  9018  00426C  6E09               	movwf	glcd_WriteByte@data,c
  9019  00426E  0E00               	movlw	0
  9020  004270  ECBA  F01D         	call	_glcd_WriteByte
  9021                           
  9022                           ;glcd.c: 371: glcd_WriteByte(1, 0x40);
  9023  004274  0E40               	movlw	64
  9024  004276  6E09               	movwf	glcd_WriteByte@data,c
  9025  004278  0E01               	movlw	1
  9026  00427A  ECBA  F01D         	call	_glcd_WriteByte
  9027                           
  9028                           ;glcd.c: 372: glcd_WriteByte(0, 0xB8);
  9029  00427E  0EB8               	movlw	184
  9030  004280  6E09               	movwf	glcd_WriteByte@data,c
  9031  004282  0E00               	movlw	0
  9032  004284  ECBA  F01D         	call	_glcd_WriteByte
  9033                           
  9034                           ;glcd.c: 373: glcd_WriteByte(1, 0xB8);
  9035  004288  0EB8               	movlw	184
  9036  00428A  6E09               	movwf	glcd_WriteByte@data,c
  9037  00428C  0E01               	movlw	1
  9038  00428E  ECBA  F01D         	call	_glcd_WriteByte
  9039                           
  9040                           ;glcd.c: 375: if(mode == 1)
  9041  004292  040F               	decf	glcd_Init@mode,w,c
  9042  004294  A4D8               	btfss	status,2,c
  9043  004296  D00E               	goto	l413
  9044                           
  9045                           ;glcd.c: 376: {
  9046                           ;glcd.c: 377: TRISA = 0x00;
  9047  004298  0E00               	movlw	0
  9048  00429A  6E92               	movwf	3986,c	;volatile
  9049                           
  9050                           ;glcd.c: 378: PORTA = 0xFF;
  9051  00429C  6880               	setf	3968,c	;volatile
  9052                           
  9053                           ;glcd.c: 379: glcd_WriteByte(0, 0x3F);
  9054  00429E  0E3F               	movlw	63
  9055  0042A0  6E09               	movwf	glcd_WriteByte@data,c
  9056  0042A2  0E00               	movlw	0
  9057  0042A4  ECBA  F01D         	call	_glcd_WriteByte
  9058                           
  9059                           ;glcd.c: 380: glcd_WriteByte(1, 0x3F);
  9060  0042A8  0E3F               	movlw	63
  9061  0042AA  6E09               	movwf	glcd_WriteByte@data,c
  9062  0042AC  0E01               	movlw	1
  9063  0042AE  ECBA  F01D         	call	_glcd_WriteByte
  9064                           
  9065                           ;glcd.c: 381: }
  9066  0042B2  D00A               	goto	l414
  9067  0042B4                     l413:
  9068                           
  9069                           ;glcd.c: 382: else
  9070                           ;glcd.c: 383: {
  9071                           ;glcd.c: 384: glcd_WriteByte(0, 0x3E);
  9072  0042B4  0E3E               	movlw	62
  9073  0042B6  6E09               	movwf	glcd_WriteByte@data,c
  9074  0042B8  0E00               	movlw	0
  9075  0042BA  ECBA  F01D         	call	_glcd_WriteByte
  9076                           
  9077                           ;glcd.c: 385: glcd_WriteByte(1, 0x3E);
  9078  0042BE  0E3E               	movlw	62
  9079  0042C0  6E09               	movwf	glcd_WriteByte@data,c
  9080  0042C2  0E01               	movlw	1
  9081  0042C4  ECBA  F01D         	call	_glcd_WriteByte
  9082  0042C8                     l414:
  9083                           
  9084                           ;glcd.c: 386: }
  9085                           ;glcd.c: 388: glcd_FillScreen(0);
  9086  0042C8  0E00               	movlw	0
  9087  0042CA  EC45  F01F         	call	_glcd_FillScreen
  9088  0042CE  0012               	return		;funcret
  9089  0042D0                     __end_of_glcd_Init:
  9090                           	opt stack 0
  9091                           tblptru	equ	0xFF8
  9092                           tblptrh	equ	0xFF7
  9093                           tblptrl	equ	0xFF6
  9094                           tablat	equ	0xFF5
  9095                           prodh	equ	0xFF4
  9096                           prodl	equ	0xFF3
  9097                           intcon	equ	0xFF2
  9098                           postinc0	equ	0xFEE
  9099                           wreg	equ	0xFE8
  9100                           indf1	equ	0xFE7
  9101                           postinc1	equ	0xFE6
  9102                           postdec1	equ	0xFE5
  9103                           fsr1h	equ	0xFE2
  9104                           fsr1l	equ	0xFE1
  9105                           indf2	equ	0xFDF
  9106                           postinc2	equ	0xFDE
  9107                           fsr2h	equ	0xFDA
  9108                           fsr2l	equ	0xFD9
  9109                           status	equ	0xFD8
  9110                           
  9111 ;; *************** function _glcd_Image *****************
  9112 ;; Defined at:
  9113 ;;		line 693 in file "glcd_library/glcd.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;		None
  9116 ;; Auto vars:     Size  Location     Type
  9117 ;;  ptr             2   10[COMRAM] int 
  9118 ;;  cs              1   14[COMRAM] unsigned char 
  9119 ;;  i               1   13[COMRAM] unsigned char 
  9120 ;;  j               1   12[COMRAM] unsigned char 
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  1    wreg      void 
  9123 ;; Registers used:
  9124 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/0
  9127 ;;		On exit  : 0/0
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9130 ;;      Params:         0       0       0       0       0       0       0       0       0
  9131 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9133 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9134 ;;Total ram usage:        5 bytes
  9135 ;; Hardware stack levels used:    1
  9136 ;; Hardware stack levels required when called:    1
  9137 ;; This function calls:
  9138 ;;		_glcd_WriteByte
  9139 ;; This function is called by:
  9140 ;;		_main
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           	psect	text16
  9145  003F68                     __ptext16:
  9146                           	opt stack 0
  9147  003F68                     _glcd_Image:
  9148                           	opt stack 29
  9149                           
  9150                           ;glcd.c: 695: unsigned char cs;
  9151                           ;glcd.c: 696: int ptr=0;
  9152                           
  9153                           ;incstack = 0
  9154  003F68  0E00               	movlw	0
  9155  003F6A  6E0C               	movwf	glcd_Image@ptr+1,c
  9156  003F6C  0E00               	movlw	0
  9157  003F6E  6E0B               	movwf	glcd_Image@ptr,c
  9158                           
  9159                           ;glcd.c: 698: unsigned char i, j;
  9160                           ;glcd.c: 701: for(i = 0; i < 8; ++i)
  9161  003F70  0E00               	movlw	0
  9162  003F72  6E0E               	movwf	glcd_Image@i,c
  9163  003F74                     l4515:
  9164  003F74  0E07               	movlw	7
  9165  003F76  640E               	cpfsgt	glcd_Image@i,c
  9166  003F78  D001               	goto	l495
  9167  003F7A  D02D               	goto	u4950
  9168  003F7C                     l495:
  9169                           
  9170                           ;glcd.c: 702: {
  9171                           ;glcd.c: 704: for(cs=0;cs<=1;cs++)
  9172  003F7C  0E00               	movlw	0
  9173  003F7E  6E0F               	movwf	glcd_Image@cs,c
  9174  003F80                     l4521:
  9175  003F80  0E01               	movlw	1
  9176  003F82  640F               	cpfsgt	glcd_Image@cs,c
  9177  003F84  D001               	goto	l497
  9178  003F86  D025               	goto	u4940
  9179  003F88                     l497:
  9180                           
  9181                           ;glcd.c: 705: {
  9182                           ;glcd.c: 706: LATBbits.LATB2=0;
  9183  003F88  948A               	bcf	3978,2,c	;volatile
  9184                           
  9185                           ;glcd.c: 707: glcd_WriteByte(cs, 0x40);
  9186  003F8A  0E40               	movlw	64
  9187  003F8C  6E09               	movwf	glcd_WriteByte@data,c
  9188  003F8E  500F               	movf	glcd_Image@cs,w,c
  9189  003F90  ECBA  F01D         	call	_glcd_WriteByte
  9190                           
  9191                           ;glcd.c: 708: glcd_WriteByte(cs, i | 0xB8);
  9192  003F94  500E               	movf	glcd_Image@i,w,c
  9193  003F96  09B8               	iorlw	184
  9194  003F98  6E09               	movwf	glcd_WriteByte@data,c
  9195  003F9A  500F               	movf	glcd_Image@cs,w,c
  9196  003F9C  ECBA  F01D         	call	_glcd_WriteByte
  9197                           
  9198                           ;glcd.c: 709: LATBbits.LATB2=1;
  9199  003FA0  848A               	bsf	3978,2,c	;volatile
  9200                           
  9201                           ;glcd.c: 712: for(j = 0; j < 64; ++j)
  9202  003FA2  0E00               	movlw	0
  9203  003FA4  6E0D               	movwf	glcd_Image@j,c
  9204  003FA6  0E3F               	movlw	63
  9205  003FA8  640D               	cpfsgt	glcd_Image@j,c
  9206  003FAA  D001               	goto	l499
  9207  003FAC  D010               	goto	u4930
  9208  003FAE                     l499:
  9209                           
  9210                           ;glcd.c: 713: {
  9211                           ;glcd.c: 714: glcd_WriteByte(cs, accueil[ptr]);
  9212  003FAE  0E05               	movlw	low _accueil
  9213  003FB0  240B               	addwf	glcd_Image@ptr,w,c
  9214  003FB2  6EF6               	movwf	tblptrl,c
  9215  003FB4  0E7B               	movlw	high _accueil
  9216  003FB6  200C               	addwfc	glcd_Image@ptr+1,w,c
  9217  003FB8  6EF7               	movwf	tblptrh,c
  9218  003FBA                     	if	0	;There are less than 3 active tblptr bytes
  9219  003FBA                     	endif
  9220  003FBA  0008               	tblrd		*
  9221  003FBC  CFF5 F009          	movff	tablat,glcd_WriteByte@data
  9222  003FC0  500F               	movf	glcd_Image@cs,w,c
  9223  003FC2  ECBA  F01D         	call	_glcd_WriteByte
  9224                           
  9225                           ;glcd.c: 715: ptr+=1;
  9226  003FC6  4A0B               	infsnz	glcd_Image@ptr,f,c
  9227  003FC8  2A0C               	incf	glcd_Image@ptr+1,f,c
  9228  003FCA  2A0D               	incf	glcd_Image@j,f,c
  9229  003FCC  D7EC               	goto	L32
  9230  003FCE                     u4930:
  9231  003FCE  2A0F               	incf	glcd_Image@cs,f,c
  9232  003FD0  D7D7               	goto	l4521
  9233  003FD2                     u4940:
  9234  003FD2  2A0E               	incf	glcd_Image@i,f,c
  9235  003FD4  D7CF               	goto	l4515
  9236  003FD6                     u4950:
  9237                           
  9238                           ;glcd.c: 716: }
  9239                           ;glcd.c: 717: }
  9240                           ;glcd.c: 718: }
  9241                           ;glcd.c: 720: LATBbits.LATB0=0;
  9242  003FD6  908A               	bcf	3978,0,c	;volatile
  9243                           
  9244                           ;glcd.c: 721: LATBbits.LATB1=0;
  9245  003FD8  928A               	bcf	3978,1,c	;volatile
  9246  003FDA  0012               	return		;funcret
  9247  003FDC                     __end_of_glcd_Image:
  9248                           	opt stack 0
  9249                           tblptru	equ	0xFF8
  9250                           tblptrh	equ	0xFF7
  9251                           tblptrl	equ	0xFF6
  9252                           tablat	equ	0xFF5
  9253                           prodh	equ	0xFF4
  9254                           prodl	equ	0xFF3
  9255                           intcon	equ	0xFF2
  9256                           postinc0	equ	0xFEE
  9257                           wreg	equ	0xFE8
  9258                           indf1	equ	0xFE7
  9259                           postinc1	equ	0xFE6
  9260                           postdec1	equ	0xFE5
  9261                           fsr1h	equ	0xFE2
  9262                           fsr1l	equ	0xFE1
  9263                           indf2	equ	0xFDF
  9264                           postinc2	equ	0xFDE
  9265                           fsr2h	equ	0xFDA
  9266                           fsr2l	equ	0xFD9
  9267                           status	equ	0xFD8
  9268                           
  9269 ;; *************** function _display_grid *****************
  9270 ;; Defined at:
  9271 ;;		line 61 in file "main.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;		None
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;  j               1   17[COMRAM] unsigned char 
  9276 ;;  i               1   18[COMRAM] unsigned char 
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1    wreg      void 
  9279 ;; Registers used:
  9280 ;;		wreg, status,2, status,0, cstack
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9286 ;;      Params:         0       0       0       0       0       0       0       0       0
  9287 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9289 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9290 ;;Total ram usage:        2 bytes
  9291 ;; Hardware stack levels used:    1
  9292 ;; Hardware stack levels required when called:    2
  9293 ;; This function calls:
  9294 ;;		_glcd_PlotPixel
  9295 ;; This function is called by:
  9296 ;;		_main
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300                           	psect	text17
  9301  0045C8                     __ptext17:
  9302                           	opt stack 0
  9303  0045C8                     _display_grid:
  9304                           	opt stack 28
  9305                           
  9306                           ;main.c: 62: for (uint8_t i=0;i<128;i++){
  9307                           
  9308                           ;incstack = 0
  9309  0045C8  0E00               	movlw	0
  9310  0045CA  6E13               	movwf	display_grid@i,c
  9311  0045CC                     l3633:
  9312  0045CC  0E7F               	movlw	127
  9313  0045CE  6413               	cpfsgt	display_grid@i,c
  9314  0045D0  D001               	goto	l43
  9315  0045D2  0012               	return	
  9316  0045D4                     l43:
  9317                           
  9318                           ;main.c: 63: for(uint8_t j=0;j<64;j++){
  9319  0045D4  0E00               	movlw	0
  9320  0045D6  6E12               	movwf	display_grid@j,c
  9321  0045D8                     l3639:
  9322  0045D8  0E3F               	movlw	63
  9323  0045DA  6412               	cpfsgt	display_grid@j,c
  9324  0045DC  D001               	goto	l45
  9325  0045DE  D0C3               	goto	u3930
  9326  0045E0                     l45:
  9327                           
  9328                           ;main.c: 64: if ((j>=0 && j<=1) || (j>=62 && j<=63))
  9329  0045E0  0E01               	movlw	1
  9330  0045E2  6412               	cpfsgt	display_grid@j,c
  9331  0045E4  D006               	goto	u3550
  9332  0045E6  0E3D               	movlw	61
  9333  0045E8  6412               	cpfsgt	display_grid@j,c
  9334  0045EA  D00B               	goto	l47
  9335  0045EC  0E40               	movlw	64
  9336  0045EE  6012               	cpfslt	display_grid@j,c
  9337  0045F0  D008               	goto	l47
  9338  0045F2                     u3550:
  9339                           
  9340                           ;main.c: 65: glcd_PlotPixel(i,j,1);
  9341  0045F2  C012  F00B         	movff	display_grid@j,glcd_PlotPixel@ypos
  9342  0045F6  0E01               	movlw	1
  9343  0045F8  6E0C               	movwf	glcd_PlotPixel@color,c
  9344  0045FA  5013               	movf	display_grid@i,w,c
  9345  0045FC  ECB0  F020         	call	_glcd_PlotPixel
  9346  004600  D01E               	goto	l55
  9347  004602                     l47:
  9348                           
  9349                           ;main.c: 66: else if (((i>=0 && i<=1) || ( i>=126 && i<=127)))
  9350  004602  0E01               	movlw	1
  9351  004604  6413               	cpfsgt	display_grid@i,c
  9352  004606  D006               	goto	u3580
  9353  004608  0E7D               	movlw	125
  9354  00460A  6413               	cpfsgt	display_grid@i,c
  9355  00460C  D00B               	goto	l51
  9356  00460E  0E80               	movlw	128
  9357  004610  6013               	cpfslt	display_grid@i,c
  9358  004612  D008               	goto	l51
  9359  004614                     u3580:
  9360                           
  9361                           ;main.c: 67: glcd_PlotPixel(i,j,1);
  9362  004614  C012  F00B         	movff	display_grid@j,glcd_PlotPixel@ypos
  9363  004618  0E01               	movlw	1
  9364  00461A  6E0C               	movwf	glcd_PlotPixel@color,c
  9365  00461C  5013               	movf	display_grid@i,w,c
  9366  00461E  ECB0  F020         	call	_glcd_PlotPixel
  9367  004622  D00D               	goto	l55
  9368  004624                     l51:
  9369                           
  9370                           ;main.c: 68: else if (i>=91 && i<=92 )
  9371  004624  0E5A               	movlw	90
  9372  004626  6413               	cpfsgt	display_grid@i,c
  9373  004628  D00A               	goto	l55
  9374  00462A  0E5D               	movlw	93
  9375  00462C  6013               	cpfslt	display_grid@i,c
  9376  00462E  D007               	goto	l55
  9377                           
  9378                           ;main.c: 69: glcd_PlotPixel(i,j,1);
  9379  004630  C012  F00B         	movff	display_grid@j,glcd_PlotPixel@ypos
  9380  004634  0E01               	movlw	1
  9381  004636  6E0C               	movwf	glcd_PlotPixel@color,c
  9382  004638  5013               	movf	display_grid@i,w,c
  9383  00463A  ECB0  F020         	call	_glcd_PlotPixel
  9384  00463E                     l55:
  9385                           
  9386                           ;main.c: 72: if (i>=2 && i<=90 && j==61)
  9387  00463E  0E01               	movlw	1
  9388  004640  6413               	cpfsgt	display_grid@i,c
  9389  004642  D00E               	goto	l56
  9390  004644  0E5B               	movlw	91
  9391  004646  6013               	cpfslt	display_grid@i,c
  9392  004648  D00B               	goto	l56
  9393  00464A  0E3D               	movlw	61
  9394  00464C  1812               	xorwf	display_grid@j,w,c
  9395  00464E  A4D8               	btfss	status,2,c
  9396  004650  D007               	goto	l56
  9397                           
  9398                           ;main.c: 73: glcd_PlotPixel(i,j,1);
  9399  004652  C012  F00B         	movff	display_grid@j,glcd_PlotPixel@ypos
  9400  004656  0E01               	movlw	1
  9401  004658  6E0C               	movwf	glcd_PlotPixel@color,c
  9402  00465A  5013               	movf	display_grid@i,w,c
  9403  00465C  ECB0  F020         	call	_glcd_PlotPixel
  9404  004660                     l56:
  9405                           
  9406                           ;main.c: 76: if ( ((i==6) || (i==11) || (i==16) || (i==21) || (i==26) || (i==31) || (i==
      +                          36) || (i==41) || (i==46) || (i==51) || (i==56) || (i==61) || (i==66) || (i==71) || (i==
      +                          76) || (i==81) || (i==86)) )
  9407  004660  0E06               	movlw	6
  9408  004662  1813               	xorwf	display_grid@i,w,c
  9409  004664  B4D8               	btfsc	status,2,c
  9410  004666  D040               	goto	u3800
  9411  004668  0E0B               	movlw	11
  9412  00466A  1813               	xorwf	display_grid@i,w,c
  9413  00466C  B4D8               	btfsc	status,2,c
  9414  00466E  D03C               	goto	u3800
  9415  004670  0E10               	movlw	16
  9416  004672  1813               	xorwf	display_grid@i,w,c
  9417  004674  B4D8               	btfsc	status,2,c
  9418  004676  D038               	goto	u3800
  9419  004678  0E15               	movlw	21
  9420  00467A  1813               	xorwf	display_grid@i,w,c
  9421  00467C  B4D8               	btfsc	status,2,c
  9422  00467E  D034               	goto	u3800
  9423  004680  0E1A               	movlw	26
  9424  004682  1813               	xorwf	display_grid@i,w,c
  9425  004684  B4D8               	btfsc	status,2,c
  9426  004686  D030               	goto	u3800
  9427  004688  0E1F               	movlw	31
  9428  00468A  1813               	xorwf	display_grid@i,w,c
  9429  00468C  B4D8               	btfsc	status,2,c
  9430  00468E  D02C               	goto	u3800
  9431  004690  0E24               	movlw	36
  9432  004692  1813               	xorwf	display_grid@i,w,c
  9433  004694  B4D8               	btfsc	status,2,c
  9434  004696  D028               	goto	u3800
  9435  004698  0E29               	movlw	41
  9436  00469A  1813               	xorwf	display_grid@i,w,c
  9437  00469C  B4D8               	btfsc	status,2,c
  9438  00469E  D024               	goto	u3800
  9439  0046A0  0E2E               	movlw	46
  9440  0046A2  1813               	xorwf	display_grid@i,w,c
  9441  0046A4  B4D8               	btfsc	status,2,c
  9442  0046A6  D020               	goto	u3800
  9443  0046A8  0E33               	movlw	51
  9444  0046AA  1813               	xorwf	display_grid@i,w,c
  9445  0046AC  B4D8               	btfsc	status,2,c
  9446  0046AE  D01C               	goto	u3800
  9447  0046B0  0E38               	movlw	56
  9448  0046B2  1813               	xorwf	display_grid@i,w,c
  9449  0046B4  B4D8               	btfsc	status,2,c
  9450  0046B6  D018               	goto	u3800
  9451  0046B8  0E3D               	movlw	61
  9452  0046BA  1813               	xorwf	display_grid@i,w,c
  9453  0046BC  B4D8               	btfsc	status,2,c
  9454  0046BE  D014               	goto	u3800
  9455  0046C0  0E42               	movlw	66
  9456  0046C2  1813               	xorwf	display_grid@i,w,c
  9457  0046C4  B4D8               	btfsc	status,2,c
  9458  0046C6  D010               	goto	u3800
  9459  0046C8  0E47               	movlw	71
  9460  0046CA  1813               	xorwf	display_grid@i,w,c
  9461  0046CC  B4D8               	btfsc	status,2,c
  9462  0046CE  D00C               	goto	u3800
  9463  0046D0  0E4C               	movlw	76
  9464  0046D2  1813               	xorwf	display_grid@i,w,c
  9465  0046D4  B4D8               	btfsc	status,2,c
  9466  0046D6  D008               	goto	u3800
  9467  0046D8  0E51               	movlw	81
  9468  0046DA  1813               	xorwf	display_grid@i,w,c
  9469  0046DC  B4D8               	btfsc	status,2,c
  9470  0046DE  D004               	goto	u3800
  9471  0046E0  0E56               	movlw	86
  9472  0046E2  1813               	xorwf	display_grid@i,w,c
  9473  0046E4  A4D8               	btfss	status,2,c
  9474  0046E6  D007               	goto	l57
  9475  0046E8                     u3800:
  9476                           
  9477                           ;main.c: 77: glcd_PlotPixel(i,j,1);
  9478  0046E8  C012  F00B         	movff	display_grid@j,glcd_PlotPixel@ypos
  9479  0046EC  0E01               	movlw	1
  9480  0046EE  6E0C               	movwf	glcd_PlotPixel@color,c
  9481  0046F0  5013               	movf	display_grid@i,w,c
  9482  0046F2  ECB0  F020         	call	_glcd_PlotPixel
  9483  0046F6                     l57:
  9484                           
  9485                           ;main.c: 80: if ( ((j==6) || (j==11) || (j==16) || (j==21) || (j==26) || (j==31) || (j==
      +                          36) || (j==41) || (j==46) || (j==51) || (j==56)) && (i<92))
  9486  0046F6  0E06               	movlw	6
  9487  0046F8  1812               	xorwf	display_grid@j,w,c
  9488  0046FA  B4D8               	btfsc	status,2,c
  9489  0046FC  D028               	goto	u3910
  9490  0046FE  0E0B               	movlw	11
  9491  004700  1812               	xorwf	display_grid@j,w,c
  9492  004702  B4D8               	btfsc	status,2,c
  9493  004704  D024               	goto	u3910
  9494  004706  0E10               	movlw	16
  9495  004708  1812               	xorwf	display_grid@j,w,c
  9496  00470A  B4D8               	btfsc	status,2,c
  9497  00470C  D020               	goto	u3910
  9498  00470E  0E15               	movlw	21
  9499  004710  1812               	xorwf	display_grid@j,w,c
  9500  004712  B4D8               	btfsc	status,2,c
  9501  004714  D01C               	goto	u3910
  9502  004716  0E1A               	movlw	26
  9503  004718  1812               	xorwf	display_grid@j,w,c
  9504  00471A  B4D8               	btfsc	status,2,c
  9505  00471C  D018               	goto	u3910
  9506  00471E  0E1F               	movlw	31
  9507  004720  1812               	xorwf	display_grid@j,w,c
  9508  004722  B4D8               	btfsc	status,2,c
  9509  004724  D014               	goto	u3910
  9510  004726  0E24               	movlw	36
  9511  004728  1812               	xorwf	display_grid@j,w,c
  9512  00472A  B4D8               	btfsc	status,2,c
  9513  00472C  D010               	goto	u3910
  9514  00472E  0E29               	movlw	41
  9515  004730  1812               	xorwf	display_grid@j,w,c
  9516  004732  B4D8               	btfsc	status,2,c
  9517  004734  D00C               	goto	u3910
  9518  004736  0E2E               	movlw	46
  9519  004738  1812               	xorwf	display_grid@j,w,c
  9520  00473A  B4D8               	btfsc	status,2,c
  9521  00473C  D008               	goto	u3910
  9522  00473E  0E33               	movlw	51
  9523  004740  1812               	xorwf	display_grid@j,w,c
  9524  004742  B4D8               	btfsc	status,2,c
  9525  004744  D004               	goto	u3910
  9526  004746  0E38               	movlw	56
  9527  004748  1812               	xorwf	display_grid@j,w,c
  9528  00474A  A4D8               	btfss	status,2,c
  9529  00474C  D00A               	goto	l60
  9530  00474E                     u3910:
  9531  00474E  0E5C               	movlw	92
  9532  004750  6013               	cpfslt	display_grid@i,c
  9533  004752  D007               	goto	l60
  9534                           
  9535                           ;main.c: 81: glcd_PlotPixel(i,j,1);
  9536  004754  C012  F00B         	movff	display_grid@j,glcd_PlotPixel@ypos
  9537  004758  0E01               	movlw	1
  9538  00475A  6E0C               	movwf	glcd_PlotPixel@color,c
  9539  00475C  5013               	movf	display_grid@i,w,c
  9540  00475E  ECB0  F020         	call	_glcd_PlotPixel
  9541  004762                     l60:
  9542  004762  2A12               	incf	display_grid@j,f,c
  9543  004764  D739               	goto	l3639
  9544  004766                     u3930:
  9545  004766  2A13               	incf	display_grid@i,f,c
  9546  004768  D731               	goto	l3633
  9547  00476A                     __end_of_display_grid:
  9548                           	opt stack 0
  9549                           tblptru	equ	0xFF8
  9550                           tblptrh	equ	0xFF7
  9551                           tblptrl	equ	0xFF6
  9552                           tablat	equ	0xFF5
  9553                           prodh	equ	0xFF4
  9554                           prodl	equ	0xFF3
  9555                           intcon	equ	0xFF2
  9556                           postinc0	equ	0xFEE
  9557                           wreg	equ	0xFE8
  9558                           indf1	equ	0xFE7
  9559                           postinc1	equ	0xFE6
  9560                           postdec1	equ	0xFE5
  9561                           fsr1h	equ	0xFE2
  9562                           fsr1l	equ	0xFE1
  9563                           indf2	equ	0xFDF
  9564                           postinc2	equ	0xFDE
  9565                           fsr2h	equ	0xFDA
  9566                           fsr2l	equ	0xFD9
  9567                           status	equ	0xFD8
  9568                           
  9569 ;; *************** function _glcd_PlotPixel *****************
  9570 ;; Defined at:
  9571 ;;		line 470 in file "glcd_library/glcd.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;  xpos            1    wreg     unsigned char 
  9574 ;;  ypos            1   10[COMRAM] unsigned char 
  9575 ;;  color           1   11[COMRAM] unsigned char 
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;  xpos            1   14[COMRAM] unsigned char 
  9578 ;;  side            1   16[COMRAM] unsigned char 
  9579 ;;  data            1   15[COMRAM] unsigned char 
  9580 ;; Return value:  Size  Location     Type
  9581 ;;                  1    wreg      void 
  9582 ;; Registers used:
  9583 ;;		wreg, status,2, status,0, cstack
  9584 ;; Tracked objects:
  9585 ;;		On entry : 0/0
  9586 ;;		On exit  : 0/0
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9589 ;;      Params:         2       0       0       0       0       0       0       0       0
  9590 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9591 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9592 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9593 ;;Total ram usage:        7 bytes
  9594 ;; Hardware stack levels used:    1
  9595 ;; Hardware stack levels required when called:    1
  9596 ;; This function calls:
  9597 ;;		___awdiv
  9598 ;;		_glcd_ReadByte
  9599 ;;		_glcd_WriteByte
  9600 ;; This function is called by:
  9601 ;;		_display_grid
  9602 ;;		_update_display_shapes
  9603 ;;		_glcd_Rect
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           
  9607                           	psect	text18
  9608  004160                     __ptext18:
  9609                           	opt stack 0
  9610  004160                     _glcd_PlotPixel:
  9611                           	opt stack 28
  9612                           
  9613                           ;incstack = 0
  9614                           ;glcd_PlotPixel@xpos stored from wreg
  9615  004160  6E0F               	movwf	glcd_PlotPixel@xpos,c
  9616                           
  9617                           ;glcd.c: 472: unsigned char data;
  9618                           ;glcd.c: 473: unsigned char side = 0;
  9619  004162  0E00               	movlw	0
  9620  004164  6E11               	movwf	glcd_PlotPixel@side,c
  9621                           
  9622                           ;glcd.c: 475: if(xpos > 63)
  9623  004166  0E3F               	movlw	63
  9624  004168  640F               	cpfsgt	glcd_PlotPixel@xpos,c
  9625  00416A  D004               	goto	l428
  9626                           
  9627                           ;glcd.c: 476: {
  9628                           ;glcd.c: 477: xpos -= 64;
  9629  00416C  0E40               	movlw	64
  9630  00416E  5E0F               	subwf	glcd_PlotPixel@xpos,f,c
  9631                           
  9632                           ;glcd.c: 478: side = 1;
  9633  004170  0E01               	movlw	1
  9634  004172  6E11               	movwf	glcd_PlotPixel@side,c
  9635  004174                     l428:
  9636                           
  9637                           ;glcd.c: 479: }
  9638                           ;glcd.c: 480: LATBbits.LATB2=0;
  9639  004174  948A               	bcf	3978,2,c	;volatile
  9640                           
  9641                           ;glcd.c: 482: xpos &=0b01111111;
  9642  004176  9E0F               	bcf	glcd_PlotPixel@xpos,7,c
  9643                           
  9644                           ;glcd.c: 483: xpos |=0b01000000;
  9645  004178  8C0F               	bsf	glcd_PlotPixel@xpos,6,c
  9646                           
  9647                           ;glcd.c: 484: glcd_WriteByte(side, (xpos));
  9648  00417A  C00F  F009         	movff	glcd_PlotPixel@xpos,glcd_WriteByte@data
  9649  00417E  5011               	movf	glcd_PlotPixel@side,w,c
  9650  004180  ECBA  F01D         	call	_glcd_WriteByte
  9651                           
  9652                           ;glcd.c: 485: glcd_WriteByte(side, (((ypos/8)) & 0xBF) | 0xB8);
  9653  004184  C00B  F001         	movff	glcd_PlotPixel@ypos,___awdiv@dividend
  9654  004188  6A02               	clrf	___awdiv@dividend+1,c
  9655  00418A  0E00               	movlw	0
  9656  00418C  6E04               	movwf	___awdiv@divisor+1,c
  9657  00418E  0E08               	movlw	8
  9658  004190  6E03               	movwf	___awdiv@divisor,c
  9659  004192  EC2B  F020         	call	___awdiv	;wreg free
  9660  004196  5001               	movf	?___awdiv,w,c
  9661  004198  0BBF               	andlw	191
  9662  00419A  09B8               	iorlw	184
  9663  00419C  6E09               	movwf	glcd_WriteByte@data,c
  9664  00419E  5011               	movf	glcd_PlotPixel@side,w,c
  9665  0041A0  ECBA  F01D         	call	_glcd_WriteByte
  9666                           
  9667                           ;glcd.c: 487: LATBbits.LATB2=1;
  9668  0041A4  848A               	bsf	3978,2,c	;volatile
  9669                           
  9670                           ;glcd.c: 489: glcd_ReadByte(side);
  9671  0041A6  5011               	movf	glcd_PlotPixel@side,w,c
  9672  0041A8  ECD5  F01D         	call	_glcd_ReadByte
  9673                           
  9674                           ;glcd.c: 490: data = glcd_ReadByte(side);
  9675  0041AC  5011               	movf	glcd_PlotPixel@side,w,c
  9676  0041AE  ECD5  F01D         	call	_glcd_ReadByte
  9677  0041B2  6E10               	movwf	glcd_PlotPixel@data,c
  9678                           
  9679                           ;glcd.c: 492: LATBbits.LATB2=0;
  9680  0041B4  948A               	bcf	3978,2,c	;volatile
  9681                           
  9682                           ;glcd.c: 494: glcd_WriteByte(side, xpos);
  9683  0041B6  C00F  F009         	movff	glcd_PlotPixel@xpos,glcd_WriteByte@data
  9684  0041BA  5011               	movf	glcd_PlotPixel@side,w,c
  9685  0041BC  ECBA  F01D         	call	_glcd_WriteByte
  9686                           
  9687                           ;glcd.c: 496: if(color)
  9688  0041C0  500C               	movf	glcd_PlotPixel@color,w,c
  9689  0041C2  B4D8               	btfsc	status,2,c
  9690  0041C4  D00F               	goto	l429
  9691                           
  9692                           ;glcd.c: 497: data=(data)|(1<<(ypos%8));
  9693  0041C6  C00B  F00D         	movff	glcd_PlotPixel@ypos,??_glcd_PlotPixel
  9694  0041CA  0E07               	movlw	7
  9695  0041CC  160D               	andwf	??_glcd_PlotPixel,f,c
  9696  0041CE  0E01               	movlw	1
  9697  0041D0  6E0E               	movwf	(??_glcd_PlotPixel+1)& (0+255),c
  9698  0041D2  2A0D               	incf	??_glcd_PlotPixel,f,c
  9699  0041D4  D002               	goto	u2754
  9700  0041D6                     u2755:
  9701  0041D6  90D8               	bcf	status,0,c
  9702  0041D8  360E               	rlcf	??_glcd_PlotPixel+1,f,c
  9703  0041DA                     u2754:
  9704  0041DA  2E0D               	decfsz	??_glcd_PlotPixel,f,c
  9705  0041DC  D7FC               	goto	u2755
  9706  0041DE  500E               	movf	??_glcd_PlotPixel+1,w,c
  9707  0041E0  1010               	iorwf	glcd_PlotPixel@data,w,c
  9708  0041E2  D00F               	goto	L33
  9709  0041E4                     l429:
  9710                           
  9711                           ;glcd.c: 498: else
  9712                           ;glcd.c: 499: data =(data)&(~(1<<(ypos%8)));
  9713  0041E4  C00B  F00D         	movff	glcd_PlotPixel@ypos,??_glcd_PlotPixel
  9714  0041E8  0E07               	movlw	7
  9715  0041EA  160D               	andwf	??_glcd_PlotPixel,f,c
  9716  0041EC  0E01               	movlw	1
  9717  0041EE  6E0E               	movwf	(??_glcd_PlotPixel+1)& (0+255),c
  9718  0041F0  2A0D               	incf	??_glcd_PlotPixel,f,c
  9719  0041F2  D002               	goto	u2764
  9720  0041F4                     u2765:
  9721  0041F4  90D8               	bcf	status,0,c
  9722  0041F6  360E               	rlcf	??_glcd_PlotPixel+1,f,c
  9723  0041F8                     u2764:
  9724  0041F8  2E0D               	decfsz	??_glcd_PlotPixel,f,c
  9725  0041FA  D7FC               	goto	u2765
  9726  0041FC  500E               	movf	??_glcd_PlotPixel+1,w,c
  9727  0041FE  0AFF               	xorlw	255
  9728  004200  1410               	andwf	glcd_PlotPixel@data,w,c
  9729  004202                     L33:
  9730  004202  6E10               	movwf	glcd_PlotPixel@data,c
  9731                           
  9732                           ;glcd.c: 501: LATBbits.LATB2=1;
  9733  004204  848A               	bsf	3978,2,c	;volatile
  9734                           
  9735                           ;glcd.c: 503: glcd_WriteByte(side, data);
  9736  004206  C010  F009         	movff	glcd_PlotPixel@data,glcd_WriteByte@data
  9737  00420A  5011               	movf	glcd_PlotPixel@side,w,c
  9738  00420C  ECBA  F01D         	call	_glcd_WriteByte
  9739  004210  0012               	return		;funcret
  9740  004212                     __end_of_glcd_PlotPixel:
  9741                           	opt stack 0
  9742                           tblptru	equ	0xFF8
  9743                           tblptrh	equ	0xFF7
  9744                           tblptrl	equ	0xFF6
  9745                           tablat	equ	0xFF5
  9746                           prodh	equ	0xFF4
  9747                           prodl	equ	0xFF3
  9748                           intcon	equ	0xFF2
  9749                           postinc0	equ	0xFEE
  9750                           wreg	equ	0xFE8
  9751                           indf1	equ	0xFE7
  9752                           postinc1	equ	0xFE6
  9753                           postdec1	equ	0xFE5
  9754                           fsr1h	equ	0xFE2
  9755                           fsr1l	equ	0xFE1
  9756                           indf2	equ	0xFDF
  9757                           postinc2	equ	0xFDE
  9758                           fsr2h	equ	0xFDA
  9759                           fsr2l	equ	0xFD9
  9760                           status	equ	0xFD8
  9761                           
  9762 ;; *************** function _glcd_ReadByte *****************
  9763 ;; Defined at:
  9764 ;;		line 432 in file "glcd_library/glcd.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;  side            1    wreg     unsigned char 
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;  side            1    0[COMRAM] unsigned char 
  9769 ;;  data            1    1[COMRAM] unsigned char 
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  1    wreg      unsigned char 
  9772 ;; Registers used:
  9773 ;;		wreg, status,2, cstack
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9779 ;;      Params:         0       0       0       0       0       0       0       0       0
  9780 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9781 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9782 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9783 ;;Total ram usage:        2 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; This function calls:
  9786 ;;		Nothing
  9787 ;; This function is called by:
  9788 ;;		_glcd_PlotPixel
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           	psect	text19
  9793  003BAA                     __ptext19:
  9794                           	opt stack 0
  9795  003BAA                     _glcd_ReadByte:
  9796                           	opt stack 28
  9797                           
  9798                           ;incstack = 0
  9799                           ;glcd_ReadByte@side stored from wreg
  9800  003BAA  6E01               	movwf	glcd_ReadByte@side,c
  9801                           
  9802                           ;glcd.c: 434: unsigned char data;
  9803                           ;glcd.c: 436: if(side)
  9804  003BAC  5001               	movf	glcd_ReadByte@side,w,c
  9805  003BAE  B4D8               	btfsc	status,2,c
  9806  003BB0  D003               	goto	l423
  9807                           
  9808                           ;glcd.c: 437: {
  9809                           ;glcd.c: 438: LATBbits.LATB0 = 1;
  9810  003BB2  808A               	bsf	3978,0,c	;volatile
  9811                           
  9812                           ;glcd.c: 439: LATBbits.LATB1 = 0;
  9813  003BB4  928A               	bcf	3978,1,c	;volatile
  9814                           
  9815                           ;glcd.c: 440: }
  9816  003BB6  D002               	goto	l424
  9817  003BB8                     l423:
  9818                           
  9819                           ;glcd.c: 441: else
  9820                           ;glcd.c: 442: {
  9821                           ;glcd.c: 443: LATBbits.LATB1 = 0;
  9822  003BB8  928A               	bcf	3978,1,c	;volatile
  9823                           
  9824                           ;glcd.c: 444: LATBbits.LATB1 = 1;
  9825  003BBA  828A               	bsf	3978,1,c	;volatile
  9826  003BBC                     l424:
  9827                           
  9828                           ;glcd.c: 445: }
  9829                           ;glcd.c: 447: TRISD = 0xFF;
  9830  003BBC  6895               	setf	3989,c	;volatile
  9831                           
  9832                           ;glcd.c: 448: LATBbits.LATB3 = 1;
  9833  003BBE  868A               	bsf	3978,3,c	;volatile
  9834                           
  9835                           ;glcd.c: 452: LATBbits.LATB4 = 1;
  9836  003BC0  888A               	bsf	3978,4,c	;volatile
  9837                           
  9838                           ;glcd.c: 454: _delay((unsigned long)((1)*(100000/4000.0)));
  9839  003BC2  0E08               	movlw	8
  9840  003BC4                     u5307:
  9841  003BC4  2EE8               	decfsz	wreg,f,c
  9842  003BC6  D7FE               	bra	u5307
  9843  003BC8  F000               	nop	
  9844                           
  9845                           ;glcd.c: 456: data = PORTD;
  9846  003BCA  CF83 F002          	movff	3971,glcd_ReadByte@data	;volatile
  9847                           
  9848                           ;glcd.c: 457: LATBbits.LATB4 = 0;
  9849  003BCE  988A               	bcf	3978,4,c	;volatile
  9850                           
  9851                           ;glcd.c: 459: _delay((unsigned long)((1)*(100000/4000.0)));
  9852  003BD0  0E08               	movlw	8
  9853  003BD2                     u5317:
  9854  003BD2  2EE8               	decfsz	wreg,f,c
  9855  003BD4  D7FE               	bra	u5317
  9856  003BD6  F000               	nop	
  9857                           
  9858                           ;glcd.c: 460: LATBbits.LATB0 = 0;
  9859  003BD8  908A               	bcf	3978,0,c	;volatile
  9860                           
  9861                           ;glcd.c: 461: LATBbits.LATB1 = 0;
  9862  003BDA  928A               	bcf	3978,1,c	;volatile
  9863                           
  9864                           ;glcd.c: 463: return data;
  9865  003BDC  5002               	movf	glcd_ReadByte@data,w,c
  9866  003BDE  0012               	return	
  9867  003BE0                     __end_of_glcd_ReadByte:
  9868                           	opt stack 0
  9869                           tblptru	equ	0xFF8
  9870                           tblptrh	equ	0xFF7
  9871                           tblptrl	equ	0xFF6
  9872                           tablat	equ	0xFF5
  9873                           prodh	equ	0xFF4
  9874                           prodl	equ	0xFF3
  9875                           intcon	equ	0xFF2
  9876                           postinc0	equ	0xFEE
  9877                           wreg	equ	0xFE8
  9878                           indf1	equ	0xFE7
  9879                           postinc1	equ	0xFE6
  9880                           postdec1	equ	0xFE5
  9881                           fsr1h	equ	0xFE2
  9882                           fsr1l	equ	0xFE1
  9883                           indf2	equ	0xFDF
  9884                           postinc2	equ	0xFDE
  9885                           fsr2h	equ	0xFDA
  9886                           fsr2l	equ	0xFD9
  9887                           status	equ	0xFD8
  9888                           
  9889 ;; *************** function ___awdiv *****************
  9890 ;; Defined at:
  9891 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  9892 ;; Parameters:    Size  Location     Type
  9893 ;;  dividend        2    0[COMRAM] int 
  9894 ;;  divisor         2    2[COMRAM] int 
  9895 ;; Auto vars:     Size  Location     Type
  9896 ;;  quotient        2    6[COMRAM] int 
  9897 ;;  sign            1    5[COMRAM] unsigned char 
  9898 ;;  counter         1    4[COMRAM] unsigned char 
  9899 ;; Return value:  Size  Location     Type
  9900 ;;                  2    0[COMRAM] int 
  9901 ;; Registers used:
  9902 ;;		wreg, status,2, status,0
  9903 ;; Tracked objects:
  9904 ;;		On entry : 0/0
  9905 ;;		On exit  : 0/0
  9906 ;;		Unchanged: 0/0
  9907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9908 ;;      Params:         4       0       0       0       0       0       0       0       0
  9909 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9911 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9912 ;;Total ram usage:        8 bytes
  9913 ;; Hardware stack levels used:    1
  9914 ;; This function calls:
  9915 ;;		Nothing
  9916 ;; This function is called by:
  9917 ;;		_glcd_PlotPixel
  9918 ;; This function uses a non-reentrant model
  9919 ;;
  9920                           
  9921                           	psect	text20
  9922  004056                     __ptext20:
  9923                           	opt stack 0
  9924  004056                     ___awdiv:
  9925                           	opt stack 28
  9926                           
  9927                           ;incstack = 0
  9928  004056  0E00               	movlw	0
  9929  004058  6E06               	movwf	___awdiv@sign,c
  9930  00405A  AE04               	btfss	___awdiv@divisor+1,7,c
  9931  00405C  D006               	goto	l743
  9932  00405E  6C03               	negf	___awdiv@divisor,c
  9933  004060  1E04               	comf	___awdiv@divisor+1,f,c
  9934  004062  B0D8               	btfsc	status,0,c
  9935  004064  2A04               	incf	___awdiv@divisor+1,f,c
  9936  004066  0E01               	movlw	1
  9937  004068  6E06               	movwf	___awdiv@sign,c
  9938  00406A                     l743:
  9939  00406A  AE02               	btfss	___awdiv@dividend+1,7,c
  9940  00406C  D006               	goto	l744
  9941  00406E  6C01               	negf	___awdiv@dividend,c
  9942  004070  1E02               	comf	___awdiv@dividend+1,f,c
  9943  004072  B0D8               	btfsc	status,0,c
  9944  004074  2A02               	incf	___awdiv@dividend+1,f,c
  9945  004076  0E01               	movlw	1
  9946  004078  1A06               	xorwf	___awdiv@sign,f,c
  9947  00407A                     l744:
  9948  00407A  0E00               	movlw	0
  9949  00407C  6E08               	movwf	___awdiv@quotient+1,c
  9950  00407E  0E00               	movlw	0
  9951  004080  6E07               	movwf	___awdiv@quotient,c
  9952  004082  5003               	movf	___awdiv@divisor,w,c
  9953  004084  1004               	iorwf	___awdiv@divisor+1,w,c
  9954  004086  B4D8               	btfsc	status,2,c
  9955  004088  D01C               	goto	l751
  9956  00408A  0E01               	movlw	1
  9957  00408C  6E05               	movwf	___awdiv@counter,c
  9958  00408E  D004               	goto	l746
  9959  004090  90D8               	bcf	status,0,c
  9960  004092  3603               	rlcf	___awdiv@divisor,f,c
  9961  004094  3604               	rlcf	___awdiv@divisor+1,f,c
  9962  004096  2A05               	incf	___awdiv@counter,f,c
  9963  004098                     l746:
  9964  004098  AE04               	btfss	___awdiv@divisor+1,7,c
  9965  00409A  D7FA               	goto	l747
  9966  00409C                     u2700:
  9967  00409C  90D8               	bcf	status,0,c
  9968  00409E  3607               	rlcf	___awdiv@quotient,f,c
  9969  0040A0  3608               	rlcf	___awdiv@quotient+1,f,c
  9970  0040A2  5003               	movf	___awdiv@divisor,w,c
  9971  0040A4  5C01               	subwf	___awdiv@dividend,w,c
  9972  0040A6  5004               	movf	___awdiv@divisor+1,w,c
  9973  0040A8  5802               	subwfb	___awdiv@dividend+1,w,c
  9974  0040AA  A0D8               	btfss	status,0,c
  9975  0040AC  D005               	goto	l750
  9976  0040AE  5003               	movf	___awdiv@divisor,w,c
  9977  0040B0  5E01               	subwf	___awdiv@dividend,f,c
  9978  0040B2  5004               	movf	___awdiv@divisor+1,w,c
  9979  0040B4  5A02               	subwfb	___awdiv@dividend+1,f,c
  9980  0040B6  8007               	bsf	___awdiv@quotient,0,c
  9981  0040B8                     l750:
  9982  0040B8  90D8               	bcf	status,0,c
  9983  0040BA  3204               	rrcf	___awdiv@divisor+1,f,c
  9984  0040BC  3203               	rrcf	___awdiv@divisor,f,c
  9985  0040BE  2E05               	decfsz	___awdiv@counter,f,c
  9986  0040C0  D7ED               	goto	u2700
  9987  0040C2                     l751:
  9988  0040C2  5006               	movf	___awdiv@sign,w,c
  9989  0040C4  B4D8               	btfsc	status,2,c
  9990  0040C6  D004               	goto	l752
  9991  0040C8  6C07               	negf	___awdiv@quotient,c
  9992  0040CA  1E08               	comf	___awdiv@quotient+1,f,c
  9993  0040CC  B0D8               	btfsc	status,0,c
  9994  0040CE  2A08               	incf	___awdiv@quotient+1,f,c
  9995  0040D0                     l752:
  9996  0040D0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9997  0040D4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9998  0040D8  0012               	return	
  9999  0040DA                     __end_of___awdiv:
 10000                           	opt stack 0
 10001                           tblptru	equ	0xFF8
 10002                           tblptrh	equ	0xFF7
 10003                           tblptrl	equ	0xFF6
 10004                           tablat	equ	0xFF5
 10005                           prodh	equ	0xFF4
 10006                           prodl	equ	0xFF3
 10007                           intcon	equ	0xFF2
 10008                           postinc0	equ	0xFEE
 10009                           wreg	equ	0xFE8
 10010                           indf1	equ	0xFE7
 10011                           postinc1	equ	0xFE6
 10012                           postdec1	equ	0xFE5
 10013                           fsr1h	equ	0xFE2
 10014                           fsr1l	equ	0xFE1
 10015                           indf2	equ	0xFDF
 10016                           postinc2	equ	0xFDE
 10017                           fsr2h	equ	0xFDA
 10018                           fsr2l	equ	0xFD9
 10019                           status	equ	0xFD8
 10020                           
 10021 ;; *************** function _displayStartScore *****************
 10022 ;; Defined at:
 10023 ;;		line 945 in file "main.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;  bestScore       1    wreg     unsigned char 
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;  bestScore       1   46[COMRAM] unsigned char 
 10028 ;;  string         20   26[COMRAM] unsigned char [20]
 10029 ;; Return value:  Size  Location     Type
 10030 ;;                  1    wreg      void 
 10031 ;; Registers used:
 10032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10033 ;; Tracked objects:
 10034 ;;		On entry : 0/0
 10035 ;;		On exit  : 0/0
 10036 ;;		Unchanged: 0/0
 10037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10038 ;;      Params:         0       0       0       0       0       0       0       0       0
 10039 ;;      Locals:        21       0       0       0       0       0       0       0       0
 10040 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10041 ;;      Totals:        21       0       0       0       0       0       0       0       0
 10042 ;;Total ram usage:       21 bytes
 10043 ;; Hardware stack levels used:    1
 10044 ;; Hardware stack levels required when called:    3
 10045 ;; This function calls:
 10046 ;;		_delayHomeScreen
 10047 ;;		_glcd_FillScreen
 10048 ;;		_glcd_WriteString
 10049 ;;		_sprintf
 10050 ;; This function is called by:
 10051 ;;		_main
 10052 ;; This function uses a non-reentrant model
 10053 ;;
 10054                           
 10055                           	psect	text21
 10056  003DB2                     __ptext21:
 10057                           	opt stack 0
 10058  003DB2                     _displayStartScore:
 10059                           	opt stack 27
 10060                           
 10061                           ;incstack = 0
 10062                           ;displayStartScore@bestScore stored from wreg
 10063  003DB2  6E2F               	movwf	displayStartScore@bestScore,c
 10064                           
 10065                           ;main.c: 947: char string[20]="";
 10066  003DB4  EE20  F03E         	lfsr	2,displayStartScore@F4364
 10067  003DB8  EE10  F01B         	lfsr	1,displayStartScore@string
 10068  003DBC  0E13               	movlw	19
 10069  003DBE                     u4881:
 10070  003DBE  CFDB FFE3          	movff	plusw2,plusw1
 10071  003DC2  06E8               	decf	wreg,f,c
 10072  003DC4  E2FC               	bc	u4881
 10073                           
 10074                           ;main.c: 948: sprintf(string,"%d",bestScore);
 10075  003DC6  0E1B               	movlw	low displayStartScore@string
 10076  003DC8  6E0D               	movwf	sprintf@sp,c
 10077  003DCA  0E00               	movlw	high displayStartScore@string
 10078  003DCC  6E0E               	movwf	sprintf@sp+1,c
 10079  003DCE  0EFB               	movlw	low STR_1
 10080  003DD0  6E0F               	movwf	sprintf@f,c
 10081  003DD2  0E7F               	movlw	high STR_1
 10082  003DD4  6E10               	movwf	sprintf@f+1,c
 10083  003DD6  C02F  F011         	movff	displayStartScore@bestScore,?_sprintf+4
 10084  003DDA  6A12               	clrf	?_sprintf+5,c
 10085  003DDC  EC40  F022         	call	_sprintf	;wreg free
 10086                           
 10087                           ;main.c: 949: glcd_WriteString("best score : ",64,32);
 10088  003DE0  0EED               	movlw	low STR_2
 10089  003DE2  6E14               	movwf	glcd_WriteString@str,c
 10090  003DE4  0E7F               	movlw	high STR_2
 10091  003DE6  6E15               	movwf	glcd_WriteString@str+1,c
 10092  003DE8  0E40               	movlw	64
 10093  003DEA  6E16               	movwf	glcd_WriteString@font,c
 10094  003DEC  0E20               	movlw	32
 10095  003DEE  6E17               	movwf	glcd_WriteString@color,c
 10096  003DF0  EC6D  F020         	call	_glcd_WriteString	;wreg free
 10097                           
 10098                           ;main.c: 950: delayHomeScreen();
 10099  003DF4  ECA0  F01D         	call	_delayHomeScreen	;wreg free
 10100                           
 10101                           ;main.c: 951: glcd_FillScreen(0);
 10102  003DF8  0E00               	movlw	0
 10103  003DFA  EC45  F01F         	call	_glcd_FillScreen
 10104                           
 10105                           ;main.c: 952: glcd_WriteString(string,64,32);
 10106  003DFE  0E1B               	movlw	low displayStartScore@string
 10107  003E00  6E14               	movwf	glcd_WriteString@str,c
 10108  003E02  0E00               	movlw	high displayStartScore@string
 10109  003E04  6E15               	movwf	glcd_WriteString@str+1,c
 10110  003E06  0E40               	movlw	64
 10111  003E08  6E16               	movwf	glcd_WriteString@font,c
 10112  003E0A  0E20               	movlw	32
 10113  003E0C  6E17               	movwf	glcd_WriteString@color,c
 10114  003E0E  EC6D  F020         	call	_glcd_WriteString	;wreg free
 10115                           
 10116                           ;main.c: 953: delayHomeScreen();
 10117  003E12  ECA0  F01D         	call	_delayHomeScreen	;wreg free
 10118                           
 10119                           ;main.c: 954: glcd_FillScreen(0);
 10120  003E16  0E00               	movlw	0
 10121  003E18  EC45  F01F         	call	_glcd_FillScreen
 10122  003E1C  0012               	return		;funcret
 10123  003E1E                     __end_of_displayStartScore:
 10124                           	opt stack 0
 10125                           tblptru	equ	0xFF8
 10126                           tblptrh	equ	0xFF7
 10127                           tblptrl	equ	0xFF6
 10128                           tablat	equ	0xFF5
 10129                           prodh	equ	0xFF4
 10130                           prodl	equ	0xFF3
 10131                           intcon	equ	0xFF2
 10132                           postinc0	equ	0xFEE
 10133                           wreg	equ	0xFE8
 10134                           indf1	equ	0xFE7
 10135                           postinc1	equ	0xFE6
 10136                           postdec1	equ	0xFE5
 10137                           plusw1	equ	0xFE3
 10138                           fsr1h	equ	0xFE2
 10139                           fsr1l	equ	0xFE1
 10140                           indf2	equ	0xFDF
 10141                           postinc2	equ	0xFDE
 10142                           plusw2	equ	0xFDB
 10143                           fsr2h	equ	0xFDA
 10144                           fsr2l	equ	0xFD9
 10145                           status	equ	0xFD8
 10146                           
 10147 ;; *************** function _sprintf *****************
 10148 ;; Defined at:
 10149 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
 10150 ;; Parameters:    Size  Location     Type
 10151 ;;  sp              2   12[COMRAM] PTR unsigned char 
 10152 ;;		 -> displayStartScore@string(20), 
 10153 ;;  f               2   14[COMRAM] PTR const unsigned char 
 10154 ;;		 -> STR_1(3), 
 10155 ;; Auto vars:     Size  Location     Type
 10156 ;;  tmpval          4    0        struct .
 10157 ;;  cp              3    0        PTR const unsigned char 
 10158 ;;  val             2   23[COMRAM] unsigned int 
 10159 ;;  ap              2   19[COMRAM] PTR void [1]
 10160 ;;		 -> ?_sprintf(2), 
 10161 ;;  len             2    0        unsigned int 
 10162 ;;  c               1   25[COMRAM] char 
 10163 ;;  prec            1   22[COMRAM] char 
 10164 ;;  flag            1   21[COMRAM] unsigned char 
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  2   12[COMRAM] int 
 10167 ;; Registers used:
 10168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10174 ;;      Params:         6       0       0       0       0       0       0       0       0
 10175 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10176 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10177 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10178 ;;Total ram usage:       14 bytes
 10179 ;; Hardware stack levels used:    1
 10180 ;; Hardware stack levels required when called:    1
 10181 ;; This function calls:
 10182 ;;		___lwdiv
 10183 ;;		___lwmod
 10184 ;; This function is called by:
 10185 ;;		_displayStartScore
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           	psect	text22
 10190  004480                     __ptext22:
 10191                           	opt stack 0
 10192  004480                     _sprintf:
 10193                           	opt stack 28
 10194                           
 10195                           ;doprnt.c: 494: va_list ap;
 10196                           ;doprnt.c: 499: signed char c;
 10197                           ;doprnt.c: 506: signed char prec;
 10198                           ;doprnt.c: 508: unsigned char flag;
 10199                           ;doprnt.c: 523: union {
 10200                           ;doprnt.c: 524: unsigned long vd;
 10201                           ;doprnt.c: 525: double integ;
 10202                           ;doprnt.c: 526: } tmpval;
 10203                           ;doprnt.c: 528: unsigned int val;
 10204                           ;doprnt.c: 529: unsigned len;
 10205                           ;doprnt.c: 530: const char * cp;
 10206                           ;doprnt.c: 533: *ap = __va_start();
 10207                           
 10208                           ;incstack = 0
 10209  004480  0E11               	movlw	low (?_sprintf+4)
 10210  004482  6E14               	movwf	sprintf@ap,c
 10211  004484  0E00               	movlw	high (?_sprintf+4)
 10212  004486  6E15               	movwf	sprintf@ap+1,c
 10213                           
 10214                           ;doprnt.c: 536: while(c = *f++) {
 10215  004488  D08C               	goto	u3310
 10216  00448A                     
 10217                           ;doprnt.c: 538: if(c != '%')
 10218  00448A  0E25               	movlw	37
 10219  00448C  181A               	xorwf	sprintf@c,w,c
 10220  00448E  B4D8               	btfsc	status,2,c
 10221  004490  D009               	goto	l558
 10222                           
 10223                           ;doprnt.c: 540: {
 10224                           ;doprnt.c: 541: ((*sp++ = (c)));
 10225  004492  C00D  FFD9         	movff	sprintf@sp,fsr2l
 10226  004496  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
 10227  00449A  C01A  FFDF         	movff	sprintf@c,indf2
 10228  00449E  4A0D               	infsnz	sprintf@sp,f,c
 10229  0044A0  2A0E               	incf	sprintf@sp+1,f,c
 10230                           
 10231                           ;doprnt.c: 542: continue;
 10232  0044A2  D07F               	goto	u3310
 10233  0044A4                     l558:
 10234                           
 10235                           ;doprnt.c: 543: }
 10236                           ;doprnt.c: 548: flag = 0;
 10237  0044A4  0E00               	movlw	0
 10238  0044A6  6E16               	movwf	sprintf@flag,c
 10239                           
 10240                           ;doprnt.c: 822: }
 10241                           
 10242                           ;doprnt.c: 813: continue;
 10243                           
 10244                           ;doprnt.c: 802: default:
 10245                           
 10246                           ;doprnt.c: 698: case 'i':
 10247                           ;doprnt.c: 699: break;
 10248                           
 10249                           ;doprnt.c: 697: case 'd':
 10250                           
 10251                           ;doprnt.c: 638: goto alldone;
 10252                           
 10253                           ;doprnt.c: 637: case 0:
 10254                           
 10255                           ;doprnt.c: 635: switch(c = *f++) {
 10256  0044A8  C00F  FFF6         	movff	sprintf@f,tblptrl
 10257  0044AC  C010  FFF7         	movff	sprintf@f+1,tblptrh
 10258  0044B0  4A0F               	infsnz	sprintf@f,f,c
 10259  0044B2  2A10               	incf	sprintf@f+1,f,c
 10260  0044B4                     	if	0	;tblptru may be non-zero
 10261  0044B4                     	endif
 10262  0044B4                     	if	0	;tblptru may be non-zero
 10263  0044B4                     	endif
 10264  0044B4  0008               	tblrd		*
 10265  0044B6  CFF5 F01A          	movff	tablat,sprintf@c
 10266  0044BA  501A               	movf	sprintf@c,w,c
 10267                           
 10268                           ; Switch size 1, requested type "space"
 10269                           ; Number of cases is 3, Range of values is 0 to 105
 10270                           ; switch strategies available:
 10271                           ; Name         Instructions Cycles
 10272                           ; simple_byte           10     6 (average)
 10273                           ;	Chosen strategy is simple_byte
 10274  0044BC  0A00               	xorlw	0	; case 0
 10275  0044BE  B4D8               	btfsc	status,2,c
 10276  0044C0  D07C               	goto	u3320
 10277  0044C2  0A64               	xorlw	100	; case 100
 10278  0044C4  B4D8               	btfsc	status,2,c
 10279  0044C6  D003               	goto	l564
 10280  0044C8  0A0D               	xorlw	13	; case 105
 10281  0044CA  A4D8               	btfss	status,2,c
 10282  0044CC  D06A               	goto	u3310
 10283  0044CE                     l564:
 10284                           
 10285                           ;doprnt.c: 1253: {
 10286                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 10287  0044CE  C014  FFD9         	movff	sprintf@ap,fsr2l
 10288  0044D2  C015  FFDA         	movff	sprintf@ap+1,fsr2h
 10289  0044D6  CFDE F018          	movff	postinc2,sprintf@val
 10290  0044DA  CFDD F019          	movff	postdec2,sprintf@val+1
 10291  0044DE  0E02               	movlw	2
 10292  0044E0  2614               	addwf	sprintf@ap,f,c
 10293  0044E2  0E00               	movlw	0
 10294  0044E4  2215               	addwfc	sprintf@ap+1,f,c
 10295                           
 10296                           ;doprnt.c: 1261: if((int)val < 0) {
 10297  0044E6  AE19               	btfss	sprintf@val+1,7,c
 10298  0044E8  D006               	goto	l566
 10299                           
 10300                           ;doprnt.c: 1262: flag |= 0x03;
 10301  0044EA  0E03               	movlw	3
 10302  0044EC  1216               	iorwf	sprintf@flag,f,c
 10303                           
 10304                           ;doprnt.c: 1263: val = -val;
 10305  0044EE  6C18               	negf	sprintf@val,c
 10306  0044F0  1E19               	comf	sprintf@val+1,f,c
 10307  0044F2  B0D8               	btfsc	status,0,c
 10308  0044F4  2A19               	incf	sprintf@val+1,f,c
 10309  0044F6                     l566:
 10310                           
 10311                           ;doprnt.c: 1264: }
 10312                           ;doprnt.c: 1266: }
 10313                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10314  0044F6  0E01               	movlw	1
 10315  0044F8  6E1A               	movwf	sprintf@c,c
 10316  0044FA                     l3493:
 10317  0044FA  0E05               	movlw	5
 10318  0044FC  181A               	xorwf	sprintf@c,w,c
 10319  0044FE  B4D8               	btfsc	status,2,c
 10320  004500  D012               	goto	u3290
 10321                           
 10322                           ;doprnt.c: 1306: if(val < dpowers[c])
 10323  004502  501A               	movf	sprintf@c,w,c
 10324  004504  0D02               	mullw	2
 10325  004506  0EC8               	movlw	low _dpowers
 10326  004508  24F3               	addwf	prodl,w,c
 10327  00450A  6EF6               	movwf	tblptrl,c
 10328  00450C  0E7F               	movlw	high _dpowers
 10329  00450E  20F4               	addwfc	prodh,w,c
 10330  004510  6EF7               	movwf	tblptrh,c
 10331  004512                     	if	0	;There are less than 3 active tblptr bytes
 10332  004512                     	endif
 10333  004512  0009               	tblrd		*+
 10334  004514  50F5               	movf	tablat,w,c
 10335  004516  5C18               	subwf	sprintf@val,w,c
 10336  004518  0009               	tblrd		*+
 10337  00451A  50F5               	movf	tablat,w,c
 10338  00451C  5819               	subwfb	sprintf@val+1,w,c
 10339  00451E  A0D8               	btfss	status,0,c
 10340  004520  D002               	goto	u3290
 10341                           
 10342                           ;doprnt.c: 1307: break;
 10343  004522  2A1A               	incf	sprintf@c,f,c
 10344  004524  D7EA               	goto	l3493
 10345  004526                     u3290:
 10346                           
 10347                           ;doprnt.c: 1422: {
 10348                           ;doprnt.c: 1438: if(flag & 0x03)
 10349  004526  C016  F013         	movff	sprintf@flag,??_sprintf
 10350  00452A  0E03               	movlw	3
 10351  00452C  1613               	andwf	??_sprintf,f,c
 10352  00452E  B4D8               	btfsc	status,2,c
 10353  004530  D008               	goto	l570
 10354                           
 10355                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 10356  004532  C00D  FFD9         	movff	sprintf@sp,fsr2l
 10357  004536  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
 10358  00453A  0E2D               	movlw	45
 10359  00453C  6EDF               	movwf	indf2,c
 10360  00453E  4A0D               	infsnz	sprintf@sp,f,c
 10361  004540  2A0E               	incf	sprintf@sp+1,f,c
 10362  004542                     l570:
 10363                           
 10364                           ;doprnt.c: 1469: }
 10365                           ;doprnt.c: 1472: prec = c;
 10366  004542  C01A  F017         	movff	sprintf@c,sprintf@prec
 10367                           
 10368                           ;doprnt.c: 1474: while(prec--) {
 10369  004546  D029               	goto	l571
 10370  004548                     
 10371                           ;doprnt.c: 1478: {
 10372                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10373  004548  5017               	movf	sprintf@prec,w,c
 10374  00454A  0D02               	mullw	2
 10375  00454C  0EC8               	movlw	low _dpowers
 10376  00454E  24F3               	addwf	prodl,w,c
 10377  004550  6EF6               	movwf	tblptrl,c
 10378  004552  0E7F               	movlw	high _dpowers
 10379  004554  20F4               	addwfc	prodh,w,c
 10380  004556  6EF7               	movwf	tblptrh,c
 10381  004558                     	if	0	;There are less than 3 active tblptr bytes
 10382  004558                     	endif
 10383  004558  0009               	tblrd		*+
 10384  00455A  CFF5 F003          	movff	tablat,___lwdiv@divisor
 10385  00455E  000A               	tblrd		*-
 10386  004560  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
 10387  004564  C018  F001         	movff	sprintf@val,___lwdiv@dividend
 10388  004568  C019  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
 10389  00456C  EC85  F01E         	call	___lwdiv	;wreg free
 10390  004570  C001  F008         	movff	?___lwdiv,___lwmod@dividend
 10391  004574  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
 10392  004578  0E00               	movlw	0
 10393  00457A  6E0B               	movwf	___lwmod@divisor+1,c
 10394  00457C  0E0A               	movlw	10
 10395  00457E  6E0A               	movwf	___lwmod@divisor,c
 10396  004580  ECF0  F01D         	call	___lwmod	;wreg free
 10397  004584  5008               	movf	?___lwmod,w,c
 10398  004586  0F30               	addlw	48
 10399  004588  6E1A               	movwf	sprintf@c,c
 10400                           
 10401                           ;doprnt.c: 1523: }
 10402                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10403  00458A  C00D  FFD9         	movff	sprintf@sp,fsr2l
 10404  00458E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
 10405  004592  C01A  FFDF         	movff	sprintf@c,indf2
 10406  004596  4A0D               	infsnz	sprintf@sp,f,c
 10407  004598  2A0E               	incf	sprintf@sp+1,f,c
 10408  00459A                     l571:
 10409  00459A  0617               	decf	sprintf@prec,f,c
 10410  00459C  2817               	incf	sprintf@prec,w,c
 10411  00459E  A4D8               	btfss	status,2,c
 10412  0045A0  D7D3               	goto	l572
 10413  0045A2                     u3310:
 10414  0045A2  C00F  FFF6         	movff	sprintf@f,tblptrl
 10415  0045A6  C010  FFF7         	movff	sprintf@f+1,tblptrh
 10416  0045AA  4A0F               	infsnz	sprintf@f,f,c
 10417  0045AC  2A10               	incf	sprintf@f+1,f,c
 10418  0045AE                     	if	0	;tblptru may be non-zero
 10419  0045AE                     	endif
 10420  0045AE                     	if	0	;tblptru may be non-zero
 10421  0045AE                     	endif
 10422  0045AE  0008               	tblrd		*
 10423  0045B0  CFF5 F01A          	movff	tablat,sprintf@c
 10424  0045B4  501A               	movf	sprintf@c,w,c
 10425  0045B6  A4D8               	btfss	status,2,c
 10426  0045B8  D768               	goto	l557
 10427  0045BA                     u3320:
 10428                           
 10429                           ;doprnt.c: 1538: *sp = 0;
 10430                           
 10431                           ;doprnt.c: 1525: }
 10432                           ;doprnt.c: 1533: }
 10433                           ;doprnt.c: 1535: alldone:
 10434  0045BA  C00D  FFD9         	movff	sprintf@sp,fsr2l
 10435  0045BE  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
 10436  0045C2  0E00               	movlw	0
 10437  0045C4  6EDF               	movwf	indf2,c
 10438  0045C6  0012               	return	
 10439  0045C8                     __end_of_sprintf:
 10440                           	opt stack 0
 10441                           tblptru	equ	0xFF8
 10442                           tblptrh	equ	0xFF7
 10443                           tblptrl	equ	0xFF6
 10444                           tablat	equ	0xFF5
 10445                           prodh	equ	0xFF4
 10446                           prodl	equ	0xFF3
 10447                           intcon	equ	0xFF2
 10448                           postinc0	equ	0xFEE
 10449                           wreg	equ	0xFE8
 10450                           indf1	equ	0xFE7
 10451                           postinc1	equ	0xFE6
 10452                           postdec1	equ	0xFE5
 10453                           plusw1	equ	0xFE3
 10454                           fsr1h	equ	0xFE2
 10455                           fsr1l	equ	0xFE1
 10456                           indf2	equ	0xFDF
 10457                           postinc2	equ	0xFDE
 10458                           postdec2	equ	0xFDD
 10459                           plusw2	equ	0xFDB
 10460                           fsr2h	equ	0xFDA
 10461                           fsr2l	equ	0xFD9
 10462                           status	equ	0xFD8
 10463                           
 10464 ;; *************** function ___lwmod *****************
 10465 ;; Defined at:
 10466 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;  dividend        2    7[COMRAM] unsigned int 
 10469 ;;  divisor         2    9[COMRAM] unsigned int 
 10470 ;; Auto vars:     Size  Location     Type
 10471 ;;  counter         1   11[COMRAM] unsigned char 
 10472 ;; Return value:  Size  Location     Type
 10473 ;;                  2    7[COMRAM] unsigned int 
 10474 ;; Registers used:
 10475 ;;		wreg, status,2, status,0
 10476 ;; Tracked objects:
 10477 ;;		On entry : 0/0
 10478 ;;		On exit  : 0/0
 10479 ;;		Unchanged: 0/0
 10480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10481 ;;      Params:         4       0       0       0       0       0       0       0       0
 10482 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10483 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10484 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10485 ;;Total ram usage:        5 bytes
 10486 ;; Hardware stack levels used:    1
 10487 ;; This function calls:
 10488 ;;		Nothing
 10489 ;; This function is called by:
 10490 ;;		_sprintf
 10491 ;; This function uses a non-reentrant model
 10492 ;;
 10493                           
 10494                           	psect	text23
 10495  003BE0                     __ptext23:
 10496                           	opt stack 0
 10497  003BE0                     ___lwmod:
 10498                           	opt stack 28
 10499                           
 10500                           ;incstack = 0
 10501  003BE0  500A               	movf	___lwmod@divisor,w,c
 10502  003BE2  100B               	iorwf	___lwmod@divisor+1,w,c
 10503  003BE4  B4D8               	btfsc	status,2,c
 10504  003BE6  D018               	goto	l994
 10505  003BE8  0E01               	movlw	1
 10506  003BEA  6E0C               	movwf	___lwmod@counter,c
 10507  003BEC  D004               	goto	l989
 10508  003BEE  90D8               	bcf	status,0,c
 10509  003BF0  360A               	rlcf	___lwmod@divisor,f,c
 10510  003BF2  360B               	rlcf	___lwmod@divisor+1,f,c
 10511  003BF4  2A0C               	incf	___lwmod@counter,f,c
 10512  003BF6                     l989:
 10513  003BF6  AE0B               	btfss	___lwmod@divisor+1,7,c
 10514  003BF8  D7FA               	goto	l990
 10515  003BFA                     u3030:
 10516  003BFA  500A               	movf	___lwmod@divisor,w,c
 10517  003BFC  5C08               	subwf	___lwmod@dividend,w,c
 10518  003BFE  500B               	movf	___lwmod@divisor+1,w,c
 10519  003C00  5809               	subwfb	___lwmod@dividend+1,w,c
 10520  003C02  A0D8               	btfss	status,0,c
 10521  003C04  D004               	goto	l993
 10522  003C06  500A               	movf	___lwmod@divisor,w,c
 10523  003C08  5E08               	subwf	___lwmod@dividend,f,c
 10524  003C0A  500B               	movf	___lwmod@divisor+1,w,c
 10525  003C0C  5A09               	subwfb	___lwmod@dividend+1,f,c
 10526  003C0E                     l993:
 10527  003C0E  90D8               	bcf	status,0,c
 10528  003C10  320B               	rrcf	___lwmod@divisor+1,f,c
 10529  003C12  320A               	rrcf	___lwmod@divisor,f,c
 10530  003C14  2E0C               	decfsz	___lwmod@counter,f,c
 10531  003C16  D7F1               	goto	u3030
 10532  003C18                     l994:
 10533  003C18  C008  F008         	movff	___lwmod@dividend,?___lwmod
 10534  003C1C  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
 10535  003C20  0012               	return		;funcret
 10536  003C22                     __end_of___lwmod:
 10537                           	opt stack 0
 10538                           tblptru	equ	0xFF8
 10539                           tblptrh	equ	0xFF7
 10540                           tblptrl	equ	0xFF6
 10541                           tablat	equ	0xFF5
 10542                           prodh	equ	0xFF4
 10543                           prodl	equ	0xFF3
 10544                           intcon	equ	0xFF2
 10545                           postinc0	equ	0xFEE
 10546                           wreg	equ	0xFE8
 10547                           indf1	equ	0xFE7
 10548                           postinc1	equ	0xFE6
 10549                           postdec1	equ	0xFE5
 10550                           plusw1	equ	0xFE3
 10551                           fsr1h	equ	0xFE2
 10552                           fsr1l	equ	0xFE1
 10553                           indf2	equ	0xFDF
 10554                           postinc2	equ	0xFDE
 10555                           postdec2	equ	0xFDD
 10556                           plusw2	equ	0xFDB
 10557                           fsr2h	equ	0xFDA
 10558                           fsr2l	equ	0xFD9
 10559                           status	equ	0xFD8
 10560                           
 10561 ;; *************** function ___lwdiv *****************
 10562 ;; Defined at:
 10563 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
 10564 ;; Parameters:    Size  Location     Type
 10565 ;;  dividend        2    0[COMRAM] unsigned int 
 10566 ;;  divisor         2    2[COMRAM] unsigned int 
 10567 ;; Auto vars:     Size  Location     Type
 10568 ;;  quotient        2    4[COMRAM] unsigned int 
 10569 ;;  counter         1    6[COMRAM] unsigned char 
 10570 ;; Return value:  Size  Location     Type
 10571 ;;                  2    0[COMRAM] unsigned int 
 10572 ;; Registers used:
 10573 ;;		wreg, status,2, status,0
 10574 ;; Tracked objects:
 10575 ;;		On entry : 0/0
 10576 ;;		On exit  : 0/0
 10577 ;;		Unchanged: 0/0
 10578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10579 ;;      Params:         4       0       0       0       0       0       0       0       0
 10580 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10581 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10582 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10583 ;;Total ram usage:        7 bytes
 10584 ;; Hardware stack levels used:    1
 10585 ;; This function calls:
 10586 ;;		Nothing
 10587 ;; This function is called by:
 10588 ;;		_sprintf
 10589 ;; This function uses a non-reentrant model
 10590 ;;
 10591                           
 10592                           	psect	text24
 10593  003D0A                     __ptext24:
 10594                           	opt stack 0
 10595  003D0A                     ___lwdiv:
 10596                           	opt stack 28
 10597                           
 10598                           ;incstack = 0
 10599  003D0A  0E00               	movlw	0
 10600  003D0C  6E06               	movwf	___lwdiv@quotient+1,c
 10601  003D0E  0E00               	movlw	0
 10602  003D10  6E05               	movwf	___lwdiv@quotient,c
 10603  003D12  5003               	movf	___lwdiv@divisor,w,c
 10604  003D14  1004               	iorwf	___lwdiv@divisor+1,w,c
 10605  003D16  B4D8               	btfsc	status,2,c
 10606  003D18  D01C               	goto	l984
 10607  003D1A  0E01               	movlw	1
 10608  003D1C  6E07               	movwf	___lwdiv@counter,c
 10609  003D1E  D004               	goto	l979
 10610  003D20  90D8               	bcf	status,0,c
 10611  003D22  3603               	rlcf	___lwdiv@divisor,f,c
 10612  003D24  3604               	rlcf	___lwdiv@divisor+1,f,c
 10613  003D26  2A07               	incf	___lwdiv@counter,f,c
 10614  003D28                     l979:
 10615  003D28  AE04               	btfss	___lwdiv@divisor+1,7,c
 10616  003D2A  D7FA               	goto	l980
 10617  003D2C                     u3000:
 10618  003D2C  90D8               	bcf	status,0,c
 10619  003D2E  3605               	rlcf	___lwdiv@quotient,f,c
 10620  003D30  3606               	rlcf	___lwdiv@quotient+1,f,c
 10621  003D32  5003               	movf	___lwdiv@divisor,w,c
 10622  003D34  5C01               	subwf	___lwdiv@dividend,w,c
 10623  003D36  5004               	movf	___lwdiv@divisor+1,w,c
 10624  003D38  5802               	subwfb	___lwdiv@dividend+1,w,c
 10625  003D3A  A0D8               	btfss	status,0,c
 10626  003D3C  D005               	goto	l983
 10627  003D3E  5003               	movf	___lwdiv@divisor,w,c
 10628  003D40  5E01               	subwf	___lwdiv@dividend,f,c
 10629  003D42  5004               	movf	___lwdiv@divisor+1,w,c
 10630  003D44  5A02               	subwfb	___lwdiv@dividend+1,f,c
 10631  003D46  8005               	bsf	___lwdiv@quotient,0,c
 10632  003D48                     l983:
 10633  003D48  90D8               	bcf	status,0,c
 10634  003D4A  3204               	rrcf	___lwdiv@divisor+1,f,c
 10635  003D4C  3203               	rrcf	___lwdiv@divisor,f,c
 10636  003D4E  2E07               	decfsz	___lwdiv@counter,f,c
 10637  003D50  D7ED               	goto	u3000
 10638  003D52                     l984:
 10639  003D52  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 10640  003D56  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10641  003D5A  0012               	return		;funcret
 10642  003D5C                     __end_of___lwdiv:
 10643                           	opt stack 0
 10644                           tblptru	equ	0xFF8
 10645                           tblptrh	equ	0xFF7
 10646                           tblptrl	equ	0xFF6
 10647                           tablat	equ	0xFF5
 10648                           prodh	equ	0xFF4
 10649                           prodl	equ	0xFF3
 10650                           intcon	equ	0xFF2
 10651                           postinc0	equ	0xFEE
 10652                           wreg	equ	0xFE8
 10653                           indf1	equ	0xFE7
 10654                           postinc1	equ	0xFE6
 10655                           postdec1	equ	0xFE5
 10656                           plusw1	equ	0xFE3
 10657                           fsr1h	equ	0xFE2
 10658                           fsr1l	equ	0xFE1
 10659                           indf2	equ	0xFDF
 10660                           postinc2	equ	0xFDE
 10661                           postdec2	equ	0xFDD
 10662                           plusw2	equ	0xFDB
 10663                           fsr2h	equ	0xFDA
 10664                           fsr2l	equ	0xFD9
 10665                           status	equ	0xFD8
 10666                           
 10667 ;; *************** function _glcd_WriteString *****************
 10668 ;; Defined at:
 10669 ;;		line 673 in file "glcd_library/glcd.c"
 10670 ;; Parameters:    Size  Location     Type
 10671 ;;  str             2   19[COMRAM] PTR const unsigned char 
 10672 ;;		 -> STR_3(27), STR_2(14), displayStartScore@string(20), 
 10673 ;;  font            1   21[COMRAM] unsigned char 
 10674 ;;  color           1   22[COMRAM] unsigned char 
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;		None
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  1    wreg      void 
 10679 ;; Registers used:
 10680 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/0
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10686 ;;      Params:         4       0       0       0       0       0       0       0       0
 10687 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10688 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10689 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10690 ;;Total ram usage:        4 bytes
 10691 ;; Hardware stack levels used:    1
 10692 ;; Hardware stack levels required when called:    2
 10693 ;; This function calls:
 10694 ;;		_glcd_WriteChar3x6
 10695 ;;		_glcd_WriteChar8X8
 10696 ;; This function is called by:
 10697 ;;		_displayStartScore
 10698 ;;		_glcd_text_write
 10699 ;; This function uses a non-reentrant model
 10700 ;;
 10701                           
 10702                           	psect	text25
 10703  0040DA                     __ptext25:
 10704                           	opt stack 0
 10705  0040DA                     _glcd_WriteString:
 10706                           	opt stack 27
 10707                           
 10708                           ;glcd.c: 675: while(*str)
 10709                           
 10710                           ;incstack = 0
 10711  0040DA  D02E               	goto	l484
 10712  0040DC                     
 10713                           ;glcd.c: 676: {
 10714                           ;glcd.c: 677: if(font)
 10715  0040DC  5016               	movf	glcd_WriteString@font,w,c
 10716  0040DE  B4D8               	btfsc	status,2,c
 10717  0040E0  D015               	goto	l486
 10718                           
 10719                           ;glcd.c: 678: glcd_WriteChar8X8(*str, color);
 10720  0040E2  C017  F00B         	movff	glcd_WriteString@color,glcd_WriteChar8X8@color
 10721  0040E6  C014  FFF6         	movff	glcd_WriteString@str,tblptrl
 10722  0040EA  C015  FFF7         	movff	glcd_WriteString@str+1,tblptrh
 10723  0040EE  6AF8               	clrf	tblptru,c
 10724  0040F0  0E07               	movlw	(high __ramtop+-1)
 10725  0040F2  64F7               	cpfsgt	tblptrh,c
 10726  0040F4  D003               	bra	u3347
 10727  0040F6  0008               	tblrd		*
 10728  0040F8  50F5               	movf	tablat,w,c
 10729  0040FA  D005               	bra	u3340
 10730  0040FC                     u3347:
 10731  0040FC  CFF6 FFE1          	movff	tblptrl,fsr1l
 10732  004100  CFF7 FFE2          	movff	tblptrh,fsr1h
 10733  004104  50E7               	movf	indf1,w,c
 10734  004106                     u3340:
 10735  004106  EC68  F021         	call	_glcd_WriteChar8X8
 10736  00410A  D014               	goto	l487
 10737  00410C                     l486:
 10738                           
 10739                           ;glcd.c: 679: else
 10740                           ;glcd.c: 680: glcd_WriteChar3x6(*str, color);
 10741  00410C  C017  F00B         	movff	glcd_WriteString@color,glcd_WriteChar3x6@color
 10742  004110  C014  FFF6         	movff	glcd_WriteString@str,tblptrl
 10743  004114  C015  FFF7         	movff	glcd_WriteString@str+1,tblptrh
 10744  004118  6AF8               	clrf	tblptru,c
 10745  00411A  0E07               	movlw	(high __ramtop+-1)
 10746  00411C  64F7               	cpfsgt	tblptrh,c
 10747  00411E  D003               	bra	u3357
 10748  004120  0008               	tblrd		*
 10749  004122  50F5               	movf	tablat,w,c
 10750  004124  D005               	bra	u3350
 10751  004126                     u3357:
 10752  004126  CFF6 FFE1          	movff	tblptrl,fsr1l
 10753  00412A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10754  00412E  50E7               	movf	indf1,w,c
 10755  004130                     u3350:
 10756  004130  ECCE  F021         	call	_glcd_WriteChar3x6
 10757  004134                     l487:
 10758                           
 10759                           ;glcd.c: 681: str++;
 10760  004134  4A14               	infsnz	glcd_WriteString@str,f,c
 10761  004136  2A15               	incf	glcd_WriteString@str+1,f,c
 10762  004138                     l484:
 10763  004138  C014  FFF6         	movff	glcd_WriteString@str,tblptrl
 10764  00413C  C015  FFF7         	movff	glcd_WriteString@str+1,tblptrh
 10765  004140  6AF8               	clrf	tblptru,c
 10766  004142  0E07               	movlw	(high __ramtop+-1)
 10767  004144  64F7               	cpfsgt	tblptrh,c
 10768  004146  D003               	bra	u3367
 10769  004148  0008               	tblrd		*
 10770  00414A  50F5               	movf	tablat,w,c
 10771  00414C  D005               	bra	u3360
 10772  00414E                     u3367:
 10773  00414E  CFF6 FFE1          	movff	tblptrl,fsr1l
 10774  004152  CFF7 FFE2          	movff	tblptrh,fsr1h
 10775  004156  50E7               	movf	indf1,w,c
 10776  004158                     u3360:
 10777  004158  0900               	iorlw	0
 10778  00415A  B4D8               	btfsc	status,2,c
 10779  00415C  0012               	return	
 10780  00415E  D7BE               	goto	l485
 10781  004160                     __end_of_glcd_WriteString:
 10782                           	opt stack 0
 10783                           tblptru	equ	0xFF8
 10784                           tblptrh	equ	0xFF7
 10785                           tblptrl	equ	0xFF6
 10786                           tablat	equ	0xFF5
 10787                           prodh	equ	0xFF4
 10788                           prodl	equ	0xFF3
 10789                           intcon	equ	0xFF2
 10790                           postinc0	equ	0xFEE
 10791                           wreg	equ	0xFE8
 10792                           indf1	equ	0xFE7
 10793                           postinc1	equ	0xFE6
 10794                           postdec1	equ	0xFE5
 10795                           plusw1	equ	0xFE3
 10796                           fsr1h	equ	0xFE2
 10797                           fsr1l	equ	0xFE1
 10798                           indf2	equ	0xFDF
 10799                           postinc2	equ	0xFDE
 10800                           postdec2	equ	0xFDD
 10801                           plusw2	equ	0xFDB
 10802                           fsr2h	equ	0xFDA
 10803                           fsr2l	equ	0xFD9
 10804                           status	equ	0xFD8
 10805                           
 10806 ;; *************** function _glcd_WriteChar8X8 *****************
 10807 ;; Defined at:
 10808 ;;		line 579 in file "glcd_library/glcd.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;  ch              1    wreg     unsigned char 
 10811 ;;  color           1   10[COMRAM] unsigned char 
 10812 ;; Auto vars:     Size  Location     Type
 10813 ;;  ch              1   15[COMRAM] unsigned char 
 10814 ;;  chr             2   13[COMRAM] unsigned int 
 10815 ;;  side            1   18[COMRAM] unsigned char 
 10816 ;;  i               1   17[COMRAM] unsigned char 
 10817 ;;  xpos            1   16[COMRAM] unsigned char 
 10818 ;; Return value:  Size  Location     Type
 10819 ;;                  1    wreg      void 
 10820 ;; Registers used:
 10821 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10822 ;; Tracked objects:
 10823 ;;		On entry : 0/0
 10824 ;;		On exit  : 0/0
 10825 ;;		Unchanged: 0/0
 10826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10827 ;;      Params:         1       0       0       0       0       0       0       0       0
 10828 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10829 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10830 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10831 ;;Total ram usage:        9 bytes
 10832 ;; Hardware stack levels used:    1
 10833 ;; Hardware stack levels required when called:    1
 10834 ;; This function calls:
 10835 ;;		_glcd_WriteByte
 10836 ;; This function is called by:
 10837 ;;		_glcd_WriteString
 10838 ;; This function uses a non-reentrant model
 10839 ;;
 10840                           
 10841                           	psect	text26
 10842  0042D0                     __ptext26:
 10843                           	opt stack 0
 10844  0042D0                     _glcd_WriteChar8X8:
 10845                           	opt stack 27
 10846                           
 10847                           ;incstack = 0
 10848                           ;glcd_WriteChar8X8@ch stored from wreg
 10849  0042D0  6E10               	movwf	glcd_WriteChar8X8@ch,c
 10850                           
 10851                           ;glcd.c: 581: unsigned char i,xpos;
 10852                           ;glcd.c: 582: unsigned char side = 0;
 10853  0042D2  0E00               	movlw	0
 10854  0042D4  6E13               	movwf	glcd_WriteChar8X8@side,c
 10855                           
 10856                           ;glcd.c: 583: unsigned int chr;
 10857                           ;glcd.c: 585: if (ch=='\n')
 10858  0042D6  0E0A               	movlw	10
 10859  0042D8  1810               	xorwf	glcd_WriteChar8X8@ch,w,c
 10860  0042DA  A4D8               	btfss	status,2,c
 10861  0042DC  D004               	goto	l462
 10862                           
 10863                           ;glcd.c: 586: {
 10864                           ;glcd.c: 587: x=0;
 10865  0042DE  0E00               	movlw	0
 10866  0042E0  6E53               	movwf	_x,c
 10867                           
 10868                           ;glcd.c: 588: y++;
 10869  0042E2  2A52               	incf	_y,f,c
 10870                           
 10871                           ;glcd.c: 589: return;
 10872  0042E4  0012               	return	
 10873  0042E6                     l462:
 10874                           
 10875                           ;glcd.c: 590: }
 10876                           ;glcd.c: 592: if(x > 63)
 10877  0042E6  0E3F               	movlw	63
 10878  0042E8  6453               	cpfsgt	_x,c
 10879  0042EA  D006               	goto	l464
 10880                           
 10881                           ;glcd.c: 593: {
 10882                           ;glcd.c: 594: side = 1;
 10883  0042EC  0E01               	movlw	1
 10884  0042EE  6E13               	movwf	glcd_WriteChar8X8@side,c
 10885                           
 10886                           ;glcd.c: 595: xpos=x-64;
 10887  0042F0  5053               	movf	_x,w,c
 10888  0042F2  0FC0               	addlw	192
 10889  0042F4  6E11               	movwf	glcd_WriteChar8X8@xpos,c
 10890                           
 10891                           ;glcd.c: 596: }
 10892  0042F6  D002               	goto	l465
 10893  0042F8                     l464:
 10894                           
 10895                           ;glcd.c: 597: else
 10896                           ;glcd.c: 598: xpos=x;
 10897  0042F8  C053  F011         	movff	_x,glcd_WriteChar8X8@xpos
 10898  0042FC                     l465:
 10899                           
 10900                           ;glcd.c: 600: chr = (int)ch*8;
 10901  0042FC  5010               	movf	glcd_WriteChar8X8@ch,w,c
 10902  0042FE  0D08               	mullw	8
 10903  004300  CFF3 F00E          	movff	prodl,glcd_WriteChar8X8@chr
 10904  004304  CFF4 F00F          	movff	prodh,glcd_WriteChar8X8@chr+1
 10905                           
 10906                           ;glcd.c: 602: for(i = 0; i < 8; i++)
 10907  004308  0E00               	movlw	0
 10908  00430A  6E12               	movwf	glcd_WriteChar8X8@i,c
 10909  00430C                     l3229:
 10910  00430C  0E07               	movlw	7
 10911  00430E  6412               	cpfsgt	glcd_WriteChar8X8@i,c
 10912  004310  D001               	goto	l466
 10913  004312  D041               	goto	u2900
 10914  004314                     l466:
 10915                           
 10916                           ;glcd.c: 603: {
 10917                           ;glcd.c: 605: if(xpos > 63)
 10918  004314  0E3F               	movlw	63
 10919  004316  6411               	cpfsgt	glcd_WriteChar8X8@xpos,c
 10920  004318  D012               	goto	l468
 10921                           
 10922                           ;glcd.c: 606: {
 10923                           ;glcd.c: 607: xpos -= 64;
 10924  00431A  0E40               	movlw	64
 10925  00431C  5E11               	subwf	glcd_WriteChar8X8@xpos,f,c
 10926                           
 10927                           ;glcd.c: 608: side = 1;
 10928  00431E  0E01               	movlw	1
 10929  004320  6E13               	movwf	glcd_WriteChar8X8@side,c
 10930                           
 10931                           ;glcd.c: 609: LATBbits.LATB2=0;
 10932  004322  948A               	bcf	3978,2,c	;volatile
 10933                           
 10934                           ;glcd.c: 610: glcd_WriteByte(side, 0x40 | xpos);
 10935  004324  5011               	movf	glcd_WriteChar8X8@xpos,w,c
 10936  004326  0940               	iorlw	64
 10937  004328  6E09               	movwf	glcd_WriteByte@data,c
 10938  00432A  5013               	movf	glcd_WriteChar8X8@side,w,c
 10939  00432C  ECBA  F01D         	call	_glcd_WriteByte
 10940                           
 10941                           ;glcd.c: 611: glcd_WriteByte(side, 0xB8 | y);
 10942  004330  5052               	movf	_y,w,c
 10943  004332  09B8               	iorlw	184
 10944  004334  6E09               	movwf	glcd_WriteByte@data,c
 10945  004336  5013               	movf	glcd_WriteChar8X8@side,w,c
 10946  004338  ECBA  F01D         	call	_glcd_WriteByte
 10947                           
 10948                           ;glcd.c: 612: LATBbits.LATB2=1;
 10949  00433C  848A               	bsf	3978,2,c	;volatile
 10950  00433E                     l468:
 10951                           
 10952                           ;glcd.c: 613: }
 10953                           ;glcd.c: 614: if(color)
 10954  00433E  500B               	movf	glcd_WriteChar8X8@color,w,c
 10955  004340  B4D8               	btfsc	status,2,c
 10956  004342  D013               	goto	l469
 10957                           
 10958                           ;glcd.c: 615: glcd_WriteByte(side,Font8x8[chr+i]);
 10959  004344  5012               	movf	glcd_WriteChar8X8@i,w,c
 10960  004346  240E               	addwf	glcd_WriteChar8X8@chr,w,c
 10961  004348  6E0C               	movwf	??_glcd_WriteChar8X8& (0+255),c
 10962  00434A  0E00               	movlw	0
 10963  00434C  200F               	addwfc	glcd_WriteChar8X8@chr+1,w,c
 10964  00434E  6E0D               	movwf	(??_glcd_WriteChar8X8+1)& (0+255),c
 10965  004350  0E05               	movlw	low _Font8x8
 10966  004352  240C               	addwf	??_glcd_WriteChar8X8,w,c
 10967  004354  6EF6               	movwf	tblptrl,c
 10968  004356  0E73               	movlw	high _Font8x8
 10969  004358  200D               	addwfc	??_glcd_WriteChar8X8+1,w,c
 10970  00435A  6EF7               	movwf	tblptrh,c
 10971  00435C                     	if	0	;There are less than 3 active tblptr bytes
 10972  00435C                     	endif
 10973  00435C  0008               	tblrd		*
 10974  00435E  CFF5 F009          	movff	tablat,glcd_WriteByte@data
 10975  004362  5013               	movf	glcd_WriteChar8X8@side,w,c
 10976  004364  ECBA  F01D         	call	_glcd_WriteByte
 10977  004368  D013               	goto	l470
 10978  00436A                     l469:
 10979                           
 10980                           ;glcd.c: 616: else
 10981                           ;glcd.c: 617: glcd_WriteByte(side,~(Font8x8[chr+i]));
 10982  00436A  5012               	movf	glcd_WriteChar8X8@i,w,c
 10983  00436C  240E               	addwf	glcd_WriteChar8X8@chr,w,c
 10984  00436E  6E0C               	movwf	??_glcd_WriteChar8X8& (0+255),c
 10985  004370  0E00               	movlw	0
 10986  004372  200F               	addwfc	glcd_WriteChar8X8@chr+1,w,c
 10987  004374  6E0D               	movwf	(??_glcd_WriteChar8X8+1)& (0+255),c
 10988  004376  0E05               	movlw	low _Font8x8
 10989  004378  240C               	addwf	??_glcd_WriteChar8X8,w,c
 10990  00437A  6EF6               	movwf	tblptrl,c
 10991  00437C  0E73               	movlw	high _Font8x8
 10992  00437E  200D               	addwfc	??_glcd_WriteChar8X8+1,w,c
 10993  004380  6EF7               	movwf	tblptrh,c
 10994  004382                     	if	0	;There are less than 3 active tblptr bytes
 10995  004382                     	endif
 10996  004382  0008               	tblrd		*
 10997  004384  50F5               	movf	tablat,w,c
 10998  004386  0AFF               	xorlw	255
 10999  004388  6E09               	movwf	glcd_WriteByte@data,c
 11000  00438A  5013               	movf	glcd_WriteChar8X8@side,w,c
 11001  00438C  ECBA  F01D         	call	_glcd_WriteByte
 11002  004390                     l470:
 11003                           
 11004                           ;glcd.c: 618: xpos++;
 11005  004390  2A11               	incf	glcd_WriteChar8X8@xpos,f,c
 11006  004392  2A12               	incf	glcd_WriteChar8X8@i,f,c
 11007  004394  D7BB               	goto	l3229
 11008  004396                     u2900:
 11009                           
 11010                           ;glcd.c: 619: }
 11011                           ;glcd.c: 620: x+=8;
 11012  004396  0E08               	movlw	8
 11013  004398  2653               	addwf	_x,f,c
 11014  00439A  0012               	return		;funcret
 11015  00439C                     __end_of_glcd_WriteChar8X8:
 11016                           	opt stack 0
 11017                           tblptru	equ	0xFF8
 11018                           tblptrh	equ	0xFF7
 11019                           tblptrl	equ	0xFF6
 11020                           tablat	equ	0xFF5
 11021                           prodh	equ	0xFF4
 11022                           prodl	equ	0xFF3
 11023                           intcon	equ	0xFF2
 11024                           postinc0	equ	0xFEE
 11025                           wreg	equ	0xFE8
 11026                           indf1	equ	0xFE7
 11027                           postinc1	equ	0xFE6
 11028                           postdec1	equ	0xFE5
 11029                           plusw1	equ	0xFE3
 11030                           fsr1h	equ	0xFE2
 11031                           fsr1l	equ	0xFE1
 11032                           indf2	equ	0xFDF
 11033                           postinc2	equ	0xFDE
 11034                           postdec2	equ	0xFDD
 11035                           plusw2	equ	0xFDB
 11036                           fsr2h	equ	0xFDA
 11037                           fsr2l	equ	0xFD9
 11038                           status	equ	0xFD8
 11039                           
 11040 ;; *************** function _glcd_WriteChar3x6 *****************
 11041 ;; Defined at:
 11042 ;;		line 627 in file "glcd_library/glcd.c"
 11043 ;; Parameters:    Size  Location     Type
 11044 ;;  ch              1    wreg     unsigned char 
 11045 ;;  color           1   10[COMRAM] unsigned char 
 11046 ;; Auto vars:     Size  Location     Type
 11047 ;;  ch              1   14[COMRAM] unsigned char 
 11048 ;;  side            1   16[COMRAM] unsigned char 
 11049 ;;  i               1   15[COMRAM] unsigned char 
 11050 ;;  xpos            1   13[COMRAM] unsigned char 
 11051 ;; Return value:  Size  Location     Type
 11052 ;;                  1    wreg      void 
 11053 ;; Registers used:
 11054 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11055 ;; Tracked objects:
 11056 ;;		On entry : 0/0
 11057 ;;		On exit  : 0/0
 11058 ;;		Unchanged: 0/0
 11059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11060 ;;      Params:         1       0       0       0       0       0       0       0       0
 11061 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11062 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11063 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11064 ;;Total ram usage:        7 bytes
 11065 ;; Hardware stack levels used:    1
 11066 ;; Hardware stack levels required when called:    1
 11067 ;; This function calls:
 11068 ;;		_glcd_WriteByte
 11069 ;; This function is called by:
 11070 ;;		_glcd_WriteString
 11071 ;; This function uses a non-reentrant model
 11072 ;;
 11073                           
 11074                           	psect	text27
 11075  00439C                     __ptext27:
 11076                           	opt stack 0
 11077  00439C                     _glcd_WriteChar3x6:
 11078                           	opt stack 27
 11079                           
 11080                           ;incstack = 0
 11081                           ;glcd_WriteChar3x6@ch stored from wreg
 11082  00439C  6E0F               	movwf	glcd_WriteChar3x6@ch,c
 11083                           
 11084                           ;glcd.c: 629: unsigned char i,xpos;
 11085                           ;glcd.c: 630: unsigned char side = 0;
 11086  00439E  0E00               	movlw	0
 11087  0043A0  6E11               	movwf	glcd_WriteChar3x6@side,c
 11088                           
 11089                           ;glcd.c: 632: if (ch=='\n')
 11090  0043A2  0E0A               	movlw	10
 11091  0043A4  180F               	xorwf	glcd_WriteChar3x6@ch,w,c
 11092  0043A6  A4D8               	btfss	status,2,c
 11093  0043A8  D004               	goto	l473
 11094                           
 11095                           ;glcd.c: 633: {
 11096                           ;glcd.c: 634: x=0;
 11097  0043AA  0E00               	movlw	0
 11098  0043AC  6E53               	movwf	_x,c
 11099                           
 11100                           ;glcd.c: 635: y++;
 11101  0043AE  2A52               	incf	_y,f,c
 11102                           
 11103                           ;glcd.c: 636: return;
 11104  0043B0  0012               	return	
 11105  0043B2                     l473:
 11106                           
 11107                           ;glcd.c: 637: }
 11108                           ;glcd.c: 639: if(x > 63)
 11109  0043B2  0E3F               	movlw	63
 11110  0043B4  6453               	cpfsgt	_x,c
 11111  0043B6  D006               	goto	l475
 11112                           
 11113                           ;glcd.c: 640: {
 11114                           ;glcd.c: 641: side = 1;
 11115  0043B8  0E01               	movlw	1
 11116  0043BA  6E11               	movwf	glcd_WriteChar3x6@side,c
 11117                           
 11118                           ;glcd.c: 642: xpos=x-64;
 11119  0043BC  5053               	movf	_x,w,c
 11120  0043BE  0FC0               	addlw	192
 11121  0043C0  6E0E               	movwf	glcd_WriteChar3x6@xpos,c
 11122                           
 11123                           ;glcd.c: 643: }
 11124  0043C2  D002               	goto	l476
 11125  0043C4                     l475:
 11126                           
 11127                           ;glcd.c: 644: else
 11128                           ;glcd.c: 645: xpos=x;
 11129  0043C4  C053  F00E         	movff	_x,glcd_WriteChar3x6@xpos
 11130  0043C8                     l476:
 11131                           
 11132                           ;glcd.c: 647: ch -= 32;
 11133  0043C8  0E20               	movlw	32
 11134  0043CA  5E0F               	subwf	glcd_WriteChar3x6@ch,f,c
 11135                           
 11136                           ;glcd.c: 649: for(i = 0; i < 3; i++)
 11137  0043CC  0E00               	movlw	0
 11138  0043CE  6E10               	movwf	glcd_WriteChar3x6@i,c
 11139  0043D0                     l3281:
 11140  0043D0  0E02               	movlw	2
 11141  0043D2  6410               	cpfsgt	glcd_WriteChar3x6@i,c
 11142  0043D4  D001               	goto	l477
 11143  0043D6  D051               	goto	u2960
 11144  0043D8                     l477:
 11145                           
 11146                           ;glcd.c: 650: {
 11147                           ;glcd.c: 651: if(xpos > 63)
 11148  0043D8  0E3F               	movlw	63
 11149  0043DA  640E               	cpfsgt	glcd_WriteChar3x6@xpos,c
 11150  0043DC  D012               	goto	l479
 11151                           
 11152                           ;glcd.c: 652: {
 11153                           ;glcd.c: 653: xpos -= 64;
 11154  0043DE  0E40               	movlw	64
 11155  0043E0  5E0E               	subwf	glcd_WriteChar3x6@xpos,f,c
 11156                           
 11157                           ;glcd.c: 654: side = 1;
 11158  0043E2  0E01               	movlw	1
 11159  0043E4  6E11               	movwf	glcd_WriteChar3x6@side,c
 11160                           
 11161                           ;glcd.c: 655: LATBbits.LATB2=0;
 11162  0043E6  948A               	bcf	3978,2,c	;volatile
 11163                           
 11164                           ;glcd.c: 656: glcd_WriteByte(side, 0x40 | xpos);
 11165  0043E8  500E               	movf	glcd_WriteChar3x6@xpos,w,c
 11166  0043EA  0940               	iorlw	64
 11167  0043EC  6E09               	movwf	glcd_WriteByte@data,c
 11168  0043EE  5011               	movf	glcd_WriteChar3x6@side,w,c
 11169  0043F0  ECBA  F01D         	call	_glcd_WriteByte
 11170                           
 11171                           ;glcd.c: 657: glcd_WriteByte(side, 0xB8 | y);
 11172  0043F4  5052               	movf	_y,w,c
 11173  0043F6  09B8               	iorlw	184
 11174  0043F8  6E09               	movwf	glcd_WriteByte@data,c
 11175  0043FA  5011               	movf	glcd_WriteChar3x6@side,w,c
 11176  0043FC  ECBA  F01D         	call	_glcd_WriteByte
 11177                           
 11178                           ;glcd.c: 658: LATBbits.LATB2=1;
 11179  004400  848A               	bsf	3978,2,c	;volatile
 11180  004402                     l479:
 11181                           
 11182                           ;glcd.c: 659: }
 11183                           ;glcd.c: 660: if(color)
 11184  004402  500B               	movf	glcd_WriteChar3x6@color,w,c
 11185  004404  B4D8               	btfsc	status,2,c
 11186  004406  D01B               	goto	l480
 11187                           
 11188                           ;glcd.c: 661: glcd_WriteByte(side,Font3x6[ch][i]);
 11189  004408  500F               	movf	glcd_WriteChar3x6@ch,w,c
 11190  00440A  0D03               	mullw	3
 11191  00440C  0E05               	movlw	low _Font3x6
 11192  00440E  6E0C               	movwf	??_glcd_WriteChar3x6& (0+255),c
 11193  004410  0E7F               	movlw	high _Font3x6
 11194  004412  6E0D               	movwf	(??_glcd_WriteChar3x6+1)& (0+255),c
 11195  004414  50F3               	movf	prodl,w,c
 11196  004416  260C               	addwf	??_glcd_WriteChar3x6,f,c
 11197  004418  50F4               	movf	prodh,w,c
 11198  00441A  220D               	addwfc	??_glcd_WriteChar3x6+1,f,c
 11199  00441C  5010               	movf	glcd_WriteChar3x6@i,w,c
 11200  00441E  0D01               	mullw	1
 11201  004420  50F3               	movf	prodl,w,c
 11202  004422  260C               	addwf	??_glcd_WriteChar3x6,f,c
 11203  004424  50F4               	movf	prodh,w,c
 11204  004426  220D               	addwfc	??_glcd_WriteChar3x6+1,f,c
 11205  004428  C00C  FFF6         	movff	??_glcd_WriteChar3x6,tblptrl
 11206  00442C  C00D  FFF7         	movff	??_glcd_WriteChar3x6+1,tblptrh
 11207  004430                     	if	0	;tblptru may be non-zero
 11208  004430                     	endif
 11209  004430                     	if	0	;tblptru may be non-zero
 11210  004430                     	endif
 11211  004430  0008               	tblrd		*
 11212  004432  CFF5 F009          	movff	tablat,glcd_WriteByte@data
 11213  004436  5011               	movf	glcd_WriteChar3x6@side,w,c
 11214  004438  ECBA  F01D         	call	_glcd_WriteByte
 11215  00443C  D01B               	goto	l481
 11216  00443E                     l480:
 11217                           
 11218                           ;glcd.c: 662: else
 11219                           ;glcd.c: 663: glcd_WriteByte(side,~(Font3x6[ch][i]));
 11220  00443E  500F               	movf	glcd_WriteChar3x6@ch,w,c
 11221  004440  0D03               	mullw	3
 11222  004442  0E05               	movlw	low _Font3x6
 11223  004444  6E0C               	movwf	??_glcd_WriteChar3x6& (0+255),c
 11224  004446  0E7F               	movlw	high _Font3x6
 11225  004448  6E0D               	movwf	(??_glcd_WriteChar3x6+1)& (0+255),c
 11226  00444A  50F3               	movf	prodl,w,c
 11227  00444C  260C               	addwf	??_glcd_WriteChar3x6,f,c
 11228  00444E  50F4               	movf	prodh,w,c
 11229  004450  220D               	addwfc	??_glcd_WriteChar3x6+1,f,c
 11230  004452  5010               	movf	glcd_WriteChar3x6@i,w,c
 11231  004454  0D01               	mullw	1
 11232  004456  50F3               	movf	prodl,w,c
 11233  004458  260C               	addwf	??_glcd_WriteChar3x6,f,c
 11234  00445A  50F4               	movf	prodh,w,c
 11235  00445C  220D               	addwfc	??_glcd_WriteChar3x6+1,f,c
 11236  00445E  C00C  FFF6         	movff	??_glcd_WriteChar3x6,tblptrl
 11237  004462  C00D  FFF7         	movff	??_glcd_WriteChar3x6+1,tblptrh
 11238  004466                     	if	0	;tblptru may be non-zero
 11239  004466                     	endif
 11240  004466                     	if	0	;tblptru may be non-zero
 11241  004466                     	endif
 11242  004466  0008               	tblrd		*
 11243  004468  50F5               	movf	tablat,w,c
 11244  00446A  0AFF               	xorlw	255
 11245  00446C  6E09               	movwf	glcd_WriteByte@data,c
 11246  00446E  5011               	movf	glcd_WriteChar3x6@side,w,c
 11247  004470  ECBA  F01D         	call	_glcd_WriteByte
 11248  004474                     l481:
 11249                           
 11250                           ;glcd.c: 664: xpos++;
 11251  004474  2A0E               	incf	glcd_WriteChar3x6@xpos,f,c
 11252  004476  2A10               	incf	glcd_WriteChar3x6@i,f,c
 11253  004478  D7AB               	goto	l3281
 11254  00447A                     u2960:
 11255                           
 11256                           ;glcd.c: 665: }
 11257                           ;glcd.c: 666: x+=5;
 11258  00447A  0E05               	movlw	5
 11259  00447C  2653               	addwf	_x,f,c
 11260  00447E  0012               	return		;funcret
 11261  004480                     __end_of_glcd_WriteChar3x6:
 11262                           	opt stack 0
 11263                           tblptru	equ	0xFF8
 11264                           tblptrh	equ	0xFF7
 11265                           tblptrl	equ	0xFF6
 11266                           tablat	equ	0xFF5
 11267                           prodh	equ	0xFF4
 11268                           prodl	equ	0xFF3
 11269                           intcon	equ	0xFF2
 11270                           postinc0	equ	0xFEE
 11271                           wreg	equ	0xFE8
 11272                           indf1	equ	0xFE7
 11273                           postinc1	equ	0xFE6
 11274                           postdec1	equ	0xFE5
 11275                           plusw1	equ	0xFE3
 11276                           fsr1h	equ	0xFE2
 11277                           fsr1l	equ	0xFE1
 11278                           indf2	equ	0xFDF
 11279                           postinc2	equ	0xFDE
 11280                           postdec2	equ	0xFDD
 11281                           plusw2	equ	0xFDB
 11282                           fsr2h	equ	0xFDA
 11283                           fsr2l	equ	0xFD9
 11284                           status	equ	0xFD8
 11285                           
 11286 ;; *************** function _glcd_FillScreen *****************
 11287 ;; Defined at:
 11288 ;;		line 530 in file "glcd_library/glcd.c"
 11289 ;; Parameters:    Size  Location     Type
 11290 ;;  color           1    wreg     unsigned char 
 11291 ;; Auto vars:     Size  Location     Type
 11292 ;;  color           1   10[COMRAM] unsigned char 
 11293 ;;  i               1   12[COMRAM] unsigned char 
 11294 ;;  j               1   11[COMRAM] unsigned char 
 11295 ;; Return value:  Size  Location     Type
 11296 ;;                  1    wreg      void 
 11297 ;; Registers used:
 11298 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11299 ;; Tracked objects:
 11300 ;;		On entry : 0/0
 11301 ;;		On exit  : 0/0
 11302 ;;		Unchanged: 0/0
 11303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11304 ;;      Params:         0       0       0       0       0       0       0       0       0
 11305 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11306 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11307 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11308 ;;Total ram usage:        3 bytes
 11309 ;; Hardware stack levels used:    1
 11310 ;; Hardware stack levels required when called:    1
 11311 ;; This function calls:
 11312 ;;		_glcd_WriteByte
 11313 ;; This function is called by:
 11314 ;;		_displayStartScore
 11315 ;;		_main
 11316 ;;		_glcd_Init
 11317 ;; This function uses a non-reentrant model
 11318 ;;
 11319                           
 11320                           	psect	text28
 11321  003E8A                     __ptext28:
 11322                           	opt stack 0
 11323  003E8A                     _glcd_FillScreen:
 11324                           	opt stack 28
 11325                           
 11326                           ;incstack = 0
 11327                           ;glcd_FillScreen@color stored from wreg
 11328  003E8A  6E0B               	movwf	glcd_FillScreen@color,c
 11329                           
 11330                           ;glcd.c: 532: unsigned char i, j;
 11331                           ;glcd.c: 534: for(i = 0; i < 8; i ++)
 11332  003E8C  0E00               	movlw	0
 11333  003E8E  6E0D               	movwf	glcd_FillScreen@i,c
 11334  003E90                     l3541:
 11335  003E90  0E07               	movlw	7
 11336  003E92  640D               	cpfsgt	glcd_FillScreen@i,c
 11337  003E94  D001               	goto	l448
 11338  003E96  0012               	return	
 11339  003E98                     l448:
 11340                           
 11341                           ;glcd.c: 535: {
 11342                           ;glcd.c: 536: LATBbits.LATB2=0;
 11343  003E98  948A               	bcf	3978,2,c	;volatile
 11344                           
 11345                           ;glcd.c: 537: glcd_WriteByte(0, 0b01000000);
 11346  003E9A  0E40               	movlw	64
 11347  003E9C  6E09               	movwf	glcd_WriteByte@data,c
 11348  003E9E  0E00               	movlw	0
 11349  003EA0  ECBA  F01D         	call	_glcd_WriteByte
 11350                           
 11351                           ;glcd.c: 538: glcd_WriteByte(1, 0b01000000);
 11352  003EA4  0E40               	movlw	64
 11353  003EA6  6E09               	movwf	glcd_WriteByte@data,c
 11354  003EA8  0E01               	movlw	1
 11355  003EAA  ECBA  F01D         	call	_glcd_WriteByte
 11356                           
 11357                           ;glcd.c: 539: glcd_WriteByte(0, i | 0b10111000);
 11358  003EAE  500D               	movf	glcd_FillScreen@i,w,c
 11359  003EB0  09B8               	iorlw	184
 11360  003EB2  6E09               	movwf	glcd_WriteByte@data,c
 11361  003EB4  0E00               	movlw	0
 11362  003EB6  ECBA  F01D         	call	_glcd_WriteByte
 11363                           
 11364                           ;glcd.c: 540: glcd_WriteByte(1, i | 0b10111000);
 11365  003EBA  500D               	movf	glcd_FillScreen@i,w,c
 11366  003EBC  09B8               	iorlw	184
 11367  003EBE  6E09               	movwf	glcd_WriteByte@data,c
 11368  003EC0  0E01               	movlw	1
 11369  003EC2  ECBA  F01D         	call	_glcd_WriteByte
 11370                           
 11371                           ;glcd.c: 541: LATBbits.LATB2=1;
 11372  003EC6  848A               	bsf	3978,2,c	;volatile
 11373                           
 11374                           ;glcd.c: 543: for(j = 0; j < 64; j++)
 11375  003EC8  0E00               	movlw	0
 11376  003ECA  6E0C               	movwf	glcd_FillScreen@j,c
 11377  003ECC                     l3555:
 11378  003ECC  0E3F               	movlw	63
 11379  003ECE  640C               	cpfsgt	glcd_FillScreen@j,c
 11380  003ED0  D001               	goto	l450
 11381  003ED2  D010               	goto	u3400
 11382  003ED4                     l450:
 11383                           
 11384                           ;glcd.c: 544: {
 11385                           ;glcd.c: 545: glcd_WriteByte(0, 0xFF*color);
 11386  003ED4  500B               	movf	glcd_FillScreen@color,w,c
 11387  003ED6  0DFF               	mullw	255
 11388  003ED8  CFF3 F009          	movff	prodl,glcd_WriteByte@data
 11389  003EDC  0E00               	movlw	0
 11390  003EDE  ECBA  F01D         	call	_glcd_WriteByte
 11391                           
 11392                           ;glcd.c: 546: glcd_WriteByte(1, 0xFF*color);
 11393  003EE2  500B               	movf	glcd_FillScreen@color,w,c
 11394  003EE4  0DFF               	mullw	255
 11395  003EE6  CFF3 F009          	movff	prodl,glcd_WriteByte@data
 11396  003EEA  0E01               	movlw	1
 11397  003EEC  ECBA  F01D         	call	_glcd_WriteByte
 11398  003EF0  2A0C               	incf	glcd_FillScreen@j,f,c
 11399  003EF2  D7EC               	goto	l3555
 11400  003EF4                     u3400:
 11401  003EF4  2A0D               	incf	glcd_FillScreen@i,f,c
 11402  003EF6  D7CC               	goto	l3541
 11403  003EF8                     __end_of_glcd_FillScreen:
 11404                           	opt stack 0
 11405                           tblptru	equ	0xFF8
 11406                           tblptrh	equ	0xFF7
 11407                           tblptrl	equ	0xFF6
 11408                           tablat	equ	0xFF5
 11409                           prodh	equ	0xFF4
 11410                           prodl	equ	0xFF3
 11411                           intcon	equ	0xFF2
 11412                           postinc0	equ	0xFEE
 11413                           wreg	equ	0xFE8
 11414                           indf1	equ	0xFE7
 11415                           postinc1	equ	0xFE6
 11416                           postdec1	equ	0xFE5
 11417                           plusw1	equ	0xFE3
 11418                           fsr1h	equ	0xFE2
 11419                           fsr1l	equ	0xFE1
 11420                           indf2	equ	0xFDF
 11421                           postinc2	equ	0xFDE
 11422                           postdec2	equ	0xFDD
 11423                           plusw2	equ	0xFDB
 11424                           fsr2h	equ	0xFDA
 11425                           fsr2l	equ	0xFD9
 11426                           status	equ	0xFD8
 11427                           
 11428 ;; *************** function _glcd_WriteByte *****************
 11429 ;; Defined at:
 11430 ;;		line 395 in file "glcd_library/glcd.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  side            1    wreg     unsigned char 
 11433 ;;  data            1    8[COMRAM] unsigned char 
 11434 ;; Auto vars:     Size  Location     Type
 11435 ;;  side            1    9[COMRAM] unsigned char 
 11436 ;; Return value:  Size  Location     Type
 11437 ;;                  1    wreg      void 
 11438 ;; Registers used:
 11439 ;;		wreg, status,2
 11440 ;; Tracked objects:
 11441 ;;		On entry : 0/0
 11442 ;;		On exit  : 0/0
 11443 ;;		Unchanged: 0/0
 11444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11445 ;;      Params:         1       0       0       0       0       0       0       0       0
 11446 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11447 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11448 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11449 ;;Total ram usage:        2 bytes
 11450 ;; Hardware stack levels used:    1
 11451 ;; This function calls:
 11452 ;;		Nothing
 11453 ;; This function is called by:
 11454 ;;		_glcd_Init
 11455 ;;		_glcd_PlotPixel
 11456 ;;		_glcd_FillScreen
 11457 ;;		_glcd_SetCursor
 11458 ;;		_glcd_WriteChar8X8
 11459 ;;		_glcd_WriteChar3x6
 11460 ;;		_glcd_Image
 11461 ;; This function uses a non-reentrant model
 11462 ;;
 11463                           
 11464                           	psect	text29
 11465  003B74                     __ptext29:
 11466                           	opt stack 0
 11467  003B74                     _glcd_WriteByte:
 11468                           	opt stack 28
 11469                           
 11470                           ;incstack = 0
 11471                           ;glcd_WriteByte@side stored from wreg
 11472  003B74  6E0A               	movwf	glcd_WriteByte@side,c
 11473                           
 11474                           ;glcd.c: 397: if(side)
 11475  003B76  500A               	movf	glcd_WriteByte@side,w,c
 11476  003B78  B4D8               	btfsc	status,2,c
 11477  003B7A  D003               	goto	l418
 11478                           
 11479                           ;glcd.c: 398: {
 11480                           ;glcd.c: 399: LATBbits.LATB0 = 1;
 11481  003B7C  808A               	bsf	3978,0,c	;volatile
 11482                           
 11483                           ;glcd.c: 400: LATBbits.LATB1 = 0;
 11484  003B7E  928A               	bcf	3978,1,c	;volatile
 11485                           
 11486                           ;glcd.c: 401: }
 11487  003B80  D002               	goto	l419
 11488  003B82                     l418:
 11489                           
 11490                           ;glcd.c: 402: else
 11491                           ;glcd.c: 403: {
 11492                           ;glcd.c: 404: LATBbits.LATB1 = 0;
 11493  003B82  928A               	bcf	3978,1,c	;volatile
 11494                           
 11495                           ;glcd.c: 405: LATBbits.LATB1 = 1;
 11496  003B84  828A               	bsf	3978,1,c	;volatile
 11497  003B86                     l419:
 11498                           
 11499                           ;glcd.c: 406: }
 11500                           ;glcd.c: 408: TRISD=0;
 11501  003B86  0E00               	movlw	0
 11502  003B88  6E95               	movwf	3989,c	;volatile
 11503                           
 11504                           ;glcd.c: 409: LATBbits.LATB3=0;
 11505  003B8A  968A               	bcf	3978,3,c	;volatile
 11506                           
 11507                           ;glcd.c: 411: LATD = data;
 11508  003B8C  C009  FF8C         	movff	glcd_WriteByte@data,3980	;volatile
 11509                           
 11510                           ;glcd.c: 415: LATBbits.LATB4 = 1;
 11511  003B90  888A               	bsf	3978,4,c	;volatile
 11512                           
 11513                           ;glcd.c: 417: _delay((unsigned long)((1)*(100000/4000.0)));
 11514  003B92  0E08               	movlw	8
 11515  003B94                     u5327:
 11516  003B94  2EE8               	decfsz	wreg,f,c
 11517  003B96  D7FE               	bra	u5327
 11518  003B98  F000               	nop	
 11519                           
 11520                           ;glcd.c: 418: LATBbits.LATB4 = 0;
 11521  003B9A  988A               	bcf	3978,4,c	;volatile
 11522                           
 11523                           ;glcd.c: 420: _delay((unsigned long)((1)*(100000/4000.0)));
 11524  003B9C  0E08               	movlw	8
 11525  003B9E                     u5337:
 11526  003B9E  2EE8               	decfsz	wreg,f,c
 11527  003BA0  D7FE               	bra	u5337
 11528  003BA2  F000               	nop	
 11529                           
 11530                           ;glcd.c: 423: LATBbits.LATB0 = 0;
 11531  003BA4  908A               	bcf	3978,0,c	;volatile
 11532                           
 11533                           ;glcd.c: 424: LATBbits.LATB1 = 0;
 11534  003BA6  928A               	bcf	3978,1,c	;volatile
 11535  003BA8  0012               	return		;funcret
 11536  003BAA                     __end_of_glcd_WriteByte:
 11537                           	opt stack 0
 11538                           tblptru	equ	0xFF8
 11539                           tblptrh	equ	0xFF7
 11540                           tblptrl	equ	0xFF6
 11541                           tablat	equ	0xFF5
 11542                           prodh	equ	0xFF4
 11543                           prodl	equ	0xFF3
 11544                           intcon	equ	0xFF2
 11545                           postinc0	equ	0xFEE
 11546                           wreg	equ	0xFE8
 11547                           indf1	equ	0xFE7
 11548                           postinc1	equ	0xFE6
 11549                           postdec1	equ	0xFE5
 11550                           plusw1	equ	0xFE3
 11551                           fsr1h	equ	0xFE2
 11552                           fsr1l	equ	0xFE1
 11553                           indf2	equ	0xFDF
 11554                           postinc2	equ	0xFDE
 11555                           postdec2	equ	0xFDD
 11556                           plusw2	equ	0xFDB
 11557                           fsr2h	equ	0xFDA
 11558                           fsr2l	equ	0xFD9
 11559                           status	equ	0xFD8
 11560                           
 11561 ;; *************** function _delayHomeScreen *****************
 11562 ;; Defined at:
 11563 ;;		line 506 in file "main.c"
 11564 ;; Parameters:    Size  Location     Type
 11565 ;;		None
 11566 ;; Auto vars:     Size  Location     Type
 11567 ;;  d               2    2[COMRAM] unsigned int 
 11568 ;;  c               2    0[COMRAM] unsigned int 
 11569 ;; Return value:  Size  Location     Type
 11570 ;;                  1    wreg      void 
 11571 ;; Registers used:
 11572 ;;		wreg, status,2, status,0
 11573 ;; Tracked objects:
 11574 ;;		On entry : 0/0
 11575 ;;		On exit  : 0/0
 11576 ;;		Unchanged: 0/0
 11577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11578 ;;      Params:         0       0       0       0       0       0       0       0       0
 11579 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11580 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11581 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11582 ;;Total ram usage:        4 bytes
 11583 ;; Hardware stack levels used:    1
 11584 ;; This function calls:
 11585 ;;		Nothing
 11586 ;; This function is called by:
 11587 ;;		_displayStartScore
 11588 ;;		_main
 11589 ;; This function uses a non-reentrant model
 11590 ;;
 11591                           
 11592                           	psect	text30
 11593  003B40                     __ptext30:
 11594                           	opt stack 0
 11595  003B40                     _delayHomeScreen:
 11596                           	opt stack 29
 11597                           
 11598                           ;main.c: 507: uint16_t c, d;
 11599                           ;main.c: 508: for (c = 0; c <= 65530; c++){
 11600                           
 11601                           ;incstack = 0
 11602  003B40  0E00               	movlw	0
 11603  003B42  6E02               	movwf	delayHomeScreen@c+1,c
 11604  003B44  0E00               	movlw	0
 11605  003B46  6E01               	movwf	delayHomeScreen@c,c
 11606  003B48                     l3385:
 11607  003B48  0EFB               	movlw	251
 11608  003B4A  5C01               	subwf	delayHomeScreen@c,w,c
 11609  003B4C  0EFF               	movlw	255
 11610  003B4E  5802               	subwfb	delayHomeScreen@c+1,w,c
 11611  003B50  B0D8               	btfsc	status,0,c
 11612  003B52  0012               	return	
 11613                           
 11614                           ;main.c: 509: for (d = 0; d <= 10; d++)
 11615  003B54  0E00               	movlw	0
 11616  003B56  6E04               	movwf	delayHomeScreen@d+1,c
 11617  003B58  0E00               	movlw	0
 11618  003B5A  6E03               	movwf	delayHomeScreen@d,c
 11619  003B5C                     l3391:
 11620  003B5C  5004               	movf	delayHomeScreen@d+1,w,c
 11621  003B5E  E107               	bnz	l3399
 11622  003B60  0E0B               	movlw	11
 11623  003B62  5C03               	subwf	delayHomeScreen@d,w,c
 11624  003B64  B0D8               	btfsc	status,0,c
 11625  003B66  D003               	goto	u3110
 11626                           
 11627                           ;main.c: 510: {}
 11628  003B68  4A03               	infsnz	delayHomeScreen@d,f,c
 11629  003B6A  2A04               	incf	delayHomeScreen@d+1,f,c
 11630  003B6C  D7F7               	goto	l3391
 11631  003B6E                     u3110:
 11632  003B6E                     l3399:
 11633  003B6E  4A01               	infsnz	delayHomeScreen@c,f,c
 11634  003B70  2A02               	incf	delayHomeScreen@c+1,f,c
 11635  003B72  D7EA               	goto	l3385
 11636  003B74                     __end_of_delayHomeScreen:
 11637                           	opt stack 0
 11638                           tblptru	equ	0xFF8
 11639                           tblptrh	equ	0xFF7
 11640                           tblptrl	equ	0xFF6
 11641                           tablat	equ	0xFF5
 11642                           prodh	equ	0xFF4
 11643                           prodl	equ	0xFF3
 11644                           intcon	equ	0xFF2
 11645                           postinc0	equ	0xFEE
 11646                           wreg	equ	0xFE8
 11647                           indf1	equ	0xFE7
 11648                           postinc1	equ	0xFE6
 11649                           postdec1	equ	0xFE5
 11650                           plusw1	equ	0xFE3
 11651                           fsr1h	equ	0xFE2
 11652                           fsr1l	equ	0xFE1
 11653                           indf2	equ	0xFDF
 11654                           postinc2	equ	0xFDE
 11655                           postdec2	equ	0xFDD
 11656                           plusw2	equ	0xFDB
 11657                           fsr2h	equ	0xFDA
 11658                           fsr2l	equ	0xFD9
 11659                           status	equ	0xFD8
 11660                           
 11661 ;; *************** function _delay *****************
 11662 ;; Defined at:
 11663 ;;		line 497 in file "main.c"
 11664 ;; Parameters:    Size  Location     Type
 11665 ;;		None
 11666 ;; Auto vars:     Size  Location     Type
 11667 ;;  c               2    0[COMRAM] unsigned int 
 11668 ;;  d               2    0        unsigned int 
 11669 ;; Return value:  Size  Location     Type
 11670 ;;                  1    wreg      void 
 11671 ;; Registers used:
 11672 ;;		wreg, status,2, status,0
 11673 ;; Tracked objects:
 11674 ;;		On entry : 0/0
 11675 ;;		On exit  : 0/0
 11676 ;;		Unchanged: 0/0
 11677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11678 ;;      Params:         0       0       0       0       0       0       0       0       0
 11679 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11680 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11681 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11682 ;;Total ram usage:        2 bytes
 11683 ;; Hardware stack levels used:    1
 11684 ;; This function calls:
 11685 ;;		Nothing
 11686 ;; This function is called by:
 11687 ;;		_main
 11688 ;; This function uses a non-reentrant model
 11689 ;;
 11690                           
 11691                           	psect	text31
 11692  003A98                     __ptext31:
 11693                           	opt stack 0
 11694  003A98                     _delay:
 11695                           	opt stack 30
 11696                           
 11697                           ;main.c: 498: uint16_t c, d;
 11698                           ;main.c: 499: for (c = 0; c <= 65530; c++){
 11699                           
 11700                           ;incstack = 0
 11701  003A98  0E00               	movlw	0
 11702  003A9A  6E02               	movwf	delay@c+1,c
 11703  003A9C  0E00               	movlw	0
 11704  003A9E  6E01               	movwf	delay@c,c
 11705  003AA0                     l3951:
 11706  003AA0  0EFB               	movlw	251
 11707  003AA2  5C01               	subwf	delay@c,w,c
 11708  003AA4  0EFF               	movlw	255
 11709  003AA6  5802               	subwfb	delay@c+1,w,c
 11710  003AA8  B0D8               	btfsc	status,0,c
 11711  003AAA  0012               	return	
 11712  003AAC  4A01               	infsnz	delay@c,f,c
 11713  003AAE  2A02               	incf	delay@c+1,f,c
 11714  003AB0  D7F7               	goto	l3951
 11715  003AB2                     __end_of_delay:
 11716                           	opt stack 0
 11717                           tblptru	equ	0xFF8
 11718                           tblptrh	equ	0xFF7
 11719                           tblptrl	equ	0xFF6
 11720                           tablat	equ	0xFF5
 11721                           prodh	equ	0xFF4
 11722                           prodl	equ	0xFF3
 11723                           intcon	equ	0xFF2
 11724                           postinc0	equ	0xFEE
 11725                           wreg	equ	0xFE8
 11726                           indf1	equ	0xFE7
 11727                           postinc1	equ	0xFE6
 11728                           postdec1	equ	0xFE5
 11729                           plusw1	equ	0xFE3
 11730                           fsr1h	equ	0xFE2
 11731                           fsr1l	equ	0xFE1
 11732                           indf2	equ	0xFDF
 11733                           postinc2	equ	0xFDE
 11734                           postdec2	equ	0xFDD
 11735                           plusw2	equ	0xFDB
 11736                           fsr2h	equ	0xFDA
 11737                           fsr2l	equ	0xFD9
 11738                           status	equ	0xFD8
 11739                           
 11740 ;; *************** function _createRandomShape *****************
 11741 ;; Defined at:
 11742 ;;		line 516 in file "main.c"
 11743 ;; Parameters:    Size  Location     Type
 11744 ;;  i               1    wreg     unsigned char 
 11745 ;; Auto vars:     Size  Location     Type
 11746 ;;  i               1   51[COMRAM] unsigned char 
 11747 ;;  k               1   44[COMRAM] unsigned char 
 11748 ;;  k               1   43[COMRAM] unsigned char 
 11749 ;;  k               1   42[COMRAM] unsigned char 
 11750 ;;  k               1   41[COMRAM] unsigned char 
 11751 ;;  k               1   40[COMRAM] unsigned char 
 11752 ;;  k               1   39[COMRAM] unsigned char 
 11753 ;;  k               1   38[COMRAM] unsigned char 
 11754 ;;  k               1   37[COMRAM] unsigned char 
 11755 ;;  k               1   36[COMRAM] unsigned char 
 11756 ;;  k               1   35[COMRAM] unsigned char 
 11757 ;;  k               1   34[COMRAM] unsigned char 
 11758 ;;  k               1   33[COMRAM] unsigned char 
 11759 ;;  k               1   32[COMRAM] unsigned char 
 11760 ;;  k               1   31[COMRAM] unsigned char 
 11761 ;;  k               1   30[COMRAM] unsigned char 
 11762 ;;  k               1   29[COMRAM] unsigned char 
 11763 ;;  start           1   49[COMRAM] unsigned char 
 11764 ;;  start           1   48[COMRAM] unsigned char 
 11765 ;;  start           1   47[COMRAM] unsigned char 
 11766 ;;  start           1   46[COMRAM] unsigned char 
 11767 ;;  k               1   45[COMRAM] unsigned char 
 11768 ;;  orientation     1   50[COMRAM] unsigned char 
 11769 ;;  type            1   28[COMRAM] unsigned char 
 11770 ;; Return value:  Size  Location     Type
 11771 ;;                  1    wreg      void 
 11772 ;; Registers used:
 11773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11774 ;; Tracked objects:
 11775 ;;		On entry : 0/0
 11776 ;;		On exit  : 0/0
 11777 ;;		Unchanged: 0/0
 11778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11779 ;;      Params:         0       0       0       0       0       0       0       0       0
 11780 ;;      Locals:        24       0       0       0       0       0       0       0       0
 11781 ;;      Temps:          8       0       0       0       0       0       0       0       0
 11782 ;;      Totals:        32       0       0       0       0       0       0       0       0
 11783 ;;Total ram usage:       32 bytes
 11784 ;; Hardware stack levels used:    1
 11785 ;; Hardware stack levels required when called:    2
 11786 ;; This function calls:
 11787 ;;		___awmod
 11788 ;;		_rand
 11789 ;; This function is called by:
 11790 ;;		_main
 11791 ;; This function uses a non-reentrant model
 11792 ;;
 11793                           
 11794                           	psect	text32
 11795  005E64                     __ptext32:
 11796                           	opt stack 0
 11797  005E64                     _createRandomShape:
 11798                           	opt stack 28
 11799                           
 11800                           ;incstack = 0
 11801                           ;createRandomShape@i stored from wreg
 11802  005E64  6E34               	movwf	createRandomShape@i,c
 11803                           
 11804                           ;main.c: 519: uint8_t type = (rand() % (7)) + 1;
 11805  005E66  EC5C  F01E         	call	_rand	;wreg free
 11806  005E6A  C00D  F00F         	movff	?_rand,___awmod@dividend
 11807  005E6E  C00E  F010         	movff	?_rand+1,___awmod@dividend+1
 11808  005E72  0E00               	movlw	0
 11809  005E74  6E12               	movwf	___awmod@divisor+1,c
 11810  005E76  0E07               	movlw	7
 11811  005E78  6E11               	movwf	___awmod@divisor,c
 11812  005E7A  EC7C  F01F         	call	___awmod	;wreg free
 11813  005E7E  280F               	incf	?___awmod,w,c
 11814  005E80  6E1D               	movwf	createRandomShape@type,c
 11815                           
 11816                           ;main.c: 521: uint8_t orientation =rand()%4;
 11817  005E82  EC5C  F01E         	call	_rand	;wreg free
 11818  005E86  500D               	movf	?_rand,w,c
 11819  005E88  0B03               	andlw	3
 11820  005E8A  6E33               	movwf	createRandomShape@orientation,c
 11821                           
 11822                           ;main.c: 524: switch (type){
 11823  005E8C  EF20  F039         	goto	l200
 11824  005E90                     
 11825                           ;main.c: 528: all_shapes[i].orientation=0;
 11826  005E90  5034               	movf	createRandomShape@i,w,c
 11827  005E92  0D09               	mullw	9
 11828  005E94  0E08               	movlw	8
 11829  005E96  26F3               	addwf	prodl,f,c
 11830  005E98  0E00               	movlw	0
 11831  005E9A  22F4               	addwfc	prodh,f,c
 11832  005E9C  0E00               	movlw	low _all_shapes
 11833  005E9E  24F3               	addwf	prodl,w,c
 11834  005EA0  6ED9               	movwf	fsr2l,c
 11835  005EA2  0E01               	movlw	high _all_shapes
 11836  005EA4  20F4               	addwfc	prodh,w,c
 11837  005EA6  6EDA               	movwf	fsr2h,c
 11838  005EA8  0E00               	movlw	0
 11839  005EAA  6EDF               	movwf	indf2,c
 11840                           
 11841                           ;main.c: 529: uint8_t start=8;
 11842  005EAC  0E08               	movlw	8
 11843  005EAE  6E2F               	movwf	createRandomShape@start,c
 11844                           
 11845                           ;main.c: 530: for (uint8_t k=0;k<4;k++){
 11846  005EB0  0E00               	movlw	0
 11847  005EB2  6E1E               	movwf	createRandomShape@k,c
 11848  005EB4                     l3967:
 11849  005EB4  0E03               	movlw	3
 11850  005EB6  641E               	cpfsgt	createRandomShape@k,c
 11851  005EB8  D002               	goto	l204
 11852  005EBA  EF3A  F039         	goto	l217
 11853  005EBE                     l204:
 11854                           
 11855                           ;main.c: 531: all_shapes[i].index[k].x=start;
 11856  005EBE  5034               	movf	createRandomShape@i,w,c
 11857  005EC0  0D09               	mullw	9
 11858  005EC2  0E00               	movlw	low _all_shapes
 11859  005EC4  6E15               	movwf	??_createRandomShape& (0+255),c
 11860  005EC6  0E01               	movlw	high _all_shapes
 11861  005EC8  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 11862  005ECA  50F3               	movf	prodl,w,c
 11863  005ECC  2615               	addwf	??_createRandomShape,f,c
 11864  005ECE  50F4               	movf	prodh,w,c
 11865  005ED0  2216               	addwfc	??_createRandomShape+1,f,c
 11866  005ED2  501E               	movf	createRandomShape@k,w,c
 11867  005ED4  0D02               	mullw	2
 11868  005ED6  50F3               	movf	prodl,w,c
 11869  005ED8  2415               	addwf	??_createRandomShape,w,c
 11870  005EDA  6ED9               	movwf	fsr2l,c
 11871  005EDC  50F4               	movf	prodh,w,c
 11872  005EDE  2016               	addwfc	??_createRandomShape+1,w,c
 11873  005EE0  6EDA               	movwf	fsr2h,c
 11874  005EE2  C02F  FFDF         	movff	createRandomShape@start,indf2
 11875                           
 11876                           ;main.c: 532: all_shapes[i].index[k].y=0;
 11877  005EE6  5034               	movf	createRandomShape@i,w,c
 11878  005EE8  0D09               	mullw	9
 11879  005EEA  0E00               	movlw	low _all_shapes
 11880  005EEC  6E15               	movwf	??_createRandomShape& (0+255),c
 11881  005EEE  0E01               	movlw	high _all_shapes
 11882  005EF0  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 11883  005EF2  50F3               	movf	prodl,w,c
 11884  005EF4  2615               	addwf	??_createRandomShape,f,c
 11885  005EF6  50F4               	movf	prodh,w,c
 11886  005EF8  2216               	addwfc	??_createRandomShape+1,f,c
 11887  005EFA  501E               	movf	createRandomShape@k,w,c
 11888  005EFC  0D02               	mullw	2
 11889  005EFE  50F3               	movf	prodl,w,c
 11890  005F00  2615               	addwf	??_createRandomShape,f,c
 11891  005F02  50F4               	movf	prodh,w,c
 11892  005F04  2216               	addwfc	??_createRandomShape+1,f,c
 11893  005F06  0E01               	movlw	1
 11894  005F08  2415               	addwf	??_createRandomShape,w,c
 11895  005F0A  6ED9               	movwf	fsr2l,c
 11896  005F0C  0E00               	movlw	0
 11897  005F0E  2016               	addwfc	??_createRandomShape+1,w,c
 11898  005F10  6EDA               	movwf	fsr2h,c
 11899  005F12  0E00               	movlw	0
 11900  005F14  6EDF               	movwf	indf2,c
 11901                           
 11902                           ;main.c: 533: start++;
 11903  005F16  2A2F               	incf	createRandomShape@start,f,c
 11904  005F18  2A1E               	incf	createRandomShape@k,f,c
 11905  005F1A  D7CC               	goto	l3967
 11906  005F1C                     
 11907                           ;main.c: 537: all_shapes[i].orientation=1;
 11908  005F1C  5034               	movf	createRandomShape@i,w,c
 11909  005F1E  0D09               	mullw	9
 11910  005F20  0E08               	movlw	8
 11911  005F22  26F3               	addwf	prodl,f,c
 11912  005F24  0E00               	movlw	0
 11913  005F26  22F4               	addwfc	prodh,f,c
 11914  005F28  0E00               	movlw	low _all_shapes
 11915  005F2A  24F3               	addwf	prodl,w,c
 11916  005F2C  6ED9               	movwf	fsr2l,c
 11917  005F2E  0E01               	movlw	high _all_shapes
 11918  005F30  20F4               	addwfc	prodh,w,c
 11919  005F32  6EDA               	movwf	fsr2h,c
 11920  005F34  0E01               	movlw	1
 11921  005F36  6EDF               	movwf	indf2,c
 11922                           
 11923                           ;main.c: 538: uint8_t start=8;
 11924  005F38  0E08               	movlw	8
 11925  005F3A  6E2F               	movwf	createRandomShape@start,c
 11926                           
 11927                           ;main.c: 539: for (uint8_t k=0;k<4;k++){
 11928  005F3C  0E00               	movlw	0
 11929  005F3E  6E1F               	movwf	createRandomShape@k_278,c
 11930  005F40                     l3985:
 11931  005F40  0E03               	movlw	3
 11932  005F42  641F               	cpfsgt	createRandomShape@k_278,c
 11933  005F44  D002               	goto	l208
 11934  005F46  EF3A  F039         	goto	l217
 11935  005F4A                     l208:
 11936                           
 11937                           ;main.c: 540: all_shapes[i].index[k].x=start;
 11938  005F4A  5034               	movf	createRandomShape@i,w,c
 11939  005F4C  0D09               	mullw	9
 11940  005F4E  0E00               	movlw	low _all_shapes
 11941  005F50  6E15               	movwf	??_createRandomShape& (0+255),c
 11942  005F52  0E01               	movlw	high _all_shapes
 11943  005F54  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 11944  005F56  50F3               	movf	prodl,w,c
 11945  005F58  2615               	addwf	??_createRandomShape,f,c
 11946  005F5A  50F4               	movf	prodh,w,c
 11947  005F5C  2216               	addwfc	??_createRandomShape+1,f,c
 11948  005F5E  501F               	movf	createRandomShape@k_278,w,c
 11949  005F60  0D02               	mullw	2
 11950  005F62  50F3               	movf	prodl,w,c
 11951  005F64  2415               	addwf	??_createRandomShape,w,c
 11952  005F66  6ED9               	movwf	fsr2l,c
 11953  005F68  50F4               	movf	prodh,w,c
 11954  005F6A  2016               	addwfc	??_createRandomShape+1,w,c
 11955  005F6C  6EDA               	movwf	fsr2h,c
 11956  005F6E  C02F  FFDF         	movff	createRandomShape@start,indf2
 11957                           
 11958                           ;main.c: 541: all_shapes[i].index[k].y=1;
 11959  005F72  5034               	movf	createRandomShape@i,w,c
 11960  005F74  0D09               	mullw	9
 11961  005F76  0E00               	movlw	low _all_shapes
 11962  005F78  6E15               	movwf	??_createRandomShape& (0+255),c
 11963  005F7A  0E01               	movlw	high _all_shapes
 11964  005F7C  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 11965  005F7E  50F3               	movf	prodl,w,c
 11966  005F80  2615               	addwf	??_createRandomShape,f,c
 11967  005F82  50F4               	movf	prodh,w,c
 11968  005F84  2216               	addwfc	??_createRandomShape+1,f,c
 11969  005F86  501F               	movf	createRandomShape@k_278,w,c
 11970  005F88  0D02               	mullw	2
 11971  005F8A  50F3               	movf	prodl,w,c
 11972  005F8C  2615               	addwf	??_createRandomShape,f,c
 11973  005F8E  50F4               	movf	prodh,w,c
 11974  005F90  2216               	addwfc	??_createRandomShape+1,f,c
 11975  005F92  0E01               	movlw	1
 11976  005F94  2415               	addwf	??_createRandomShape,w,c
 11977  005F96  6ED9               	movwf	fsr2l,c
 11978  005F98  0E00               	movlw	0
 11979  005F9A  2016               	addwfc	??_createRandomShape+1,w,c
 11980  005F9C  6EDA               	movwf	fsr2h,c
 11981  005F9E  0E01               	movlw	1
 11982  005FA0  6EDF               	movwf	indf2,c
 11983                           
 11984                           ;main.c: 542: start++;
 11985  005FA2  2A2F               	incf	createRandomShape@start,f,c
 11986  005FA4  2A1F               	incf	createRandomShape@k_278,f,c
 11987  005FA6  D7CC               	goto	l3985
 11988  005FA8                     
 11989                           ;main.c: 546: all_shapes[i].orientation=2;
 11990  005FA8  5034               	movf	createRandomShape@i,w,c
 11991  005FAA  0D09               	mullw	9
 11992  005FAC  0E08               	movlw	8
 11993  005FAE  26F3               	addwf	prodl,f,c
 11994  005FB0  0E00               	movlw	0
 11995  005FB2  22F4               	addwfc	prodh,f,c
 11996  005FB4  0E00               	movlw	low _all_shapes
 11997  005FB6  24F3               	addwf	prodl,w,c
 11998  005FB8  6ED9               	movwf	fsr2l,c
 11999  005FBA  0E01               	movlw	high _all_shapes
 12000  005FBC  20F4               	addwfc	prodh,w,c
 12001  005FBE  6EDA               	movwf	fsr2h,c
 12002  005FC0  0E02               	movlw	2
 12003  005FC2  6EDF               	movwf	indf2,c
 12004                           
 12005                           ;main.c: 547: uint8_t start=0;
 12006  005FC4  0E00               	movlw	0
 12007  005FC6  6E2F               	movwf	createRandomShape@start,c
 12008                           
 12009                           ;main.c: 548: for (uint8_t k=0;k<4;k++){
 12010  005FC8  0E00               	movlw	0
 12011  005FCA  6E20               	movwf	createRandomShape@k_279,c
 12012  005FCC                     l4003:
 12013  005FCC  0E03               	movlw	3
 12014  005FCE  6420               	cpfsgt	createRandomShape@k_279,c
 12015  005FD0  D002               	goto	l211
 12016  005FD2  EF3A  F039         	goto	l217
 12017  005FD6                     l211:
 12018                           
 12019                           ;main.c: 549: all_shapes[i].index[k].x=10;
 12020  005FD6  5034               	movf	createRandomShape@i,w,c
 12021  005FD8  0D09               	mullw	9
 12022  005FDA  0E00               	movlw	low _all_shapes
 12023  005FDC  6E15               	movwf	??_createRandomShape& (0+255),c
 12024  005FDE  0E01               	movlw	high _all_shapes
 12025  005FE0  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12026  005FE2  50F3               	movf	prodl,w,c
 12027  005FE4  2615               	addwf	??_createRandomShape,f,c
 12028  005FE6  50F4               	movf	prodh,w,c
 12029  005FE8  2216               	addwfc	??_createRandomShape+1,f,c
 12030  005FEA  5020               	movf	createRandomShape@k_279,w,c
 12031  005FEC  0D02               	mullw	2
 12032  005FEE  50F3               	movf	prodl,w,c
 12033  005FF0  2415               	addwf	??_createRandomShape,w,c
 12034  005FF2  6ED9               	movwf	fsr2l,c
 12035  005FF4  50F4               	movf	prodh,w,c
 12036  005FF6  2016               	addwfc	??_createRandomShape+1,w,c
 12037  005FF8  6EDA               	movwf	fsr2h,c
 12038  005FFA  0E0A               	movlw	10
 12039  005FFC  6EDF               	movwf	indf2,c
 12040                           
 12041                           ;main.c: 550: all_shapes[i].index[k].y=start;
 12042  005FFE  5034               	movf	createRandomShape@i,w,c
 12043  006000  0D09               	mullw	9
 12044  006002  0E00               	movlw	low _all_shapes
 12045  006004  6E15               	movwf	??_createRandomShape& (0+255),c
 12046  006006  0E01               	movlw	high _all_shapes
 12047  006008  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12048  00600A  50F3               	movf	prodl,w,c
 12049  00600C  2615               	addwf	??_createRandomShape,f,c
 12050  00600E  50F4               	movf	prodh,w,c
 12051  006010  2216               	addwfc	??_createRandomShape+1,f,c
 12052  006012  5020               	movf	createRandomShape@k_279,w,c
 12053  006014  0D02               	mullw	2
 12054  006016  50F3               	movf	prodl,w,c
 12055  006018  2615               	addwf	??_createRandomShape,f,c
 12056  00601A  50F4               	movf	prodh,w,c
 12057  00601C  2216               	addwfc	??_createRandomShape+1,f,c
 12058  00601E  0E01               	movlw	1
 12059  006020  2415               	addwf	??_createRandomShape,w,c
 12060  006022  6ED9               	movwf	fsr2l,c
 12061  006024  0E00               	movlw	0
 12062  006026  2016               	addwfc	??_createRandomShape+1,w,c
 12063  006028  6EDA               	movwf	fsr2h,c
 12064  00602A  C02F  FFDF         	movff	createRandomShape@start,indf2
 12065                           
 12066                           ;main.c: 551: start++;
 12067  00602E  2A2F               	incf	createRandomShape@start,f,c
 12068  006030  2A20               	incf	createRandomShape@k_279,f,c
 12069  006032  D7CC               	goto	l4003
 12070  006034                     
 12071                           ;main.c: 555: all_shapes[i].orientation=3;
 12072  006034  5034               	movf	createRandomShape@i,w,c
 12073  006036  0D09               	mullw	9
 12074  006038  0E08               	movlw	8
 12075  00603A  26F3               	addwf	prodl,f,c
 12076  00603C  0E00               	movlw	0
 12077  00603E  22F4               	addwfc	prodh,f,c
 12078  006040  0E00               	movlw	low _all_shapes
 12079  006042  24F3               	addwf	prodl,w,c
 12080  006044  6ED9               	movwf	fsr2l,c
 12081  006046  0E01               	movlw	high _all_shapes
 12082  006048  20F4               	addwfc	prodh,w,c
 12083  00604A  6EDA               	movwf	fsr2h,c
 12084  00604C  0E03               	movlw	3
 12085  00604E  6EDF               	movwf	indf2,c
 12086                           
 12087                           ;main.c: 556: uint8_t start=0;
 12088  006050  0E00               	movlw	0
 12089  006052  6E2F               	movwf	createRandomShape@start,c
 12090                           
 12091                           ;main.c: 557: for (uint8_t k=0;k<4;k++){
 12092  006054  0E00               	movlw	0
 12093  006056  6E21               	movwf	createRandomShape@k_280,c
 12094  006058                     l4021:
 12095  006058  0E03               	movlw	3
 12096  00605A  6421               	cpfsgt	createRandomShape@k_280,c
 12097  00605C  D002               	goto	l214
 12098  00605E  EF3A  F039         	goto	l217
 12099  006062                     l214:
 12100                           
 12101                           ;main.c: 558: all_shapes[i].index[k].x=11;
 12102  006062  5034               	movf	createRandomShape@i,w,c
 12103  006064  0D09               	mullw	9
 12104  006066  0E00               	movlw	low _all_shapes
 12105  006068  6E15               	movwf	??_createRandomShape& (0+255),c
 12106  00606A  0E01               	movlw	high _all_shapes
 12107  00606C  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12108  00606E  50F3               	movf	prodl,w,c
 12109  006070  2615               	addwf	??_createRandomShape,f,c
 12110  006072  50F4               	movf	prodh,w,c
 12111  006074  2216               	addwfc	??_createRandomShape+1,f,c
 12112  006076  5021               	movf	createRandomShape@k_280,w,c
 12113  006078  0D02               	mullw	2
 12114  00607A  50F3               	movf	prodl,w,c
 12115  00607C  2415               	addwf	??_createRandomShape,w,c
 12116  00607E  6ED9               	movwf	fsr2l,c
 12117  006080  50F4               	movf	prodh,w,c
 12118  006082  2016               	addwfc	??_createRandomShape+1,w,c
 12119  006084  6EDA               	movwf	fsr2h,c
 12120  006086  0E0B               	movlw	11
 12121  006088  6EDF               	movwf	indf2,c
 12122                           
 12123                           ;main.c: 559: all_shapes[i].index[k].y=start;
 12124  00608A  5034               	movf	createRandomShape@i,w,c
 12125  00608C  0D09               	mullw	9
 12126  00608E  0E00               	movlw	low _all_shapes
 12127  006090  6E15               	movwf	??_createRandomShape& (0+255),c
 12128  006092  0E01               	movlw	high _all_shapes
 12129  006094  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12130  006096  50F3               	movf	prodl,w,c
 12131  006098  2615               	addwf	??_createRandomShape,f,c
 12132  00609A  50F4               	movf	prodh,w,c
 12133  00609C  2216               	addwfc	??_createRandomShape+1,f,c
 12134  00609E  5021               	movf	createRandomShape@k_280,w,c
 12135  0060A0  0D02               	mullw	2
 12136  0060A2  50F3               	movf	prodl,w,c
 12137  0060A4  2615               	addwf	??_createRandomShape,f,c
 12138  0060A6  50F4               	movf	prodh,w,c
 12139  0060A8  2216               	addwfc	??_createRandomShape+1,f,c
 12140  0060AA  0E01               	movlw	1
 12141  0060AC  2415               	addwf	??_createRandomShape,w,c
 12142  0060AE  6ED9               	movwf	fsr2l,c
 12143  0060B0  0E00               	movlw	0
 12144  0060B2  2016               	addwfc	??_createRandomShape+1,w,c
 12145  0060B4  6EDA               	movwf	fsr2h,c
 12146  0060B6  C02F  FFDF         	movff	createRandomShape@start,indf2
 12147                           
 12148                           ;main.c: 560: start++;
 12149  0060BA  2A2F               	incf	createRandomShape@start,f,c
 12150  0060BC  2A21               	incf	createRandomShape@k_280,f,c
 12151  0060BE  D7CC               	goto	l4021
 12152  0060C0  5033               	movf	createRandomShape@orientation,w,c
 12153                           
 12154                           ; Switch size 1, requested type "space"
 12155                           ; Number of cases is 4, Range of values is 0 to 3
 12156                           ; switch strategies available:
 12157                           ; Name         Instructions Cycles
 12158                           ; simple_byte           13     7 (average)
 12159                           ;	Chosen strategy is simple_byte
 12160  0060C2  0A00               	xorlw	0	; case 0
 12161  0060C4  B4D8               	btfsc	status,2,c
 12162  0060C6  D6E4               	goto	l203
 12163  0060C8  0A01               	xorlw	1	; case 1
 12164  0060CA  B4D8               	btfsc	status,2,c
 12165  0060CC  D727               	goto	l207
 12166  0060CE  0A03               	xorlw	3	; case 2
 12167  0060D0  B4D8               	btfsc	status,2,c
 12168  0060D2  D76A               	goto	l210
 12169  0060D4  0A01               	xorlw	1	; case 3
 12170  0060D6  B4D8               	btfsc	status,2,c
 12171  0060D8  D7AD               	goto	l213
 12172                           
 12173                           ;main.c: 566: break;
 12174  0060DA  EF3A  F039         	goto	l217
 12175  0060DE                     
 12176                           ;main.c: 570: all_shapes[i].orientation=0;
 12177  0060DE  5034               	movf	createRandomShape@i,w,c
 12178  0060E0  0D09               	mullw	9
 12179  0060E2  0E08               	movlw	8
 12180  0060E4  26F3               	addwf	prodl,f,c
 12181  0060E6  0E00               	movlw	0
 12182  0060E8  22F4               	addwfc	prodh,f,c
 12183  0060EA  0E00               	movlw	low _all_shapes
 12184  0060EC  24F3               	addwf	prodl,w,c
 12185  0060EE  6ED9               	movwf	fsr2l,c
 12186  0060F0  0E01               	movlw	high _all_shapes
 12187  0060F2  20F4               	addwfc	prodh,w,c
 12188  0060F4  6EDA               	movwf	fsr2h,c
 12189  0060F6  0E00               	movlw	0
 12190  0060F8  6EDF               	movwf	indf2,c
 12191                           
 12192                           ;main.c: 571: uint8_t start=10;
 12193  0060FA  0E0A               	movlw	10
 12194  0060FC  6E30               	movwf	createRandomShape@start_281,c
 12195                           
 12196                           ;main.c: 572: all_shapes[i].index[0].x=10;
 12197  0060FE  5034               	movf	createRandomShape@i,w,c
 12198  006100  0D09               	mullw	9
 12199  006102  0E00               	movlw	low _all_shapes
 12200  006104  24F3               	addwf	prodl,w,c
 12201  006106  6ED9               	movwf	fsr2l,c
 12202  006108  0E01               	movlw	high _all_shapes
 12203  00610A  20F4               	addwfc	prodh,w,c
 12204  00610C  6EDA               	movwf	fsr2h,c
 12205  00610E  0E0A               	movlw	10
 12206  006110  6EDF               	movwf	indf2,c
 12207                           
 12208                           ;main.c: 573: all_shapes[i].index[0].y=0;
 12209  006112  5034               	movf	createRandomShape@i,w,c
 12210  006114  0D09               	mullw	9
 12211  006116  0E01               	movlw	1
 12212  006118  26F3               	addwf	prodl,f,c
 12213  00611A  0E00               	movlw	0
 12214  00611C  22F4               	addwfc	prodh,f,c
 12215  00611E  0E00               	movlw	low _all_shapes
 12216  006120  24F3               	addwf	prodl,w,c
 12217  006122  6ED9               	movwf	fsr2l,c
 12218  006124  0E01               	movlw	high _all_shapes
 12219  006126  20F4               	addwfc	prodh,w,c
 12220  006128  6EDA               	movwf	fsr2h,c
 12221  00612A  0E00               	movlw	0
 12222  00612C  6EDF               	movwf	indf2,c
 12223                           
 12224                           ;main.c: 574: for (uint8_t k=1;k<4;k++){
 12225  00612E  0E01               	movlw	1
 12226  006130  6E22               	movwf	createRandomShape@k_282,c
 12227  006132                     l4047:
 12228  006132  0E03               	movlw	3
 12229  006134  6422               	cpfsgt	createRandomShape@k_282,c
 12230  006136  D002               	goto	l221
 12231  006138  EF3A  F039         	goto	l217
 12232  00613C                     l221:
 12233                           
 12234                           ;main.c: 575: all_shapes[i].index[k].x=start;
 12235  00613C  5034               	movf	createRandomShape@i,w,c
 12236  00613E  0D09               	mullw	9
 12237  006140  0E00               	movlw	low _all_shapes
 12238  006142  6E15               	movwf	??_createRandomShape& (0+255),c
 12239  006144  0E01               	movlw	high _all_shapes
 12240  006146  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12241  006148  50F3               	movf	prodl,w,c
 12242  00614A  2615               	addwf	??_createRandomShape,f,c
 12243  00614C  50F4               	movf	prodh,w,c
 12244  00614E  2216               	addwfc	??_createRandomShape+1,f,c
 12245  006150  5022               	movf	createRandomShape@k_282,w,c
 12246  006152  0D02               	mullw	2
 12247  006154  50F3               	movf	prodl,w,c
 12248  006156  2415               	addwf	??_createRandomShape,w,c
 12249  006158  6ED9               	movwf	fsr2l,c
 12250  00615A  50F4               	movf	prodh,w,c
 12251  00615C  2016               	addwfc	??_createRandomShape+1,w,c
 12252  00615E  6EDA               	movwf	fsr2h,c
 12253  006160  C030  FFDF         	movff	createRandomShape@start_281,indf2
 12254                           
 12255                           ;main.c: 576: all_shapes[i].index[k].y=1;
 12256  006164  5034               	movf	createRandomShape@i,w,c
 12257  006166  0D09               	mullw	9
 12258  006168  0E00               	movlw	low _all_shapes
 12259  00616A  6E15               	movwf	??_createRandomShape& (0+255),c
 12260  00616C  0E01               	movlw	high _all_shapes
 12261  00616E  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12262  006170  50F3               	movf	prodl,w,c
 12263  006172  2615               	addwf	??_createRandomShape,f,c
 12264  006174  50F4               	movf	prodh,w,c
 12265  006176  2216               	addwfc	??_createRandomShape+1,f,c
 12266  006178  5022               	movf	createRandomShape@k_282,w,c
 12267  00617A  0D02               	mullw	2
 12268  00617C  50F3               	movf	prodl,w,c
 12269  00617E  2615               	addwf	??_createRandomShape,f,c
 12270  006180  50F4               	movf	prodh,w,c
 12271  006182  2216               	addwfc	??_createRandomShape+1,f,c
 12272  006184  0E01               	movlw	1
 12273  006186  2415               	addwf	??_createRandomShape,w,c
 12274  006188  6ED9               	movwf	fsr2l,c
 12275  00618A  0E00               	movlw	0
 12276  00618C  2016               	addwfc	??_createRandomShape+1,w,c
 12277  00618E  6EDA               	movwf	fsr2h,c
 12278  006190  0E01               	movlw	1
 12279  006192  6EDF               	movwf	indf2,c
 12280                           
 12281                           ;main.c: 577: start++;
 12282  006194  2A30               	incf	createRandomShape@start_281,f,c
 12283  006196  2A22               	incf	createRandomShape@k_282,f,c
 12284  006198  D7CC               	goto	l4047
 12285  00619A                     
 12286                           ;main.c: 581: all_shapes[i].orientation=1;
 12287  00619A  5034               	movf	createRandomShape@i,w,c
 12288  00619C  0D09               	mullw	9
 12289  00619E  0E08               	movlw	8
 12290  0061A0  26F3               	addwf	prodl,f,c
 12291  0061A2  0E00               	movlw	0
 12292  0061A4  22F4               	addwfc	prodh,f,c
 12293  0061A6  0E00               	movlw	low _all_shapes
 12294  0061A8  24F3               	addwf	prodl,w,c
 12295  0061AA  6ED9               	movwf	fsr2l,c
 12296  0061AC  0E01               	movlw	high _all_shapes
 12297  0061AE  20F4               	addwfc	prodh,w,c
 12298  0061B0  6EDA               	movwf	fsr2h,c
 12299  0061B2  0E01               	movlw	1
 12300  0061B4  6EDF               	movwf	indf2,c
 12301                           
 12302                           ;main.c: 582: uint8_t start=10;
 12303  0061B6  0E0A               	movlw	10
 12304  0061B8  6E30               	movwf	createRandomShape@start_281,c
 12305                           
 12306                           ;main.c: 583: all_shapes[i].index[0].x=12;
 12307  0061BA  5034               	movf	createRandomShape@i,w,c
 12308  0061BC  0D09               	mullw	9
 12309  0061BE  0E00               	movlw	low _all_shapes
 12310  0061C0  24F3               	addwf	prodl,w,c
 12311  0061C2  6ED9               	movwf	fsr2l,c
 12312  0061C4  0E01               	movlw	high _all_shapes
 12313  0061C6  20F4               	addwfc	prodh,w,c
 12314  0061C8  6EDA               	movwf	fsr2h,c
 12315  0061CA  0E0C               	movlw	12
 12316  0061CC  6EDF               	movwf	indf2,c
 12317                           
 12318                           ;main.c: 584: all_shapes[i].index[0].y=2;
 12319  0061CE  5034               	movf	createRandomShape@i,w,c
 12320  0061D0  0D09               	mullw	9
 12321  0061D2  0E01               	movlw	1
 12322  0061D4  26F3               	addwf	prodl,f,c
 12323  0061D6  0E00               	movlw	0
 12324  0061D8  22F4               	addwfc	prodh,f,c
 12325  0061DA  0E00               	movlw	low _all_shapes
 12326  0061DC  24F3               	addwf	prodl,w,c
 12327  0061DE  6ED9               	movwf	fsr2l,c
 12328  0061E0  0E01               	movlw	high _all_shapes
 12329  0061E2  20F4               	addwfc	prodh,w,c
 12330  0061E4  6EDA               	movwf	fsr2h,c
 12331  0061E6  0E02               	movlw	2
 12332  0061E8  6EDF               	movwf	indf2,c
 12333                           
 12334                           ;main.c: 585: for (uint8_t k=1;k<4;k++){
 12335  0061EA  0E01               	movlw	1
 12336  0061EC  6E23               	movwf	createRandomShape@k_283,c
 12337  0061EE                     l4069:
 12338  0061EE  0E03               	movlw	3
 12339  0061F0  6423               	cpfsgt	createRandomShape@k_283,c
 12340  0061F2  D002               	goto	l225
 12341  0061F4  EF3A  F039         	goto	l217
 12342  0061F8                     l225:
 12343                           
 12344                           ;main.c: 586: all_shapes[i].index[k].x=start;
 12345  0061F8  5034               	movf	createRandomShape@i,w,c
 12346  0061FA  0D09               	mullw	9
 12347  0061FC  0E00               	movlw	low _all_shapes
 12348  0061FE  6E15               	movwf	??_createRandomShape& (0+255),c
 12349  006200  0E01               	movlw	high _all_shapes
 12350  006202  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12351  006204  50F3               	movf	prodl,w,c
 12352  006206  2615               	addwf	??_createRandomShape,f,c
 12353  006208  50F4               	movf	prodh,w,c
 12354  00620A  2216               	addwfc	??_createRandomShape+1,f,c
 12355  00620C  5023               	movf	createRandomShape@k_283,w,c
 12356  00620E  0D02               	mullw	2
 12357  006210  50F3               	movf	prodl,w,c
 12358  006212  2415               	addwf	??_createRandomShape,w,c
 12359  006214  6ED9               	movwf	fsr2l,c
 12360  006216  50F4               	movf	prodh,w,c
 12361  006218  2016               	addwfc	??_createRandomShape+1,w,c
 12362  00621A  6EDA               	movwf	fsr2h,c
 12363  00621C  C030  FFDF         	movff	createRandomShape@start_281,indf2
 12364                           
 12365                           ;main.c: 587: all_shapes[i].index[k].y=1;
 12366  006220  5034               	movf	createRandomShape@i,w,c
 12367  006222  0D09               	mullw	9
 12368  006224  0E00               	movlw	low _all_shapes
 12369  006226  6E15               	movwf	??_createRandomShape& (0+255),c
 12370  006228  0E01               	movlw	high _all_shapes
 12371  00622A  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12372  00622C  50F3               	movf	prodl,w,c
 12373  00622E  2615               	addwf	??_createRandomShape,f,c
 12374  006230  50F4               	movf	prodh,w,c
 12375  006232  2216               	addwfc	??_createRandomShape+1,f,c
 12376  006234  5023               	movf	createRandomShape@k_283,w,c
 12377  006236  0D02               	mullw	2
 12378  006238  50F3               	movf	prodl,w,c
 12379  00623A  2615               	addwf	??_createRandomShape,f,c
 12380  00623C  50F4               	movf	prodh,w,c
 12381  00623E  2216               	addwfc	??_createRandomShape+1,f,c
 12382  006240  0E01               	movlw	1
 12383  006242  2415               	addwf	??_createRandomShape,w,c
 12384  006244  6ED9               	movwf	fsr2l,c
 12385  006246  0E00               	movlw	0
 12386  006248  2016               	addwfc	??_createRandomShape+1,w,c
 12387  00624A  6EDA               	movwf	fsr2h,c
 12388  00624C  0E01               	movlw	1
 12389  00624E  6EDF               	movwf	indf2,c
 12390                           
 12391                           ;main.c: 588: start++;
 12392  006250  2A30               	incf	createRandomShape@start_281,f,c
 12393  006252  2A23               	incf	createRandomShape@k_283,f,c
 12394  006254  D7CC               	goto	l4069
 12395  006256                     
 12396                           ;main.c: 592: all_shapes[i].orientation=2;
 12397  006256  5034               	movf	createRandomShape@i,w,c
 12398  006258  0D09               	mullw	9
 12399  00625A  0E08               	movlw	8
 12400  00625C  26F3               	addwf	prodl,f,c
 12401  00625E  0E00               	movlw	0
 12402  006260  22F4               	addwfc	prodh,f,c
 12403  006262  0E00               	movlw	low _all_shapes
 12404  006264  24F3               	addwf	prodl,w,c
 12405  006266  6ED9               	movwf	fsr2l,c
 12406  006268  0E01               	movlw	high _all_shapes
 12407  00626A  20F4               	addwfc	prodh,w,c
 12408  00626C  6EDA               	movwf	fsr2h,c
 12409  00626E  0E02               	movlw	2
 12410  006270  6EDF               	movwf	indf2,c
 12411                           
 12412                           ;main.c: 593: uint8_t start=0;
 12413  006272  0E00               	movlw	0
 12414  006274  6E30               	movwf	createRandomShape@start_281,c
 12415                           
 12416                           ;main.c: 594: all_shapes[i].index[0].x=10;
 12417  006276  5034               	movf	createRandomShape@i,w,c
 12418  006278  0D09               	mullw	9
 12419  00627A  0E00               	movlw	low _all_shapes
 12420  00627C  24F3               	addwf	prodl,w,c
 12421  00627E  6ED9               	movwf	fsr2l,c
 12422  006280  0E01               	movlw	high _all_shapes
 12423  006282  20F4               	addwfc	prodh,w,c
 12424  006284  6EDA               	movwf	fsr2h,c
 12425  006286  0E0A               	movlw	10
 12426  006288  6EDF               	movwf	indf2,c
 12427                           
 12428                           ;main.c: 595: all_shapes[i].index[0].y=2;
 12429  00628A  5034               	movf	createRandomShape@i,w,c
 12430  00628C  0D09               	mullw	9
 12431  00628E  0E01               	movlw	1
 12432  006290  26F3               	addwf	prodl,f,c
 12433  006292  0E00               	movlw	0
 12434  006294  22F4               	addwfc	prodh,f,c
 12435  006296  0E00               	movlw	low _all_shapes
 12436  006298  24F3               	addwf	prodl,w,c
 12437  00629A  6ED9               	movwf	fsr2l,c
 12438  00629C  0E01               	movlw	high _all_shapes
 12439  00629E  20F4               	addwfc	prodh,w,c
 12440  0062A0  6EDA               	movwf	fsr2h,c
 12441  0062A2  0E02               	movlw	2
 12442  0062A4  6EDF               	movwf	indf2,c
 12443                           
 12444                           ;main.c: 596: for (uint8_t k=1;k<4;k++){
 12445  0062A6  0E01               	movlw	1
 12446  0062A8  6E24               	movwf	createRandomShape@k_284,c
 12447  0062AA                     l4091:
 12448  0062AA  0E03               	movlw	3
 12449  0062AC  6424               	cpfsgt	createRandomShape@k_284,c
 12450  0062AE  D002               	goto	l228
 12451  0062B0  EF3A  F039         	goto	l217
 12452  0062B4                     l228:
 12453                           
 12454                           ;main.c: 597: all_shapes[i].index[k].x=11;
 12455  0062B4  5034               	movf	createRandomShape@i,w,c
 12456  0062B6  0D09               	mullw	9
 12457  0062B8  0E00               	movlw	low _all_shapes
 12458  0062BA  6E15               	movwf	??_createRandomShape& (0+255),c
 12459  0062BC  0E01               	movlw	high _all_shapes
 12460  0062BE  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12461  0062C0  50F3               	movf	prodl,w,c
 12462  0062C2  2615               	addwf	??_createRandomShape,f,c
 12463  0062C4  50F4               	movf	prodh,w,c
 12464  0062C6  2216               	addwfc	??_createRandomShape+1,f,c
 12465  0062C8  5024               	movf	createRandomShape@k_284,w,c
 12466  0062CA  0D02               	mullw	2
 12467  0062CC  50F3               	movf	prodl,w,c
 12468  0062CE  2415               	addwf	??_createRandomShape,w,c
 12469  0062D0  6ED9               	movwf	fsr2l,c
 12470  0062D2  50F4               	movf	prodh,w,c
 12471  0062D4  2016               	addwfc	??_createRandomShape+1,w,c
 12472  0062D6  6EDA               	movwf	fsr2h,c
 12473  0062D8  0E0B               	movlw	11
 12474  0062DA  6EDF               	movwf	indf2,c
 12475                           
 12476                           ;main.c: 598: all_shapes[i].index[k].y=start;
 12477  0062DC  5034               	movf	createRandomShape@i,w,c
 12478  0062DE  0D09               	mullw	9
 12479  0062E0  0E00               	movlw	low _all_shapes
 12480  0062E2  6E15               	movwf	??_createRandomShape& (0+255),c
 12481  0062E4  0E01               	movlw	high _all_shapes
 12482  0062E6  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12483  0062E8  50F3               	movf	prodl,w,c
 12484  0062EA  2615               	addwf	??_createRandomShape,f,c
 12485  0062EC  50F4               	movf	prodh,w,c
 12486  0062EE  2216               	addwfc	??_createRandomShape+1,f,c
 12487  0062F0  5024               	movf	createRandomShape@k_284,w,c
 12488  0062F2  0D02               	mullw	2
 12489  0062F4  50F3               	movf	prodl,w,c
 12490  0062F6  2615               	addwf	??_createRandomShape,f,c
 12491  0062F8  50F4               	movf	prodh,w,c
 12492  0062FA  2216               	addwfc	??_createRandomShape+1,f,c
 12493  0062FC  0E01               	movlw	1
 12494  0062FE  2415               	addwf	??_createRandomShape,w,c
 12495  006300  6ED9               	movwf	fsr2l,c
 12496  006302  0E00               	movlw	0
 12497  006304  2016               	addwfc	??_createRandomShape+1,w,c
 12498  006306  6EDA               	movwf	fsr2h,c
 12499  006308  C030  FFDF         	movff	createRandomShape@start_281,indf2
 12500                           
 12501                           ;main.c: 599: start++;
 12502  00630C  2A30               	incf	createRandomShape@start_281,f,c
 12503  00630E  2A24               	incf	createRandomShape@k_284,f,c
 12504  006310  D7CC               	goto	l4091
 12505  006312                     
 12506                           ;main.c: 603: all_shapes[i].orientation=3;
 12507  006312  5034               	movf	createRandomShape@i,w,c
 12508  006314  0D09               	mullw	9
 12509  006316  0E08               	movlw	8
 12510  006318  26F3               	addwf	prodl,f,c
 12511  00631A  0E00               	movlw	0
 12512  00631C  22F4               	addwfc	prodh,f,c
 12513  00631E  0E00               	movlw	low _all_shapes
 12514  006320  24F3               	addwf	prodl,w,c
 12515  006322  6ED9               	movwf	fsr2l,c
 12516  006324  0E01               	movlw	high _all_shapes
 12517  006326  20F4               	addwfc	prodh,w,c
 12518  006328  6EDA               	movwf	fsr2h,c
 12519  00632A  0E03               	movlw	3
 12520  00632C  6EDF               	movwf	indf2,c
 12521                           
 12522                           ;main.c: 604: uint8_t start=0;
 12523  00632E  0E00               	movlw	0
 12524  006330  6E30               	movwf	createRandomShape@start_281,c
 12525                           
 12526                           ;main.c: 605: all_shapes[i].index[0].x=12;
 12527  006332  5034               	movf	createRandomShape@i,w,c
 12528  006334  0D09               	mullw	9
 12529  006336  0E00               	movlw	low _all_shapes
 12530  006338  24F3               	addwf	prodl,w,c
 12531  00633A  6ED9               	movwf	fsr2l,c
 12532  00633C  0E01               	movlw	high _all_shapes
 12533  00633E  20F4               	addwfc	prodh,w,c
 12534  006340  6EDA               	movwf	fsr2h,c
 12535  006342  0E0C               	movlw	12
 12536  006344  6EDF               	movwf	indf2,c
 12537                           
 12538                           ;main.c: 606: all_shapes[i].index[0].y=0;
 12539  006346  5034               	movf	createRandomShape@i,w,c
 12540  006348  0D09               	mullw	9
 12541  00634A  0E01               	movlw	1
 12542  00634C  26F3               	addwf	prodl,f,c
 12543  00634E  0E00               	movlw	0
 12544  006350  22F4               	addwfc	prodh,f,c
 12545  006352  0E00               	movlw	low _all_shapes
 12546  006354  24F3               	addwf	prodl,w,c
 12547  006356  6ED9               	movwf	fsr2l,c
 12548  006358  0E01               	movlw	high _all_shapes
 12549  00635A  20F4               	addwfc	prodh,w,c
 12550  00635C  6EDA               	movwf	fsr2h,c
 12551  00635E  0E00               	movlw	0
 12552  006360  6EDF               	movwf	indf2,c
 12553                           
 12554                           ;main.c: 607: for (uint8_t k=1;k<4;k++){
 12555  006362  0E01               	movlw	1
 12556  006364  6E25               	movwf	createRandomShape@k_285,c
 12557  006366                     l4113:
 12558  006366  0E03               	movlw	3
 12559  006368  6425               	cpfsgt	createRandomShape@k_285,c
 12560  00636A  D002               	goto	l231
 12561  00636C  EF3A  F039         	goto	l217
 12562  006370                     l231:
 12563                           
 12564                           ;main.c: 608: all_shapes[i].index[k].x=11;
 12565  006370  5034               	movf	createRandomShape@i,w,c
 12566  006372  0D09               	mullw	9
 12567  006374  0E00               	movlw	low _all_shapes
 12568  006376  6E15               	movwf	??_createRandomShape& (0+255),c
 12569  006378  0E01               	movlw	high _all_shapes
 12570  00637A  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12571  00637C  50F3               	movf	prodl,w,c
 12572  00637E  2615               	addwf	??_createRandomShape,f,c
 12573  006380  50F4               	movf	prodh,w,c
 12574  006382  2216               	addwfc	??_createRandomShape+1,f,c
 12575  006384  5025               	movf	createRandomShape@k_285,w,c
 12576  006386  0D02               	mullw	2
 12577  006388  50F3               	movf	prodl,w,c
 12578  00638A  2415               	addwf	??_createRandomShape,w,c
 12579  00638C  6ED9               	movwf	fsr2l,c
 12580  00638E  50F4               	movf	prodh,w,c
 12581  006390  2016               	addwfc	??_createRandomShape+1,w,c
 12582  006392  6EDA               	movwf	fsr2h,c
 12583  006394  0E0B               	movlw	11
 12584  006396  6EDF               	movwf	indf2,c
 12585                           
 12586                           ;main.c: 609: all_shapes[i].index[k].y=start;
 12587  006398  5034               	movf	createRandomShape@i,w,c
 12588  00639A  0D09               	mullw	9
 12589  00639C  0E00               	movlw	low _all_shapes
 12590  00639E  6E15               	movwf	??_createRandomShape& (0+255),c
 12591  0063A0  0E01               	movlw	high _all_shapes
 12592  0063A2  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12593  0063A4  50F3               	movf	prodl,w,c
 12594  0063A6  2615               	addwf	??_createRandomShape,f,c
 12595  0063A8  50F4               	movf	prodh,w,c
 12596  0063AA  2216               	addwfc	??_createRandomShape+1,f,c
 12597  0063AC  5025               	movf	createRandomShape@k_285,w,c
 12598  0063AE  0D02               	mullw	2
 12599  0063B0  50F3               	movf	prodl,w,c
 12600  0063B2  2615               	addwf	??_createRandomShape,f,c
 12601  0063B4  50F4               	movf	prodh,w,c
 12602  0063B6  2216               	addwfc	??_createRandomShape+1,f,c
 12603  0063B8  0E01               	movlw	1
 12604  0063BA  2415               	addwf	??_createRandomShape,w,c
 12605  0063BC  6ED9               	movwf	fsr2l,c
 12606  0063BE  0E00               	movlw	0
 12607  0063C0  2016               	addwfc	??_createRandomShape+1,w,c
 12608  0063C2  6EDA               	movwf	fsr2h,c
 12609  0063C4  C030  FFDF         	movff	createRandomShape@start_281,indf2
 12610                           
 12611                           ;main.c: 610: start++;
 12612  0063C8  2A30               	incf	createRandomShape@start_281,f,c
 12613  0063CA  2A25               	incf	createRandomShape@k_285,f,c
 12614  0063CC  D7CC               	goto	l4113
 12615  0063CE  5033               	movf	createRandomShape@orientation,w,c
 12616                           
 12617                           ; Switch size 1, requested type "space"
 12618                           ; Number of cases is 4, Range of values is 0 to 3
 12619                           ; switch strategies available:
 12620                           ; Name         Instructions Cycles
 12621                           ; simple_byte           13     7 (average)
 12622                           ;	Chosen strategy is simple_byte
 12623  0063D0  0A00               	xorlw	0	; case 0
 12624  0063D2  B4D8               	btfsc	status,2,c
 12625  0063D4  D684               	goto	l220
 12626  0063D6  0A01               	xorlw	1	; case 1
 12627  0063D8  B4D8               	btfsc	status,2,c
 12628  0063DA  D6DF               	goto	l224
 12629  0063DC  0A03               	xorlw	3	; case 2
 12630  0063DE  B4D8               	btfsc	status,2,c
 12631  0063E0  D73A               	goto	l227
 12632  0063E2  0A01               	xorlw	1	; case 3
 12633  0063E4  B4D8               	btfsc	status,2,c
 12634  0063E6  D795               	goto	l230
 12635                           
 12636                           ;main.c: 616: break;
 12637  0063E8  EF3A  F039         	goto	l217
 12638  0063EC                     
 12639                           ;main.c: 620: all_shapes[i].orientation=0;
 12640  0063EC  5034               	movf	createRandomShape@i,w,c
 12641  0063EE  0D09               	mullw	9
 12642  0063F0  0E08               	movlw	8
 12643  0063F2  26F3               	addwf	prodl,f,c
 12644  0063F4  0E00               	movlw	0
 12645  0063F6  22F4               	addwfc	prodh,f,c
 12646  0063F8  0E00               	movlw	low _all_shapes
 12647  0063FA  24F3               	addwf	prodl,w,c
 12648  0063FC  6ED9               	movwf	fsr2l,c
 12649  0063FE  0E01               	movlw	high _all_shapes
 12650  006400  20F4               	addwfc	prodh,w,c
 12651  006402  6EDA               	movwf	fsr2h,c
 12652  006404  0E00               	movlw	0
 12653  006406  6EDF               	movwf	indf2,c
 12654                           
 12655                           ;main.c: 621: uint8_t start=10;
 12656  006408  0E0A               	movlw	10
 12657  00640A  6E31               	movwf	createRandomShape@start_286,c
 12658                           
 12659                           ;main.c: 622: all_shapes[i].index[0].x=12;
 12660  00640C  5034               	movf	createRandomShape@i,w,c
 12661  00640E  0D09               	mullw	9
 12662  006410  0E00               	movlw	low _all_shapes
 12663  006412  24F3               	addwf	prodl,w,c
 12664  006414  6ED9               	movwf	fsr2l,c
 12665  006416  0E01               	movlw	high _all_shapes
 12666  006418  20F4               	addwfc	prodh,w,c
 12667  00641A  6EDA               	movwf	fsr2h,c
 12668  00641C  0E0C               	movlw	12
 12669  00641E  6EDF               	movwf	indf2,c
 12670                           
 12671                           ;main.c: 623: all_shapes[i].index[0].y=0;
 12672  006420  5034               	movf	createRandomShape@i,w,c
 12673  006422  0D09               	mullw	9
 12674  006424  0E01               	movlw	1
 12675  006426  26F3               	addwf	prodl,f,c
 12676  006428  0E00               	movlw	0
 12677  00642A  22F4               	addwfc	prodh,f,c
 12678  00642C  0E00               	movlw	low _all_shapes
 12679  00642E  24F3               	addwf	prodl,w,c
 12680  006430  6ED9               	movwf	fsr2l,c
 12681  006432  0E01               	movlw	high _all_shapes
 12682  006434  20F4               	addwfc	prodh,w,c
 12683  006436  6EDA               	movwf	fsr2h,c
 12684  006438  0E00               	movlw	0
 12685  00643A  6EDF               	movwf	indf2,c
 12686                           
 12687                           ;main.c: 624: for (uint8_t k=1;k<4;k++){
 12688  00643C  0E01               	movlw	1
 12689  00643E  6E26               	movwf	createRandomShape@k_287,c
 12690  006440                     l4139:
 12691  006440  0E03               	movlw	3
 12692  006442  6426               	cpfsgt	createRandomShape@k_287,c
 12693  006444  D002               	goto	l237
 12694  006446  EF3A  F039         	goto	l217
 12695  00644A                     l237:
 12696                           
 12697                           ;main.c: 625: all_shapes[i].index[k].x=start;
 12698  00644A  5034               	movf	createRandomShape@i,w,c
 12699  00644C  0D09               	mullw	9
 12700  00644E  0E00               	movlw	low _all_shapes
 12701  006450  6E15               	movwf	??_createRandomShape& (0+255),c
 12702  006452  0E01               	movlw	high _all_shapes
 12703  006454  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12704  006456  50F3               	movf	prodl,w,c
 12705  006458  2615               	addwf	??_createRandomShape,f,c
 12706  00645A  50F4               	movf	prodh,w,c
 12707  00645C  2216               	addwfc	??_createRandomShape+1,f,c
 12708  00645E  5026               	movf	createRandomShape@k_287,w,c
 12709  006460  0D02               	mullw	2
 12710  006462  50F3               	movf	prodl,w,c
 12711  006464  2415               	addwf	??_createRandomShape,w,c
 12712  006466  6ED9               	movwf	fsr2l,c
 12713  006468  50F4               	movf	prodh,w,c
 12714  00646A  2016               	addwfc	??_createRandomShape+1,w,c
 12715  00646C  6EDA               	movwf	fsr2h,c
 12716  00646E  C031  FFDF         	movff	createRandomShape@start_286,indf2
 12717                           
 12718                           ;main.c: 626: all_shapes[i].index[k].y=1;
 12719  006472  5034               	movf	createRandomShape@i,w,c
 12720  006474  0D09               	mullw	9
 12721  006476  0E00               	movlw	low _all_shapes
 12722  006478  6E15               	movwf	??_createRandomShape& (0+255),c
 12723  00647A  0E01               	movlw	high _all_shapes
 12724  00647C  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12725  00647E  50F3               	movf	prodl,w,c
 12726  006480  2615               	addwf	??_createRandomShape,f,c
 12727  006482  50F4               	movf	prodh,w,c
 12728  006484  2216               	addwfc	??_createRandomShape+1,f,c
 12729  006486  5026               	movf	createRandomShape@k_287,w,c
 12730  006488  0D02               	mullw	2
 12731  00648A  50F3               	movf	prodl,w,c
 12732  00648C  2615               	addwf	??_createRandomShape,f,c
 12733  00648E  50F4               	movf	prodh,w,c
 12734  006490  2216               	addwfc	??_createRandomShape+1,f,c
 12735  006492  0E01               	movlw	1
 12736  006494  2415               	addwf	??_createRandomShape,w,c
 12737  006496  6ED9               	movwf	fsr2l,c
 12738  006498  0E00               	movlw	0
 12739  00649A  2016               	addwfc	??_createRandomShape+1,w,c
 12740  00649C  6EDA               	movwf	fsr2h,c
 12741  00649E  0E01               	movlw	1
 12742  0064A0  6EDF               	movwf	indf2,c
 12743                           
 12744                           ;main.c: 627: start++;
 12745  0064A2  2A31               	incf	createRandomShape@start_286,f,c
 12746  0064A4  2A26               	incf	createRandomShape@k_287,f,c
 12747  0064A6  D7CC               	goto	l4139
 12748  0064A8                     
 12749                           ;main.c: 631: all_shapes[i].orientation=1;
 12750  0064A8  5034               	movf	createRandomShape@i,w,c
 12751  0064AA  0D09               	mullw	9
 12752  0064AC  0E08               	movlw	8
 12753  0064AE  26F3               	addwf	prodl,f,c
 12754  0064B0  0E00               	movlw	0
 12755  0064B2  22F4               	addwfc	prodh,f,c
 12756  0064B4  0E00               	movlw	low _all_shapes
 12757  0064B6  24F3               	addwf	prodl,w,c
 12758  0064B8  6ED9               	movwf	fsr2l,c
 12759  0064BA  0E01               	movlw	high _all_shapes
 12760  0064BC  20F4               	addwfc	prodh,w,c
 12761  0064BE  6EDA               	movwf	fsr2h,c
 12762  0064C0  0E01               	movlw	1
 12763  0064C2  6EDF               	movwf	indf2,c
 12764                           
 12765                           ;main.c: 632: uint8_t start=10;
 12766  0064C4  0E0A               	movlw	10
 12767  0064C6  6E31               	movwf	createRandomShape@start_286,c
 12768                           
 12769                           ;main.c: 633: all_shapes[i].index[0].x=10;
 12770  0064C8  5034               	movf	createRandomShape@i,w,c
 12771  0064CA  0D09               	mullw	9
 12772  0064CC  0E00               	movlw	low _all_shapes
 12773  0064CE  24F3               	addwf	prodl,w,c
 12774  0064D0  6ED9               	movwf	fsr2l,c
 12775  0064D2  0E01               	movlw	high _all_shapes
 12776  0064D4  20F4               	addwfc	prodh,w,c
 12777  0064D6  6EDA               	movwf	fsr2h,c
 12778  0064D8  0E0A               	movlw	10
 12779  0064DA  6EDF               	movwf	indf2,c
 12780                           
 12781                           ;main.c: 634: all_shapes[i].index[0].y=2;
 12782  0064DC  5034               	movf	createRandomShape@i,w,c
 12783  0064DE  0D09               	mullw	9
 12784  0064E0  0E01               	movlw	1
 12785  0064E2  26F3               	addwf	prodl,f,c
 12786  0064E4  0E00               	movlw	0
 12787  0064E6  22F4               	addwfc	prodh,f,c
 12788  0064E8  0E00               	movlw	low _all_shapes
 12789  0064EA  24F3               	addwf	prodl,w,c
 12790  0064EC  6ED9               	movwf	fsr2l,c
 12791  0064EE  0E01               	movlw	high _all_shapes
 12792  0064F0  20F4               	addwfc	prodh,w,c
 12793  0064F2  6EDA               	movwf	fsr2h,c
 12794  0064F4  0E02               	movlw	2
 12795  0064F6  6EDF               	movwf	indf2,c
 12796                           
 12797                           ;main.c: 635: for (uint8_t k=1;k<4;k++){
 12798  0064F8  0E01               	movlw	1
 12799  0064FA  6E27               	movwf	createRandomShape@k_288,c
 12800  0064FC                     l4161:
 12801  0064FC  0E03               	movlw	3
 12802  0064FE  6427               	cpfsgt	createRandomShape@k_288,c
 12803  006500  D002               	goto	l241
 12804  006502  EF3A  F039         	goto	l217
 12805  006506                     l241:
 12806                           
 12807                           ;main.c: 636: all_shapes[i].index[k].x=start;
 12808  006506  5034               	movf	createRandomShape@i,w,c
 12809  006508  0D09               	mullw	9
 12810  00650A  0E00               	movlw	low _all_shapes
 12811  00650C  6E15               	movwf	??_createRandomShape& (0+255),c
 12812  00650E  0E01               	movlw	high _all_shapes
 12813  006510  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12814  006512  50F3               	movf	prodl,w,c
 12815  006514  2615               	addwf	??_createRandomShape,f,c
 12816  006516  50F4               	movf	prodh,w,c
 12817  006518  2216               	addwfc	??_createRandomShape+1,f,c
 12818  00651A  5027               	movf	createRandomShape@k_288,w,c
 12819  00651C  0D02               	mullw	2
 12820  00651E  50F3               	movf	prodl,w,c
 12821  006520  2415               	addwf	??_createRandomShape,w,c
 12822  006522  6ED9               	movwf	fsr2l,c
 12823  006524  50F4               	movf	prodh,w,c
 12824  006526  2016               	addwfc	??_createRandomShape+1,w,c
 12825  006528  6EDA               	movwf	fsr2h,c
 12826  00652A  C031  FFDF         	movff	createRandomShape@start_286,indf2
 12827                           
 12828                           ;main.c: 637: all_shapes[i].index[k].y=1;
 12829  00652E  5034               	movf	createRandomShape@i,w,c
 12830  006530  0D09               	mullw	9
 12831  006532  0E00               	movlw	low _all_shapes
 12832  006534  6E15               	movwf	??_createRandomShape& (0+255),c
 12833  006536  0E01               	movlw	high _all_shapes
 12834  006538  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12835  00653A  50F3               	movf	prodl,w,c
 12836  00653C  2615               	addwf	??_createRandomShape,f,c
 12837  00653E  50F4               	movf	prodh,w,c
 12838  006540  2216               	addwfc	??_createRandomShape+1,f,c
 12839  006542  5027               	movf	createRandomShape@k_288,w,c
 12840  006544  0D02               	mullw	2
 12841  006546  50F3               	movf	prodl,w,c
 12842  006548  2615               	addwf	??_createRandomShape,f,c
 12843  00654A  50F4               	movf	prodh,w,c
 12844  00654C  2216               	addwfc	??_createRandomShape+1,f,c
 12845  00654E  0E01               	movlw	1
 12846  006550  2415               	addwf	??_createRandomShape,w,c
 12847  006552  6ED9               	movwf	fsr2l,c
 12848  006554  0E00               	movlw	0
 12849  006556  2016               	addwfc	??_createRandomShape+1,w,c
 12850  006558  6EDA               	movwf	fsr2h,c
 12851  00655A  0E01               	movlw	1
 12852  00655C  6EDF               	movwf	indf2,c
 12853                           
 12854                           ;main.c: 638: start++;
 12855  00655E  2A31               	incf	createRandomShape@start_286,f,c
 12856  006560  2A27               	incf	createRandomShape@k_288,f,c
 12857  006562  D7CC               	goto	l4161
 12858  006564                     
 12859                           ;main.c: 642: all_shapes[i].orientation=2;
 12860  006564  5034               	movf	createRandomShape@i,w,c
 12861  006566  0D09               	mullw	9
 12862  006568  0E08               	movlw	8
 12863  00656A  26F3               	addwf	prodl,f,c
 12864  00656C  0E00               	movlw	0
 12865  00656E  22F4               	addwfc	prodh,f,c
 12866  006570  0E00               	movlw	low _all_shapes
 12867  006572  24F3               	addwf	prodl,w,c
 12868  006574  6ED9               	movwf	fsr2l,c
 12869  006576  0E01               	movlw	high _all_shapes
 12870  006578  20F4               	addwfc	prodh,w,c
 12871  00657A  6EDA               	movwf	fsr2h,c
 12872  00657C  0E02               	movlw	2
 12873  00657E  6EDF               	movwf	indf2,c
 12874                           
 12875                           ;main.c: 643: uint8_t start=0;
 12876  006580  0E00               	movlw	0
 12877  006582  6E31               	movwf	createRandomShape@start_286,c
 12878                           
 12879                           ;main.c: 644: all_shapes[i].index[0].x=10;
 12880  006584  5034               	movf	createRandomShape@i,w,c
 12881  006586  0D09               	mullw	9
 12882  006588  0E00               	movlw	low _all_shapes
 12883  00658A  24F3               	addwf	prodl,w,c
 12884  00658C  6ED9               	movwf	fsr2l,c
 12885  00658E  0E01               	movlw	high _all_shapes
 12886  006590  20F4               	addwfc	prodh,w,c
 12887  006592  6EDA               	movwf	fsr2h,c
 12888  006594  0E0A               	movlw	10
 12889  006596  6EDF               	movwf	indf2,c
 12890                           
 12891                           ;main.c: 645: all_shapes[i].index[0].y=0;
 12892  006598  5034               	movf	createRandomShape@i,w,c
 12893  00659A  0D09               	mullw	9
 12894  00659C  0E01               	movlw	1
 12895  00659E  26F3               	addwf	prodl,f,c
 12896  0065A0  0E00               	movlw	0
 12897  0065A2  22F4               	addwfc	prodh,f,c
 12898  0065A4  0E00               	movlw	low _all_shapes
 12899  0065A6  24F3               	addwf	prodl,w,c
 12900  0065A8  6ED9               	movwf	fsr2l,c
 12901  0065AA  0E01               	movlw	high _all_shapes
 12902  0065AC  20F4               	addwfc	prodh,w,c
 12903  0065AE  6EDA               	movwf	fsr2h,c
 12904  0065B0  0E00               	movlw	0
 12905  0065B2  6EDF               	movwf	indf2,c
 12906                           
 12907                           ;main.c: 646: for (uint8_t k=1;k<4;k++){
 12908  0065B4  0E01               	movlw	1
 12909  0065B6  6E28               	movwf	createRandomShape@k_289,c
 12910  0065B8                     l4183:
 12911  0065B8  0E03               	movlw	3
 12912  0065BA  6428               	cpfsgt	createRandomShape@k_289,c
 12913  0065BC  D002               	goto	l244
 12914  0065BE  EF3A  F039         	goto	l217
 12915  0065C2                     l244:
 12916                           
 12917                           ;main.c: 647: all_shapes[i].index[k].x=11;
 12918  0065C2  5034               	movf	createRandomShape@i,w,c
 12919  0065C4  0D09               	mullw	9
 12920  0065C6  0E00               	movlw	low _all_shapes
 12921  0065C8  6E15               	movwf	??_createRandomShape& (0+255),c
 12922  0065CA  0E01               	movlw	high _all_shapes
 12923  0065CC  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12924  0065CE  50F3               	movf	prodl,w,c
 12925  0065D0  2615               	addwf	??_createRandomShape,f,c
 12926  0065D2  50F4               	movf	prodh,w,c
 12927  0065D4  2216               	addwfc	??_createRandomShape+1,f,c
 12928  0065D6  5028               	movf	createRandomShape@k_289,w,c
 12929  0065D8  0D02               	mullw	2
 12930  0065DA  50F3               	movf	prodl,w,c
 12931  0065DC  2415               	addwf	??_createRandomShape,w,c
 12932  0065DE  6ED9               	movwf	fsr2l,c
 12933  0065E0  50F4               	movf	prodh,w,c
 12934  0065E2  2016               	addwfc	??_createRandomShape+1,w,c
 12935  0065E4  6EDA               	movwf	fsr2h,c
 12936  0065E6  0E0B               	movlw	11
 12937  0065E8  6EDF               	movwf	indf2,c
 12938                           
 12939                           ;main.c: 648: all_shapes[i].index[k].y=start;
 12940  0065EA  5034               	movf	createRandomShape@i,w,c
 12941  0065EC  0D09               	mullw	9
 12942  0065EE  0E00               	movlw	low _all_shapes
 12943  0065F0  6E15               	movwf	??_createRandomShape& (0+255),c
 12944  0065F2  0E01               	movlw	high _all_shapes
 12945  0065F4  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 12946  0065F6  50F3               	movf	prodl,w,c
 12947  0065F8  2615               	addwf	??_createRandomShape,f,c
 12948  0065FA  50F4               	movf	prodh,w,c
 12949  0065FC  2216               	addwfc	??_createRandomShape+1,f,c
 12950  0065FE  5028               	movf	createRandomShape@k_289,w,c
 12951  006600  0D02               	mullw	2
 12952  006602  50F3               	movf	prodl,w,c
 12953  006604  2615               	addwf	??_createRandomShape,f,c
 12954  006606  50F4               	movf	prodh,w,c
 12955  006608  2216               	addwfc	??_createRandomShape+1,f,c
 12956  00660A  0E01               	movlw	1
 12957  00660C  2415               	addwf	??_createRandomShape,w,c
 12958  00660E  6ED9               	movwf	fsr2l,c
 12959  006610  0E00               	movlw	0
 12960  006612  2016               	addwfc	??_createRandomShape+1,w,c
 12961  006614  6EDA               	movwf	fsr2h,c
 12962  006616  C031  FFDF         	movff	createRandomShape@start_286,indf2
 12963                           
 12964                           ;main.c: 649: start++;
 12965  00661A  2A31               	incf	createRandomShape@start_286,f,c
 12966  00661C  2A28               	incf	createRandomShape@k_289,f,c
 12967  00661E  D7CC               	goto	l4183
 12968  006620                     
 12969                           ;main.c: 653: all_shapes[i].orientation=3;
 12970  006620  5034               	movf	createRandomShape@i,w,c
 12971  006622  0D09               	mullw	9
 12972  006624  0E08               	movlw	8
 12973  006626  26F3               	addwf	prodl,f,c
 12974  006628  0E00               	movlw	0
 12975  00662A  22F4               	addwfc	prodh,f,c
 12976  00662C  0E00               	movlw	low _all_shapes
 12977  00662E  24F3               	addwf	prodl,w,c
 12978  006630  6ED9               	movwf	fsr2l,c
 12979  006632  0E01               	movlw	high _all_shapes
 12980  006634  20F4               	addwfc	prodh,w,c
 12981  006636  6EDA               	movwf	fsr2h,c
 12982  006638  0E03               	movlw	3
 12983  00663A  6EDF               	movwf	indf2,c
 12984                           
 12985                           ;main.c: 654: uint8_t start=0;
 12986  00663C  0E00               	movlw	0
 12987  00663E  6E31               	movwf	createRandomShape@start_286,c
 12988                           
 12989                           ;main.c: 655: all_shapes[i].index[0].x=12;
 12990  006640  5034               	movf	createRandomShape@i,w,c
 12991  006642  0D09               	mullw	9
 12992  006644  0E00               	movlw	low _all_shapes
 12993  006646  24F3               	addwf	prodl,w,c
 12994  006648  6ED9               	movwf	fsr2l,c
 12995  00664A  0E01               	movlw	high _all_shapes
 12996  00664C  20F4               	addwfc	prodh,w,c
 12997  00664E  6EDA               	movwf	fsr2h,c
 12998  006650  0E0C               	movlw	12
 12999  006652  6EDF               	movwf	indf2,c
 13000                           
 13001                           ;main.c: 656: all_shapes[i].index[0].y=2;
 13002  006654  5034               	movf	createRandomShape@i,w,c
 13003  006656  0D09               	mullw	9
 13004  006658  0E01               	movlw	1
 13005  00665A  26F3               	addwf	prodl,f,c
 13006  00665C  0E00               	movlw	0
 13007  00665E  22F4               	addwfc	prodh,f,c
 13008  006660  0E00               	movlw	low _all_shapes
 13009  006662  24F3               	addwf	prodl,w,c
 13010  006664  6ED9               	movwf	fsr2l,c
 13011  006666  0E01               	movlw	high _all_shapes
 13012  006668  20F4               	addwfc	prodh,w,c
 13013  00666A  6EDA               	movwf	fsr2h,c
 13014  00666C  0E02               	movlw	2
 13015  00666E  6EDF               	movwf	indf2,c
 13016                           
 13017                           ;main.c: 657: for (uint8_t k=1;k<4;k++){
 13018  006670  0E01               	movlw	1
 13019  006672  6E29               	movwf	createRandomShape@k_290,c
 13020  006674                     l4205:
 13021  006674  0E03               	movlw	3
 13022  006676  6429               	cpfsgt	createRandomShape@k_290,c
 13023  006678  D002               	goto	l247
 13024  00667A  EF3A  F039         	goto	l217
 13025  00667E                     l247:
 13026                           
 13027                           ;main.c: 658: all_shapes[i].index[k].x=11;
 13028  00667E  5034               	movf	createRandomShape@i,w,c
 13029  006680  0D09               	mullw	9
 13030  006682  0E00               	movlw	low _all_shapes
 13031  006684  6E15               	movwf	??_createRandomShape& (0+255),c
 13032  006686  0E01               	movlw	high _all_shapes
 13033  006688  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 13034  00668A  50F3               	movf	prodl,w,c
 13035  00668C  2615               	addwf	??_createRandomShape,f,c
 13036  00668E  50F4               	movf	prodh,w,c
 13037  006690  2216               	addwfc	??_createRandomShape+1,f,c
 13038  006692  5029               	movf	createRandomShape@k_290,w,c
 13039  006694  0D02               	mullw	2
 13040  006696  50F3               	movf	prodl,w,c
 13041  006698  2415               	addwf	??_createRandomShape,w,c
 13042  00669A  6ED9               	movwf	fsr2l,c
 13043  00669C  50F4               	movf	prodh,w,c
 13044  00669E  2016               	addwfc	??_createRandomShape+1,w,c
 13045  0066A0  6EDA               	movwf	fsr2h,c
 13046  0066A2  0E0B               	movlw	11
 13047  0066A4  6EDF               	movwf	indf2,c
 13048                           
 13049                           ;main.c: 659: all_shapes[i].index[k].y=start;
 13050  0066A6  5034               	movf	createRandomShape@i,w,c
 13051  0066A8  0D09               	mullw	9
 13052  0066AA  0E00               	movlw	low _all_shapes
 13053  0066AC  6E15               	movwf	??_createRandomShape& (0+255),c
 13054  0066AE  0E01               	movlw	high _all_shapes
 13055  0066B0  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 13056  0066B2  50F3               	movf	prodl,w,c
 13057  0066B4  2615               	addwf	??_createRandomShape,f,c
 13058  0066B6  50F4               	movf	prodh,w,c
 13059  0066B8  2216               	addwfc	??_createRandomShape+1,f,c
 13060  0066BA  5029               	movf	createRandomShape@k_290,w,c
 13061  0066BC  0D02               	mullw	2
 13062  0066BE  50F3               	movf	prodl,w,c
 13063  0066C0  2615               	addwf	??_createRandomShape,f,c
 13064  0066C2  50F4               	movf	prodh,w,c
 13065  0066C4  2216               	addwfc	??_createRandomShape+1,f,c
 13066  0066C6  0E01               	movlw	1
 13067  0066C8  2415               	addwf	??_createRandomShape,w,c
 13068  0066CA  6ED9               	movwf	fsr2l,c
 13069  0066CC  0E00               	movlw	0
 13070  0066CE  2016               	addwfc	??_createRandomShape+1,w,c
 13071  0066D0  6EDA               	movwf	fsr2h,c
 13072  0066D2  C031  FFDF         	movff	createRandomShape@start_286,indf2
 13073                           
 13074                           ;main.c: 660: start++;
 13075  0066D6  2A31               	incf	createRandomShape@start_286,f,c
 13076  0066D8  2A29               	incf	createRandomShape@k_290,f,c
 13077  0066DA  D7CC               	goto	l4205
 13078  0066DC  5033               	movf	createRandomShape@orientation,w,c
 13079                           
 13080                           ; Switch size 1, requested type "space"
 13081                           ; Number of cases is 4, Range of values is 0 to 3
 13082                           ; switch strategies available:
 13083                           ; Name         Instructions Cycles
 13084                           ; simple_byte           13     7 (average)
 13085                           ;	Chosen strategy is simple_byte
 13086  0066DE  0A00               	xorlw	0	; case 0
 13087  0066E0  B4D8               	btfsc	status,2,c
 13088  0066E2  D684               	goto	l236
 13089  0066E4  0A01               	xorlw	1	; case 1
 13090  0066E6  B4D8               	btfsc	status,2,c
 13091  0066E8  D6DF               	goto	l240
 13092  0066EA  0A03               	xorlw	3	; case 2
 13093  0066EC  B4D8               	btfsc	status,2,c
 13094  0066EE  D73A               	goto	l243
 13095  0066F0  0A01               	xorlw	1	; case 3
 13096  0066F2  B4D8               	btfsc	status,2,c
 13097  0066F4  D795               	goto	l246
 13098                           
 13099                           ;main.c: 666: break;
 13100  0066F6  EF3A  F039         	goto	l217
 13101  0066FA                     
 13102                           ;main.c: 668: all_shapes[i].index[0].x=11;
 13103  0066FA  5034               	movf	createRandomShape@i,w,c
 13104  0066FC  0D09               	mullw	9
 13105  0066FE  0E00               	movlw	low _all_shapes
 13106  006700  24F3               	addwf	prodl,w,c
 13107  006702  6ED9               	movwf	fsr2l,c
 13108  006704  0E01               	movlw	high _all_shapes
 13109  006706  20F4               	addwfc	prodh,w,c
 13110  006708  6EDA               	movwf	fsr2h,c
 13111  00670A  0E0B               	movlw	11
 13112  00670C  6EDF               	movwf	indf2,c
 13113                           
 13114                           ;main.c: 669: all_shapes[i].index[0].y=0;
 13115  00670E  5034               	movf	createRandomShape@i,w,c
 13116  006710  0D09               	mullw	9
 13117  006712  0E01               	movlw	1
 13118  006714  26F3               	addwf	prodl,f,c
 13119  006716  0E00               	movlw	0
 13120  006718  22F4               	addwfc	prodh,f,c
 13121  00671A  0E00               	movlw	low _all_shapes
 13122  00671C  24F3               	addwf	prodl,w,c
 13123  00671E  6ED9               	movwf	fsr2l,c
 13124  006720  0E01               	movlw	high _all_shapes
 13125  006722  20F4               	addwfc	prodh,w,c
 13126  006724  6EDA               	movwf	fsr2h,c
 13127  006726  0E00               	movlw	0
 13128  006728  6EDF               	movwf	indf2,c
 13129                           
 13130                           ;main.c: 670: all_shapes[i].index[1].x=12;
 13131  00672A  5034               	movf	createRandomShape@i,w,c
 13132  00672C  0D09               	mullw	9
 13133  00672E  0E02               	movlw	2
 13134  006730  26F3               	addwf	prodl,f,c
 13135  006732  0E00               	movlw	0
 13136  006734  22F4               	addwfc	prodh,f,c
 13137  006736  0E00               	movlw	low _all_shapes
 13138  006738  24F3               	addwf	prodl,w,c
 13139  00673A  6ED9               	movwf	fsr2l,c
 13140  00673C  0E01               	movlw	high _all_shapes
 13141  00673E  20F4               	addwfc	prodh,w,c
 13142  006740  6EDA               	movwf	fsr2h,c
 13143  006742  0E0C               	movlw	12
 13144  006744  6EDF               	movwf	indf2,c
 13145                           
 13146                           ;main.c: 671: all_shapes[i].index[1].y=0;
 13147  006746  5034               	movf	createRandomShape@i,w,c
 13148  006748  0D09               	mullw	9
 13149  00674A  0E03               	movlw	3
 13150  00674C  26F3               	addwf	prodl,f,c
 13151  00674E  0E00               	movlw	0
 13152  006750  22F4               	addwfc	prodh,f,c
 13153  006752  0E00               	movlw	low _all_shapes
 13154  006754  24F3               	addwf	prodl,w,c
 13155  006756  6ED9               	movwf	fsr2l,c
 13156  006758  0E01               	movlw	high _all_shapes
 13157  00675A  20F4               	addwfc	prodh,w,c
 13158  00675C  6EDA               	movwf	fsr2h,c
 13159  00675E  0E00               	movlw	0
 13160  006760  6EDF               	movwf	indf2,c
 13161                           
 13162                           ;main.c: 672: all_shapes[i].index[2].x=11;
 13163  006762  5034               	movf	createRandomShape@i,w,c
 13164  006764  0D09               	mullw	9
 13165  006766  0E04               	movlw	4
 13166  006768  26F3               	addwf	prodl,f,c
 13167  00676A  0E00               	movlw	0
 13168  00676C  22F4               	addwfc	prodh,f,c
 13169  00676E  0E00               	movlw	low _all_shapes
 13170  006770  24F3               	addwf	prodl,w,c
 13171  006772  6ED9               	movwf	fsr2l,c
 13172  006774  0E01               	movlw	high _all_shapes
 13173  006776  20F4               	addwfc	prodh,w,c
 13174  006778  6EDA               	movwf	fsr2h,c
 13175  00677A  0E0B               	movlw	11
 13176  00677C  6EDF               	movwf	indf2,c
 13177                           
 13178                           ;main.c: 673: all_shapes[i].index[2].y=1;
 13179  00677E  5034               	movf	createRandomShape@i,w,c
 13180  006780  0D09               	mullw	9
 13181  006782  0E05               	movlw	5
 13182  006784  26F3               	addwf	prodl,f,c
 13183  006786  0E00               	movlw	0
 13184  006788  22F4               	addwfc	prodh,f,c
 13185  00678A  0E00               	movlw	low _all_shapes
 13186  00678C  24F3               	addwf	prodl,w,c
 13187  00678E  6ED9               	movwf	fsr2l,c
 13188  006790  0E01               	movlw	high _all_shapes
 13189  006792  20F4               	addwfc	prodh,w,c
 13190  006794  6EDA               	movwf	fsr2h,c
 13191  006796  0E01               	movlw	1
 13192  006798  6EDF               	movwf	indf2,c
 13193                           
 13194                           ;main.c: 674: all_shapes[i].index[3].x=12;
 13195  00679A  5034               	movf	createRandomShape@i,w,c
 13196  00679C  0D09               	mullw	9
 13197  00679E  0E06               	movlw	6
 13198  0067A0  26F3               	addwf	prodl,f,c
 13199  0067A2  0E00               	movlw	0
 13200  0067A4  22F4               	addwfc	prodh,f,c
 13201  0067A6  0E00               	movlw	low _all_shapes
 13202  0067A8  24F3               	addwf	prodl,w,c
 13203  0067AA  6ED9               	movwf	fsr2l,c
 13204  0067AC  0E01               	movlw	high _all_shapes
 13205  0067AE  20F4               	addwfc	prodh,w,c
 13206  0067B0  6EDA               	movwf	fsr2h,c
 13207  0067B2  0E0C               	movlw	12
 13208  0067B4  6EDF               	movwf	indf2,c
 13209                           
 13210                           ;main.c: 675: all_shapes[i].index[3].y=1;
 13211  0067B6  5034               	movf	createRandomShape@i,w,c
 13212  0067B8  0D09               	mullw	9
 13213  0067BA  0E07               	movlw	7
 13214  0067BC  26F3               	addwf	prodl,f,c
 13215  0067BE  0E00               	movlw	0
 13216  0067C0  22F4               	addwfc	prodh,f,c
 13217  0067C2  0E00               	movlw	low _all_shapes
 13218  0067C4  24F3               	addwf	prodl,w,c
 13219  0067C6  6ED9               	movwf	fsr2l,c
 13220  0067C8  0E01               	movlw	high _all_shapes
 13221  0067CA  20F4               	addwfc	prodh,w,c
 13222  0067CC  6EDA               	movwf	fsr2h,c
 13223  0067CE  0E01               	movlw	1
 13224  0067D0  6EDF               	movwf	indf2,c
 13225                           
 13226                           ;main.c: 676: switch (orientation){
 13227  0067D2  D02A               	goto	l251
 13228  0067D4                     
 13229                           ;main.c: 678: all_shapes[i].orientation=0;
 13230  0067D4  5034               	movf	createRandomShape@i,w,c
 13231  0067D6  0D09               	mullw	9
 13232  0067D8  0E08               	movlw	8
 13233  0067DA  26F3               	addwf	prodl,f,c
 13234  0067DC  0E00               	movlw	0
 13235  0067DE  22F4               	addwfc	prodh,f,c
 13236  0067E0  0E00               	movlw	low _all_shapes
 13237  0067E2  24F3               	addwf	prodl,w,c
 13238  0067E4  6ED9               	movwf	fsr2l,c
 13239  0067E6  0E01               	movlw	high _all_shapes
 13240  0067E8  20F4               	addwfc	prodh,w,c
 13241  0067EA  6EDA               	movwf	fsr2h,c
 13242  0067EC  0E00               	movlw	0
 13243  0067EE  D3D4               	goto	L41
 13244  0067F0                     
 13245                           ;main.c: 681: all_shapes[i].orientation=1;
 13246  0067F0  5034               	movf	createRandomShape@i,w,c
 13247  0067F2  0D09               	mullw	9
 13248  0067F4  0E08               	movlw	8
 13249  0067F6  26F3               	addwf	prodl,f,c
 13250  0067F8  0E00               	movlw	0
 13251  0067FA  22F4               	addwfc	prodh,f,c
 13252  0067FC  0E00               	movlw	low _all_shapes
 13253  0067FE  24F3               	addwf	prodl,w,c
 13254  006800  6ED9               	movwf	fsr2l,c
 13255  006802  0E01               	movlw	high _all_shapes
 13256  006804  20F4               	addwfc	prodh,w,c
 13257  006806  6EDA               	movwf	fsr2h,c
 13258  006808  0E01               	movlw	1
 13259  00680A  D3C6               	goto	L41
 13260  00680C                     
 13261                           ;main.c: 684: all_shapes[i].orientation=2;
 13262  00680C  5034               	movf	createRandomShape@i,w,c
 13263  00680E  0D09               	mullw	9
 13264  006810  0E08               	movlw	8
 13265  006812  26F3               	addwf	prodl,f,c
 13266  006814  0E00               	movlw	0
 13267  006816  22F4               	addwfc	prodh,f,c
 13268  006818  0E00               	movlw	low _all_shapes
 13269  00681A  24F3               	addwf	prodl,w,c
 13270  00681C  6ED9               	movwf	fsr2l,c
 13271  00681E  0E01               	movlw	high _all_shapes
 13272  006820  20F4               	addwfc	prodh,w,c
 13273  006822  6EDA               	movwf	fsr2h,c
 13274  006824  0E02               	movlw	2
 13275  006826  D3B8               	goto	L41
 13276  006828                     l251:
 13277  006828  5033               	movf	createRandomShape@orientation,w,c
 13278                           
 13279                           ; Switch size 1, requested type "space"
 13280                           ; Number of cases is 4, Range of values is 0 to 3
 13281                           ; switch strategies available:
 13282                           ; Name         Instructions Cycles
 13283                           ; simple_byte           13     7 (average)
 13284                           ;	Chosen strategy is simple_byte
 13285  00682A  0A00               	xorlw	0	; case 0
 13286  00682C  B4D8               	btfsc	status,2,c
 13287  00682E  D7D2               	goto	l252
 13288  006830  0A01               	xorlw	1	; case 1
 13289  006832  B4D8               	btfsc	status,2,c
 13290  006834  D7DD               	goto	l254
 13291  006836  0A03               	xorlw	3	; case 2
 13292  006838  B4D8               	btfsc	status,2,c
 13293  00683A  D7E8               	goto	l255
 13294  00683C  0A01               	xorlw	1	; case 3
 13295  00683E  B4D8               	btfsc	status,2,c
 13296  006840  EF04  F039         	goto	L46
 13297                           
 13298                           ;main.c: 692: break;
 13299  006844  EF3A  F039         	goto	l217
 13300  006848                     
 13301                           ;main.c: 696: all_shapes[i].orientation=0;
 13302  006848  5034               	movf	createRandomShape@i,w,c
 13303  00684A  0D09               	mullw	9
 13304  00684C  0E08               	movlw	8
 13305  00684E  26F3               	addwf	prodl,f,c
 13306  006850  0E00               	movlw	0
 13307  006852  22F4               	addwfc	prodh,f,c
 13308  006854  0E00               	movlw	low _all_shapes
 13309  006856  24F3               	addwf	prodl,w,c
 13310  006858  6ED9               	movwf	fsr2l,c
 13311  00685A  0E01               	movlw	high _all_shapes
 13312  00685C  20F4               	addwfc	prodh,w,c
 13313  00685E  6EDA               	movwf	fsr2h,c
 13314  006860  0E00               	movlw	0
 13315  006862  6EDF               	movwf	indf2,c
 13316                           
 13317                           ;main.c: 697: all_shapes[i].index[0].x=10;
 13318  006864  5034               	movf	createRandomShape@i,w,c
 13319  006866  0D09               	mullw	9
 13320  006868  0E00               	movlw	low _all_shapes
 13321  00686A  24F3               	addwf	prodl,w,c
 13322  00686C  6ED9               	movwf	fsr2l,c
 13323  00686E  0E01               	movlw	high _all_shapes
 13324  006870  20F4               	addwfc	prodh,w,c
 13325  006872  6EDA               	movwf	fsr2h,c
 13326  006874  0E0A               	movlw	10
 13327  006876  6EDF               	movwf	indf2,c
 13328                           
 13329                           ;main.c: 698: all_shapes[i].index[0].y=1;
 13330  006878  5034               	movf	createRandomShape@i,w,c
 13331  00687A  0D09               	mullw	9
 13332  00687C  0E01               	movlw	1
 13333  00687E  26F3               	addwf	prodl,f,c
 13334  006880  0E00               	movlw	0
 13335  006882  22F4               	addwfc	prodh,f,c
 13336  006884  0E00               	movlw	low _all_shapes
 13337  006886  24F3               	addwf	prodl,w,c
 13338  006888  6ED9               	movwf	fsr2l,c
 13339  00688A  0E01               	movlw	high _all_shapes
 13340  00688C  20F4               	addwfc	prodh,w,c
 13341  00688E  6EDA               	movwf	fsr2h,c
 13342  006890  0E01               	movlw	1
 13343  006892  6EDF               	movwf	indf2,c
 13344                           
 13345                           ;main.c: 699: all_shapes[i].index[1].x=11;
 13346  006894  5034               	movf	createRandomShape@i,w,c
 13347  006896  0D09               	mullw	9
 13348  006898  0E02               	movlw	2
 13349  00689A  26F3               	addwf	prodl,f,c
 13350  00689C  0E00               	movlw	0
 13351  00689E  22F4               	addwfc	prodh,f,c
 13352  0068A0  0E00               	movlw	low _all_shapes
 13353  0068A2  24F3               	addwf	prodl,w,c
 13354  0068A4  6ED9               	movwf	fsr2l,c
 13355  0068A6  0E01               	movlw	high _all_shapes
 13356  0068A8  20F4               	addwfc	prodh,w,c
 13357  0068AA  6EDA               	movwf	fsr2h,c
 13358  0068AC  0E0B               	movlw	11
 13359  0068AE  6EDF               	movwf	indf2,c
 13360                           
 13361                           ;main.c: 700: all_shapes[i].index[1].y=1;
 13362  0068B0  5034               	movf	createRandomShape@i,w,c
 13363  0068B2  0D09               	mullw	9
 13364  0068B4  0E03               	movlw	3
 13365  0068B6  26F3               	addwf	prodl,f,c
 13366  0068B8  0E00               	movlw	0
 13367  0068BA  22F4               	addwfc	prodh,f,c
 13368  0068BC  0E00               	movlw	low _all_shapes
 13369  0068BE  24F3               	addwf	prodl,w,c
 13370  0068C0  6ED9               	movwf	fsr2l,c
 13371  0068C2  0E01               	movlw	high _all_shapes
 13372  0068C4  20F4               	addwfc	prodh,w,c
 13373  0068C6  6EDA               	movwf	fsr2h,c
 13374  0068C8  0E01               	movlw	1
 13375  0068CA  6EDF               	movwf	indf2,c
 13376                           
 13377                           ;main.c: 701: all_shapes[i].index[2].x=11;
 13378  0068CC  5034               	movf	createRandomShape@i,w,c
 13379  0068CE  0D09               	mullw	9
 13380  0068D0  0E04               	movlw	4
 13381  0068D2  26F3               	addwf	prodl,f,c
 13382  0068D4  0E00               	movlw	0
 13383  0068D6  22F4               	addwfc	prodh,f,c
 13384  0068D8  0E00               	movlw	low _all_shapes
 13385  0068DA  24F3               	addwf	prodl,w,c
 13386  0068DC  6ED9               	movwf	fsr2l,c
 13387  0068DE  0E01               	movlw	high _all_shapes
 13388  0068E0  20F4               	addwfc	prodh,w,c
 13389  0068E2  6EDA               	movwf	fsr2h,c
 13390  0068E4  0E0B               	movlw	11
 13391  0068E6  6EDF               	movwf	indf2,c
 13392                           
 13393                           ;main.c: 702: all_shapes[i].index[2].y=0;
 13394  0068E8  5034               	movf	createRandomShape@i,w,c
 13395  0068EA  0D09               	mullw	9
 13396  0068EC  0E05               	movlw	5
 13397  0068EE  26F3               	addwf	prodl,f,c
 13398  0068F0  0E00               	movlw	0
 13399  0068F2  22F4               	addwfc	prodh,f,c
 13400  0068F4  0E00               	movlw	low _all_shapes
 13401  0068F6  24F3               	addwf	prodl,w,c
 13402  0068F8  6ED9               	movwf	fsr2l,c
 13403  0068FA  0E01               	movlw	high _all_shapes
 13404  0068FC  20F4               	addwfc	prodh,w,c
 13405  0068FE  6EDA               	movwf	fsr2h,c
 13406  006900  0E00               	movlw	0
 13407  006902  6EDF               	movwf	indf2,c
 13408                           
 13409                           ;main.c: 703: all_shapes[i].index[3].x=12;
 13410  006904  5034               	movf	createRandomShape@i,w,c
 13411  006906  0D09               	mullw	9
 13412  006908  0E06               	movlw	6
 13413  00690A  26F3               	addwf	prodl,f,c
 13414  00690C  0E00               	movlw	0
 13415  00690E  22F4               	addwfc	prodh,f,c
 13416  006910  0E00               	movlw	low _all_shapes
 13417  006912  24F3               	addwf	prodl,w,c
 13418  006914  6ED9               	movwf	fsr2l,c
 13419  006916  0E01               	movlw	high _all_shapes
 13420  006918  20F4               	addwfc	prodh,w,c
 13421  00691A  6EDA               	movwf	fsr2h,c
 13422  00691C  0E0C               	movlw	12
 13423  00691E  6EDF               	movwf	indf2,c
 13424                           
 13425                           ;main.c: 704: all_shapes[i].index[3].y=0;
 13426  006920  5034               	movf	createRandomShape@i,w,c
 13427  006922  0D09               	mullw	9
 13428  006924  0E07               	movlw	7
 13429  006926  D759               	goto	L47
 13430  006928                     
 13431                           ;main.c: 707: all_shapes[i].index[0].x=10;
 13432  006928  5034               	movf	createRandomShape@i,w,c
 13433  00692A  0D09               	mullw	9
 13434  00692C  0E00               	movlw	low _all_shapes
 13435  00692E  24F3               	addwf	prodl,w,c
 13436  006930  6ED9               	movwf	fsr2l,c
 13437  006932  0E01               	movlw	high _all_shapes
 13438  006934  20F4               	addwfc	prodh,w,c
 13439  006936  6EDA               	movwf	fsr2h,c
 13440  006938  0E0A               	movlw	10
 13441  00693A  6EDF               	movwf	indf2,c
 13442                           
 13443                           ;main.c: 708: all_shapes[i].index[0].y=2;
 13444  00693C  5034               	movf	createRandomShape@i,w,c
 13445  00693E  0D09               	mullw	9
 13446  006940  0E01               	movlw	1
 13447  006942  26F3               	addwf	prodl,f,c
 13448  006944  0E00               	movlw	0
 13449  006946  22F4               	addwfc	prodh,f,c
 13450  006948  0E00               	movlw	low _all_shapes
 13451  00694A  24F3               	addwf	prodl,w,c
 13452  00694C  6ED9               	movwf	fsr2l,c
 13453  00694E  0E01               	movlw	high _all_shapes
 13454  006950  20F4               	addwfc	prodh,w,c
 13455  006952  6EDA               	movwf	fsr2h,c
 13456  006954  0E02               	movlw	2
 13457  006956  6EDF               	movwf	indf2,c
 13458                           
 13459                           ;main.c: 709: all_shapes[i].index[1].x=11;
 13460  006958  5034               	movf	createRandomShape@i,w,c
 13461  00695A  0D09               	mullw	9
 13462  00695C  0E02               	movlw	2
 13463  00695E  26F3               	addwf	prodl,f,c
 13464  006960  0E00               	movlw	0
 13465  006962  22F4               	addwfc	prodh,f,c
 13466  006964  0E00               	movlw	low _all_shapes
 13467  006966  24F3               	addwf	prodl,w,c
 13468  006968  6ED9               	movwf	fsr2l,c
 13469  00696A  0E01               	movlw	high _all_shapes
 13470  00696C  20F4               	addwfc	prodh,w,c
 13471  00696E  6EDA               	movwf	fsr2h,c
 13472  006970  0E0B               	movlw	11
 13473  006972  6EDF               	movwf	indf2,c
 13474                           
 13475                           ;main.c: 710: all_shapes[i].index[1].y=2;
 13476  006974  5034               	movf	createRandomShape@i,w,c
 13477  006976  0D09               	mullw	9
 13478  006978  0E03               	movlw	3
 13479  00697A  26F3               	addwf	prodl,f,c
 13480  00697C  0E00               	movlw	0
 13481  00697E  22F4               	addwfc	prodh,f,c
 13482  006980  0E00               	movlw	low _all_shapes
 13483  006982  24F3               	addwf	prodl,w,c
 13484  006984  6ED9               	movwf	fsr2l,c
 13485  006986  0E01               	movlw	high _all_shapes
 13486  006988  20F4               	addwfc	prodh,w,c
 13487  00698A  6EDA               	movwf	fsr2h,c
 13488  00698C  0E02               	movlw	2
 13489  00698E  6EDF               	movwf	indf2,c
 13490                           
 13491                           ;main.c: 711: all_shapes[i].index[2].x=11;
 13492  006990  5034               	movf	createRandomShape@i,w,c
 13493  006992  0D09               	mullw	9
 13494  006994  0E04               	movlw	4
 13495  006996  26F3               	addwf	prodl,f,c
 13496  006998  0E00               	movlw	0
 13497  00699A  22F4               	addwfc	prodh,f,c
 13498  00699C  0E00               	movlw	low _all_shapes
 13499  00699E  24F3               	addwf	prodl,w,c
 13500  0069A0  6ED9               	movwf	fsr2l,c
 13501  0069A2  0E01               	movlw	high _all_shapes
 13502  0069A4  20F4               	addwfc	prodh,w,c
 13503  0069A6  6EDA               	movwf	fsr2h,c
 13504  0069A8  0E0B               	movlw	11
 13505  0069AA  6EDF               	movwf	indf2,c
 13506                           
 13507                           ;main.c: 712: all_shapes[i].index[2].y=1;
 13508  0069AC  5034               	movf	createRandomShape@i,w,c
 13509  0069AE  0D09               	mullw	9
 13510  0069B0  0E05               	movlw	5
 13511  0069B2  26F3               	addwf	prodl,f,c
 13512  0069B4  0E00               	movlw	0
 13513  0069B6  22F4               	addwfc	prodh,f,c
 13514  0069B8  0E00               	movlw	low _all_shapes
 13515  0069BA  24F3               	addwf	prodl,w,c
 13516  0069BC  6ED9               	movwf	fsr2l,c
 13517  0069BE  0E01               	movlw	high _all_shapes
 13518  0069C0  20F4               	addwfc	prodh,w,c
 13519  0069C2  6EDA               	movwf	fsr2h,c
 13520  0069C4  0E01               	movlw	1
 13521  0069C6  6EDF               	movwf	indf2,c
 13522                           
 13523                           ;main.c: 713: all_shapes[i].index[3].x=12;
 13524  0069C8  5034               	movf	createRandomShape@i,w,c
 13525  0069CA  0D09               	mullw	9
 13526  0069CC  0E06               	movlw	6
 13527  0069CE  26F3               	addwf	prodl,f,c
 13528  0069D0  0E00               	movlw	0
 13529  0069D2  22F4               	addwfc	prodh,f,c
 13530  0069D4  0E00               	movlw	low _all_shapes
 13531  0069D6  24F3               	addwf	prodl,w,c
 13532  0069D8  6ED9               	movwf	fsr2l,c
 13533  0069DA  0E01               	movlw	high _all_shapes
 13534  0069DC  20F4               	addwfc	prodh,w,c
 13535  0069DE  6EDA               	movwf	fsr2h,c
 13536  0069E0  0E0C               	movlw	12
 13537  0069E2  6EDF               	movwf	indf2,c
 13538                           
 13539                           ;main.c: 714: all_shapes[i].index[3].y=1;
 13540  0069E4  5034               	movf	createRandomShape@i,w,c
 13541  0069E6  0D09               	mullw	9
 13542  0069E8  0E07               	movlw	7
 13543  0069EA  26F3               	addwf	prodl,f,c
 13544  0069EC  0E00               	movlw	0
 13545  0069EE  22F4               	addwfc	prodh,f,c
 13546  0069F0  0E00               	movlw	low _all_shapes
 13547  0069F2  24F3               	addwf	prodl,w,c
 13548  0069F4  6ED9               	movwf	fsr2l,c
 13549  0069F6  0E01               	movlw	high _all_shapes
 13550  0069F8  20F4               	addwfc	prodh,w,c
 13551  0069FA  6EDA               	movwf	fsr2h,c
 13552  0069FC  0E01               	movlw	1
 13553  0069FE  6EDF               	movwf	indf2,c
 13554  006A00  D6F7               	goto	l254
 13555  006A02                     
 13556                           ;main.c: 718: all_shapes[i].index[0].x=10;
 13557  006A02  5034               	movf	createRandomShape@i,w,c
 13558  006A04  0D09               	mullw	9
 13559  006A06  0E00               	movlw	low _all_shapes
 13560  006A08  24F3               	addwf	prodl,w,c
 13561  006A0A  6ED9               	movwf	fsr2l,c
 13562  006A0C  0E01               	movlw	high _all_shapes
 13563  006A0E  20F4               	addwfc	prodh,w,c
 13564  006A10  6EDA               	movwf	fsr2h,c
 13565  006A12  0E0A               	movlw	10
 13566  006A14  6EDF               	movwf	indf2,c
 13567                           
 13568                           ;main.c: 719: all_shapes[i].index[0].y=0;
 13569  006A16  5034               	movf	createRandomShape@i,w,c
 13570  006A18  0D09               	mullw	9
 13571  006A1A  0E01               	movlw	1
 13572  006A1C  26F3               	addwf	prodl,f,c
 13573  006A1E  0E00               	movlw	0
 13574  006A20  22F4               	addwfc	prodh,f,c
 13575  006A22  0E00               	movlw	low _all_shapes
 13576  006A24  24F3               	addwf	prodl,w,c
 13577  006A26  6ED9               	movwf	fsr2l,c
 13578  006A28  0E01               	movlw	high _all_shapes
 13579  006A2A  20F4               	addwfc	prodh,w,c
 13580  006A2C  6EDA               	movwf	fsr2h,c
 13581  006A2E  0E00               	movlw	0
 13582  006A30  6EDF               	movwf	indf2,c
 13583                           
 13584                           ;main.c: 720: all_shapes[i].index[1].x=10;
 13585  006A32  5034               	movf	createRandomShape@i,w,c
 13586  006A34  0D09               	mullw	9
 13587  006A36  0E02               	movlw	2
 13588  006A38  26F3               	addwf	prodl,f,c
 13589  006A3A  0E00               	movlw	0
 13590  006A3C  22F4               	addwfc	prodh,f,c
 13591  006A3E  0E00               	movlw	low _all_shapes
 13592  006A40  24F3               	addwf	prodl,w,c
 13593  006A42  6ED9               	movwf	fsr2l,c
 13594  006A44  0E01               	movlw	high _all_shapes
 13595  006A46  20F4               	addwfc	prodh,w,c
 13596  006A48  6EDA               	movwf	fsr2h,c
 13597  006A4A  0E0A               	movlw	10
 13598  006A4C  6EDF               	movwf	indf2,c
 13599                           
 13600                           ;main.c: 721: all_shapes[i].index[1].y=1;
 13601  006A4E  5034               	movf	createRandomShape@i,w,c
 13602  006A50  0D09               	mullw	9
 13603  006A52  0E03               	movlw	3
 13604  006A54  26F3               	addwf	prodl,f,c
 13605  006A56  0E00               	movlw	0
 13606  006A58  22F4               	addwfc	prodh,f,c
 13607  006A5A  0E00               	movlw	low _all_shapes
 13608  006A5C  24F3               	addwf	prodl,w,c
 13609  006A5E  6ED9               	movwf	fsr2l,c
 13610  006A60  0E01               	movlw	high _all_shapes
 13611  006A62  20F4               	addwfc	prodh,w,c
 13612  006A64  6EDA               	movwf	fsr2h,c
 13613  006A66  0E01               	movlw	1
 13614  006A68  6EDF               	movwf	indf2,c
 13615                           
 13616                           ;main.c: 722: all_shapes[i].index[2].x=11;
 13617  006A6A  5034               	movf	createRandomShape@i,w,c
 13618  006A6C  0D09               	mullw	9
 13619  006A6E  0E04               	movlw	4
 13620  006A70  26F3               	addwf	prodl,f,c
 13621  006A72  0E00               	movlw	0
 13622  006A74  22F4               	addwfc	prodh,f,c
 13623  006A76  0E00               	movlw	low _all_shapes
 13624  006A78  24F3               	addwf	prodl,w,c
 13625  006A7A  6ED9               	movwf	fsr2l,c
 13626  006A7C  0E01               	movlw	high _all_shapes
 13627  006A7E  20F4               	addwfc	prodh,w,c
 13628  006A80  6EDA               	movwf	fsr2h,c
 13629  006A82  0E0B               	movlw	11
 13630  006A84  6EDF               	movwf	indf2,c
 13631                           
 13632                           ;main.c: 723: all_shapes[i].index[2].y=1;
 13633  006A86  5034               	movf	createRandomShape@i,w,c
 13634  006A88  0D09               	mullw	9
 13635  006A8A  0E05               	movlw	5
 13636  006A8C  26F3               	addwf	prodl,f,c
 13637  006A8E  0E00               	movlw	0
 13638  006A90  22F4               	addwfc	prodh,f,c
 13639  006A92  0E00               	movlw	low _all_shapes
 13640  006A94  24F3               	addwf	prodl,w,c
 13641  006A96  6ED9               	movwf	fsr2l,c
 13642  006A98  0E01               	movlw	high _all_shapes
 13643  006A9A  20F4               	addwfc	prodh,w,c
 13644  006A9C  6EDA               	movwf	fsr2h,c
 13645  006A9E  0E01               	movlw	1
 13646  006AA0  6EDF               	movwf	indf2,c
 13647                           
 13648                           ;main.c: 724: all_shapes[i].index[3].x=11;
 13649  006AA2  5034               	movf	createRandomShape@i,w,c
 13650  006AA4  0D09               	mullw	9
 13651  006AA6  0E06               	movlw	6
 13652  006AA8  26F3               	addwf	prodl,f,c
 13653  006AAA  0E00               	movlw	0
 13654  006AAC  22F4               	addwfc	prodh,f,c
 13655  006AAE  0E00               	movlw	low _all_shapes
 13656  006AB0  24F3               	addwf	prodl,w,c
 13657  006AB2  6ED9               	movwf	fsr2l,c
 13658  006AB4  0E01               	movlw	high _all_shapes
 13659  006AB6  20F4               	addwfc	prodh,w,c
 13660  006AB8  6EDA               	movwf	fsr2h,c
 13661  006ABA  0E0B               	movlw	11
 13662  006ABC  6EDF               	movwf	indf2,c
 13663                           
 13664                           ;main.c: 725: all_shapes[i].index[3].y=2;
 13665  006ABE  5034               	movf	createRandomShape@i,w,c
 13666  006AC0  0D09               	mullw	9
 13667  006AC2  0E07               	movlw	7
 13668  006AC4  26F3               	addwf	prodl,f,c
 13669  006AC6  0E00               	movlw	0
 13670  006AC8  22F4               	addwfc	prodh,f,c
 13671  006ACA  0E00               	movlw	low _all_shapes
 13672  006ACC  24F3               	addwf	prodl,w,c
 13673  006ACE  6ED9               	movwf	fsr2l,c
 13674  006AD0  0E01               	movlw	high _all_shapes
 13675  006AD2  20F4               	addwfc	prodh,w,c
 13676  006AD4  6EDA               	movwf	fsr2h,c
 13677  006AD6  0E02               	movlw	2
 13678  006AD8  6EDF               	movwf	indf2,c
 13679  006ADA  D698               	goto	l255
 13680  006ADC                     
 13681                           ;main.c: 729: all_shapes[i].index[0].x=11;
 13682  006ADC  5034               	movf	createRandomShape@i,w,c
 13683  006ADE  0D09               	mullw	9
 13684  006AE0  0E00               	movlw	low _all_shapes
 13685  006AE2  24F3               	addwf	prodl,w,c
 13686  006AE4  6ED9               	movwf	fsr2l,c
 13687  006AE6  0E01               	movlw	high _all_shapes
 13688  006AE8  20F4               	addwfc	prodh,w,c
 13689  006AEA  6EDA               	movwf	fsr2h,c
 13690  006AEC  0E0B               	movlw	11
 13691  006AEE  6EDF               	movwf	indf2,c
 13692                           
 13693                           ;main.c: 730: all_shapes[i].index[0].y=0;
 13694  006AF0  5034               	movf	createRandomShape@i,w,c
 13695  006AF2  0D09               	mullw	9
 13696  006AF4  0E01               	movlw	1
 13697  006AF6  26F3               	addwf	prodl,f,c
 13698  006AF8  0E00               	movlw	0
 13699  006AFA  22F4               	addwfc	prodh,f,c
 13700  006AFC  0E00               	movlw	low _all_shapes
 13701  006AFE  24F3               	addwf	prodl,w,c
 13702  006B00  6ED9               	movwf	fsr2l,c
 13703  006B02  0E01               	movlw	high _all_shapes
 13704  006B04  20F4               	addwfc	prodh,w,c
 13705  006B06  6EDA               	movwf	fsr2h,c
 13706  006B08  0E00               	movlw	0
 13707  006B0A  6EDF               	movwf	indf2,c
 13708                           
 13709                           ;main.c: 731: all_shapes[i].index[1].x=11;
 13710  006B0C  5034               	movf	createRandomShape@i,w,c
 13711  006B0E  0D09               	mullw	9
 13712  006B10  0E02               	movlw	2
 13713  006B12  26F3               	addwf	prodl,f,c
 13714  006B14  0E00               	movlw	0
 13715  006B16  22F4               	addwfc	prodh,f,c
 13716  006B18  0E00               	movlw	low _all_shapes
 13717  006B1A  24F3               	addwf	prodl,w,c
 13718  006B1C  6ED9               	movwf	fsr2l,c
 13719  006B1E  0E01               	movlw	high _all_shapes
 13720  006B20  20F4               	addwfc	prodh,w,c
 13721  006B22  6EDA               	movwf	fsr2h,c
 13722  006B24  0E0B               	movlw	11
 13723  006B26  6EDF               	movwf	indf2,c
 13724                           
 13725                           ;main.c: 732: all_shapes[i].index[1].y=1;
 13726  006B28  5034               	movf	createRandomShape@i,w,c
 13727  006B2A  0D09               	mullw	9
 13728  006B2C  0E03               	movlw	3
 13729  006B2E  26F3               	addwf	prodl,f,c
 13730  006B30  0E00               	movlw	0
 13731  006B32  22F4               	addwfc	prodh,f,c
 13732  006B34  0E00               	movlw	low _all_shapes
 13733  006B36  24F3               	addwf	prodl,w,c
 13734  006B38  6ED9               	movwf	fsr2l,c
 13735  006B3A  0E01               	movlw	high _all_shapes
 13736  006B3C  20F4               	addwfc	prodh,w,c
 13737  006B3E  6EDA               	movwf	fsr2h,c
 13738  006B40  0E01               	movlw	1
 13739  006B42  6EDF               	movwf	indf2,c
 13740                           
 13741                           ;main.c: 733: all_shapes[i].index[2].x=12;
 13742  006B44  5034               	movf	createRandomShape@i,w,c
 13743  006B46  0D09               	mullw	9
 13744  006B48  0E04               	movlw	4
 13745  006B4A  26F3               	addwf	prodl,f,c
 13746  006B4C  0E00               	movlw	0
 13747  006B4E  22F4               	addwfc	prodh,f,c
 13748  006B50  0E00               	movlw	low _all_shapes
 13749  006B52  24F3               	addwf	prodl,w,c
 13750  006B54  6ED9               	movwf	fsr2l,c
 13751  006B56  0E01               	movlw	high _all_shapes
 13752  006B58  20F4               	addwfc	prodh,w,c
 13753  006B5A  6EDA               	movwf	fsr2h,c
 13754  006B5C  0E0C               	movlw	12
 13755  006B5E  6EDF               	movwf	indf2,c
 13756                           
 13757                           ;main.c: 734: all_shapes[i].index[2].y=1;
 13758  006B60  5034               	movf	createRandomShape@i,w,c
 13759  006B62  0D09               	mullw	9
 13760  006B64  0E05               	movlw	5
 13761  006B66  26F3               	addwf	prodl,f,c
 13762  006B68  0E00               	movlw	0
 13763  006B6A  22F4               	addwfc	prodh,f,c
 13764  006B6C  0E00               	movlw	low _all_shapes
 13765  006B6E  24F3               	addwf	prodl,w,c
 13766  006B70  6ED9               	movwf	fsr2l,c
 13767  006B72  0E01               	movlw	high _all_shapes
 13768  006B74  20F4               	addwfc	prodh,w,c
 13769  006B76  6EDA               	movwf	fsr2h,c
 13770  006B78  0E01               	movlw	1
 13771  006B7A  6EDF               	movwf	indf2,c
 13772                           
 13773                           ;main.c: 735: all_shapes[i].index[3].x=12;
 13774  006B7C  5034               	movf	createRandomShape@i,w,c
 13775  006B7E  0D09               	mullw	9
 13776  006B80  0E06               	movlw	6
 13777  006B82  26F3               	addwf	prodl,f,c
 13778  006B84  0E00               	movlw	0
 13779  006B86  22F4               	addwfc	prodh,f,c
 13780  006B88  0E00               	movlw	low _all_shapes
 13781  006B8A  24F3               	addwf	prodl,w,c
 13782  006B8C  6ED9               	movwf	fsr2l,c
 13783  006B8E  0E01               	movlw	high _all_shapes
 13784  006B90  20F4               	addwfc	prodh,w,c
 13785  006B92  6EDA               	movwf	fsr2h,c
 13786  006B94  0E0C               	movlw	12
 13787  006B96  D329               	goto	L43
 13788  006B98  5033               	movf	createRandomShape@orientation,w,c
 13789                           
 13790                           ; Switch size 1, requested type "space"
 13791                           ; Number of cases is 4, Range of values is 0 to 3
 13792                           ; switch strategies available:
 13793                           ; Name         Instructions Cycles
 13794                           ; simple_byte           13     7 (average)
 13795                           ;	Chosen strategy is simple_byte
 13796  006B9A  0A00               	xorlw	0	; case 0
 13797  006B9C  B4D8               	btfsc	status,2,c
 13798  006B9E  D654               	goto	l260
 13799  006BA0  0A01               	xorlw	1	; case 1
 13800  006BA2  B4D8               	btfsc	status,2,c
 13801  006BA4  D6C1               	goto	l262
 13802  006BA6  0A03               	xorlw	3	; case 2
 13803  006BA8  B4D8               	btfsc	status,2,c
 13804  006BAA  D72B               	goto	l263
 13805  006BAC  0A01               	xorlw	1	; case 3
 13806  006BAE  B4D8               	btfsc	status,2,c
 13807  006BB0  D795               	goto	l264
 13808                           
 13809                           ;main.c: 742: break;
 13810  006BB2  D360               	goto	l217
 13811  006BB4                     
 13812                           ;main.c: 746: all_shapes[i].orientation=0;
 13813  006BB4  5034               	movf	createRandomShape@i,w,c
 13814  006BB6  0D09               	mullw	9
 13815  006BB8  0E08               	movlw	8
 13816  006BBA  26F3               	addwf	prodl,f,c
 13817  006BBC  0E00               	movlw	0
 13818  006BBE  22F4               	addwfc	prodh,f,c
 13819  006BC0  0E00               	movlw	low _all_shapes
 13820  006BC2  24F3               	addwf	prodl,w,c
 13821  006BC4  6ED9               	movwf	fsr2l,c
 13822  006BC6  0E01               	movlw	high _all_shapes
 13823  006BC8  20F4               	addwfc	prodh,w,c
 13824  006BCA  6EDA               	movwf	fsr2h,c
 13825  006BCC  0E00               	movlw	0
 13826  006BCE  6EDF               	movwf	indf2,c
 13827                           
 13828                           ;main.c: 747: uint8_t start=10;
 13829  006BD0  0E0A               	movlw	10
 13830  006BD2  6E32               	movwf	createRandomShape@start_291,c
 13831                           
 13832                           ;main.c: 748: all_shapes[i].index[0].x=11;
 13833  006BD4  5034               	movf	createRandomShape@i,w,c
 13834  006BD6  0D09               	mullw	9
 13835  006BD8  0E00               	movlw	low _all_shapes
 13836  006BDA  24F3               	addwf	prodl,w,c
 13837  006BDC  6ED9               	movwf	fsr2l,c
 13838  006BDE  0E01               	movlw	high _all_shapes
 13839  006BE0  20F4               	addwfc	prodh,w,c
 13840  006BE2  6EDA               	movwf	fsr2h,c
 13841  006BE4  0E0B               	movlw	11
 13842  006BE6  6EDF               	movwf	indf2,c
 13843                           
 13844                           ;main.c: 749: all_shapes[i].index[0].y=0;
 13845  006BE8  5034               	movf	createRandomShape@i,w,c
 13846  006BEA  0D09               	mullw	9
 13847  006BEC  0E01               	movlw	1
 13848  006BEE  26F3               	addwf	prodl,f,c
 13849  006BF0  0E00               	movlw	0
 13850  006BF2  22F4               	addwfc	prodh,f,c
 13851  006BF4  0E00               	movlw	low _all_shapes
 13852  006BF6  24F3               	addwf	prodl,w,c
 13853  006BF8  6ED9               	movwf	fsr2l,c
 13854  006BFA  0E01               	movlw	high _all_shapes
 13855  006BFC  20F4               	addwfc	prodh,w,c
 13856  006BFE  6EDA               	movwf	fsr2h,c
 13857  006C00  0E00               	movlw	0
 13858  006C02  6EDF               	movwf	indf2,c
 13859                           
 13860                           ;main.c: 750: for (uint8_t k=1;k<4;k++){
 13861  006C04  0E01               	movlw	1
 13862  006C06  6E2A               	movwf	createRandomShape@k_292,c
 13863  006C08                     l4257:
 13864  006C08  0E03               	movlw	3
 13865  006C0A  642A               	cpfsgt	createRandomShape@k_292,c
 13866  006C0C  D001               	goto	l269
 13867  006C0E  D332               	goto	l217
 13868  006C10                     l269:
 13869                           
 13870                           ;main.c: 751: all_shapes[i].index[k].x=start;
 13871  006C10  5034               	movf	createRandomShape@i,w,c
 13872  006C12  0D09               	mullw	9
 13873  006C14  0E00               	movlw	low _all_shapes
 13874  006C16  6E15               	movwf	??_createRandomShape& (0+255),c
 13875  006C18  0E01               	movlw	high _all_shapes
 13876  006C1A  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 13877  006C1C  50F3               	movf	prodl,w,c
 13878  006C1E  2615               	addwf	??_createRandomShape,f,c
 13879  006C20  50F4               	movf	prodh,w,c
 13880  006C22  2216               	addwfc	??_createRandomShape+1,f,c
 13881  006C24  502A               	movf	createRandomShape@k_292,w,c
 13882  006C26  0D02               	mullw	2
 13883  006C28  50F3               	movf	prodl,w,c
 13884  006C2A  2415               	addwf	??_createRandomShape,w,c
 13885  006C2C  6ED9               	movwf	fsr2l,c
 13886  006C2E  50F4               	movf	prodh,w,c
 13887  006C30  2016               	addwfc	??_createRandomShape+1,w,c
 13888  006C32  6EDA               	movwf	fsr2h,c
 13889  006C34  C032  FFDF         	movff	createRandomShape@start_291,indf2
 13890                           
 13891                           ;main.c: 752: all_shapes[i].index[k].y=1;
 13892  006C38  5034               	movf	createRandomShape@i,w,c
 13893  006C3A  0D09               	mullw	9
 13894  006C3C  0E00               	movlw	low _all_shapes
 13895  006C3E  6E15               	movwf	??_createRandomShape& (0+255),c
 13896  006C40  0E01               	movlw	high _all_shapes
 13897  006C42  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 13898  006C44  50F3               	movf	prodl,w,c
 13899  006C46  2615               	addwf	??_createRandomShape,f,c
 13900  006C48  50F4               	movf	prodh,w,c
 13901  006C4A  2216               	addwfc	??_createRandomShape+1,f,c
 13902  006C4C  502A               	movf	createRandomShape@k_292,w,c
 13903  006C4E  0D02               	mullw	2
 13904  006C50  50F3               	movf	prodl,w,c
 13905  006C52  2615               	addwf	??_createRandomShape,f,c
 13906  006C54  50F4               	movf	prodh,w,c
 13907  006C56  2216               	addwfc	??_createRandomShape+1,f,c
 13908  006C58  0E01               	movlw	1
 13909  006C5A  2415               	addwf	??_createRandomShape,w,c
 13910  006C5C  6ED9               	movwf	fsr2l,c
 13911  006C5E  0E00               	movlw	0
 13912  006C60  2016               	addwfc	??_createRandomShape+1,w,c
 13913  006C62  6EDA               	movwf	fsr2h,c
 13914  006C64  0E01               	movlw	1
 13915  006C66  6EDF               	movwf	indf2,c
 13916                           
 13917                           ;main.c: 753: start++;
 13918  006C68  2A32               	incf	createRandomShape@start_291,f,c
 13919  006C6A  2A2A               	incf	createRandomShape@k_292,f,c
 13920  006C6C  D7CD               	goto	l4257
 13921  006C6E                     
 13922                           ;main.c: 757: all_shapes[i].orientation=1;
 13923  006C6E  5034               	movf	createRandomShape@i,w,c
 13924  006C70  0D09               	mullw	9
 13925  006C72  0E08               	movlw	8
 13926  006C74  26F3               	addwf	prodl,f,c
 13927  006C76  0E00               	movlw	0
 13928  006C78  22F4               	addwfc	prodh,f,c
 13929  006C7A  0E00               	movlw	low _all_shapes
 13930  006C7C  24F3               	addwf	prodl,w,c
 13931  006C7E  6ED9               	movwf	fsr2l,c
 13932  006C80  0E01               	movlw	high _all_shapes
 13933  006C82  20F4               	addwfc	prodh,w,c
 13934  006C84  6EDA               	movwf	fsr2h,c
 13935  006C86  0E01               	movlw	1
 13936  006C88  6EDF               	movwf	indf2,c
 13937                           
 13938                           ;main.c: 758: uint8_t start=10;
 13939  006C8A  0E0A               	movlw	10
 13940  006C8C  6E32               	movwf	createRandomShape@start_291,c
 13941                           
 13942                           ;main.c: 759: all_shapes[i].index[0].x=11;
 13943  006C8E  5034               	movf	createRandomShape@i,w,c
 13944  006C90  0D09               	mullw	9
 13945  006C92  0E00               	movlw	low _all_shapes
 13946  006C94  24F3               	addwf	prodl,w,c
 13947  006C96  6ED9               	movwf	fsr2l,c
 13948  006C98  0E01               	movlw	high _all_shapes
 13949  006C9A  20F4               	addwfc	prodh,w,c
 13950  006C9C  6EDA               	movwf	fsr2h,c
 13951  006C9E  0E0B               	movlw	11
 13952  006CA0  6EDF               	movwf	indf2,c
 13953                           
 13954                           ;main.c: 760: all_shapes[i].index[0].y=2;
 13955  006CA2  5034               	movf	createRandomShape@i,w,c
 13956  006CA4  0D09               	mullw	9
 13957  006CA6  0E01               	movlw	1
 13958  006CA8  26F3               	addwf	prodl,f,c
 13959  006CAA  0E00               	movlw	0
 13960  006CAC  22F4               	addwfc	prodh,f,c
 13961  006CAE  0E00               	movlw	low _all_shapes
 13962  006CB0  24F3               	addwf	prodl,w,c
 13963  006CB2  6ED9               	movwf	fsr2l,c
 13964  006CB4  0E01               	movlw	high _all_shapes
 13965  006CB6  20F4               	addwfc	prodh,w,c
 13966  006CB8  6EDA               	movwf	fsr2h,c
 13967  006CBA  0E02               	movlw	2
 13968  006CBC  6EDF               	movwf	indf2,c
 13969                           
 13970                           ;main.c: 761: for (uint8_t k=1;k<4;k++){
 13971  006CBE  0E01               	movlw	1
 13972  006CC0  6E2B               	movwf	createRandomShape@k_293,c
 13973  006CC2                     l4279:
 13974  006CC2  0E03               	movlw	3
 13975  006CC4  642B               	cpfsgt	createRandomShape@k_293,c
 13976  006CC6  D001               	goto	l273
 13977  006CC8  D2D5               	goto	l217
 13978  006CCA                     l273:
 13979                           
 13980                           ;main.c: 762: all_shapes[i].index[k].x=start;
 13981  006CCA  5034               	movf	createRandomShape@i,w,c
 13982  006CCC  0D09               	mullw	9
 13983  006CCE  0E00               	movlw	low _all_shapes
 13984  006CD0  6E15               	movwf	??_createRandomShape& (0+255),c
 13985  006CD2  0E01               	movlw	high _all_shapes
 13986  006CD4  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 13987  006CD6  50F3               	movf	prodl,w,c
 13988  006CD8  2615               	addwf	??_createRandomShape,f,c
 13989  006CDA  50F4               	movf	prodh,w,c
 13990  006CDC  2216               	addwfc	??_createRandomShape+1,f,c
 13991  006CDE  502B               	movf	createRandomShape@k_293,w,c
 13992  006CE0  0D02               	mullw	2
 13993  006CE2  50F3               	movf	prodl,w,c
 13994  006CE4  2415               	addwf	??_createRandomShape,w,c
 13995  006CE6  6ED9               	movwf	fsr2l,c
 13996  006CE8  50F4               	movf	prodh,w,c
 13997  006CEA  2016               	addwfc	??_createRandomShape+1,w,c
 13998  006CEC  6EDA               	movwf	fsr2h,c
 13999  006CEE  C032  FFDF         	movff	createRandomShape@start_291,indf2
 14000                           
 14001                           ;main.c: 763: all_shapes[i].index[k].y=1;
 14002  006CF2  5034               	movf	createRandomShape@i,w,c
 14003  006CF4  0D09               	mullw	9
 14004  006CF6  0E00               	movlw	low _all_shapes
 14005  006CF8  6E15               	movwf	??_createRandomShape& (0+255),c
 14006  006CFA  0E01               	movlw	high _all_shapes
 14007  006CFC  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 14008  006CFE  50F3               	movf	prodl,w,c
 14009  006D00  2615               	addwf	??_createRandomShape,f,c
 14010  006D02  50F4               	movf	prodh,w,c
 14011  006D04  2216               	addwfc	??_createRandomShape+1,f,c
 14012  006D06  502B               	movf	createRandomShape@k_293,w,c
 14013  006D08  0D02               	mullw	2
 14014  006D0A  50F3               	movf	prodl,w,c
 14015  006D0C  2615               	addwf	??_createRandomShape,f,c
 14016  006D0E  50F4               	movf	prodh,w,c
 14017  006D10  2216               	addwfc	??_createRandomShape+1,f,c
 14018  006D12  0E01               	movlw	1
 14019  006D14  2415               	addwf	??_createRandomShape,w,c
 14020  006D16  6ED9               	movwf	fsr2l,c
 14021  006D18  0E00               	movlw	0
 14022  006D1A  2016               	addwfc	??_createRandomShape+1,w,c
 14023  006D1C  6EDA               	movwf	fsr2h,c
 14024  006D1E  0E01               	movlw	1
 14025  006D20  6EDF               	movwf	indf2,c
 14026                           
 14027                           ;main.c: 764: start++;
 14028  006D22  2A32               	incf	createRandomShape@start_291,f,c
 14029  006D24  2A2B               	incf	createRandomShape@k_293,f,c
 14030  006D26  D7CD               	goto	l4279
 14031  006D28                     
 14032                           ;main.c: 768: all_shapes[i].orientation=2;
 14033  006D28  5034               	movf	createRandomShape@i,w,c
 14034  006D2A  0D09               	mullw	9
 14035  006D2C  0E08               	movlw	8
 14036  006D2E  26F3               	addwf	prodl,f,c
 14037  006D30  0E00               	movlw	0
 14038  006D32  22F4               	addwfc	prodh,f,c
 14039  006D34  0E00               	movlw	low _all_shapes
 14040  006D36  24F3               	addwf	prodl,w,c
 14041  006D38  6ED9               	movwf	fsr2l,c
 14042  006D3A  0E01               	movlw	high _all_shapes
 14043  006D3C  20F4               	addwfc	prodh,w,c
 14044  006D3E  6EDA               	movwf	fsr2h,c
 14045  006D40  0E02               	movlw	2
 14046  006D42  6EDF               	movwf	indf2,c
 14047                           
 14048                           ;main.c: 769: uint8_t start=0;
 14049  006D44  0E00               	movlw	0
 14050  006D46  6E32               	movwf	createRandomShape@start_291,c
 14051                           
 14052                           ;main.c: 770: all_shapes[i].index[0].x=10;
 14053  006D48  5034               	movf	createRandomShape@i,w,c
 14054  006D4A  0D09               	mullw	9
 14055  006D4C  0E00               	movlw	low _all_shapes
 14056  006D4E  24F3               	addwf	prodl,w,c
 14057  006D50  6ED9               	movwf	fsr2l,c
 14058  006D52  0E01               	movlw	high _all_shapes
 14059  006D54  20F4               	addwfc	prodh,w,c
 14060  006D56  6EDA               	movwf	fsr2h,c
 14061  006D58  0E0A               	movlw	10
 14062  006D5A  6EDF               	movwf	indf2,c
 14063                           
 14064                           ;main.c: 771: all_shapes[i].index[0].y=1;
 14065  006D5C  5034               	movf	createRandomShape@i,w,c
 14066  006D5E  0D09               	mullw	9
 14067  006D60  0E01               	movlw	1
 14068  006D62  26F3               	addwf	prodl,f,c
 14069  006D64  0E00               	movlw	0
 14070  006D66  22F4               	addwfc	prodh,f,c
 14071  006D68  0E00               	movlw	low _all_shapes
 14072  006D6A  24F3               	addwf	prodl,w,c
 14073  006D6C  6ED9               	movwf	fsr2l,c
 14074  006D6E  0E01               	movlw	high _all_shapes
 14075  006D70  20F4               	addwfc	prodh,w,c
 14076  006D72  6EDA               	movwf	fsr2h,c
 14077  006D74  0E01               	movlw	1
 14078  006D76  6EDF               	movwf	indf2,c
 14079                           
 14080                           ;main.c: 772: for (uint8_t k=1;k<4;k++){
 14081  006D78  0E01               	movlw	1
 14082  006D7A  6E2C               	movwf	createRandomShape@k_294,c
 14083  006D7C                     l4301:
 14084  006D7C  0E03               	movlw	3
 14085  006D7E  642C               	cpfsgt	createRandomShape@k_294,c
 14086  006D80  D001               	goto	l276
 14087  006D82  D278               	goto	l217
 14088  006D84                     l276:
 14089                           
 14090                           ;main.c: 773: all_shapes[i].index[k].x=11;
 14091  006D84  5034               	movf	createRandomShape@i,w,c
 14092  006D86  0D09               	mullw	9
 14093  006D88  0E00               	movlw	low _all_shapes
 14094  006D8A  6E15               	movwf	??_createRandomShape& (0+255),c
 14095  006D8C  0E01               	movlw	high _all_shapes
 14096  006D8E  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 14097  006D90  50F3               	movf	prodl,w,c
 14098  006D92  2615               	addwf	??_createRandomShape,f,c
 14099  006D94  50F4               	movf	prodh,w,c
 14100  006D96  2216               	addwfc	??_createRandomShape+1,f,c
 14101  006D98  502C               	movf	createRandomShape@k_294,w,c
 14102  006D9A  0D02               	mullw	2
 14103  006D9C  50F3               	movf	prodl,w,c
 14104  006D9E  2415               	addwf	??_createRandomShape,w,c
 14105  006DA0  6ED9               	movwf	fsr2l,c
 14106  006DA2  50F4               	movf	prodh,w,c
 14107  006DA4  2016               	addwfc	??_createRandomShape+1,w,c
 14108  006DA6  6EDA               	movwf	fsr2h,c
 14109  006DA8  0E0B               	movlw	11
 14110  006DAA  6EDF               	movwf	indf2,c
 14111                           
 14112                           ;main.c: 774: all_shapes[i].index[k].y=start;
 14113  006DAC  5034               	movf	createRandomShape@i,w,c
 14114  006DAE  0D09               	mullw	9
 14115  006DB0  0E00               	movlw	low _all_shapes
 14116  006DB2  6E15               	movwf	??_createRandomShape& (0+255),c
 14117  006DB4  0E01               	movlw	high _all_shapes
 14118  006DB6  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 14119  006DB8  50F3               	movf	prodl,w,c
 14120  006DBA  2615               	addwf	??_createRandomShape,f,c
 14121  006DBC  50F4               	movf	prodh,w,c
 14122  006DBE  2216               	addwfc	??_createRandomShape+1,f,c
 14123  006DC0  502C               	movf	createRandomShape@k_294,w,c
 14124  006DC2  0D02               	mullw	2
 14125  006DC4  50F3               	movf	prodl,w,c
 14126  006DC6  2615               	addwf	??_createRandomShape,f,c
 14127  006DC8  50F4               	movf	prodh,w,c
 14128  006DCA  2216               	addwfc	??_createRandomShape+1,f,c
 14129  006DCC  0E01               	movlw	1
 14130  006DCE  2415               	addwf	??_createRandomShape,w,c
 14131  006DD0  6ED9               	movwf	fsr2l,c
 14132  006DD2  0E00               	movlw	0
 14133  006DD4  2016               	addwfc	??_createRandomShape+1,w,c
 14134  006DD6  6EDA               	movwf	fsr2h,c
 14135  006DD8  C032  FFDF         	movff	createRandomShape@start_291,indf2
 14136                           
 14137                           ;main.c: 775: start++;
 14138  006DDC  2A32               	incf	createRandomShape@start_291,f,c
 14139  006DDE  2A2C               	incf	createRandomShape@k_294,f,c
 14140  006DE0  D7CD               	goto	l4301
 14141  006DE2                     
 14142                           ;main.c: 779: all_shapes[i].orientation=3;
 14143  006DE2  5034               	movf	createRandomShape@i,w,c
 14144  006DE4  0D09               	mullw	9
 14145  006DE6  0E08               	movlw	8
 14146  006DE8  26F3               	addwf	prodl,f,c
 14147  006DEA  0E00               	movlw	0
 14148  006DEC  22F4               	addwfc	prodh,f,c
 14149  006DEE  0E00               	movlw	low _all_shapes
 14150  006DF0  24F3               	addwf	prodl,w,c
 14151  006DF2  6ED9               	movwf	fsr2l,c
 14152  006DF4  0E01               	movlw	high _all_shapes
 14153  006DF6  20F4               	addwfc	prodh,w,c
 14154  006DF8  6EDA               	movwf	fsr2h,c
 14155  006DFA  0E03               	movlw	3
 14156  006DFC  6EDF               	movwf	indf2,c
 14157                           
 14158                           ;main.c: 780: uint8_t start=0;
 14159  006DFE  0E00               	movlw	0
 14160  006E00  6E32               	movwf	createRandomShape@start_291,c
 14161                           
 14162                           ;main.c: 781: all_shapes[i].index[0].x=12;
 14163  006E02  5034               	movf	createRandomShape@i,w,c
 14164  006E04  0D09               	mullw	9
 14165  006E06  0E00               	movlw	low _all_shapes
 14166  006E08  24F3               	addwf	prodl,w,c
 14167  006E0A  6ED9               	movwf	fsr2l,c
 14168  006E0C  0E01               	movlw	high _all_shapes
 14169  006E0E  20F4               	addwfc	prodh,w,c
 14170  006E10  6EDA               	movwf	fsr2h,c
 14171  006E12  0E0C               	movlw	12
 14172  006E14  6EDF               	movwf	indf2,c
 14173                           
 14174                           ;main.c: 782: all_shapes[i].index[0].y=1;
 14175  006E16  5034               	movf	createRandomShape@i,w,c
 14176  006E18  0D09               	mullw	9
 14177  006E1A  0E01               	movlw	1
 14178  006E1C  26F3               	addwf	prodl,f,c
 14179  006E1E  0E00               	movlw	0
 14180  006E20  22F4               	addwfc	prodh,f,c
 14181  006E22  0E00               	movlw	low _all_shapes
 14182  006E24  24F3               	addwf	prodl,w,c
 14183  006E26  6ED9               	movwf	fsr2l,c
 14184  006E28  0E01               	movlw	high _all_shapes
 14185  006E2A  20F4               	addwfc	prodh,w,c
 14186  006E2C  6EDA               	movwf	fsr2h,c
 14187  006E2E  0E01               	movlw	1
 14188  006E30  6EDF               	movwf	indf2,c
 14189                           
 14190                           ;main.c: 783: for (uint8_t k=1;k<4;k++){
 14191  006E32  0E01               	movlw	1
 14192  006E34  6E2D               	movwf	createRandomShape@k_295,c
 14193  006E36                     l4323:
 14194  006E36  0E03               	movlw	3
 14195  006E38  642D               	cpfsgt	createRandomShape@k_295,c
 14196  006E3A  D001               	goto	l279
 14197  006E3C  D21B               	goto	l217
 14198  006E3E                     l279:
 14199                           
 14200                           ;main.c: 784: all_shapes[i].index[k].x=11;
 14201  006E3E  5034               	movf	createRandomShape@i,w,c
 14202  006E40  0D09               	mullw	9
 14203  006E42  0E00               	movlw	low _all_shapes
 14204  006E44  6E15               	movwf	??_createRandomShape& (0+255),c
 14205  006E46  0E01               	movlw	high _all_shapes
 14206  006E48  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 14207  006E4A  50F3               	movf	prodl,w,c
 14208  006E4C  2615               	addwf	??_createRandomShape,f,c
 14209  006E4E  50F4               	movf	prodh,w,c
 14210  006E50  2216               	addwfc	??_createRandomShape+1,f,c
 14211  006E52  502D               	movf	createRandomShape@k_295,w,c
 14212  006E54  0D02               	mullw	2
 14213  006E56  50F3               	movf	prodl,w,c
 14214  006E58  2415               	addwf	??_createRandomShape,w,c
 14215  006E5A  6ED9               	movwf	fsr2l,c
 14216  006E5C  50F4               	movf	prodh,w,c
 14217  006E5E  2016               	addwfc	??_createRandomShape+1,w,c
 14218  006E60  6EDA               	movwf	fsr2h,c
 14219  006E62  0E0B               	movlw	11
 14220  006E64  6EDF               	movwf	indf2,c
 14221                           
 14222                           ;main.c: 785: all_shapes[i].index[k].y=start;
 14223  006E66  5034               	movf	createRandomShape@i,w,c
 14224  006E68  0D09               	mullw	9
 14225  006E6A  0E00               	movlw	low _all_shapes
 14226  006E6C  6E15               	movwf	??_createRandomShape& (0+255),c
 14227  006E6E  0E01               	movlw	high _all_shapes
 14228  006E70  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 14229  006E72  50F3               	movf	prodl,w,c
 14230  006E74  2615               	addwf	??_createRandomShape,f,c
 14231  006E76  50F4               	movf	prodh,w,c
 14232  006E78  2216               	addwfc	??_createRandomShape+1,f,c
 14233  006E7A  502D               	movf	createRandomShape@k_295,w,c
 14234  006E7C  0D02               	mullw	2
 14235  006E7E  50F3               	movf	prodl,w,c
 14236  006E80  2615               	addwf	??_createRandomShape,f,c
 14237  006E82  50F4               	movf	prodh,w,c
 14238  006E84  2216               	addwfc	??_createRandomShape+1,f,c
 14239  006E86  0E01               	movlw	1
 14240  006E88  2415               	addwf	??_createRandomShape,w,c
 14241  006E8A  6ED9               	movwf	fsr2l,c
 14242  006E8C  0E00               	movlw	0
 14243  006E8E  2016               	addwfc	??_createRandomShape+1,w,c
 14244  006E90  6EDA               	movwf	fsr2h,c
 14245  006E92  C032  FFDF         	movff	createRandomShape@start_291,indf2
 14246                           
 14247                           ;main.c: 786: start++;
 14248  006E96  2A32               	incf	createRandomShape@start_291,f,c
 14249  006E98  2A2D               	incf	createRandomShape@k_295,f,c
 14250  006E9A  D7CD               	goto	l4323
 14251  006E9C  5033               	movf	createRandomShape@orientation,w,c
 14252                           
 14253                           ; Switch size 1, requested type "space"
 14254                           ; Number of cases is 4, Range of values is 0 to 3
 14255                           ; switch strategies available:
 14256                           ; Name         Instructions Cycles
 14257                           ; simple_byte           13     7 (average)
 14258                           ;	Chosen strategy is simple_byte
 14259  006E9E  0A00               	xorlw	0	; case 0
 14260  006EA0  B4D8               	btfsc	status,2,c
 14261  006EA2  D688               	goto	l268
 14262  006EA4  0A01               	xorlw	1	; case 1
 14263  006EA6  B4D8               	btfsc	status,2,c
 14264  006EA8  D6E2               	goto	l272
 14265  006EAA  0A03               	xorlw	3	; case 2
 14266  006EAC  B4D8               	btfsc	status,2,c
 14267  006EAE  D73C               	goto	l275
 14268  006EB0  0A01               	xorlw	1	; case 3
 14269  006EB2  B4D8               	btfsc	status,2,c
 14270  006EB4  D796               	goto	l278
 14271                           
 14272                           ;main.c: 792: break;
 14273  006EB6  D1DE               	goto	l217
 14274  006EB8                     
 14275                           ;main.c: 796: all_shapes[i].orientation=0;
 14276  006EB8  5034               	movf	createRandomShape@i,w,c
 14277  006EBA  0D09               	mullw	9
 14278  006EBC  0E08               	movlw	8
 14279  006EBE  26F3               	addwf	prodl,f,c
 14280  006EC0  0E00               	movlw	0
 14281  006EC2  22F4               	addwfc	prodh,f,c
 14282  006EC4  0E00               	movlw	low _all_shapes
 14283  006EC6  24F3               	addwf	prodl,w,c
 14284  006EC8  6ED9               	movwf	fsr2l,c
 14285  006ECA  0E01               	movlw	high _all_shapes
 14286  006ECC  20F4               	addwfc	prodh,w,c
 14287  006ECE  6EDA               	movwf	fsr2h,c
 14288  006ED0  0E00               	movlw	0
 14289  006ED2  6EDF               	movwf	indf2,c
 14290                           
 14291                           ;main.c: 797: all_shapes[i].index[0].x=10;
 14292  006ED4  5034               	movf	createRandomShape@i,w,c
 14293  006ED6  0D09               	mullw	9
 14294  006ED8  0E00               	movlw	low _all_shapes
 14295  006EDA  24F3               	addwf	prodl,w,c
 14296  006EDC  6ED9               	movwf	fsr2l,c
 14297  006EDE  0E01               	movlw	high _all_shapes
 14298  006EE0  20F4               	addwfc	prodh,w,c
 14299  006EE2  6EDA               	movwf	fsr2h,c
 14300  006EE4  0E0A               	movlw	10
 14301  006EE6  6EDF               	movwf	indf2,c
 14302                           
 14303                           ;main.c: 798: all_shapes[i].index[0].y=0;
 14304  006EE8  5034               	movf	createRandomShape@i,w,c
 14305  006EEA  0D09               	mullw	9
 14306  006EEC  0E01               	movlw	1
 14307  006EEE  26F3               	addwf	prodl,f,c
 14308  006EF0  0E00               	movlw	0
 14309  006EF2  22F4               	addwfc	prodh,f,c
 14310  006EF4  0E00               	movlw	low _all_shapes
 14311  006EF6  24F3               	addwf	prodl,w,c
 14312  006EF8  6ED9               	movwf	fsr2l,c
 14313  006EFA  0E01               	movlw	high _all_shapes
 14314  006EFC  20F4               	addwfc	prodh,w,c
 14315  006EFE  6EDA               	movwf	fsr2h,c
 14316  006F00  0E00               	movlw	0
 14317  006F02  6EDF               	movwf	indf2,c
 14318                           
 14319                           ;main.c: 799: all_shapes[i].index[1].x=11;
 14320  006F04  5034               	movf	createRandomShape@i,w,c
 14321  006F06  0D09               	mullw	9
 14322  006F08  0E02               	movlw	2
 14323  006F0A  26F3               	addwf	prodl,f,c
 14324  006F0C  0E00               	movlw	0
 14325  006F0E  22F4               	addwfc	prodh,f,c
 14326  006F10  0E00               	movlw	low _all_shapes
 14327  006F12  24F3               	addwf	prodl,w,c
 14328  006F14  6ED9               	movwf	fsr2l,c
 14329  006F16  0E01               	movlw	high _all_shapes
 14330  006F18  20F4               	addwfc	prodh,w,c
 14331  006F1A  6EDA               	movwf	fsr2h,c
 14332  006F1C  0E0B               	movlw	11
 14333  006F1E  6EDF               	movwf	indf2,c
 14334                           
 14335                           ;main.c: 800: all_shapes[i].index[1].y=0;
 14336  006F20  5034               	movf	createRandomShape@i,w,c
 14337  006F22  0D09               	mullw	9
 14338  006F24  0E03               	movlw	3
 14339  006F26  26F3               	addwf	prodl,f,c
 14340  006F28  0E00               	movlw	0
 14341  006F2A  22F4               	addwfc	prodh,f,c
 14342  006F2C  0E00               	movlw	low _all_shapes
 14343  006F2E  24F3               	addwf	prodl,w,c
 14344  006F30  6ED9               	movwf	fsr2l,c
 14345  006F32  0E01               	movlw	high _all_shapes
 14346  006F34  20F4               	addwfc	prodh,w,c
 14347  006F36  6EDA               	movwf	fsr2h,c
 14348  006F38  0E00               	movlw	0
 14349  006F3A  6EDF               	movwf	indf2,c
 14350                           
 14351                           ;main.c: 801: all_shapes[i].index[2].x=11;
 14352  006F3C  5034               	movf	createRandomShape@i,w,c
 14353  006F3E  0D09               	mullw	9
 14354  006F40  0E04               	movlw	4
 14355  006F42  26F3               	addwf	prodl,f,c
 14356  006F44  0E00               	movlw	0
 14357  006F46  22F4               	addwfc	prodh,f,c
 14358  006F48  0E00               	movlw	low _all_shapes
 14359  006F4A  24F3               	addwf	prodl,w,c
 14360  006F4C  6ED9               	movwf	fsr2l,c
 14361  006F4E  0E01               	movlw	high _all_shapes
 14362  006F50  20F4               	addwfc	prodh,w,c
 14363  006F52  6EDA               	movwf	fsr2h,c
 14364  006F54  0E0B               	movlw	11
 14365  006F56  6EDF               	movwf	indf2,c
 14366                           
 14367                           ;main.c: 802: all_shapes[i].index[2].y=1;
 14368  006F58  5034               	movf	createRandomShape@i,w,c
 14369  006F5A  0D09               	mullw	9
 14370  006F5C  0E05               	movlw	5
 14371  006F5E  26F3               	addwf	prodl,f,c
 14372  006F60  0E00               	movlw	0
 14373  006F62  22F4               	addwfc	prodh,f,c
 14374  006F64  0E00               	movlw	low _all_shapes
 14375  006F66  24F3               	addwf	prodl,w,c
 14376  006F68  6ED9               	movwf	fsr2l,c
 14377  006F6A  0E01               	movlw	high _all_shapes
 14378  006F6C  20F4               	addwfc	prodh,w,c
 14379  006F6E  6EDA               	movwf	fsr2h,c
 14380  006F70  0E01               	movlw	1
 14381  006F72  6EDF               	movwf	indf2,c
 14382                           
 14383                           ;main.c: 803: all_shapes[i].index[3].x=12;
 14384  006F74  5034               	movf	createRandomShape@i,w,c
 14385  006F76  0D09               	mullw	9
 14386  006F78  0E06               	movlw	6
 14387  006F7A  26F3               	addwf	prodl,f,c
 14388  006F7C  0E00               	movlw	0
 14389  006F7E  22F4               	addwfc	prodh,f,c
 14390  006F80  0E00               	movlw	low _all_shapes
 14391  006F82  24F3               	addwf	prodl,w,c
 14392  006F84  6ED9               	movwf	fsr2l,c
 14393  006F86  0E01               	movlw	high _all_shapes
 14394  006F88  20F4               	addwfc	prodh,w,c
 14395  006F8A  6EDA               	movwf	fsr2h,c
 14396  006F8C  0E0C               	movlw	12
 14397  006F8E  6EDF               	movwf	indf2,c
 14398                           
 14399                           ;main.c: 804: all_shapes[i].index[3].y=1;
 14400  006F90  5034               	movf	createRandomShape@i,w,c
 14401  006F92  0D09               	mullw	9
 14402  006F94  0E07               	movlw	7
 14403  006F96  D42F               	goto	L48
 14404  006F98                     L41:
 14405  006F98  6EDF               	movwf	indf2,c
 14406                           
 14407                           ;main.c: 805: break;
 14408  006F9A  D16C               	goto	l217
 14409  006F9C                     
 14410                           ;main.c: 807: all_shapes[i].index[0].x=10;
 14411  006F9C  5034               	movf	createRandomShape@i,w,c
 14412  006F9E  0D09               	mullw	9
 14413  006FA0  0E00               	movlw	low _all_shapes
 14414  006FA2  24F3               	addwf	prodl,w,c
 14415  006FA4  6ED9               	movwf	fsr2l,c
 14416  006FA6  0E01               	movlw	high _all_shapes
 14417  006FA8  20F4               	addwfc	prodh,w,c
 14418  006FAA  6EDA               	movwf	fsr2h,c
 14419  006FAC  0E0A               	movlw	10
 14420  006FAE  6EDF               	movwf	indf2,c
 14421                           
 14422                           ;main.c: 808: all_shapes[i].index[0].y=1;
 14423  006FB0  5034               	movf	createRandomShape@i,w,c
 14424  006FB2  0D09               	mullw	9
 14425  006FB4  0E01               	movlw	1
 14426  006FB6  26F3               	addwf	prodl,f,c
 14427  006FB8  0E00               	movlw	0
 14428  006FBA  22F4               	addwfc	prodh,f,c
 14429  006FBC  0E00               	movlw	low _all_shapes
 14430  006FBE  24F3               	addwf	prodl,w,c
 14431  006FC0  6ED9               	movwf	fsr2l,c
 14432  006FC2  0E01               	movlw	high _all_shapes
 14433  006FC4  20F4               	addwfc	prodh,w,c
 14434  006FC6  6EDA               	movwf	fsr2h,c
 14435  006FC8  0E01               	movlw	1
 14436  006FCA  6EDF               	movwf	indf2,c
 14437                           
 14438                           ;main.c: 809: all_shapes[i].index[1].x=11;
 14439  006FCC  5034               	movf	createRandomShape@i,w,c
 14440  006FCE  0D09               	mullw	9
 14441  006FD0  0E02               	movlw	2
 14442  006FD2  26F3               	addwf	prodl,f,c
 14443  006FD4  0E00               	movlw	0
 14444  006FD6  22F4               	addwfc	prodh,f,c
 14445  006FD8  0E00               	movlw	low _all_shapes
 14446  006FDA  24F3               	addwf	prodl,w,c
 14447  006FDC  6ED9               	movwf	fsr2l,c
 14448  006FDE  0E01               	movlw	high _all_shapes
 14449  006FE0  20F4               	addwfc	prodh,w,c
 14450  006FE2  6EDA               	movwf	fsr2h,c
 14451  006FE4  0E0B               	movlw	11
 14452  006FE6  6EDF               	movwf	indf2,c
 14453                           
 14454                           ;main.c: 810: all_shapes[i].index[1].y=1;
 14455  006FE8  5034               	movf	createRandomShape@i,w,c
 14456  006FEA  0D09               	mullw	9
 14457  006FEC  0E03               	movlw	3
 14458  006FEE  26F3               	addwf	prodl,f,c
 14459  006FF0  0E00               	movlw	0
 14460  006FF2  22F4               	addwfc	prodh,f,c
 14461  006FF4  0E00               	movlw	low _all_shapes
 14462  006FF6  24F3               	addwf	prodl,w,c
 14463  006FF8  6ED9               	movwf	fsr2l,c
 14464  006FFA  0E01               	movlw	high _all_shapes
 14465  006FFC  20F4               	addwfc	prodh,w,c
 14466  006FFE  6EDA               	movwf	fsr2h,c
 14467  007000  0E01               	movlw	1
 14468  007002  6EDF               	movwf	indf2,c
 14469                           
 14470                           ;main.c: 811: all_shapes[i].index[2].x=11;
 14471  007004  5034               	movf	createRandomShape@i,w,c
 14472  007006  0D09               	mullw	9
 14473  007008  0E04               	movlw	4
 14474  00700A  26F3               	addwf	prodl,f,c
 14475  00700C  0E00               	movlw	0
 14476  00700E  22F4               	addwfc	prodh,f,c
 14477  007010  0E00               	movlw	low _all_shapes
 14478  007012  24F3               	addwf	prodl,w,c
 14479  007014  6ED9               	movwf	fsr2l,c
 14480  007016  0E01               	movlw	high _all_shapes
 14481  007018  20F4               	addwfc	prodh,w,c
 14482  00701A  6EDA               	movwf	fsr2h,c
 14483  00701C  0E0B               	movlw	11
 14484  00701E  6EDF               	movwf	indf2,c
 14485                           
 14486                           ;main.c: 812: all_shapes[i].index[2].y=2;
 14487  007020  5034               	movf	createRandomShape@i,w,c
 14488  007022  0D09               	mullw	9
 14489  007024  0E05               	movlw	5
 14490  007026  26F3               	addwf	prodl,f,c
 14491  007028  0E00               	movlw	0
 14492  00702A  22F4               	addwfc	prodh,f,c
 14493  00702C  0E00               	movlw	low _all_shapes
 14494  00702E  24F3               	addwf	prodl,w,c
 14495  007030  6ED9               	movwf	fsr2l,c
 14496  007032  0E01               	movlw	high _all_shapes
 14497  007034  20F4               	addwfc	prodh,w,c
 14498  007036  6EDA               	movwf	fsr2h,c
 14499  007038  0E02               	movlw	2
 14500  00703A  6EDF               	movwf	indf2,c
 14501                           
 14502                           ;main.c: 813: all_shapes[i].index[3].x=12;
 14503  00703C  5034               	movf	createRandomShape@i,w,c
 14504  00703E  0D09               	mullw	9
 14505  007040  0E06               	movlw	6
 14506  007042  26F3               	addwf	prodl,f,c
 14507  007044  0E00               	movlw	0
 14508  007046  22F4               	addwfc	prodh,f,c
 14509  007048  0E00               	movlw	low _all_shapes
 14510  00704A  24F3               	addwf	prodl,w,c
 14511  00704C  6ED9               	movwf	fsr2l,c
 14512  00704E  0E01               	movlw	high _all_shapes
 14513  007050  20F4               	addwfc	prodh,w,c
 14514  007052  6EDA               	movwf	fsr2h,c
 14515  007054  0E0C               	movlw	12
 14516  007056  6EDF               	movwf	indf2,c
 14517                           
 14518                           ;main.c: 814: all_shapes[i].index[3].y=2;
 14519  007058  5034               	movf	createRandomShape@i,w,c
 14520  00705A  0D09               	mullw	9
 14521  00705C  0E07               	movlw	7
 14522  00705E  26F3               	addwf	prodl,f,c
 14523  007060  0E00               	movlw	0
 14524  007062  22F4               	addwfc	prodh,f,c
 14525  007064  0E00               	movlw	low _all_shapes
 14526  007066  24F3               	addwf	prodl,w,c
 14527  007068  6ED9               	movwf	fsr2l,c
 14528  00706A  0E01               	movlw	high _all_shapes
 14529  00706C  20F4               	addwfc	prodh,w,c
 14530  00706E  6EDA               	movwf	fsr2h,c
 14531  007070  0E02               	movlw	2
 14532  007072  D4C5               	goto	L45
 14533  007074                     
 14534                           ;main.c: 818: all_shapes[i].index[0].x=11;
 14535  007074  5034               	movf	createRandomShape@i,w,c
 14536  007076  0D09               	mullw	9
 14537  007078  0E00               	movlw	low _all_shapes
 14538  00707A  24F3               	addwf	prodl,w,c
 14539  00707C  6ED9               	movwf	fsr2l,c
 14540  00707E  0E01               	movlw	high _all_shapes
 14541  007080  20F4               	addwfc	prodh,w,c
 14542  007082  6EDA               	movwf	fsr2h,c
 14543  007084  0E0B               	movlw	11
 14544  007086  6EDF               	movwf	indf2,c
 14545                           
 14546                           ;main.c: 819: all_shapes[i].index[0].y=0;
 14547  007088  5034               	movf	createRandomShape@i,w,c
 14548  00708A  0D09               	mullw	9
 14549  00708C  0E01               	movlw	1
 14550  00708E  26F3               	addwf	prodl,f,c
 14551  007090  0E00               	movlw	0
 14552  007092  22F4               	addwfc	prodh,f,c
 14553  007094  0E00               	movlw	low _all_shapes
 14554  007096  24F3               	addwf	prodl,w,c
 14555  007098  6ED9               	movwf	fsr2l,c
 14556  00709A  0E01               	movlw	high _all_shapes
 14557  00709C  20F4               	addwfc	prodh,w,c
 14558  00709E  6EDA               	movwf	fsr2h,c
 14559  0070A0  0E00               	movlw	0
 14560  0070A2  6EDF               	movwf	indf2,c
 14561                           
 14562                           ;main.c: 820: all_shapes[i].index[1].x=11;
 14563  0070A4  5034               	movf	createRandomShape@i,w,c
 14564  0070A6  0D09               	mullw	9
 14565  0070A8  0E02               	movlw	2
 14566  0070AA  26F3               	addwf	prodl,f,c
 14567  0070AC  0E00               	movlw	0
 14568  0070AE  22F4               	addwfc	prodh,f,c
 14569  0070B0  0E00               	movlw	low _all_shapes
 14570  0070B2  24F3               	addwf	prodl,w,c
 14571  0070B4  6ED9               	movwf	fsr2l,c
 14572  0070B6  0E01               	movlw	high _all_shapes
 14573  0070B8  20F4               	addwfc	prodh,w,c
 14574  0070BA  6EDA               	movwf	fsr2h,c
 14575  0070BC  0E0B               	movlw	11
 14576  0070BE  6EDF               	movwf	indf2,c
 14577                           
 14578                           ;main.c: 821: all_shapes[i].index[1].y=1;
 14579  0070C0  5034               	movf	createRandomShape@i,w,c
 14580  0070C2  0D09               	mullw	9
 14581  0070C4  0E03               	movlw	3
 14582  0070C6  26F3               	addwf	prodl,f,c
 14583  0070C8  0E00               	movlw	0
 14584  0070CA  22F4               	addwfc	prodh,f,c
 14585  0070CC  0E00               	movlw	low _all_shapes
 14586  0070CE  24F3               	addwf	prodl,w,c
 14587  0070D0  6ED9               	movwf	fsr2l,c
 14588  0070D2  0E01               	movlw	high _all_shapes
 14589  0070D4  20F4               	addwfc	prodh,w,c
 14590  0070D6  6EDA               	movwf	fsr2h,c
 14591  0070D8  0E01               	movlw	1
 14592  0070DA  6EDF               	movwf	indf2,c
 14593                           
 14594                           ;main.c: 822: all_shapes[i].index[2].x=10;
 14595  0070DC  5034               	movf	createRandomShape@i,w,c
 14596  0070DE  0D09               	mullw	9
 14597  0070E0  0E04               	movlw	4
 14598  0070E2  26F3               	addwf	prodl,f,c
 14599  0070E4  0E00               	movlw	0
 14600  0070E6  22F4               	addwfc	prodh,f,c
 14601  0070E8  0E00               	movlw	low _all_shapes
 14602  0070EA  24F3               	addwf	prodl,w,c
 14603  0070EC  6ED9               	movwf	fsr2l,c
 14604  0070EE  0E01               	movlw	high _all_shapes
 14605  0070F0  20F4               	addwfc	prodh,w,c
 14606  0070F2  6EDA               	movwf	fsr2h,c
 14607  0070F4  0E0A               	movlw	10
 14608  0070F6  6EDF               	movwf	indf2,c
 14609                           
 14610                           ;main.c: 823: all_shapes[i].index[2].y=1;
 14611  0070F8  5034               	movf	createRandomShape@i,w,c
 14612  0070FA  0D09               	mullw	9
 14613  0070FC  0E05               	movlw	5
 14614  0070FE  26F3               	addwf	prodl,f,c
 14615  007100  0E00               	movlw	0
 14616  007102  22F4               	addwfc	prodh,f,c
 14617  007104  0E00               	movlw	low _all_shapes
 14618  007106  24F3               	addwf	prodl,w,c
 14619  007108  6ED9               	movwf	fsr2l,c
 14620  00710A  0E01               	movlw	high _all_shapes
 14621  00710C  20F4               	addwfc	prodh,w,c
 14622  00710E  6EDA               	movwf	fsr2h,c
 14623  007110  0E01               	movlw	1
 14624  007112  6EDF               	movwf	indf2,c
 14625                           
 14626                           ;main.c: 824: all_shapes[i].index[3].x=10;
 14627  007114  5034               	movf	createRandomShape@i,w,c
 14628  007116  0D09               	mullw	9
 14629  007118  0E06               	movlw	6
 14630  00711A  26F3               	addwf	prodl,f,c
 14631  00711C  0E00               	movlw	0
 14632  00711E  22F4               	addwfc	prodh,f,c
 14633  007120  0E00               	movlw	low _all_shapes
 14634  007122  24F3               	addwf	prodl,w,c
 14635  007124  6ED9               	movwf	fsr2l,c
 14636  007126  0E01               	movlw	high _all_shapes
 14637  007128  20F4               	addwfc	prodh,w,c
 14638  00712A  6EDA               	movwf	fsr2h,c
 14639  00712C  0E0A               	movlw	10
 14640  00712E  D4C6               	goto	L44
 14641  007130                     
 14642                           ;main.c: 829: all_shapes[i].index[0].x=12;
 14643  007130  5034               	movf	createRandomShape@i,w,c
 14644  007132  0D09               	mullw	9
 14645  007134  0E00               	movlw	low _all_shapes
 14646  007136  24F3               	addwf	prodl,w,c
 14647  007138  6ED9               	movwf	fsr2l,c
 14648  00713A  0E01               	movlw	high _all_shapes
 14649  00713C  20F4               	addwfc	prodh,w,c
 14650  00713E  6EDA               	movwf	fsr2h,c
 14651  007140  0E0C               	movlw	12
 14652  007142  6EDF               	movwf	indf2,c
 14653                           
 14654                           ;main.c: 830: all_shapes[i].index[0].y=0;
 14655  007144  5034               	movf	createRandomShape@i,w,c
 14656  007146  0D09               	mullw	9
 14657  007148  0E01               	movlw	1
 14658  00714A  26F3               	addwf	prodl,f,c
 14659  00714C  0E00               	movlw	0
 14660  00714E  22F4               	addwfc	prodh,f,c
 14661  007150  0E00               	movlw	low _all_shapes
 14662  007152  24F3               	addwf	prodl,w,c
 14663  007154  6ED9               	movwf	fsr2l,c
 14664  007156  0E01               	movlw	high _all_shapes
 14665  007158  20F4               	addwfc	prodh,w,c
 14666  00715A  6EDA               	movwf	fsr2h,c
 14667  00715C  0E00               	movlw	0
 14668  00715E  6EDF               	movwf	indf2,c
 14669                           
 14670                           ;main.c: 831: all_shapes[i].index[1].x=12;
 14671  007160  5034               	movf	createRandomShape@i,w,c
 14672  007162  0D09               	mullw	9
 14673  007164  0E02               	movlw	2
 14674  007166  26F3               	addwf	prodl,f,c
 14675  007168  0E00               	movlw	0
 14676  00716A  22F4               	addwfc	prodh,f,c
 14677  00716C  0E00               	movlw	low _all_shapes
 14678  00716E  24F3               	addwf	prodl,w,c
 14679  007170  6ED9               	movwf	fsr2l,c
 14680  007172  0E01               	movlw	high _all_shapes
 14681  007174  20F4               	addwfc	prodh,w,c
 14682  007176  6EDA               	movwf	fsr2h,c
 14683  007178  0E0C               	movlw	12
 14684  00717A  6EDF               	movwf	indf2,c
 14685                           
 14686                           ;main.c: 832: all_shapes[i].index[1].y=1;
 14687  00717C  5034               	movf	createRandomShape@i,w,c
 14688  00717E  0D09               	mullw	9
 14689  007180  0E03               	movlw	3
 14690  007182  26F3               	addwf	prodl,f,c
 14691  007184  0E00               	movlw	0
 14692  007186  22F4               	addwfc	prodh,f,c
 14693  007188  0E00               	movlw	low _all_shapes
 14694  00718A  24F3               	addwf	prodl,w,c
 14695  00718C  6ED9               	movwf	fsr2l,c
 14696  00718E  0E01               	movlw	high _all_shapes
 14697  007190  20F4               	addwfc	prodh,w,c
 14698  007192  6EDA               	movwf	fsr2h,c
 14699  007194  0E01               	movlw	1
 14700  007196  6EDF               	movwf	indf2,c
 14701                           
 14702                           ;main.c: 833: all_shapes[i].index[2].x=11;
 14703  007198  5034               	movf	createRandomShape@i,w,c
 14704  00719A  0D09               	mullw	9
 14705  00719C  0E04               	movlw	4
 14706  00719E  26F3               	addwf	prodl,f,c
 14707  0071A0  0E00               	movlw	0
 14708  0071A2  22F4               	addwfc	prodh,f,c
 14709  0071A4  0E00               	movlw	low _all_shapes
 14710  0071A6  24F3               	addwf	prodl,w,c
 14711  0071A8  6ED9               	movwf	fsr2l,c
 14712  0071AA  0E01               	movlw	high _all_shapes
 14713  0071AC  20F4               	addwfc	prodh,w,c
 14714  0071AE  6EDA               	movwf	fsr2h,c
 14715  0071B0  0E0B               	movlw	11
 14716  0071B2  6EDF               	movwf	indf2,c
 14717                           
 14718                           ;main.c: 834: all_shapes[i].index[2].y=1;
 14719  0071B4  5034               	movf	createRandomShape@i,w,c
 14720  0071B6  0D09               	mullw	9
 14721  0071B8  0E05               	movlw	5
 14722  0071BA  26F3               	addwf	prodl,f,c
 14723  0071BC  0E00               	movlw	0
 14724  0071BE  22F4               	addwfc	prodh,f,c
 14725  0071C0  0E00               	movlw	low _all_shapes
 14726  0071C2  24F3               	addwf	prodl,w,c
 14727  0071C4  6ED9               	movwf	fsr2l,c
 14728  0071C6  0E01               	movlw	high _all_shapes
 14729  0071C8  20F4               	addwfc	prodh,w,c
 14730  0071CA  6EDA               	movwf	fsr2h,c
 14731  0071CC  0E01               	movlw	1
 14732  0071CE  6EDF               	movwf	indf2,c
 14733                           
 14734                           ;main.c: 835: all_shapes[i].index[3].x=11;
 14735  0071D0  5034               	movf	createRandomShape@i,w,c
 14736  0071D2  0D09               	mullw	9
 14737  0071D4  0E06               	movlw	6
 14738  0071D6  26F3               	addwf	prodl,f,c
 14739  0071D8  0E00               	movlw	0
 14740  0071DA  22F4               	addwfc	prodh,f,c
 14741  0071DC  0E00               	movlw	low _all_shapes
 14742  0071DE  24F3               	addwf	prodl,w,c
 14743  0071E0  6ED9               	movwf	fsr2l,c
 14744  0071E2  0E01               	movlw	high _all_shapes
 14745  0071E4  20F4               	addwfc	prodh,w,c
 14746  0071E6  6EDA               	movwf	fsr2h,c
 14747  0071E8  0E0B               	movlw	11
 14748  0071EA                     L43:
 14749  0071EA  6EDF               	movwf	indf2,c
 14750                           
 14751                           ;main.c: 836: all_shapes[i].index[3].y=2;
 14752  0071EC  5034               	movf	createRandomShape@i,w,c
 14753  0071EE  0D09               	mullw	9
 14754  0071F0  0E07               	movlw	7
 14755  0071F2  26F3               	addwf	prodl,f,c
 14756  0071F4  0E00               	movlw	0
 14757  0071F6  22F4               	addwfc	prodh,f,c
 14758  0071F8  0E00               	movlw	low _all_shapes
 14759  0071FA  24F3               	addwf	prodl,w,c
 14760  0071FC  6ED9               	movwf	fsr2l,c
 14761  0071FE  0E01               	movlw	high _all_shapes
 14762  007200  20F4               	addwfc	prodh,w,c
 14763  007202  6EDA               	movwf	fsr2h,c
 14764  007204  0E02               	movlw	2
 14765  007206  6EDF               	movwf	indf2,c
 14766  007208                     L46:
 14767                           
 14768                           ;main.c: 837: all_shapes[i].orientation=3;
 14769  007208  5034               	movf	createRandomShape@i,w,c
 14770  00720A  0D09               	mullw	9
 14771  00720C  0E08               	movlw	8
 14772  00720E  26F3               	addwf	prodl,f,c
 14773  007210  0E00               	movlw	0
 14774  007212  22F4               	addwfc	prodh,f,c
 14775  007214  0E00               	movlw	low _all_shapes
 14776  007216  24F3               	addwf	prodl,w,c
 14777  007218  6ED9               	movwf	fsr2l,c
 14778  00721A  0E01               	movlw	high _all_shapes
 14779  00721C  20F4               	addwfc	prodh,w,c
 14780  00721E  6EDA               	movwf	fsr2h,c
 14781  007220  0E03               	movlw	3
 14782  007222  D6BA               	goto	L41
 14783  007224  5033               	movf	createRandomShape@orientation,w,c
 14784                           
 14785                           ; Switch size 1, requested type "space"
 14786                           ; Number of cases is 4, Range of values is 0 to 3
 14787                           ; switch strategies available:
 14788                           ; Name         Instructions Cycles
 14789                           ; simple_byte           13     7 (average)
 14790                           ;	Chosen strategy is simple_byte
 14791  007226  0A00               	xorlw	0	; case 0
 14792  007228  B4D8               	btfsc	status,2,c
 14793  00722A  D646               	goto	l284
 14794  00722C  0A01               	xorlw	1	; case 1
 14795  00722E  B4D8               	btfsc	status,2,c
 14796  007230  D6B5               	goto	l286
 14797  007232  0A03               	xorlw	3	; case 2
 14798  007234  B4D8               	btfsc	status,2,c
 14799  007236  D71E               	goto	l287
 14800  007238  0A01               	xorlw	1	; case 3
 14801  00723A  B4D8               	btfsc	status,2,c
 14802  00723C  D779               	goto	l288
 14803                           
 14804                           ;main.c: 845: }
 14805                           
 14806                           ;main.c: 844: break;
 14807                           
 14808                           ;main.c: 843: default :
 14809                           
 14810                           ;main.c: 842: break;
 14811  00723E  D01A               	goto	l217
 14812  007240                     l200:
 14813  007240  501D               	movf	createRandomShape@type,w,c
 14814                           
 14815                           ; Switch size 1, requested type "space"
 14816                           ; Number of cases is 7, Range of values is 1 to 7
 14817                           ; switch strategies available:
 14818                           ; Name         Instructions Cycles
 14819                           ; simple_byte           22    12 (average)
 14820                           ;	Chosen strategy is simple_byte
 14821  007242  0A01               	xorlw	1	; case 1
 14822  007244  B4D8               	btfsc	status,2,c
 14823  007246  EF60  F030         	goto	l202
 14824  00724A  0A03               	xorlw	3	; case 2
 14825  00724C  B4D8               	btfsc	status,2,c
 14826  00724E  EFE7  F031         	goto	l219
 14827  007252  0A01               	xorlw	1	; case 3
 14828  007254  B4D8               	btfsc	status,2,c
 14829  007256  EF6E  F033         	goto	l235
 14830  00725A  0A07               	xorlw	7	; case 4
 14831  00725C  B4D8               	btfsc	status,2,c
 14832  00725E  EF7D  F033         	goto	l250
 14833  007262  0A01               	xorlw	1	; case 5
 14834  007264  B4D8               	btfsc	status,2,c
 14835  007266  D498               	goto	l259
 14836  007268  0A03               	xorlw	3	; case 6
 14837  00726A  B4D8               	btfsc	status,2,c
 14838  00726C  D617               	goto	l267
 14839  00726E  0A01               	xorlw	1	; case 7
 14840  007270  B4D8               	btfsc	status,2,c
 14841  007272  D7D8               	goto	l283
 14842  007274                     l217:
 14843                           
 14844                           ;main.c: 848: for (uint8_t k=0;k<4;k++){
 14845  007274  0E00               	movlw	0
 14846  007276  6E2E               	movwf	createRandomShape@k_296,c
 14847  007278                     l4357:
 14848  007278  0E03               	movlw	3
 14849  00727A  642E               	cpfsgt	createRandomShape@k_296,c
 14850  00727C  D001               	goto	l291
 14851  00727E  0012               	return	
 14852  007280                     l291:
 14853                           
 14854                           ;main.c: 849: array_data[all_shapes[i].index[k].x][all_shapes[i].index[k].y]='1';
 14855  007280  5034               	movf	createRandomShape@i,w,c
 14856  007282  0D09               	mullw	9
 14857  007284  0E00               	movlw	low _all_shapes
 14858  007286  6E15               	movwf	??_createRandomShape& (0+255),c
 14859  007288  0E01               	movlw	high _all_shapes
 14860  00728A  6E16               	movwf	(??_createRandomShape+1)& (0+255),c
 14861  00728C  50F3               	movf	prodl,w,c
 14862  00728E  2615               	addwf	??_createRandomShape,f,c
 14863  007290  50F4               	movf	prodh,w,c
 14864  007292  2216               	addwfc	??_createRandomShape+1,f,c
 14865  007294  502E               	movf	createRandomShape@k_296,w,c
 14866  007296  0D02               	mullw	2
 14867  007298  50F3               	movf	prodl,w,c
 14868  00729A  2415               	addwf	??_createRandomShape,w,c
 14869  00729C  6ED9               	movwf	fsr2l,c
 14870  00729E  50F4               	movf	prodh,w,c
 14871  0072A0  2016               	addwfc	??_createRandomShape+1,w,c
 14872  0072A2  6EDA               	movwf	fsr2h,c
 14873  0072A4  50DF               	movf	indf2,w,c
 14874  0072A6  6E17               	movwf	(??_createRandomShape+2)& (0+255),c
 14875  0072A8  5017               	movf	??_createRandomShape+2,w,c
 14876  0072AA  0D0C               	mullw	12
 14877  0072AC  0E00               	movlw	low _array_data
 14878  0072AE  6E18               	movwf	(??_createRandomShape+3)& (0+255),c
 14879  0072B0  0E02               	movlw	high _array_data
 14880  0072B2  6E19               	movwf	(??_createRandomShape+4)& (0+255),c
 14881  0072B4  50F3               	movf	prodl,w,c
 14882  0072B6  2618               	addwf	??_createRandomShape+3,f,c
 14883  0072B8  50F4               	movf	prodh,w,c
 14884  0072BA  2219               	addwfc	??_createRandomShape+4,f,c
 14885  0072BC  5034               	movf	createRandomShape@i,w,c
 14886  0072BE  0D09               	mullw	9
 14887  0072C0  0E00               	movlw	low _all_shapes
 14888  0072C2  6E1A               	movwf	(??_createRandomShape+5)& (0+255),c
 14889  0072C4  0E01               	movlw	high _all_shapes
 14890  0072C6  6E1B               	movwf	(??_createRandomShape+6)& (0+255),c
 14891  0072C8  50F3               	movf	prodl,w,c
 14892  0072CA  261A               	addwf	??_createRandomShape+5,f,c
 14893  0072CC  50F4               	movf	prodh,w,c
 14894  0072CE  221B               	addwfc	??_createRandomShape+6,f,c
 14895  0072D0  502E               	movf	createRandomShape@k_296,w,c
 14896  0072D2  0D02               	mullw	2
 14897  0072D4  50F3               	movf	prodl,w,c
 14898  0072D6  261A               	addwf	??_createRandomShape+5,f,c
 14899  0072D8  50F4               	movf	prodh,w,c
 14900  0072DA  221B               	addwfc	??_createRandomShape+6,f,c
 14901  0072DC  0E01               	movlw	1
 14902  0072DE  241A               	addwf	??_createRandomShape+5,w,c
 14903  0072E0  6ED9               	movwf	fsr2l,c
 14904  0072E2  0E00               	movlw	0
 14905  0072E4  201B               	addwfc	??_createRandomShape+6,w,c
 14906  0072E6  6EDA               	movwf	fsr2h,c
 14907  0072E8  50DF               	movf	indf2,w,c
 14908  0072EA  6E1C               	movwf	(??_createRandomShape+7)& (0+255),c
 14909  0072EC  501C               	movf	??_createRandomShape+7,w,c
 14910  0072EE  0D01               	mullw	1
 14911  0072F0  50F3               	movf	prodl,w,c
 14912  0072F2  2418               	addwf	??_createRandomShape+3,w,c
 14913  0072F4  6ED9               	movwf	fsr2l,c
 14914  0072F6  50F4               	movf	prodh,w,c
 14915  0072F8  2019               	addwfc	??_createRandomShape+4,w,c
 14916  0072FA  6EDA               	movwf	fsr2h,c
 14917  0072FC  0E31               	movlw	49
 14918  0072FE  6EDF               	movwf	indf2,c
 14919  007300  2A2E               	incf	createRandomShape@k_296,f,c
 14920  007302  D7BA               	goto	l4357
 14921  007304                     __end_of_createRandomShape:
 14922                           	opt stack 0
 14923                           tblptru	equ	0xFF8
 14924                           tblptrh	equ	0xFF7
 14925                           tblptrl	equ	0xFF6
 14926                           tablat	equ	0xFF5
 14927                           prodh	equ	0xFF4
 14928                           prodl	equ	0xFF3
 14929                           intcon	equ	0xFF2
 14930                           postinc0	equ	0xFEE
 14931                           wreg	equ	0xFE8
 14932                           indf1	equ	0xFE7
 14933                           postinc1	equ	0xFE6
 14934                           postdec1	equ	0xFE5
 14935                           plusw1	equ	0xFE3
 14936                           fsr1h	equ	0xFE2
 14937                           fsr1l	equ	0xFE1
 14938                           indf2	equ	0xFDF
 14939                           postinc2	equ	0xFDE
 14940                           postdec2	equ	0xFDD
 14941                           plusw2	equ	0xFDB
 14942                           fsr2h	equ	0xFDA
 14943                           fsr2l	equ	0xFD9
 14944                           status	equ	0xFD8
 14945                           
 14946 ;; *************** function _rand *****************
 14947 ;; Defined at:
 14948 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\rand.c"
 14949 ;; Parameters:    Size  Location     Type
 14950 ;;		None
 14951 ;; Auto vars:     Size  Location     Type
 14952 ;;		None
 14953 ;; Return value:  Size  Location     Type
 14954 ;;                  2   12[COMRAM] int 
 14955 ;; Registers used:
 14956 ;;		wreg, status,2, status,0, cstack
 14957 ;; Tracked objects:
 14958 ;;		On entry : 0/0
 14959 ;;		On exit  : 0/0
 14960 ;;		Unchanged: 0/0
 14961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14962 ;;      Params:         2       0       0       0       0       0       0       0       0
 14963 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14964 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14965 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14966 ;;Total ram usage:        2 bytes
 14967 ;; Hardware stack levels used:    1
 14968 ;; Hardware stack levels required when called:    1
 14969 ;; This function calls:
 14970 ;;		___lmul
 14971 ;; This function is called by:
 14972 ;;		_createRandomShape
 14973 ;; This function uses a non-reentrant model
 14974 ;;
 14975                           
 14976                           	psect	text33
 14977  003CB8                     __ptext33:
 14978                           	opt stack 0
 14979  003CB8                     _rand:
 14980                           	opt stack 28
 14981                           
 14982                           ;incstack = 0
 14983  003CB8  C055  F001         	movff	_randx,___lmul@multiplier
 14984  003CBC  C056  F002         	movff	_randx+1,___lmul@multiplier+1
 14985  003CC0  C057  F003         	movff	_randx+2,___lmul@multiplier+2
 14986  003CC4  C058  F004         	movff	_randx+3,___lmul@multiplier+3
 14987  003CC8  0E6D               	movlw	109
 14988  003CCA  6E05               	movwf	___lmul@multiplicand,c
 14989  003CCC  0E4E               	movlw	78
 14990  003CCE  6E06               	movwf	___lmul@multiplicand+1,c
 14991  003CD0  0EC6               	movlw	198
 14992  003CD2  6E07               	movwf	___lmul@multiplicand+2,c
 14993  003CD4  0E41               	movlw	65
 14994  003CD6  6E08               	movwf	___lmul@multiplicand+3,c
 14995  003CD8  ECAE  F01E         	call	___lmul	;wreg free
 14996  003CDC  C001  F055         	movff	?___lmul,_randx
 14997  003CE0  C002  F056         	movff	?___lmul+1,_randx+1
 14998  003CE4  C003  F057         	movff	?___lmul+2,_randx+2
 14999  003CE8  C004  F058         	movff	?___lmul+3,_randx+3
 15000  003CEC  0E39               	movlw	57
 15001  003CEE  2655               	addwf	_randx,f,c
 15002  003CF0  0E30               	movlw	48
 15003  003CF2  2256               	addwfc	_randx+1,f,c
 15004  003CF4  0E00               	movlw	0
 15005  003CF6  2257               	addwfc	_randx+2,f,c
 15006  003CF8  0E00               	movlw	0
 15007  003CFA  2258               	addwfc	_randx+3,f,c
 15008  003CFC  0EFF               	movlw	255
 15009  003CFE  1457               	andwf	_randx+2,w,c
 15010  003D00  6E0D               	movwf	?_rand,c
 15011  003D02  0E7F               	movlw	127
 15012  003D04  1458               	andwf	_randx+3,w,c
 15013  003D06  6E0E               	movwf	?_rand+1,c
 15014  003D08  0012               	return	
 15015  003D0A                     __end_of_rand:
 15016                           	opt stack 0
 15017                           tblptru	equ	0xFF8
 15018                           tblptrh	equ	0xFF7
 15019                           tblptrl	equ	0xFF6
 15020                           tablat	equ	0xFF5
 15021                           prodh	equ	0xFF4
 15022                           prodl	equ	0xFF3
 15023                           intcon	equ	0xFF2
 15024                           postinc0	equ	0xFEE
 15025                           wreg	equ	0xFE8
 15026                           indf1	equ	0xFE7
 15027                           postinc1	equ	0xFE6
 15028                           postdec1	equ	0xFE5
 15029                           plusw1	equ	0xFE3
 15030                           fsr1h	equ	0xFE2
 15031                           fsr1l	equ	0xFE1
 15032                           indf2	equ	0xFDF
 15033                           postinc2	equ	0xFDE
 15034                           postdec2	equ	0xFDD
 15035                           plusw2	equ	0xFDB
 15036                           fsr2h	equ	0xFDA
 15037                           fsr2l	equ	0xFD9
 15038                           status	equ	0xFD8
 15039                           
 15040 ;; *************** function ___lmul *****************
 15041 ;; Defined at:
 15042 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul32.c"
 15043 ;; Parameters:    Size  Location     Type
 15044 ;;  multiplier      4    0[COMRAM] unsigned long 
 15045 ;;  multiplicand    4    4[COMRAM] unsigned long 
 15046 ;; Auto vars:     Size  Location     Type
 15047 ;;  product         4    8[COMRAM] unsigned long 
 15048 ;; Return value:  Size  Location     Type
 15049 ;;                  4    0[COMRAM] unsigned long 
 15050 ;; Registers used:
 15051 ;;		wreg, status,2, status,0
 15052 ;; Tracked objects:
 15053 ;;		On entry : 0/0
 15054 ;;		On exit  : 0/0
 15055 ;;		Unchanged: 0/0
 15056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15057 ;;      Params:         8       0       0       0       0       0       0       0       0
 15058 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15059 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15060 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15061 ;;Total ram usage:       12 bytes
 15062 ;; Hardware stack levels used:    1
 15063 ;; This function calls:
 15064 ;;		Nothing
 15065 ;; This function is called by:
 15066 ;;		_rand
 15067 ;; This function uses a non-reentrant model
 15068 ;;
 15069                           
 15070                           	psect	text34
 15071  003D5C                     __ptext34:
 15072                           	opt stack 0
 15073  003D5C                     ___lmul:
 15074                           	opt stack 28
 15075                           
 15076                           ;incstack = 0
 15077  003D5C  0E00               	movlw	0
 15078  003D5E  6E09               	movwf	___lmul@product,c
 15079  003D60  0E00               	movlw	0
 15080  003D62  6E0A               	movwf	___lmul@product+1,c
 15081  003D64  0E00               	movlw	0
 15082  003D66  6E0B               	movwf	___lmul@product+2,c
 15083  003D68  0E00               	movlw	0
 15084  003D6A  6E0C               	movwf	___lmul@product+3,c
 15085  003D6C  A001               	btfss	___lmul@multiplier,0,c
 15086  003D6E  D008               	goto	l588
 15087  003D70  5005               	movf	___lmul@multiplicand,w,c
 15088  003D72  2609               	addwf	___lmul@product,f,c
 15089  003D74  5006               	movf	___lmul@multiplicand+1,w,c
 15090  003D76  220A               	addwfc	___lmul@product+1,f,c
 15091  003D78  5007               	movf	___lmul@multiplicand+2,w,c
 15092  003D7A  220B               	addwfc	___lmul@product+2,f,c
 15093  003D7C  5008               	movf	___lmul@multiplicand+3,w,c
 15094  003D7E  220C               	addwfc	___lmul@product+3,f,c
 15095  003D80                     l588:
 15096  003D80  90D8               	bcf	status,0,c
 15097  003D82  3605               	rlcf	___lmul@multiplicand,f,c
 15098  003D84  3606               	rlcf	___lmul@multiplicand+1,f,c
 15099  003D86  3607               	rlcf	___lmul@multiplicand+2,f,c
 15100  003D88  3608               	rlcf	___lmul@multiplicand+3,f,c
 15101  003D8A  90D8               	bcf	status,0,c
 15102  003D8C  3204               	rrcf	___lmul@multiplier+3,f,c
 15103  003D8E  3203               	rrcf	___lmul@multiplier+2,f,c
 15104  003D90  3202               	rrcf	___lmul@multiplier+1,f,c
 15105  003D92  3201               	rrcf	___lmul@multiplier,f,c
 15106  003D94  5001               	movf	___lmul@multiplier,w,c
 15107  003D96  1002               	iorwf	___lmul@multiplier+1,w,c
 15108  003D98  1003               	iorwf	___lmul@multiplier+2,w,c
 15109  003D9A  1004               	iorwf	___lmul@multiplier+3,w,c
 15110  003D9C  A4D8               	btfss	status,2,c
 15111  003D9E  D7E6               	goto	l587
 15112  003DA0  C009  F001         	movff	___lmul@product,?___lmul
 15113  003DA4  C00A  F002         	movff	___lmul@product+1,?___lmul+1
 15114  003DA8  C00B  F003         	movff	___lmul@product+2,?___lmul+2
 15115  003DAC  C00C  F004         	movff	___lmul@product+3,?___lmul+3
 15116  003DB0  0012               	return		;funcret
 15117  003DB2                     __end_of___lmul:
 15118                           	opt stack 0
 15119                           tblptru	equ	0xFF8
 15120                           tblptrh	equ	0xFF7
 15121                           tblptrl	equ	0xFF6
 15122                           tablat	equ	0xFF5
 15123                           prodh	equ	0xFF4
 15124                           prodl	equ	0xFF3
 15125                           intcon	equ	0xFF2
 15126                           postinc0	equ	0xFEE
 15127                           wreg	equ	0xFE8
 15128                           indf1	equ	0xFE7
 15129                           postinc1	equ	0xFE6
 15130                           postdec1	equ	0xFE5
 15131                           plusw1	equ	0xFE3
 15132                           fsr1h	equ	0xFE2
 15133                           fsr1l	equ	0xFE1
 15134                           indf2	equ	0xFDF
 15135                           postinc2	equ	0xFDE
 15136                           postdec2	equ	0xFDD
 15137                           plusw2	equ	0xFDB
 15138                           fsr2h	equ	0xFDA
 15139                           fsr2l	equ	0xFD9
 15140                           status	equ	0xFD8
 15141                           
 15142 ;; *************** function ___awmod *****************
 15143 ;; Defined at:
 15144 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awmod.c"
 15145 ;; Parameters:    Size  Location     Type
 15146 ;;  dividend        2   14[COMRAM] int 
 15147 ;;  divisor         2   16[COMRAM] int 
 15148 ;; Auto vars:     Size  Location     Type
 15149 ;;  sign            1   19[COMRAM] unsigned char 
 15150 ;;  counter         1   18[COMRAM] unsigned char 
 15151 ;; Return value:  Size  Location     Type
 15152 ;;                  2   14[COMRAM] int 
 15153 ;; Registers used:
 15154 ;;		wreg, status,2, status,0
 15155 ;; Tracked objects:
 15156 ;;		On entry : 0/0
 15157 ;;		On exit  : 0/0
 15158 ;;		Unchanged: 0/0
 15159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15160 ;;      Params:         4       0       0       0       0       0       0       0       0
 15161 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15162 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15163 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15164 ;;Total ram usage:        6 bytes
 15165 ;; Hardware stack levels used:    1
 15166 ;; This function calls:
 15167 ;;		Nothing
 15168 ;; This function is called by:
 15169 ;;		_createRandomShape
 15170 ;; This function uses a non-reentrant model
 15171 ;;
 15172                           
 15173                           	psect	text35
 15174  003EF8                     __ptext35:
 15175                           	opt stack 0
 15176  003EF8                     ___awmod:
 15177                           	opt stack 29
 15178                           
 15179                           ;incstack = 0
 15180  003EF8  0E00               	movlw	0
 15181  003EFA  6E14               	movwf	___awmod@sign,c
 15182  003EFC  AE10               	btfss	___awmod@dividend+1,7,c
 15183  003EFE  D006               	goto	l756
 15184  003F00  6C0F               	negf	___awmod@dividend,c
 15185  003F02  1E10               	comf	___awmod@dividend+1,f,c
 15186  003F04  B0D8               	btfsc	status,0,c
 15187  003F06  2A10               	incf	___awmod@dividend+1,f,c
 15188  003F08  0E01               	movlw	1
 15189  003F0A  6E14               	movwf	___awmod@sign,c
 15190  003F0C                     l756:
 15191  003F0C  AE12               	btfss	___awmod@divisor+1,7,c
 15192  003F0E  D004               	goto	l757
 15193  003F10  6C11               	negf	___awmod@divisor,c
 15194  003F12  1E12               	comf	___awmod@divisor+1,f,c
 15195  003F14  B0D8               	btfsc	status,0,c
 15196  003F16  2A12               	incf	___awmod@divisor+1,f,c
 15197  003F18                     l757:
 15198  003F18  5011               	movf	___awmod@divisor,w,c
 15199  003F1A  1012               	iorwf	___awmod@divisor+1,w,c
 15200  003F1C  B4D8               	btfsc	status,2,c
 15201  003F1E  D018               	goto	l764
 15202  003F20  0E01               	movlw	1
 15203  003F22  6E13               	movwf	___awmod@counter,c
 15204  003F24  D004               	goto	l759
 15205  003F26  90D8               	bcf	status,0,c
 15206  003F28  3611               	rlcf	___awmod@divisor,f,c
 15207  003F2A  3612               	rlcf	___awmod@divisor+1,f,c
 15208  003F2C  2A13               	incf	___awmod@counter,f,c
 15209  003F2E                     l759:
 15210  003F2E  AE12               	btfss	___awmod@divisor+1,7,c
 15211  003F30  D7FA               	goto	l760
 15212  003F32                     u3480:
 15213  003F32  5011               	movf	___awmod@divisor,w,c
 15214  003F34  5C0F               	subwf	___awmod@dividend,w,c
 15215  003F36  5012               	movf	___awmod@divisor+1,w,c
 15216  003F38  5810               	subwfb	___awmod@dividend+1,w,c
 15217  003F3A  A0D8               	btfss	status,0,c
 15218  003F3C  D004               	goto	l763
 15219  003F3E  5011               	movf	___awmod@divisor,w,c
 15220  003F40  5E0F               	subwf	___awmod@dividend,f,c
 15221  003F42  5012               	movf	___awmod@divisor+1,w,c
 15222  003F44  5A10               	subwfb	___awmod@dividend+1,f,c
 15223  003F46                     l763:
 15224  003F46  90D8               	bcf	status,0,c
 15225  003F48  3212               	rrcf	___awmod@divisor+1,f,c
 15226  003F4A  3211               	rrcf	___awmod@divisor,f,c
 15227  003F4C  2E13               	decfsz	___awmod@counter,f,c
 15228  003F4E  D7F1               	goto	u3480
 15229  003F50                     l764:
 15230  003F50  5014               	movf	___awmod@sign,w,c
 15231  003F52  B4D8               	btfsc	status,2,c
 15232  003F54  D004               	goto	l765
 15233  003F56  6C0F               	negf	___awmod@dividend,c
 15234  003F58  1E10               	comf	___awmod@dividend+1,f,c
 15235  003F5A  B0D8               	btfsc	status,0,c
 15236  003F5C  2A10               	incf	___awmod@dividend+1,f,c
 15237  003F5E                     l765:
 15238  003F5E  C00F  F00F         	movff	___awmod@dividend,?___awmod
 15239  003F62  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
 15240  003F66  0012               	return	
 15241  003F68                     __end_of___awmod:
 15242                           	opt stack 0
 15243                           tblptru	equ	0xFF8
 15244                           tblptrh	equ	0xFF7
 15245                           tblptrl	equ	0xFF6
 15246                           tablat	equ	0xFF5
 15247                           prodh	equ	0xFF4
 15248                           prodl	equ	0xFF3
 15249                           intcon	equ	0xFF2
 15250                           postinc0	equ	0xFEE
 15251                           wreg	equ	0xFE8
 15252                           indf1	equ	0xFE7
 15253                           postinc1	equ	0xFE6
 15254                           postdec1	equ	0xFE5
 15255                           plusw1	equ	0xFE3
 15256                           fsr1h	equ	0xFE2
 15257                           fsr1l	equ	0xFE1
 15258                           indf2	equ	0xFDF
 15259                           postinc2	equ	0xFDE
 15260                           postdec2	equ	0xFDD
 15261                           plusw2	equ	0xFDB
 15262                           fsr2h	equ	0xFDA
 15263                           fsr2l	equ	0xFD9
 15264                           status	equ	0xFD8
 15265                           
 15266 ;; *************** function _EEPROM_Write *****************
 15267 ;; Defined at:
 15268 ;;		line 22 in file "glcd_library/mcu.c"
 15269 ;; Parameters:    Size  Location     Type
 15270 ;;  address         2    0[COMRAM] int 
 15271 ;;  data            1    2[COMRAM] unsigned char 
 15272 ;; Auto vars:     Size  Location     Type
 15273 ;;		None
 15274 ;; Return value:  Size  Location     Type
 15275 ;;                  1    wreg      void 
 15276 ;; Registers used:
 15277 ;;		wreg, status,2
 15278 ;; Tracked objects:
 15279 ;;		On entry : 0/0
 15280 ;;		On exit  : 0/0
 15281 ;;		Unchanged: 0/0
 15282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15283 ;;      Params:         3       0       0       0       0       0       0       0       0
 15284 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15285 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15286 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15287 ;;Total ram usage:        3 bytes
 15288 ;; Hardware stack levels used:    1
 15289 ;; This function calls:
 15290 ;;		Nothing
 15291 ;; This function is called by:
 15292 ;;		_main
 15293 ;; This function uses a non-reentrant model
 15294 ;;
 15295                           
 15296                           	psect	text36
 15297  003AD2                     __ptext36:
 15298                           	opt stack 0
 15299  003AD2                     _EEPROM_Write:
 15300                           	opt stack 30
 15301                           
 15302                           ;mcu.c: 24: EEADR=address;
 15303                           
 15304                           ;incstack = 0
 15305  003AD2  C001  FFA9         	movff	EEPROM_Write@address,4009	;volatile
 15306                           
 15307                           ;mcu.c: 25: EEDATA=data;
 15308  003AD6  C003  FFA8         	movff	EEPROM_Write@data,4008	;volatile
 15309                           
 15310                           ;mcu.c: 26: EECON1bits.EEPGD=0;
 15311  003ADA  9EA6               	bcf	4006,7,c	;volatile
 15312                           
 15313                           ;mcu.c: 27: EECON1bits.CFGS=0;
 15314  003ADC  9CA6               	bcf	4006,6,c	;volatile
 15315                           
 15316                           ;mcu.c: 28: EECON1bits.WREN=1;
 15317  003ADE  84A6               	bsf	4006,2,c	;volatile
 15318                           
 15319                           ;mcu.c: 29: INTCONbits.GIE=0;
 15320  003AE0  9EF2               	bcf	intcon,7,c	;volatile
 15321                           
 15322                           ;mcu.c: 30: EECON2=0x55;
 15323  003AE2  0E55               	movlw	85
 15324  003AE4  6EA7               	movwf	4007,c	;volatile
 15325                           
 15326                           ;mcu.c: 31: EECON2=0xaa;
 15327  003AE6  0EAA               	movlw	170
 15328  003AE8  6EA7               	movwf	4007,c	;volatile
 15329                           
 15330                           ;mcu.c: 32: EECON1bits.WR=1;
 15331  003AEA  82A6               	bsf	4006,1,c	;volatile
 15332                           
 15333                           ;mcu.c: 33: INTCONbits.GIE=1;
 15334  003AEC  8EF2               	bsf	intcon,7,c	;volatile
 15335  003AEE  A8A1               	btfss	4001,4,c	;volatile
 15336  003AF0  D7FE               	goto	l536
 15337                           
 15338                           ;mcu.c: 35: PIR2bits.EEIF=0;
 15339  003AF2  98A1               	bcf	4001,4,c	;volatile
 15340  003AF4  0012               	return		;funcret
 15341  003AF6                     __end_of_EEPROM_Write:
 15342                           	opt stack 0
 15343                           tblptru	equ	0xFF8
 15344                           tblptrh	equ	0xFF7
 15345                           tblptrl	equ	0xFF6
 15346                           tablat	equ	0xFF5
 15347                           prodh	equ	0xFF4
 15348                           prodl	equ	0xFF3
 15349                           intcon	equ	0xFF2
 15350                           postinc0	equ	0xFEE
 15351                           wreg	equ	0xFE8
 15352                           indf1	equ	0xFE7
 15353                           postinc1	equ	0xFE6
 15354                           postdec1	equ	0xFE5
 15355                           plusw1	equ	0xFE3
 15356                           fsr1h	equ	0xFE2
 15357                           fsr1l	equ	0xFE1
 15358                           indf2	equ	0xFDF
 15359                           postinc2	equ	0xFDE
 15360                           postdec2	equ	0xFDD
 15361                           plusw2	equ	0xFDB
 15362                           fsr2h	equ	0xFDA
 15363                           fsr2l	equ	0xFD9
 15364                           status	equ	0xFD8
 15365                           
 15366 ;; *************** function _EEPROM_Read *****************
 15367 ;; Defined at:
 15368 ;;		line 13 in file "glcd_library/mcu.c"
 15369 ;; Parameters:    Size  Location     Type
 15370 ;;  address         2    0[COMRAM] int 
 15371 ;; Auto vars:     Size  Location     Type
 15372 ;;		None
 15373 ;; Return value:  Size  Location     Type
 15374 ;;                  1    wreg      unsigned char 
 15375 ;; Registers used:
 15376 ;;		wreg, status,2
 15377 ;; Tracked objects:
 15378 ;;		On entry : 0/0
 15379 ;;		On exit  : 0/0
 15380 ;;		Unchanged: 0/0
 15381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15382 ;;      Params:         2       0       0       0       0       0       0       0       0
 15383 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15384 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15385 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15386 ;;Total ram usage:        2 bytes
 15387 ;; Hardware stack levels used:    1
 15388 ;; This function calls:
 15389 ;;		Nothing
 15390 ;; This function is called by:
 15391 ;;		_main
 15392 ;; This function uses a non-reentrant model
 15393 ;;
 15394                           
 15395                           	psect	text37
 15396  003A8A                     __ptext37:
 15397                           	opt stack 0
 15398  003A8A                     _EEPROM_Read:
 15399                           	opt stack 30
 15400                           
 15401                           ;mcu.c: 15: EEADR=address;
 15402                           
 15403                           ;incstack = 0
 15404  003A8A  C001  FFA9         	movff	EEPROM_Read@address,4009	;volatile
 15405                           
 15406                           ;mcu.c: 16: EECON1bits.WREN=0;
 15407  003A8E  94A6               	bcf	4006,2,c	;volatile
 15408                           
 15409                           ;mcu.c: 17: EECON1bits.EEPGD=0;
 15410  003A90  9EA6               	bcf	4006,7,c	;volatile
 15411                           
 15412                           ;mcu.c: 18: EECON1bits.RD=1;
 15413  003A92  80A6               	bsf	4006,0,c	;volatile
 15414                           
 15415                           ;mcu.c: 19: return(EEDATA);
 15416  003A94  50A8               	movf	4008,w,c	;volatile
 15417  003A96  0012               	return	
 15418  003A98                     __end_of_EEPROM_Read:
 15419                           	opt stack 0
 15420                           tblptru	equ	0xFF8
 15421                           tblptrh	equ	0xFF7
 15422                           tblptrl	equ	0xFF6
 15423                           tablat	equ	0xFF5
 15424                           prodh	equ	0xFF4
 15425                           prodl	equ	0xFF3
 15426                           intcon	equ	0xFF2
 15427                           postinc0	equ	0xFEE
 15428                           wreg	equ	0xFE8
 15429                           indf1	equ	0xFE7
 15430                           postinc1	equ	0xFE6
 15431                           postdec1	equ	0xFE5
 15432                           plusw1	equ	0xFE3
 15433                           fsr1h	equ	0xFE2
 15434                           fsr1l	equ	0xFE1
 15435                           indf2	equ	0xFDF
 15436                           postinc2	equ	0xFDE
 15437                           postdec2	equ	0xFDD
 15438                           plusw2	equ	0xFDB
 15439                           fsr2h	equ	0xFDA
 15440                           fsr2l	equ	0xFD9
 15441                           status	equ	0xFD8
 15442                           tblptru	equ	0xFF8
 15443                           tblptrh	equ	0xFF7
 15444                           tblptrl	equ	0xFF6
 15445                           tablat	equ	0xFF5
 15446                           prodh	equ	0xFF4
 15447                           prodl	equ	0xFF3
 15448                           intcon	equ	0xFF2
 15449                           postinc0	equ	0xFEE
 15450                           wreg	equ	0xFE8
 15451                           indf1	equ	0xFE7
 15452                           postinc1	equ	0xFE6
 15453                           postdec1	equ	0xFE5
 15454                           plusw1	equ	0xFE3
 15455                           fsr1h	equ	0xFE2
 15456                           fsr1l	equ	0xFE1
 15457                           indf2	equ	0xFDF
 15458                           postinc2	equ	0xFDE
 15459                           postdec2	equ	0xFDD
 15460                           plusw2	equ	0xFDB
 15461                           fsr2h	equ	0xFDA
 15462                           fsr2l	equ	0xFD9
 15463                           status	equ	0xFD8
 15464                           
 15465                           	psect	rparam
 15466  0000                     tblptru	equ	0xFF8
 15467                           tblptrh	equ	0xFF7
 15468                           tblptrl	equ	0xFF6
 15469                           tablat	equ	0xFF5
 15470                           prodh	equ	0xFF4
 15471                           prodl	equ	0xFF3
 15472                           intcon	equ	0xFF2
 15473                           postinc0	equ	0xFEE
 15474                           wreg	equ	0xFE8
 15475                           indf1	equ	0xFE7
 15476                           postinc1	equ	0xFE6
 15477                           postdec1	equ	0xFE5
 15478                           plusw1	equ	0xFE3
 15479                           fsr1h	equ	0xFE2
 15480                           fsr1l	equ	0xFE1
 15481                           indf2	equ	0xFDF
 15482                           postinc2	equ	0xFDE
 15483                           postdec2	equ	0xFDD
 15484                           plusw2	equ	0xFDB
 15485                           fsr2h	equ	0xFDA
 15486                           fsr2l	equ	0xFD9
 15487                           status	equ	0xFD8


Data Sizes:
    Strings     44
    Constant    3277
    Data        4
    BSS         419
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     61      88
    BANK0           160      0       0
    BANK1           256      0     180
    BANK2           256      0     216
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> displayStartScore@string(COMRAM[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    glcd_text_write@str	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_3(CODE[27]), 

    glcd_WriteString@str	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_3(CODE[27]), STR_2(CODE[14]), displayStartScore@string(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_createRandomShape
    _rotate->_dontBelong2Shape
    _moveRight->_dontBelong2Shape
    _moveLeft->_dontBelong2Shape
    _lineCompletedTest->_completedUpdate
    _completedUpdate->_update_display_shapes
    _update_display_shapes->_glcd_PlotPixel
    _gravity->_dontBelong2Shape
    _glcd_text_write->_glcd_WriteString
    _glcd_SetCursor->_glcd_WriteByte
    _glcd_Init->_glcd_FillScreen
    _glcd_Image->_glcd_WriteByte
    _display_grid->_glcd_PlotPixel
    _glcd_PlotPixel->_glcd_WriteByte
    _displayStartScore->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _glcd_WriteString->_glcd_WriteChar8X8
    _glcd_WriteChar8X8->_glcd_WriteByte
    _glcd_WriteChar3x6->_glcd_WriteByte
    _glcd_FillScreen->_glcd_WriteByte
    _glcd_WriteByte->___awdiv
    _createRandomShape->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   65396
                                             52 COMRAM     9     9      0
                        _EEPROM_Read
                       _EEPROM_Write
                  _createRandomShape
                              _delay
                    _delayHomeScreen
                  _displayStartScore
                       _display_grid
                    _glcd_FillScreen
                         _glcd_Image
                          _glcd_Init
                    _glcd_text_write
                            _gravity
                  _lineCompletedTest
                           _moveLeft
                          _moveRight
                           _pwmStart
                            _pwmStop
                             _rotate
                           _setupPWM
              _update_display_shapes
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _rotate                                              24    24      0    1908
                                              7 COMRAM    24    24      0
                   _dontBelong2Shape
 ---------------------------------------------------------------------------------
 (1) _pwmStop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwmStart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _moveRight                                           17    17      0    2427
                                              7 COMRAM    17    17      0
                             ___wmul
                   _dontBelong2Shape
 ---------------------------------------------------------------------------------
 (1) _moveLeft                                            17    17      0    2427
                                              7 COMRAM    17    17      0
                             ___wmul
                   _dontBelong2Shape
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lineCompletedTest                                    6     6      0    6135
                                             45 COMRAM     6     6      0
                    _completedUpdate
 ---------------------------------------------------------------------------------
 (2) _completedUpdate                                     14    14      0    5952
                                             31 COMRAM    14    14      0
              _update_display_shapes
 ---------------------------------------------------------------------------------
 (1) _update_display_shapes                               14    14      0    5349
                                             17 COMRAM    14    14      0
                     _glcd_PlotPixel
 ---------------------------------------------------------------------------------
 (1) _gravity                                             19    19      0    2054
                                              7 COMRAM    19    19      0
                   _dontBelong2Shape
 ---------------------------------------------------------------------------------
 (2) _dontBelong2Shape                                     7     5      2     786
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _glcd_text_write                                      4     0      4    9854
                                             23 COMRAM     4     0      4
                     _glcd_SetCursor
                   _glcd_WriteString
 ---------------------------------------------------------------------------------
 (2) _glcd_SetCursor                                       3     2      1    2829
                                             10 COMRAM     3     2      1
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (1) _glcd_Init                                            5     5      0    5306
                                             13 COMRAM     2     2      0
                    _glcd_FillScreen
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (1) _glcd_Image                                           5     5      0    2802
                                             10 COMRAM     5     5      0
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (1) _display_grid                                         2     2      0    6013
                                             17 COMRAM     2     2      0
                     _glcd_PlotPixel
 ---------------------------------------------------------------------------------
 (2) _glcd_PlotPixel                                       7     5      2    4777
                                             10 COMRAM     7     5      2
                            ___awdiv
                      _glcd_ReadByte
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (3) _glcd_ReadByte                                        2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _displayStartScore                                   21    21      0   10887
                                             26 COMRAM    21    21      0
                    _delayHomeScreen
                    _glcd_FillScreen
                   _glcd_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    17      6    1254
                                             12 COMRAM    14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _glcd_WriteString                                     4     0      4    6731
                                             19 COMRAM     4     0      4
                  _glcd_WriteChar3x6
                  _glcd_WriteChar8X8
 ---------------------------------------------------------------------------------
 (3) _glcd_WriteChar8X8                                    9     8      1    2968
                                             10 COMRAM     9     8      1
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (3) _glcd_WriteChar3x6                                    7     6      1    2946
                                             10 COMRAM     7     6      1
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (2) _glcd_FillScreen                                      3     3      0    2732
                                             10 COMRAM     3     3      0
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (3) _glcd_WriteByte                                       2     1      1    2552
                                              8 COMRAM     2     1      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _delayHomeScreen                                      4     4      0      92
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     4      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _createRandomShape                                   32    32      0    6386
                                             20 COMRAM    32    32      0
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         3     0      3     196
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read
   _EEPROM_Write
   _createRandomShape
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul
   _delay
   _delayHomeScreen
   _displayStartScore
     _delayHomeScreen
     _glcd_FillScreen
       _glcd_WriteByte
         ___awdiv (ARG)
     _glcd_WriteString
       _glcd_WriteChar3x6
         _glcd_WriteByte
           ___awdiv (ARG)
       _glcd_WriteChar8X8
         _glcd_WriteByte
           ___awdiv (ARG)
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _display_grid
     _glcd_PlotPixel
       ___awdiv
       _glcd_ReadByte
       _glcd_WriteByte
         ___awdiv (ARG)
   _glcd_FillScreen
     _glcd_WriteByte
       ___awdiv (ARG)
   _glcd_Image
     _glcd_WriteByte
       ___awdiv (ARG)
   _glcd_Init
     _glcd_FillScreen
       _glcd_WriteByte
         ___awdiv (ARG)
     _glcd_WriteByte
       ___awdiv (ARG)
   _glcd_text_write
     _glcd_SetCursor
       _glcd_WriteByte
         ___awdiv (ARG)
     _glcd_WriteString
       _glcd_WriteChar3x6
         _glcd_WriteByte
           ___awdiv (ARG)
       _glcd_WriteChar8X8
         _glcd_WriteByte
           ___awdiv (ARG)
   _gravity
     _dontBelong2Shape
   _lineCompletedTest
     _completedUpdate
       _update_display_shapes
         _glcd_PlotPixel
           ___awdiv
           _glcd_ReadByte
           _glcd_WriteByte
             ___awdiv (ARG)
   _moveLeft
     ___wmul
     _dontBelong2Shape
   _moveRight
     ___wmul
     _dontBelong2Shape
   _pwmStart
   _pwmStop
   _rotate
     _dontBelong2Shape
   _setupPWM
   _update_display_shapes
     _glcd_PlotPixel
       ___awdiv
       _glcd_ReadByte
       _glcd_WriteByte
         ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D8       9       84.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      B4       7       70.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3D      58       1       92.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E4      20        0.0%
DATA                 0      0     1E4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Thu Nov 25 23:30:06 2021

                             _x 0053                               _y 0052                              l51 4624  
                            l43 45D4                              l60 4762                              l45 45E0  
                            l70 4B64                              l55 463E                              l47 4602  
                            l71 4B16                              l56 4660                              l80 4B36  
                            l57 46F6                              l81 4B3A                              l73 4B1A  
                            l66 4D92                              l90 4B60                              l82 4B3E  
                            l74 4B1E                              l91 4C2E                              l83 4B42  
                            l75 4B22                              l67 4B0A                              l92 4BF8  
                            l84 4B46                              l76 4B26                              l93 4CA6  
                            l85 4B4A                              l77 4B2A                              l94 4BFC  
                            l86 4B4E                              l78 4B2E                              l95 4C00  
                            l87 4B52                              l79 4B32                              l96 4C04  
                            l88 4B56                              l97 4C08                              l89 4B5A  
                            l98 4C0C                              l99 4C10                    ___awdiv@sign 0006  
              ??_glcd_PlotPixel 000D             ___wmul@multiplicand 0003                             l100 4C14  
                           l101 4C18                             l110 4CCA                             l102 4C1C  
                           l111 4CBA                             l103 4C20                             l200 7240  
                           l104 4C24                             l105 4C2A                             l202 60C0  
                           l210 5FA8                             l211 5FD6                             l203 5E90  
                           l131 59C6                             l115 4D64                             l107 4D1E  
                           l220 60DE                             l204 5EBE                             l116 4D24  
                           l108 4CF4                             l300 480A                             l221 613C  
                           l213 6034                             l125 3FEA                             l133 59D2  
                           l117 4D3A                             l109 4CB4                             l230 6312  
                           l214 6062                             l142 5CCE                             l118 4D2A  
                           l310 48C8                             l231 6370                             l207 5F1C  
                           l127 404E                             l151 5E5C                             l143 5E1A  
                           l135 5B8A                             l303 4828                             l240 64A8  
                           l224 619A                             l208 5F4A                             l144 5CE4  
                           l136 5B9E                             l304 4834                             l320 3E72  
                           l217 7274                             l241 6506                             l225 61F8  
                           l321 3E86                             l161 5872                             l250 66FA  
                           l306 4896                             l154 557A                             l330 4F7E  
                           l251 6828                             l235 66DC                             l243 6564  
                           l219 63CE                             l227 6256                             l139 5CC8  
                           l315 3E2E                             l171 512E                             l260 6848  
                           l252 67D4                             l244 65C2                             l236 63EC  
                           l228 62B4                             l164 5878                             l156 5586  
                           l332 4F94                             l237 644A                             l413 42B4  
                           l149 5E26                             l317 3E3A                             l181 542C  
                           l173 513A                             l325 4DF2                             l262 6928  
                           l254 67F0                             l246 6620                             l414 42C8  
                           l166 588E                             l158 572E                             l350 4A0A  
                           l263 6A02                             l255 680C                             l247 667E  
                           l423 3BB8                             l319 3E6C                             l183 5442  
                           l175 52E2                             l159 5742                             l327 4F78  
                           l272 6C6E                             l264 6ADC                             l424 3BBC  
                           l176 52F6                             l360 4A92                             l344 4986  
                           l273 6CCA                             l418 3B82                             l450 3ED4  
                           l178 5426                             l354 4ACC                             l362 4AA2  
                           l346 4992                             l291 7280                             l283 7224  
                           l267 6E9C                             l275 6D28                             l259 6B98  
                           l419 3B86                             l355 4A54                             l284 6EB8  
                           l276 6D84                             l268 6BB4                             l428 4174  
                           l364 4AB2                             l356 4A5E                             l348 49FE  
                           l269 6C10                             l429 41E4                             l365 4ABE  
                           l357 4A68                             l286 6F9C                             l278 6DE2  
                           l470 4390                             l462 42E6                             l358 4A72  
                           l287 7074                             l279 6E3E                             l455 3C36  
                           l367 4AEE                             l536 3AEE                             l288 7130  
                           l448 3E98                             l480 443E                             l464 42F8  
                           l481 4474                             l473 43B2                             l465 42FC  
                           l297 4772                             l466 4314                             l570 4542  
                           l298 477E                             l475 43C4                             l571 459A  
                           l459 3C4C                             l476 43C8                             l468 433E  
                           l484 4138                             l572 4548                             l564 44CE  
                           l477 43D8                             l469 436A                             l485 40DC  
                           l557 448A                             l486 410C                             l566 44F6  
                           l558 44A4                             l750 40B8                             l479 4402  
                           l487 4134                             l751 40C2                             l743 406A  
                           l495 3F7C                             l760 3F26                             l752 40D0  
                           l744 407A                             l497 3F88                             l746 4098  
                           l763 3F46                             l587 3D6C                             l747 4090  
                           l499 3FAE                             l764 3F50                             l756 3F0C  
                           l588 3D80                             l765 3F5E                             l757 3F18  
                           l759 3F2E                             l980 3D20                             l990 3BEE  
                           l983 3D48                             l984 3D52                   ?_display_grid 0001  
                           l993 3C0E                             l994 3C18                             l979 3D28  
                           l989 3BF6                             _PR2 000FCB                    ___awmod@sign 0014  
                           prod 000FF3                             wreg 000FE8                    __CFG_FOSC$HS 000000  
                  __CFG_LVP$OFF 000000                            l3105 4B0E                            l4003 5FCC  
                          l4021 6058                            l4113 6366                            l4301 6D7C  
                          l4205 6674                            l3229 430C                            l4047 6132  
                          l3431 482C                            l3415 4776                            l4161 64FC  
                          l3281 43D0                            l4323 6E36                            l4139 6440  
                          l4091 62AA                            l3363 3FE2                            l3451 48C0  
                          l4403 4DEA                            l4069 61EE                            l3541 3E90  
                          l3445 48B6                            l4183 65B8                            l3391 3B5C  
                          l4431 4F8C                            l4257 6C08                            l3385 3B48  
                          l3633 45CC                            l4521 3F80                            l3555 3ECC  
                          l4515 3F74                            l3811 5E1E                            l4357 7278  
                          l3493 44FA                            l4279 6CC2                            l3399 3B6E  
                          l3639 45D8                            l4375 3E32                            l3831 5572  
                          l4631 49F6                            l4615 498A                            l3745 59BE  
                          l4369 3E26                            l4609 497E                            l3771 5B96  
                          l3917 52EE                            l4637 4A02                            l3951 3AA0  
                          l3793 5CDC                            l3857 573A                            l3939 543A  
                          l3891 5126                            l3967 5EB4                            l3879 5886  
                          l3985 5F40                            STR_1 7FFB                            STR_2 7FED  
                          STR_3 7FD2                            u3000 3D2C                            u3110 3B6E  
                          u3030 3BFA                            _LATD 000F8C                            u4100 5E60  
                          u3310 45A2                            u4030 5CC2                            u3230 492A  
                          u3150 480E                            u3400 3EF4                            u3320 45BA  
                          u3080 4052                            u4040 5CD2                            u3240 492E  
                          u4200 587C                            u5000 49F2                            u3340 4106  
                          u2700 409C                            u4140 5732                            u3350 4130  
                          u4070 5E16                            u3190 489A                            u4150 5736  
                          u5030 4A36                            u3360 4158                            u4320 5420  
                          u5040 4A3A                            u3290 4526                            u4330 5430  
                          u3347 40FC                            u2900 4396                            u2820 4D8C  
                          u3357 4126                            u3550 45F2                            u2830 4D90  
                          u4270 52E6                            u4190 586C                            u3367 414E  
                          u3480 3F32                            u3800 46E8                            u4280 52EA  
                          u2754 41DA                            u5307 3BC4                            u2755 41D6  
                          u2764 41F8                            u3580 4614                            u5317 3BD2  
                          u2765 41F4                            u3910 474E                            u5327 3B94  
                          u2960 447A                            u5337 3B9E                            u3930 4766  
                          u4830 4F72                            u5287 423A                            u4760 3E76  
                          u4840 4F82                            u5297 4250                            u4930 3FCE  
                          u4940 3FD2                            u3980 5B8E                            u4950 3FD6  
                          u3990 5B92                            u4881 3DBE                            u4990 49EE  
                          _TMR2 000FCC                ??_glcd_WriteByte 000A           _update_display_shapes 4B02  
                          _main 4936                            _rand 3CB8                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            fsr2l 000FD9                            prodh 000FF4  
                          prodl 000FF3                            start 0000                 __end_of_Font3x6 7FC8  
                  ___param_bank 000000                 __end_of_Font8x8 7B05                 _completedUpdate 476A  
          __end_of_EEPROM_Write 3AF6              glcd_WriteChar8X8@i 0012              glcd_WriteChar3x6@i 0010  
                ??_display_grid 0012                           ?_main 0001                           ?_rand 000D  
               __end_of___awdiv 40DA                           _EEADR 000FA9                 __end_of___awmod 3F68  
               ___awdiv@divisor 0003                 __end_of___lwdiv 3D5C                 __end_of___lwmod 3C22  
               ___awdiv@counter 0005                 __end_of_accueil 7F05                           _PORTA 000F80  
                         _PORTB 000F81                           _PORTD 000F83                           _PORTE 000F84  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISD 000F95  
                         _TRISE 000F96             ___lmul@multiplicand 0005                  moveRight@j_255 0015  
                moveRight@j_256 0016                           _delay 3A98                 __end_of_dpowers 7FD2  
               __end_of_gravity 5E64                           _randx 0055                  moveRight@index 0018  
                         _score 0054                           main@i 003B                           main@y 003C  
                         tablat 000FF5                 __end_of_pwmStop 3A86                           plusw1 000FE3  
                         plusw2 000FDB                           status 000FD8                 __end_of_sprintf 45C8  
              EEPROM_Write@data 0003            __size_of_EEPROM_Read 000E              glcd_WriteByte@data 0009  
               __initialization 3C6A              glcd_WriteByte@side 000A               ??_delayHomeScreen 0001  
                  __end_of_main 4B02                    __end_of_rand 3D0A            completedUpdate@i_303 002B  
          completedUpdate@j_301 0029            completedUpdate@j_302 002A                   main@bestScore 0037  
         createRandomShape@type 001D                    rotate@temp_x 0018                    rotate@temp_y 0019  
             ?_dontBelong2Shape 0001                          ??_main 0035                          ??_rand 000F  
                 __activetblptr 000002                 _glcd_FillScreen 3E8A              ??_dontBelong2Shape 0003  
           glcd_WriteChar8X8@ch 0010    createRandomShape@orientation 0033             glcd_WriteChar3x6@ch 000F  
                        ?_delay 0001                          _ADCON1 000FC1                          _EEDATA 000FA8  
                        _CCPR1L 000FBE                          _EECON2 000FA7                ___awdiv@dividend 0001  
             _lineCompletedTest 3E1E          ?_update_display_shapes 0001        __size_of_glcd_text_write 0020  
               rotate@new_coord 0010              ?_lineCompletedTest 0001         __end_of_completedUpdate 4936  
           ??_lineCompletedTest 002E               ?_glcd_WriteString 0014                          ___lmul 3D5C  
                        ___wmul 3B1A                       ??___awdiv 0005                       ??___awmod 0013  
            ??_glcd_WriteString 0018                       ??___lwdiv 0005                       ??___lwmod 000C  
                        delay@c 0001                          clear_0 3C90                          clear_1 3C9C  
                        clear_2 3CA8                ___awdiv@quotient 0007                 ___awmod@divisor 0011  
               ___awmod@counter 0013                          _rotate 4DAC                __end_of_moveLeft 556C  
                     ??_gravity 0008                    __pdataCOMRAM 0055                __end_of_setupPWM 3B1A  
                  __mediumconst 7304                   display_grid@i 0013                   display_grid@j 0012  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              __end_of_pwmStart 3A82       __end_of_lineCompletedTest 3E8A                       ??_pwmStop 0001  
                     ??_sprintf 0013                      __accesstop 0060         __end_of__initialization 3CAE  
          __end_of_display_grid 476A                   ___rparam_used 000001           __size_of_EEPROM_Write 0024  
                __pcstackCOMRAM 0001                   __end_of_delay 3AB2         __end_of_glcd_FillScreen 3EF8  
        createRandomShape@k_280 0021          createRandomShape@k_290 0029          createRandomShape@k_282 0022  
        createRandomShape@k_283 0023          createRandomShape@k_292 002A          createRandomShape@k_284 0024  
        createRandomShape@k_293 002B          createRandomShape@k_285 0025          createRandomShape@k_294 002C  
        createRandomShape@k_278 001F          createRandomShape@k_295 002D          createRandomShape@k_287 0026  
        createRandomShape@k_279 0020          createRandomShape@k_296 002E          createRandomShape@k_288 0027  
        createRandomShape@k_289 0028          glcd_WriteChar8X8@color 000B          displayStartScore@F4364 003E  
            __size_of_glcd_Init 00BE          createRandomShape@start 002F                   rotate@pivot_x 001B  
                 rotate@pivot_y 001C                         ??_delay 0001                    _EEPROM_Write 3AD2  
                    __pbssBANK1 0100                      __pbssBANK2 0200            glcd_WriteChar8X8@chr 000E  
              ?_completedUpdate 0001                      _all_shapes 0100           __end_of_glcd_ReadByte 3BE0  
             ??_glcd_text_write 001C          glcd_WriteChar3x6@color 000B                         ?___lmul 0001  
                       ?___wmul 0001              lineCompletedTest@i 0032              lineCompletedTest@j 0033  
            __size_of_moveRight 044C                  ___lmul@product 0009                      _glcd_Image 3F68  
                       ?_rotate 0001               _glcd_WriteChar8X8 42D0               _glcd_WriteChar3x6 439C  
    __size_of_lineCompletedTest 006C              ?_glcd_WriteChar8X8 000B              ?_glcd_WriteChar3x6 000B  
                    _array_data 0200                    gravity@j_244 0017                    gravity@j_246 0018  
                  gravity@j_247 0015                 _delayHomeScreen 3B40                    gravity@index 001A  
           ??_glcd_WriteChar8X8 000C             ??_glcd_WriteChar3x6 000C                         _Font3x6 7F05  
                       _Font8x8 7305                     moveRight@ok 0013               __end_of_glcd_Init 42D0  
                     ?_moveLeft 0001                         __Hparam 0000                         __Lparam 0000  
                     ?_setupPWM 0001                       ?_pwmStart 0001                         ___awdiv 4056  
               __size_of___lmul 0056                         ___awmod 3EF8                 __size_of___wmul 0026  
              ?_glcd_FillScreen 0001                         ___lwdiv 3D0A                         ___lwmod 3BE0  
           glcd_WriteString@str 0014                         _accueil 7B05                         __pcinit 3C6A  
                       __ramtop 0800       __end_of_glcd_WriteChar8X8 439C       __end_of_glcd_WriteChar3x6 4480  
                       __ptext0 4936                         __ptext1 3AF6                         __ptext2 4DAC  
                       __ptext3 3A82                         __ptext4 3A7E                         __ptext5 556C  
                       __ptext6 5120                         __ptext7 3B1A                         __ptext8 3E1E  
                       __ptext9 476A                 __size_of_rotate 0374                         _dpowers 7FC8  
                     _T2CONbits 000FCA                         _gravity 59B8         __size_of_glcd_SetCursor 0048  
              ___awmod@dividend 000F         ??_update_display_shapes 0012                         _pwmStop 3A82  
       __size_of_glcd_PlotPixel 00B2                         _sprintf 4480           __size_of_display_grid 01A2  
          end_of_initialization 3CAE                completedUpdate@i 002D                completedUpdate@j 002C  
     __size_of_dontBelong2Shape 007A               __end_of_moveRight 59B8                   ??_EEPROM_Read 0003  
                 __Lmediumconst 7304                glcd_text_write@x 001A                glcd_text_write@y 001B  
                    ??_moveLeft 0008                      ??_setupPWM 0003                         postdec1 000FE5  
                       postdec2 000FDD                   moveLeft@j_264 0015                   moveLeft@j_265 0016  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                       rotate@k 001F                      ??_pwmStart 0001         __size_of_glcd_WriteByte 0036  
                 moveLeft@index 0018      update_display_shapes@m_230 001A      update_display_shapes@n_231 001B  
                   ?_glcd_Image 0001          update_display_shapes@i 001C          update_display_shapes@j 001D  
        update_display_shapes@m 0018          update_display_shapes@n 0019          update_display_shapes@x 001F  
        update_display_shapes@y 001E                       _PORTEbits 000F84                    _display_grid 45C8  
     __size_of_glcd_WriteString 0086         __end_of_delayHomeScreen 3B74                       _TRISCbits 000F94  
            createRandomShape@i 0034              createRandomShape@k 001E                     _CCP1CONbits 000FBD  
           __end_of_EEPROM_Read 3A98                  __end_of___lmul 3DB2                  __end_of___wmul 3B40  
         dontBelong2Shape@index 0006                   __pidataCOMRAM 3A86      __size_of_glcd_WriteChar8X8 00CC  
    __size_of_glcd_WriteChar3x6 00E4      createRandomShape@start_281 0030      createRandomShape@start_291 0032  
    createRandomShape@start_286 0031                  __end_of_rotate 5120             start_initialization 3C6A  
                   rotate@k_319 001D                     rotate@index 001E                 _glcd_text_write 3AB2  
           completedUpdate@line 0028              glcd_SetCursor@side 000C              glcd_SetCursor@xpos 000D  
            glcd_SetCursor@ypos 000B                setupPWM@PR2value 0001             __size_of_glcd_Image 0074  
                      ??___lmul 0009                        ??___wmul 0005            glcd_FillScreen@color 000B  
                      ??_rotate 0008                  _glcd_SetCursor 3C22                     __pbssCOMRAM 003E  
              ?_delayHomeScreen 0001         displayStartScore@string 001B                  _glcd_PlotPixel 4160  
         glcd_WriteString@color 0017               _displayStartScore 3DB2           glcd_WriteChar8X8@side 0013  
              _dontBelong2Shape 3FDC           glcd_WriteChar8X8@xpos 0011              ?_displayStartScore 0001  
                   sprintf@flag 0016                     _EEPROM_Read 3A8A                     sprintf@prec 0017  
              ___lwdiv@dividend 0001             ??_displayStartScore 001B           glcd_WriteChar3x6@side 0011  
         glcd_WriteChar3x6@xpos 000E                   __pmediumconst 7304                  _glcd_WriteByte 3B74  
             __size_of_moveLeft 044C                        ?___awdiv 0001                        ?___awmod 000F  
                     _glcd_Init 4212                        ?___lwdiv 0001                        ?___lwmod 0008  
      __size_of_completedUpdate 01CC               __size_of_setupPWM 0024          __end_of_glcd_SetCursor 3C6A  
             __size_of_pwmStart 0004                      moveLeft@ok 0013                delayHomeScreen@c 0001  
              delayHomeScreen@d 0003                        ?_gravity 0001         __end_of_glcd_text_write 3AD2  
        __end_of_glcd_PlotPixel 4212                      moveRight@a 0011                      moveRight@b 0012  
                    moveRight@i 0017                      moveRight@j 0014                _glcd_WriteString 40DA  
     __end_of_displayStartScore 3E1E          __size_of_glcd_ReadByte 0036                        ?_pwmStop 0001  
              ___lwdiv@quotient 0005                  __size_of_delay 001A  __size_of_update_display_shapes 02AA  
                      ?_sprintf 000D   __end_of_update_display_shapes 4DAC               _createRandomShape 5E64  
                ___wmul@product 0005                        _LATBbits 000F8A                        _PIE1bits 000F9D  
            ?_createRandomShape 0001                       _moveRight 556C          __end_of_glcd_WriteByte 3BAA  
                      _PIR1bits 000F9E                        _PIR2bits 000FA1      displayStartScore@bestScore 002F  
                    ?_glcd_Init 0001             ??_createRandomShape 0015                    ??_glcd_Image 000B  
               ?_glcd_SetCursor 000B                       main@i_339 0039               ___wmul@multiplier 0001  
                     main@y_340 003A      lineCompletedTest@completed 0031                 ?_glcd_PlotPixel 000B  
                     main@index 003D        __size_of_glcd_FillScreen 006E               ___lmul@multiplier 0001  
                     copy_data0 3C7E       __end_of_createRandomShape 7304                glcd_FillScreen@i 000D  
              glcd_FillScreen@j 000C              __end_of_glcd_Image 3FDC                      _EECON1bits 000FA6  
                    ?_moveRight 0001                        __Hrparam 0000                       gravity@ok 0014  
               ?_glcd_WriteByte 0009                        __Lrparam 0000                   _glcd_ReadByte 3BAA  
              __size_of___awdiv 0084                __size_of___awmod 0070                __size_of___lwdiv 0052  
              __size_of___lwmod 0042            glcd_WriteString@font 0016                      sprintf@val 0018  
              ?_glcd_text_write 0018               ??_completedUpdate 0020                __size_of_gravity 04AC  
    __size_of_displayStartScore 006C                 ___lwdiv@divisor 0003                 ___lwdiv@counter 0007  
                      __ptext10 4B02                        __ptext11 59B8                        __ptext20 4056  
                      __ptext12 3FDC                        __ptext21 3DB2                        __ptext13 3AB2  
                      __ptext30 3B40                        __ptext22 4480                        __ptext14 3C22  
                      __ptext31 3A98                        __ptext23 3BE0                        __ptext15 4212  
                      __ptext32 5E64                        __ptext24 3D0A                        __ptext16 3F68  
                      __ptext33 3CB8                        __ptext25 40DA                        __ptext17 45C8  
                      __ptext34 3D5C                        __ptext26 42D0                        __ptext18 4160  
                      __ptext35 3EF8                        __ptext27 439C                        __ptext19 3BAA  
                      __ptext36 3AD2                        __ptext28 3E8A                        __ptext37 3A8A  
                      __ptext29 3B74                __size_of_pwmStop 0004                       moveLeft@a 0011  
                     moveLeft@b 0012                       moveLeft@i 0017                       moveLeft@j 0014  
                 ?_EEPROM_Write 0001                __size_of_sprintf 0148              glcd_text_write@str 0018  
                 __size_of_main 01CC                   __size_of_rand 0052                   glcd_Image@ptr 000B  
                      _moveLeft 5120                  ?_glcd_ReadByte 0001                   glcd_Init@mode 000F  
                      _setupPWM 3AF6                        _pwmStart 3A7E                     ??_glcd_Init 000E  
      __end_of_dontBelong2Shape 4056                        main@next 0038                      _INTCONbits 000FF2  
                      gravity@a 0012                        gravity@b 0013                        gravity@i 0019  
                      gravity@j 0016                  ??_EEPROM_Write 0004               dontBelong2Shape@k 0007  
             dontBelong2Shape@x 0001               dontBelong2Shape@y 0002      __size_of_createRandomShape 14A0  
           glcd_PlotPixel@color 000C                       sprintf@ap 0014               ??_glcd_FillScreen 000B  
                     sprintf@sp 000D                ___lwmod@dividend 0008                    ?_EEPROM_Read 0001  
                   ??_moveRight 0008                    glcd_Image@cs 000F        __end_of_glcd_WriteString 4160  
            EEPROM_Read@address 0001                        rotate@ok 001A              glcd_PlotPixel@data 0010  
                      sprintf@c 001A                        sprintf@f 000F              glcd_PlotPixel@side 0011  
            glcd_PlotPixel@xpos 000F              glcd_PlotPixel@ypos 000B                 ___lwmod@divisor 000A  
               ___lwmod@counter 000C                     glcd_Image@i 000E                     glcd_Image@j 000D  
             glcd_ReadByte@data 0002               glcd_ReadByte@side 0001        __size_of_delayHomeScreen 0034  
update_display_shapes@operation 0017                 ??_glcd_ReadByte 0001             EEPROM_Write@address 0001  
              ??_glcd_SetCursor 000C  
